import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2024-05-02T16:47:59.548+02:00[Europe/Paris]
 * <br>
 * The generated test suite contains 93 tests
 * <br>
 * Covered targets: 5487
 * <br>
 * Used time: 10h 4m 8s
 * <br>
 * Needed budget for current results: 97%
 * <br>
 * This file contains test cases that represent successful calls.
 */
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.embedded.org.cbioportal.genome_nexus.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    /**
    * rso - response structure oracle - checking that the response objects match the responses defined in the schema
    */
    private static boolean rso = false;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test(timeout = 60000)
    public void test_0() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
        
        expectationHandler.expect(ems)
            /*
             Note: No supported codes appear to be defined. https://swagger.io/docs/specification/describing-responses/.
             This is somewhat unexpected, so the code below is likely to lead to a failed expectation
            */
            .that(sco, Arrays.asList().contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/signal/mutation?" + 
                    "hugoGeneSymbol=BRCA2&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_2() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/cancer_hotspots/transcript/ENST00000288602?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_3() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_47_XYZ_")
                .get(baseUrlOfSut + "/ensembl/transcript/_EM_45_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_4() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " \"_EM_169_XYZ_\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/pfam/domain")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_5() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_5066_XYZ_")
                .get(baseUrlOfSut + "/ensembl/transcript?EMextraParam123=_EM_5065_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_6() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_1704_XYZ_")
                .contentType("application/json")
                .body(" [] ")
                .post(baseUrlOfSut + "/ensembl/canonical-gene/entrez")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_7() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_66_XYZ_")
                .get(baseUrlOfSut + "/ensembl/transcript?" + 
                    "geneId=_EM_62_XYZ_&" + 
                    "EMextraParam123=_EM_65_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_8() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"hugoSymbols\": [ " + 
                    " \"_EM_211_XYZ_\" " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/signal/mutation")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_9() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_93_XYZ_")
                .get(baseUrlOfSut + "/version")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'genomeNexus'.'server'.'version'", containsString("1.0.2"))
                .body("'genomeNexus'.'server'.'static'", equalTo(true))
                .body("'genomeNexus'.'database'.'version'", containsString("3.6.2"))
                .body("'genomeNexus'.'database'.'static'", equalTo(true))
                .body("'vep'.'server'.'version'", containsString("NA"))
                .body("'vep'.'server'.'static'", equalTo(false))
                .body("'vep'.'cache'.'version'", containsString("NA"))
                .body("'vep'.'cache'.'static'", equalTo(false))
                .body("'vep'.'comment'", containsString("VEP annotations are currently externally sourced from ENSEMBL. Results are subject to change without notice."));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_10() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/ensembl/transcript?" + 
                    "geneId=_EM_410_XYZ_&" + 
                    "proteinId=_EM_411_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_11() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/ptm/experimental?" + 
                    "ensemblTranscriptId=ENST00000371953&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_12() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/ensembl/transcript?" + 
                    "proteinId=_EM_2489_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_13() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/ensembl/transcript?" + 
                    "geneId=_EM_508_XYZ_&" + 
                    "hugoSymbol=q8&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_14() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/ensembl/transcript?hugoSymbol=_EM_1343_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_15() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_3854_XYZ_")
                .get(baseUrlOfSut + "/signal/search?" + 
                    "keyword=&" + 
                    "limit=897")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_16() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_797_XYZ_")
                .get(baseUrlOfSut + "/search?" + 
                    "keyword=F&" + 
                    "limit=-103&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_17() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/ensembl/transcript?" + 
                    "proteinId=_EM_2604_XYZ_&" + 
                    "hugoSymbol=_EM_2605_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_18() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"transcriptIds\": [ " + 
                    " \"ENST00000420316\", " + 
                    " \"ENST00000646891\", " + 
                    " \"ENST00000371953\" " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/ptm/experimental?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_19() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_160_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"hugoSymbols\": [ " + 
                    " \"_EM_148_XYZ_\", " + 
                    " \"_EM_149_XYZ_\", " + 
                    " \"_EM_150_XYZ_\", " + 
                    " \"_EM_151_XYZ_\", " + 
                    " \"_EM_152_XYZ_\" " + 
                    " ], " + 
                    " \"transcriptIds\": [ " + 
                    " \"_EM_157_XYZ_\", " + 
                    " \"_EM_158_XYZ_\" " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/ensembl/transcript")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_20() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_5521_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"hugoSymbols\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/ensembl/transcript")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_21() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"geneIds\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/ensembl/transcript?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_22() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"proteinIds\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/ensembl/transcript")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_23() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"hugoSymbols\": [ " + 
                    " \"_EM_3733_XYZ_\", " + 
                    " \"_EM_3734_XYZ_\", " + 
                    " \"_EM_3735_XYZ_\", " + 
                    " \"_EM_3736_XYZ_\", " + 
                    " \"_EM_3737_XYZ_\" " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/ensembl/transcript")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_24() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"proteinIds\": [ " + 
                    " \"verVHt70OS\", " + 
                    " \"_EM_4274_XYZ_\" " + 
                    " ], " + 
                    " \"transcriptIds\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/ensembl/transcript?EMextraParam123=_EM_4275_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_25() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"geneIds\": [ " + 
                    " \"_EM_3010_XYZ_\" " + 
                    " ], " + 
                    " \"hugoSymbols\": [ " + 
                    " \"_EM_3011_XYZ_\", " + 
                    " \"_EM_3012_XYZ_\", " + 
                    " \"_EM_3013_XYZ_\", " + 
                    " \"_EM_3014_XYZ_\" " + 
                    " ], " + 
                    " \"transcriptIds\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/ensembl/transcript?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_26() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_91_XYZ_")
                .get(baseUrlOfSut + "/search?" + 
                    "keyword=_EM_89_XYZ_&" + 
                    "EMextraParam123=_EM_90_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_27() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " \"ENST00000288602\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/cancer_hotspots/transcript?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'transcriptId'", containsString("ENST00000288602"))
                .body("[0].'hotspots'.size()", equalTo(0));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("genomicLocation", "hotspots", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_28() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_797_XYZ_")
                .get(baseUrlOfSut + "/search?" + 
                    "keyword=_EM_796_XYZ_&" + 
                    "limit=921&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_29() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/search?" + 
                    "keyword=c.Wklk&" + 
                    "limit=-1303006737")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'queryType'", containsString("HGVSG"))
                .body("[0].'results'.size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_30() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/search?" + 
                    "keyword=g.WklkK&" + 
                    "limit=-1527920340")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'queryType'", containsString("HGVSG"))
                .body("[0].'results'.size()", equalTo(1))
                .body("[0].'results'[0]", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_31() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"transcriptId\": \"ENST00000397752\", " + 
                    " \"start\": 1009, " + 
                    " \"end\": 1009, " + 
                    " \"mutationType\": \"Splice_Region\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/cancer_hotspots/proteinLocations?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'proteinLocation'.'transcriptId'", containsString("ENST00000397752"))
                .body("[0].'proteinLocation'.'start'", numberMatches(1009.0))
                .body("[0].'proteinLocation'.'end'", numberMatches(1009.0))
                .body("[0].'proteinLocation'.'mutationType'", containsString("Splice_Region"))
                .body("[0].'hotspots'.size()", equalTo(0));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("genomicLocation", "hotspots", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_32() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " \"_EM_255_XYZ_\", " + 
                    " \"_EM_256_XYZ_\", " + 
                    " \"wXcAdH6Ecly0i26n\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/ensembl/canonical-gene/hgnc?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_33() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_102_XYZ_")
                .contentType("application/json")
                .body(" [ " + 
                    " \"_EM_100_XYZ_\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/ensembl/canonical-transcript/hgnc?" + 
                    "isoformOverrideSource=uniprot&" + 
                    "EMextraParam123=_EM_101_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_34() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/signal/search?keyword=_EM_593_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_35() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/signal/search?" + 
                    "keyword=_EM_83_XYZ_&" + 
                    "limit=611")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_36() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/signal/search?" + 
                    "keyword=_EM_5621_XYZ_&" + 
                    "limit=-134217205&" + 
                    "EMextraParam123=_EM_3042_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_37() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " \"\", " + 
                    " \"ZrwgE7nBScqEYI\", " + 
                    " \"SBf585bbEW8JQkhO\", " + 
                    " \"UbU\", " + 
                    " \"wu0JV2OmsWrDw1\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/pdb/header?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_38() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/ensembl/xrefs?" + 
                    "accession=ENSG00000198695&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(12))
                .body("[0].'display_id'", containsString("NADH6"))
                .body("[0].'primary_id'", containsString("NADH6"))
                .body("[0].'version'", containsString("0"))
                .body("[0].'description'", containsString(""))
                .body("[0].'dbname'", containsString("Uniprot_gn"))
                .body("[0].'synonyms'.size()", equalTo(1))
                .body("[0].'synonyms'", hasItems("ND6"))
                .body("[0].'info_text'", containsString(""))
                .body("[0].'info_types'", containsString("DEPENDENT"))
                .body("[0].'db_display_name'", containsString("UniProtKB Gene Name"))
                .body("[1].'display_id'", containsString("ND6"))
                .body("[1].'primary_id'", containsString("ND6"))
                .body("[1].'version'", containsString("0"))
                .body("[1].'description'", containsString(""))
                .body("[1].'dbname'", containsString("Uniprot_gn"))
                .body("[1].'synonyms'.size()", equalTo(2))
                .body("[1].'synonyms'", hasItems("NADH6", "ndh6"))
                .body("[1].'info_text'", containsString(""))
                .body("[1].'info_types'", containsString("DEPENDENT"))
                .body("[1].'db_display_name'", containsString("UniProtKB Gene Name"))
                .body("[2].'display_id'", containsString(" MITOCHONDRIAL MYOPATHY, ENCEPHALOP [#540000]"))
                .body("[2].'primary_id'", containsString("540000"))
                .body("[2].'version'", containsString("0"))
                .body("[2].'description'", containsString(" MITOCHONDRIAL MYOPATHY, ENCEPHALOPATHY, LACTIC ACIDOSIS, AND STROKE-LIKE"))
                .body("[2].'dbname'", containsString("MIM_MORBID"))
                .body("[2].'synonyms'.size()", equalTo(0))
                .body("[2].'info_text'", containsString(""))
                .body("[2].'info_types'", containsString("DEPENDENT"))
                .body("[2].'db_display_name'", containsString("MIM morbid"))
                ; // Skipping assertions on the remaining 9 elements. This limit of 3 elements can be increased in the configurations
        
    }
    
    
    @Test(timeout = 60000)
    public void test_39() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/signal/mutation/hgvs/10:g.89624230_89624231delAC?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_40() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/signal/mutation/hgvs/17:g.7574003_7574004insGAACATCTCGAAGCGCTCACGCCCAC?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_41() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/signal/mutation/hgvs/13:g.32893378C%3ET?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_42() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_41_XYZ_")
                .get(baseUrlOfSut + "/cancer_hotspots/hgvs/_EM_39_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_43() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_4859_XYZ_")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"5H9yvck3AIT\", " + 
                    " \"start\": -1008, " + 
                    " \"end\": -34984005, " + 
                    " \"referenceAllele\": \"d51ym\", " + 
                    " \"variantAllele\": \"d51ymZ\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/cancer_hotspots/genomic")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_44() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/annotation/dbsnp/COSM8?" + 
                    "token=_EM_2838_XYZ_&" + 
                    "fields=2IVOdWtGbt2J3D&fields=cu2AHT4bzitT&fields=_EM_215_XYZ_&fields=_EM_216_XYZ_&fields=_EM_2959_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'variant'", containsString("COSM8"))
                .body("'originalVariantQuery'", containsString("COSM8"))
                .body("'successfully_annotated'", equalTo(false));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) res_0.extract().response().jsonPath().getJsonObject("")).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_45() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/pdb/header/1yy9?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'pdbId'", containsString("1yy9"))
                .body("'title'", containsString("structure of the extracellular domain of the epidermal growth factor receptor in complex with the fab fragment of cetuximab/erbitux/imc-c225"))
                .body("'compound'.'1'.'chain'.size()", equalTo(1))
                .body("'compound'.'1'.'chain'", hasItems("a"))
                .body("'compound'.'1'.'fragment'", containsString("unp residues 25-642"))
                .body("'compound'.'1'.'synonym'", containsString("receptor tyrosine-protein kinase erbb-1"))
                .body("'compound'.'1'.'engineered'", containsString("yes"))
                .body("'compound'.'1'.'molecule'", containsString("epidermal growth factor receptor"))
                .body("'compound'.'1'.'mol_id'", containsString("1"))
                .body("'compound'.'1'.'ec'", containsString("2.7.10.1"))
                .body("'compound'.'2'.'chain'.size()", equalTo(1))
                .body("'compound'.'2'.'chain'", hasItems("c"))
                .body("'compound'.'2'.'engineered'", containsString("yes"))
                .body("'compound'.'2'.'molecule'", containsString("cetuximab fab light chain"))
                .body("'compound'.'2'.'mol_id'", containsString("2"))
                .body("'compound'.'3'.'chain'.size()", equalTo(1))
                .body("'compound'.'3'.'chain'", hasItems("d"))
                .body("'compound'.'3'.'molecule'", containsString("cetuximab fab heavy chain"))
                .body("'compound'.'3'.'mol_id'", containsString("3"))
                .body("'source'.'1'.'gene'.size()", equalTo(2))
                .body("'source'.'1'.'gene'", hasItems("egfr", "erbb1"))
                .body("'source'.'1'.'organism_scientific'", containsString("homo sapiens"))
                .body("'source'.'1'.'organism_common'", containsString("human"))
                .body("'source'.'1'.'expression_system_vector_type'", containsString("baculovirus"))
                .body("'source'.'1'.'organism_taxid'", containsString("9606"))
                .body("'source'.'1'.'expression_system_common'", containsString("fall armyworm"))
                .body("'source'.'1'.'expression_system_atcc_number'", containsString("sf9"))
                .body("'source'.'1'.'expression_system_taxid'", containsString("7108"))
                .body("'source'.'1'.'expression_system'", containsString("spodoptera frugiperda"))
                .body("'source'.'1'.'mol_id'", containsString("1"))
                .body("'source'.'2'.'strain'", containsString(","))
                .body("'source'.'2'.'expression_system_plasmid'", containsString("pdhl2"))
                .body("'source'.'2'.'organism_common'", containsString("house mouse, human"))
                .body("'source'.'2'.'expression_system_vector_type'", containsString("plasmid"))
                .body("'source'.'2'.'expression_system_cell'", containsString("mouse myeloma cell line"))
                .body("'source'.'2'.'expression_system'", containsString("mus musculus"))
                .body("'source'.'2'.'organism_scientific'", containsString("mus musculus, homo sapiens"))
                .body("'source'.'2'.'organism_taxid'", containsString("10090,9606"))
                .body("'source'.'2'.'expression_system_common'", containsString("house mouse"))
                .body("'source'.'2'.'expression_system_strain'", containsString("sp2/0-ag15"))
                .body("'source'.'2'.'expression_system_atcc_number'", containsString("crl-1581"))
                .body("'source'.'2'.'expression_system_taxid'", containsString("10090"))
                .body("'source'.'2'.'mol_id'", containsString("2"))
                .body("'source'.'3'.'strain'", containsString(","))
                .body("'source'.'3'.'organism_scientific'", containsString("mus musculus, homo sapiens"))
                .body("'source'.'3'.'organism_common'", containsString("house mouse, human"))
                .body("'source'.'3'.'expression_system_vector_type'", containsString("plasmid"))
                .body("'source'.'3'.'organism_taxid'", containsString("10090,9606"))
                .body("'source'.'3'.'expression_system_common'", containsString("house mouse"))
                .body("'source'.'3'.'expression_system_strain'", containsString("sp2/0-ag15"))
                .body("'source'.'3'.'expression_system_atcc_number'", containsString("crl-1581"))
                .body("'source'.'3'.'expression_system_cell'", containsString("mouse myeloma cell line"))
                .body("'source'.'3'.'expression_system_taxid'", containsString("10090"))
                .body("'source'.'3'.'expression_system'", containsString("mus musculus"))
                .body("'source'.'3'.'mol_id'", containsString("3"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_46() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " \":nHHPruaht\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/mutation_assessor")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_47() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"ZIQCjQS0IJaQPt\", " + 
                    " \"start\": -8112, " + 
                    " \"end\": 234, " + 
                    " \"referenceAllele\": \"NA\", " + 
                    " \"variantAllele\": \"q\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/genomic?" + 
                    "isoformOverrideSource=&" + 
                    "token=&" + 
                    "fields=ptms&fields=q&fields=_EM_70652_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_48() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"f\", " + 
                    " \"start\": -163342, " + 
                    " \"end\": -17534, " + 
                    " \"referenceAllele\": \"tGvh4LC49fV33iLO\", " + 
                    " \"variantAllele\": \"\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/genomic?" + 
                    "isoformOverrideSource=&" + 
                    "token=%7B%0A++++++++++++++++++++%22U%22%3A%220Y%22%0A++++++++++++++++++++%7D&" + 
                    "fields=signal&fields=UDVy3VeU&fields=8UPUU2Odvb3N")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_49() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " \"_EM_135_XYZ_\", " + 
                    " \"_EM_136_XYZ_\", " + 
                    " \"_EM_137_XYZ_\", " + 
                    " \"CI\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/cancer_hotspots/hgvs")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(4))
                .body("[0].'variant'", containsString("_EM_135_XYZ_"))
                .body("[0].'hotspots'.size()", equalTo(0))
                .body("[1].'variant'", containsString("_EM_136_XYZ_"))
                .body("[1].'hotspots'.size()", equalTo(0))
                .body("[2].'variant'", containsString("_EM_137_XYZ_"))
                .body("[2].'hotspots'.size()", equalTo(0))
                ; // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("genomicLocation", "hotspots", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(1)).keySet().containsAll(Arrays.asList("genomicLocation", "hotspots", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(2)).keySet().containsAll(Arrays.asList("genomicLocation", "hotspots", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(3)).keySet().containsAll(Arrays.asList("genomicLocation", "hotspots", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_50() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " \"1a37\", " + 
                    " \"1a4o\", " + 
                    " \"3njp\", " + 
                    " \"1yy9\", " + 
                    " \"INVALID\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/pdb/header?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(4))
                .body("[0].'pdbId'", containsString("1a37"))
                .body("[0].'title'", containsString("14-3-3 protein zeta bound to ps-raf259 peptide"))
                .body("[0].'compound'.'1'.'other_details'", containsString("complexed with phosphoserine-containing peptide derived from raf"))
                .body("[0].'compound'.'1'.'chain'.size()", equalTo(2))
                .body("[0].'compound'.'1'.'chain'", hasItems("a", "b"))
                .body("[0].'compound'.'1'.'engineered'", containsString("yes"))
                .body("[0].'compound'.'1'.'molecule'", containsString("14-3-3 protein zeta"))
                .body("[0].'compound'.'1'.'mol_id'", containsString("1"))
                .body("[0].'compound'.'2'.'chain'.size()", equalTo(2))
                .body("[0].'compound'.'2'.'chain'", hasItems("p", "q"))
                .body("[0].'compound'.'2'.'molecule'", containsString("ps-raf259 peptide lsqrqrst(sep)tpnvhm"))
                .body("[0].'compound'.'2'.'mol_id'", containsString("2"))
                .body("[0].'source'.'1'.'organism_scientific'", containsString("bos taurus"))
                .body("[0].'source'.'1'.'organism_common'", containsString("cattle"))
                .body("[0].'source'.'1'.'organism_taxid'", containsString("9913"))
                .body("[0].'source'.'1'.'expression_system_taxid'", containsString("562"))
                .body("[0].'source'.'1'.'expression_system'", containsString("escherichia coli"))
                .body("[0].'source'.'1'.'mol_id'", containsString("1"))
                .body("[1].'pdbId'", containsString("1a4o"))
                .body("[1].'title'", containsString("14-3-3 protein zeta isoform"))
                .body("[1].'compound'.'1'.'chain'.size()", equalTo(4))
                .body("[1].'compound'.'1'.'chain'", hasItems("a", "b", "c", "d"))
                .body("[1].'compound'.'1'.'molecule'", containsString("14-3-3 protein zeta"))
                .body("[1].'compound'.'1'.'mol_id'", containsString("1"))
                .body("[1].'source'.'1'.'organism_scientific'", containsString("bos taurus"))
                .body("[1].'source'.'1'.'organism_common'", containsString("cattle"))
                .body("[1].'source'.'1'.'organism_taxid'", containsString("9913"))
                .body("[1].'source'.'1'.'expression_system'", containsString("escherichia coli"))
                .body("[1].'source'.'1'.'mol_id'", containsString("1"))
                .body("[2].'pdbId'", containsString("3njp"))
                .body("[2].'title'", containsString("the extracellular and transmembrane domain interfaces in epidermal growth factor receptor signaling"))
                .body("[2].'compound'.'1'.'chain'.size()", equalTo(2))
                .body("[2].'compound'.'1'.'chain'", hasItems("a", "b"))
                .body("[2].'compound'.'1'.'synonym'", containsString("receptor tyrosine-protein kinase erbb-1, proto-oncogene c- erbb-1"))
                .body("[2].'compound'.'1'.'engineered'", containsString("yes"))
                .body("[2].'compound'.'1'.'molecule'", containsString("epidermal growth factor receptor"))
                .body("[2].'compound'.'1'.'mol_id'", containsString("1"))
                .body("[2].'compound'.'1'.'ec'", containsString("2.7.10.1"))
                .body("[2].'compound'.'2'.'chain'.size()", equalTo(2))
                .body("[2].'compound'.'2'.'chain'", hasItems("c", "d"))
                .body("[2].'compound'.'2'.'molecule'", containsString("epidermal growth factor"))
                .body("[2].'compound'.'2'.'mol_id'", containsString("2"))
                .body("[2].'source'.'1'.'expression_system_plasmid'", containsString("pcdna3.1/zeo(+)"))
                .body("[2].'source'.'1'.'gene'.size()", equalTo(2))
                .body("[2].'source'.'1'.'gene'", hasItems("egfr", "erbb1"))
                .body("[2].'source'.'1'.'organism_scientific'", containsString("homo sapiens"))
                .body("[2].'source'.'1'.'organism_common'", containsString("human"))
                .body("[2].'source'.'1'.'expression_system_vector_type'", containsString("plasmid"))
                .body("[2].'source'.'1'.'organism_taxid'", containsString("9606"))
                .body("[2].'source'.'1'.'expression_system_common'", containsString("chinese hamster"))
                .body("[2].'source'.'1'.'expression_system_strain'", containsString("lec8"))
                .body("[2].'source'.'1'.'expression_system_organ'", containsString("ovary"))
                .body("[2].'source'.'1'.'expression_system_taxid'", containsString("10029"))
                .body("[2].'source'.'1'.'expression_system'", containsString("cricetulus griseus"))
                .body("[2].'source'.'1'.'mol_id'", containsString("1"))
                .body("[2].'source'.'2'.'gene'.size()", equalTo(1))
                .body("[2].'source'.'2'.'gene'", hasItems("egf"))
                .body("[2].'source'.'2'.'organism_scientific'", containsString("homo sapiens"))
                .body("[2].'source'.'2'.'organism_common'", containsString("human"))
                .body("[2].'source'.'2'.'organism_taxid'", containsString("9606"))
                .body("[2].'source'.'2'.'expression_system_common'", containsString("chinese hamster"))
                .body("[2].'source'.'2'.'expression_system_taxid'", containsString("10029"))
                .body("[2].'source'.'2'.'expression_system'", containsString("cricetulus griseus"))
                .body("[2].'source'.'2'.'mol_id'", containsString("2"))
                ; // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
        
    }
    
    
    @Test(timeout = 60000)
    public void test_51() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_2924_XYZ_")
                .contentType("application/json")
                .body(" [ " + 
                    " \"_EM_2920_XYZ_\", " + 
                    " \"_EM_2921_XYZ_\", " + 
                    " \"_EM_2922_XYZ_\", " + 
                    " \"_EM_2923_XYZ_\", " + 
                    " \"Cr4iSE3h9HR\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/dbsnp/?" + 
                    "token=_EM_2919_XYZ_&" + 
                    "fields=3PdG32&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(5))
                .body("[0].'variant'", containsString("_EM_2920_XYZ_"))
                .body("[0].'originalVariantQuery'", containsString("_EM_2920_XYZ_"))
                .body("[0].'successfully_annotated'", equalTo(false))
                .body("[1].'variant'", containsString("_EM_2921_XYZ_"))
                .body("[1].'originalVariantQuery'", containsString("_EM_2921_XYZ_"))
                .body("[1].'successfully_annotated'", equalTo(false))
                .body("[2].'variant'", containsString("_EM_2922_XYZ_"))
                .body("[2].'originalVariantQuery'", containsString("_EM_2922_XYZ_"))
                .body("[2].'successfully_annotated'", equalTo(false))
                ; // Skipping assertions on the remaining 2 elements. This limit of 3 elements can be increased in the configurations
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(1)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(2)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(3)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(4)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_52() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/my_variant_info/variant/17:g.41276045_41276046del?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'variant'", containsString("chr17:g.41276045_41276046del"))
                .body("'query'", containsString("chr17:g.41276045_41276046del"))
                .body("'hgvs'", containsString("chr17:g.41276045_41276046del"))
                .body("'snpeff'.'license'", containsString("http://bit.ly/2suyRKt"))
                .body("'vcf'.'alt'", containsString("A"))
                .body("'vcf'.'position'", containsString("41276044"))
                .body("'vcf'.'ref'", containsString("ACT"))
                .body("'gnomadExome'.'alleleCount'.'ac'", numberMatches(57.0))
                .body("'gnomadExome'.'alleleCount'.'ac_afr'", numberMatches(0.0))
                .body("'gnomadExome'.'alleleCount'.'ac_amr'", numberMatches(1.0))
                .body("'gnomadExome'.'alleleCount'.'ac_asj'", numberMatches(41.0))
                .body("'gnomadExome'.'alleleCount'.'ac_eas'", numberMatches(0.0))
                .body("'gnomadExome'.'alleleCount'.'ac_fin'", numberMatches(0.0))
                .body("'gnomadExome'.'alleleCount'.'ac_nfe'", numberMatches(11.0))
                .body("'gnomadExome'.'alleleCount'.'ac_oth'", numberMatches(0.0))
                .body("'gnomadExome'.'alleleCount'.'ac_sas'", numberMatches(4.0))
                .body("'gnomadExome'.'alleleNumber'.'an'", numberMatches(251050.0))
                .body("'gnomadExome'.'alleleNumber'.'an_afr'", numberMatches(16250.0))
                .body("'gnomadExome'.'alleleNumber'.'an_amr'", numberMatches(34592.0))
                .body("'gnomadExome'.'alleleNumber'.'an_asj'", numberMatches(10078.0))
                .body("'gnomadExome'.'alleleNumber'.'an_eas'", numberMatches(18394.0))
                .body("'gnomadExome'.'alleleNumber'.'an_fin'", numberMatches(21644.0))
                .body("'gnomadExome'.'alleleNumber'.'an_nfe'", numberMatches(113354.0))
                .body("'gnomadExome'.'alleleNumber'.'an_oth'", numberMatches(6130.0))
                .body("'gnomadExome'.'alleleNumber'.'an_sas'", numberMatches(30608.0))
                .body("'gnomadExome'.'alleleFrequency'.'af'", numberMatches(2.27046E-4))
                .body("'gnomadExome'.'alleleFrequency'.'af_afr'", numberMatches(0.0))
                .body("'gnomadExome'.'alleleFrequency'.'af_amr'", numberMatches(2.89084E-5))
                .body("'gnomadExome'.'alleleFrequency'.'af_asj'", numberMatches(0.00406827))
                .body("'gnomadExome'.'alleleFrequency'.'af_eas'", numberMatches(0.0))
                .body("'gnomadExome'.'alleleFrequency'.'af_fin'", numberMatches(0.0))
                .body("'gnomadExome'.'alleleFrequency'.'af_nfe'", numberMatches(9.70411E-5))
                .body("'gnomadExome'.'alleleFrequency'.'af_oth'", numberMatches(0.0))
                .body("'gnomadExome'.'alleleFrequency'.'af_sas'", numberMatches(1.30685E-4))
                .body("'gnomadExome'.'homozygotes'.'hom'", numberMatches(0.0))
                .body("'gnomadExome'.'homozygotes'.'hom_afr'", numberMatches(0.0))
                .body("'gnomadExome'.'homozygotes'.'hom_amr'", numberMatches(0.0))
                .body("'gnomadExome'.'homozygotes'.'hom_asj'", numberMatches(0.0))
                .body("'gnomadExome'.'homozygotes'.'hom_eas'", numberMatches(0.0))
                .body("'gnomadExome'.'homozygotes'.'hom_fin'", numberMatches(0.0))
                .body("'gnomadExome'.'homozygotes'.'hom_nfe'", numberMatches(0.0))
                .body("'gnomadExome'.'homozygotes'.'hom_oth'", numberMatches(0.0))
                .body("'gnomadExome'.'homozygotes'.'hom_sas'", numberMatches(0.0))
                .body("'gnomadGenome'.'alleleCount'.'ac'", numberMatches(1.0))
                .body("'gnomadGenome'.'alleleCount'.'ac_afr'", numberMatches(0.0))
                .body("'gnomadGenome'.'alleleCount'.'ac_amr'", numberMatches(0.0))
                .body("'gnomadGenome'.'alleleCount'.'ac_asj'", numberMatches(1.0))
                .body("'gnomadGenome'.'alleleCount'.'ac_eas'", numberMatches(0.0))
                .body("'gnomadGenome'.'alleleCount'.'ac_fin'", numberMatches(0.0))
                .body("'gnomadGenome'.'alleleCount'.'ac_nfe'", numberMatches(0.0))
                .body("'gnomadGenome'.'alleleCount'.'ac_oth'", numberMatches(0.0))
                .body("'gnomadGenome'.'alleleCount'.'ac_sas'", nullValue())
                .body("'gnomadGenome'.'alleleNumber'.'an'", numberMatches(31392.0))
                .body("'gnomadGenome'.'alleleNumber'.'an_afr'", numberMatches(8712.0))
                .body("'gnomadGenome'.'alleleNumber'.'an_amr'", numberMatches(848.0))
                .body("'gnomadGenome'.'alleleNumber'.'an_asj'", numberMatches(290.0))
                .body("'gnomadGenome'.'alleleNumber'.'an_eas'", numberMatches(1560.0))
                .body("'gnomadGenome'.'alleleNumber'.'an_fin'", numberMatches(3468.0))
                .body("'gnomadGenome'.'alleleNumber'.'an_nfe'", numberMatches(15426.0))
                .body("'gnomadGenome'.'alleleNumber'.'an_oth'", numberMatches(1088.0))
                .body("'gnomadGenome'.'alleleNumber'.'an_sas'", nullValue())
                .body("'gnomadGenome'.'alleleFrequency'.'af'", numberMatches(3.18552E-5))
                .body("'gnomadGenome'.'alleleFrequency'.'af_afr'", numberMatches(0.0))
                .body("'gnomadGenome'.'alleleFrequency'.'af_amr'", numberMatches(0.0))
                .body("'gnomadGenome'.'alleleFrequency'.'af_asj'", numberMatches(0.00344828))
                .body("'gnomadGenome'.'alleleFrequency'.'af_eas'", numberMatches(0.0))
                .body("'gnomadGenome'.'alleleFrequency'.'af_fin'", numberMatches(0.0))
                .body("'gnomadGenome'.'alleleFrequency'.'af_nfe'", numberMatches(0.0))
                .body("'gnomadGenome'.'alleleFrequency'.'af_oth'", numberMatches(0.0))
                .body("'gnomadGenome'.'alleleFrequency'.'af_sas'", nullValue())
                .body("'gnomadGenome'.'homozygotes'.'hom'", numberMatches(0.0))
                .body("'gnomadGenome'.'homozygotes'.'hom_afr'", numberMatches(0.0))
                .body("'gnomadGenome'.'homozygotes'.'hom_amr'", numberMatches(0.0))
                .body("'gnomadGenome'.'homozygotes'.'hom_asj'", numberMatches(0.0))
                .body("'gnomadGenome'.'homozygotes'.'hom_eas'", numberMatches(0.0))
                .body("'gnomadGenome'.'homozygotes'.'hom_fin'", numberMatches(0.0))
                .body("'gnomadGenome'.'homozygotes'.'hom_nfe'", numberMatches(0.0))
                .body("'gnomadGenome'.'homozygotes'.'hom_oth'", numberMatches(0.0))
                .body("'gnomadGenome'.'homozygotes'.'hom_sas'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_53() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/annotation/summary/E1RCPeSLRR?projection=CANONICAL")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'variant'", containsString("E1RCPeSLRR"))
                .body("'genomicLocation'.'chromosome'", nullValue())
                .body("'genomicLocation'.'start'", nullValue())
                .body("'genomicLocation'.'end'", nullValue())
                .body("'genomicLocation'.'referenceAllele'", nullValue())
                .body("'genomicLocation'.'variantAllele'", nullValue());
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) res_0.extract().response().jsonPath().getJsonObject("")).keySet().containsAll(Arrays.asList("transcriptConsequenceSummaries", "transcriptConsequenceSummary", "transcriptConsequences", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_54() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_36_XYZ_")
                .get(baseUrlOfSut + "/annotation/summary/_EM_33_XYZ_?isoformOverrideSource=_EM_34_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'variant'", containsString("_EM_33_XYZ_"))
                .body("'genomicLocation'.'chromosome'", nullValue())
                .body("'genomicLocation'.'start'", nullValue())
                .body("'genomicLocation'.'end'", nullValue())
                .body("'genomicLocation'.'referenceAllele'", nullValue())
                .body("'genomicLocation'.'variantAllele'", nullValue())
                .body("'transcriptConsequences'.size()", equalTo(0))
                .body("'transcriptConsequenceSummaries'.size()", equalTo(0));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) res_0.extract().response().jsonPath().getJsonObject("")).keySet().containsAll(Arrays.asList("transcriptConsequenceSummaries", "transcriptConsequenceSummary", "transcriptConsequences", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_55() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " \"_EM_329_XYZ_\", " + 
                    " \"_EM_330_XYZ_\", " + 
                    " \"_EM_331_XYZ_\", " + 
                    " \"\", " + 
                    " \"_EM_332_XYZ_\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/summary?isoformOverrideSource=XqQyM5pFtYP_x")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(5))
                .body("[0].'variant'", containsString("_EM_329_XYZ_"))
                .body("[0].'genomicLocation'.'chromosome'", nullValue())
                .body("[0].'genomicLocation'.'start'", nullValue())
                .body("[0].'genomicLocation'.'end'", nullValue())
                .body("[0].'genomicLocation'.'referenceAllele'", nullValue())
                .body("[0].'genomicLocation'.'variantAllele'", nullValue())
                .body("[0].'transcriptConsequences'.size()", equalTo(0))
                .body("[0].'transcriptConsequenceSummaries'.size()", equalTo(0))
                .body("[1].'variant'", containsString("_EM_330_XYZ_"))
                .body("[1].'genomicLocation'.'chromosome'", nullValue())
                .body("[1].'genomicLocation'.'start'", nullValue())
                .body("[1].'genomicLocation'.'end'", nullValue())
                .body("[1].'genomicLocation'.'referenceAllele'", nullValue())
                .body("[1].'genomicLocation'.'variantAllele'", nullValue())
                .body("[1].'transcriptConsequences'.size()", equalTo(0))
                .body("[1].'transcriptConsequenceSummaries'.size()", equalTo(0))
                .body("[2].'variant'", containsString("_EM_331_XYZ_"))
                .body("[2].'genomicLocation'.'chromosome'", nullValue())
                .body("[2].'genomicLocation'.'start'", nullValue())
                .body("[2].'genomicLocation'.'end'", nullValue())
                .body("[2].'genomicLocation'.'referenceAllele'", nullValue())
                .body("[2].'genomicLocation'.'variantAllele'", nullValue())
                .body("[2].'transcriptConsequences'.size()", equalTo(0))
                .body("[2].'transcriptConsequenceSummaries'.size()", equalTo(0))
                ; // Skipping assertions on the remaining 2 elements. This limit of 3 elements can be increased in the configurations
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("transcriptConsequenceSummaries", "transcriptConsequenceSummary", "transcriptConsequences", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(1)).keySet().containsAll(Arrays.asList("transcriptConsequenceSummaries", "transcriptConsequenceSummary", "transcriptConsequences", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(2)).keySet().containsAll(Arrays.asList("transcriptConsequenceSummaries", "transcriptConsequenceSummary", "transcriptConsequences", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(3)).keySet().containsAll(Arrays.asList("transcriptConsequenceSummaries", "transcriptConsequenceSummary", "transcriptConsequences", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(4)).keySet().containsAll(Arrays.asList("transcriptConsequenceSummaries", "transcriptConsequenceSummary", "transcriptConsequences", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_56() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " \"12:g.43130875C\u003eG\", " + 
                    " \"12:g.43130996C\u003eG\", " + 
                    " \"INVALID\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(3))
                .body("[0].'variant'", containsString("12:g.43130875C>G"))
                .body("[0].'originalVariantQuery'", containsString("12:g.43130875C>G"))
                .body("[0].'hgvsg'", containsString("12:g.43130875C>G"))
                .body("[0].'assembly_name'", containsString("GRCh37"))
                .body("[0].'seq_region_name'", containsString("12"))
                .body("[0].'start'", numberMatches(4.3130875E7))
                .body("[0].'end'", numberMatches(4.3130875E7))
                .body("[0].'allele_string'", containsString("C/G"))
                .body("[0].'strand'", numberMatches(1.0))
                .body("[0].'most_severe_consequence'", containsString("intergenic_variant"))
                .body("[0].'intergenic_consequences'.size()", equalTo(1))
                .body("[0].'intergenic_consequences'[0].'impact'", containsString("MODIFIER"))
                .body("[0].'intergenic_consequences'[0].'variantAllele'", containsString("G"))
                .body("[0].'intergenic_consequences'[0].'consequenceTerms'.size()", equalTo(1))
                .body("[0].'intergenic_consequences'[0].'consequenceTerms'", hasItems("intergenic_variant"))
                .body("[0].'successfully_annotated'", equalTo(true))
                .body("[1].'variant'", containsString("12:g.43130996C>G"))
                .body("[1].'originalVariantQuery'", containsString("12:g.43130996C>G"))
                .body("[1].'hgvsg'", containsString("12:g.43130996C>G"))
                .body("[1].'assembly_name'", containsString("GRCh37"))
                .body("[1].'seq_region_name'", containsString("12"))
                .body("[1].'start'", numberMatches(4.3130996E7))
                .body("[1].'end'", numberMatches(4.3130996E7))
                .body("[1].'allele_string'", containsString("C/G"))
                .body("[1].'strand'", numberMatches(1.0))
                .body("[1].'most_severe_consequence'", containsString("intergenic_variant"))
                .body("[1].'intergenic_consequences'.size()", equalTo(1))
                .body("[1].'intergenic_consequences'[0].'impact'", containsString("MODIFIER"))
                .body("[1].'intergenic_consequences'[0].'variantAllele'", containsString("G"))
                .body("[1].'intergenic_consequences'[0].'consequenceTerms'.size()", equalTo(1))
                .body("[1].'intergenic_consequences'[0].'consequenceTerms'", hasItems("intergenic_variant"))
                .body("[1].'successfully_annotated'", equalTo(true))
                .body("[2].'variant'", containsString("INVALID"))
                .body("[2].'originalVariantQuery'", containsString("INVALID"))
                .body("[2].'successfully_annotated'", equalTo(false));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_57() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " \"_EM_4276_XYZ_\", " + 
                    " \"_EM_4277_XYZ_\", " + 
                    " \"F\", " + 
                    " \"_EM_4278_XYZ_\", " + 
                    " \"_EM_1370_XYZ_\", " + 
                    " \"chr17:g.7577568C\u003eG\", " + 
                    " \"_EM_4279_XYZ_\", " + 
                    " \"_EM_4280_XYZ_\", " + 
                    " \"_EM_4281_XYZ_\", " + 
                    " \"chr17:g.7577569_757756Idel\", " + 
                    " \"chr17:g.7577569_7577572del\", " + 
                    " \"_EM_4282_XYZ_\", " + 
                    " \"chr17:g.7577570C\u003eA\", " + 
                    " \"chr17:g.7577570C\u003eG\", " + 
                    " \"_EM_4283_XYZ_\", " + 
                    " \"chr17:g.7577571A\u003eT\", " + 
                    " \"WjnoM\", " + 
                    " \"bB73jM4rqdbDNzSm\", " + 
                    " \"_EM_4284_XYZ_\", " + 
                    " \"_kR1O_xJYH_TxO\", " + 
                    " \"chr17:g.7577573G\u003eT\", " + 
                    " \"chr17:g.7577573_7577573del\", " + 
                    " \"_EM_4285_XYZ_\", " + 
                    " \"_EM_4286_XYZ_\", " + 
                    " \"Wllq0\", " + 
                    " \"_EM_4287_XYZ_\", " + 
                    " \"_EM_1376_XYZ_\", " + 
                    " \"_EM_1377_XYZ_\", " + 
                    " \"_EM_1378_XYZ_\", " + 
                    " \"_EM_1379_XYZ_\", " + 
                    " \"_EM_4288_XYZ_\", " + 
                    " \"chr17:g.7577579G\u003eC\", " + 
                    " \"_EM_4289_XYZ_\", " + 
                    " \"chr17:g.7577579_7577581del\", " + 
                    " \"_EM_1380_XYZ_\", " + 
                    " \"_EM_1381_XYZ_\", " + 
                    " \"_EM_1382_XYZ_\", " + 
                    " \"_EM_4290_XYZ_\", " + 
                    " \"_EM_1383_XYZ_\", " + 
                    " \"QgEdMP0owZdXzM\", " + 
                    " \"_EM_1385_XYZ_\", " + 
                    " \"\", " + 
                    " \"_EM_1387_XYZ_\", " + 
                    " \"chr17:g.7577586\u003d\u003eT\", " + 
                    " \"_EM_4291_XYZ_\", " + 
                    " \"_EM_4292_XYZ_\", " + 
                    " \"Yh\", " + 
                    " \"aIa\", " + 
                    " \"chr17:g.7577589G\u003eT\", " + 
                    " \"chr17:g.7577589_7577590insT\", " + 
                    " \"_EM_4293_XYZ_\", " + 
                    " \"_EM_1391_XYZ_\", " + 
                    " \"_EM_1392_XYZ_\", " + 
                    " \"_EM_1393_XYZ_\", " + 
                    " \"_EM_4294_XYZ_\", " + 
                    " \"savQt21Bd\", " + 
                    " \"_EM_4295_XYZ_\", " + 
                    " \"chr17:g.7577596_7577596del\", " + 
                    " \"z1vMpQ1Uz\", " + 
                    " \"_EM_4296_XYZ_\", " + 
                    " \"chr17:g.7577604C\u003eT\", " + 
                    " \"chr17:g.7577608C\u003eT\", " + 
                    " \"9FmCCZzCfr\", " + 
                    " \"_EM_4297_XYZ_\", " + 
                    " \"_EM_1398_XYZ_\", " + 
                    " \"chr17:g.7577610T\u003eA\", " + 
                    " \"_EM_4298_XYZ_\", " + 
                    " \"_EM_4299_XYZ_\", " + 
                    " \"_EM_4300_XYZ_\", " + 
                    " \"_EM_1399_XYZ_\", " + 
                    " \"_EM_1400_XYZ_\", " + 
                    " \"chr17:g.7578176C\u003eA\", " + 
                    " \"_EM_1401_XYZ_\", " + 
                    " \"_EM_1402_XYZ_\", " + 
                    " \"_EM_1403_XYZ_\", " + 
                    " \"ph\", " + 
                    " \"_EM_4301_XYZ_\", " + 
                    " \"_EM_4302_XYZ_\", " + 
                    " \"_EM_1406_XYZ_\", " + 
                    " \"_EM_1407_XYZ_\", " + 
                    " \"_EM_4303_XYZ_\", " + 
                    " \"_EM_4304_XYZ_\", " + 
                    " \"_EM_1408_XYZ_\", " + 
                    " \"_EM_1409_XYZ_\", " + 
                    " \"_EM_4305_XYZ_\", " + 
                    " \"chr17:g.7578190T\u003eG\", " + 
                    " \"chr17:g.7578191A\u003eC\", " + 
                    " \"_EM_4306_XYZ_\", " + 
                    " \"_EM_1410_XYZ_\", " + 
                    " \"chr17:g-7578192_7578192del\", " + 
                    " \"chr17:g.7578192_7578193delinsA\", " + 
                    " \"_EM_1411_XYZ_\", " + 
                    " \"fW\", " + 
                    " \"_EM_1413_XYZ_\", " + 
                    " \"_EM_4307_XYZ_\", " + 
                    " \"MGdsmmKdulwndii\", " + 
                    " \"chr17:g.7578196_7578197insC\", " + 
                    " \"_EM_4308_XYZ_\", " + 
                    " \"chr17:g.7578196_7578197insCCACCACACTAT\", " + 
                    " \"chr17:g.7578197C\u003eA\", " + 
                    " \"_EM_1416_XYZ_\", " + 
                    " \"_EM_1417_XYZ_\", " + 
                    " \"chr17:g.7578199_7578199del\", " + 
                    " \"84h4xn?\", " + 
                    " \"_EM_1419_XYZ_\", " + 
                    " \"chr17:g.7578202A\u003eC\", " + 
                    " \"chr17:g.7578202A\u003eT\", " + 
                    " \"_EM_4309_XYZ_\", " + 
                    " \"_EM_4310_XYZ_\", " + 
                    " \"khr17:g.7578203C\u003eT\", " + 
                    " \"_EM_1421_XYZ_\", " + 
                    " \"q\", " + 
                    " \"_EM_1423_XYZ_\", " + 
                    " \"chr17:g.7578205C\u003eG\", " + 
                    " \"_EM_1424_XYZ_\", " + 
                    " \"_EM_4311_XYZ_\", " + 
                    " \"chr17:g.7578205_7578207delinsTTT\", " + 
                    " \"O91d\", " + 
                    " \"chr17:g.7578206T\u003eC\", " + 
                    " \"chr17:g.7578206T\u003eG\", " + 
                    " \"chr17:g.7578206_7578207del\", " + 
                    " \"_EM_1427_XYZ_\", " + 
                    " \"_EM_4312_XYZ_\", " + 
                    " \"_EM_1429_XYZ_\", " + 
                    " \"chr17:g.757820HT\u003eC\", " + 
                    " \"_EM_1430_XYZ_\", " + 
                    " \"chr17:g.7578208_7578208\\\\el\", " + 
                    " \"chr17:g.7578208_7578217dcl\", " + 
                    " \"chr17:g.7578208_7578219del\", " + 
                    " \"_EM_1431_XYZ_\", " + 
                    " \"_EM_4313_XYZ_\", " + 
                    " \"_EM_1432_XYZ_\", " + 
                    " \"dPFhkcrOy\", " + 
                    " \"kUXfgFAZT.eCTp\", " + 
                    " \"_EM_4314_XYZ_\", " + 
                    " \"chr17:g.7578212G\u003eC\", " + 
                    " \"_EM_4315_XYZ_\", " + 
                    " \"_EM_1435_XYZ_\", " + 
                    " \"_EM_1436_XYZ_\", " + 
                    " \"_EM_4316_XYZ_\", " + 
                    " \"_EM_1437_XYZ_\", " + 
                    " \"_EM_1438_XYZ_\", " + 
                    " \"chr17:g.7478219_7578220insT\", " + 
                    " \"_EM_1439_XYZ_\", " + 
                    " \"_EM_4317_XYZ_\", " + 
                    " \"_EM_1440_XYZ_\", " + 
                    " \"chr17:g.7578223C\u003eT\", " + 
                    " \"_EM_4318_XYZ_\", " + 
                    " \"_EM_1442_XYZ_\", " + 
                    " \"chr17:g.7578226T\u003eA\", " + 
                    " \"_EM_1443_XYZ_\", " + 
                    " \"chr17:g.7578227C\u003eT\", " + 
                    " \"_EM_4319_XYZ_\", " + 
                    " \"_EM_4320_XYZ_\", " + 
                    " \"chr17:g.7578231_7578232insAAAT\", " + 
                    " \"qs70i\", " + 
                    " \"aqxj\", " + 
                    " \"chr17:g.7578235T\u003eG\", " + 
                    " \"QZ1pqW,_5\", " + 
                    " \"_EM_4321_XYZ_\", " + 
                    " \"_EM_1449_XYZ_\", " + 
                    " \"_EM_4322_XYZ_\", " + 
                    " \"chr17:g.7578239_7578240insCA\", " + 
                    " \"_EM_1451_XYZ_\", " + 
                    " \"_EM_1452_XYZ_\", " + 
                    " \"Sa0E\", " + 
                    " \"_EM_1454_XYZ_\", " + 
                    " \"chr17:g.7578247A\u003eTi\", " + 
                    " \"_EM_1455_XYZ_\", " + 
                    " \"chr17:g.7578247_7578248del\", " + 
                    " \"6Xvg\", " + 
                    " \"_EM_4323_XYZ_\", " + 
                    " \"_EM_4324_XYZ_\", " + 
                    " \"chr17:g.7578253C\u003eA\", " + 
                    " \"chr17:g.7578253C\u003eT\", " + 
                    " \"_EM_4325_XYZ_\", " + 
                    " \"chr17:g.7578257C\u003eA\", " + 
                    " \"chr17:g.7578257_\u0027578257del\", " + 
                    " \"_EM_4326_XYZ_\", " + 
                    " \"_EM_1459_XYZ_\", " + 
                    " \"chr17:g.7578260C\u003eT\", " + 
                    " \"chr17:g.7578262C\u003eA\", " + 
                    " \"_EM_4327_XYZ_\", " + 
                    " \"chr17:g.7578262C\u003eT\", " + 
                    " \"_EM_4328_XYZ_\", " + 
                    " \"QfFu4e8Wm2b2\", " + 
                    " \"chr17:g.7578264_7578265telinsTT\", " + 
                    " \"_EM_4329_XYZ_\", " + 
                    " \"chr17:g.7578265A\u003eC\", " + 
                    " \"_EM_1463_XYZ_\", " + 
                    " \"_EM_1464_XYZ_\", " + 
                    " \"_EM_4330_XYZ_\", " + 
                    " \"_EM_4331_XYZ_\", " + 
                    " \"_EM_4332_XYZ_\", " + 
                    " \"_EM_4333_XYZ_\", " + 
                    " \"_EM_4334_XYZ_\", " + 
                    " \"_EM_1466_XYZ_\", " + 
                    " \"chr17:g.7578268A\u003eG\", " + 
                    " \"_EM_1467_XYZ_\", " + 
                    " \"_EM_1468_XYZ_\", " + 
                    " \"_EM_4335_XYZ_\", " + 
                    " \"_EM_4336_XYZ_\", " + 
                    " \"_EM_4337_XYZ_\", " + 
                    " \"chr17:g.7578271T\u003eG\", " + 
                    " \"GQ\", " + 
                    " \"_EM_1470_XYZ_\", " + 
                    " \"_EM_1471_XYZ_\", " + 
                    " \"_EM_4338_XYZ_\", " + 
                    " \"ds\", " + 
                    " \"_EM_4339_XYZ_\", " + 
                    " \"chr17:g.7578275_7578277del\", " + 
                    " \"_EM_4340_XYZ_\", " + 
                    " \"chr17:g.7578277_7578281del\", " + 
                    " \"chr17:g.7578280G\u003eA\", " + 
                    " \"_EM_4341_XYZ_\", " + 
                    " \"chr17:g.7578281G\u003eA\", " + 
                    " \"chr17:g.7578281G\u003eT\", " + 
                    " \"_EM_4342_XYZ_\", " + 
                    " \"_EM_1476_XYZ_\", " + 
                    " \"_EM_4343_XYZ_\", " + 
                    " \"chr17:g.7578284_7578288del\", " + 
                    " \"_EM_4344_XYZ_\", " + 
                    " \"_EM_1478_XYZ_\", " + 
                    " \"_EM_4345_XYZ_\", " + 
                    " \"chr17:g.7578286A\u003eT\", " + 
                    " \"_EM_1479_XYZ_\", " + 
                    " \"kD91C6y4Ua\", " + 
                    " \"_EM_1481_XYZ_\", " + 
                    " \"_EM_4346_XYZ_\", " + 
                    " \"oT5ftwrzjWFknqv\", " + 
                    " \"_EM_4347_XYZ_\", " + 
                    " \"_EM_1484_XYZ_\", " + 
                    " \"_EM_4348_XYZ_\", " + 
                    " \"BmxqIMFcNb\", " + 
                    " \"_EM_1486_XYZ_\", " + 
                    " \"chr17:g.7578293_7578977del\", " + 
                    " \"_EM_4349_XYZ_\", " + 
                    " \"chr17:g.7578359_7578373del\", " + 
                    " \"_EM_1487_XYZ_\", " + 
                    " \"JAdrid1vWc_m0Pz\", " + 
                    " \"_EM_1489_XYZ_\", " + 
                    " \"_EM_4350_XYZ_\", " + 
                    " \"_EM_1490_XYZ_\", " + 
                    " \"0B\", " + 
                    " \"_EM_4351_XYZ_\", " + 
                    " \"2eR\", " + 
                    " \"_EM_1493_XYZ_\", " + 
                    " \"_EM_4352_XYZ_\", " + 
                    " \"_EM_4353_XYZ_\", " + 
                    " \"chr17:g.7578376_7578379del\", " + 
                    " \"_EM_4354_XYZ_\", " + 
                    " \"_EM_4355_XYZ_\", " + 
                    " \"_EM_1494_XYZ_\", " + 
                    " \"_EM_4356_XYZ_\", " + 
                    " \"_EM_1495_XYZ_\", " + 
                    " \"_EM_1496_XYZ_\", " + 
                    " \"_EM_4357_XYZ_\", " + 
                    " \"_EM_4358_XYZ_\", " + 
                    " \"_EM_4359_XYZ_\", " + 
                    " \"chr17:g.7578388C\u003eG\", " + 
                    " \"S2WBE\", " + 
                    " \"chr17:g.7578389G\u003eA\", " + 
                    " \"chr17:g.7578389_7578402delinsT\", " + 
                    " \"chr17:g.7578390C\u003eG\", " + 
                    " \"_EM_1498_XYZ_\", " + 
                    " \"_EM_4360_XYZ_\", " + 
                    " \"chr17:g.7578393A\u003eC\", " + 
                    " \"_EM_1499_XYZ_\", " + 
                    " \"chr17:g.7578393_7578405del\", " + 
                    " \"chr17:g.7578394T\u003eA\", " + 
                    " \"chr17:g.7578394T\u003eC\", " + 
                    " \"chr17:g.7578394T\u003eG\", " + 
                    " \"_EM_4361_XYZ_\", " + 
                    " \"chr17:g.7578394_7578396del\", " + 
                    " \"_EM_4362_XYZ_\", " + 
                    " \"bVmMaLKPaa6Ca\", " + 
                    " \"_EM_4363_XYZ_\", " + 
                    " \"chr17:g.7578397T\u003eG\", " + 
                    " \"b\", " + 
                    " \"_EM_4364_XYZ_\", " + 
                    " \"_EM_4365_XYZ_\", " + 
                    " \"chr17:g.7578398_7578398del\", " + 
                    " \"_EM_4366_XYZ_\", " + 
                    " \"_EM_4367_XYZ_\", " + 
                    " \"_EM_4368_XYZ_\", " + 
                    " \"chr17:g.7578402G\u003eT\", " + 
                    " \"chr17:g.7578403C\u003eA\", " + 
                    " \"chr17:g.7578403C\u003eT\", " + 
                    " \"_EM_4369_XYZ_\", " + 
                    " \"_EM_1505_XYZ_\", " + 
                    " \"_EM_4370_XYZ_\", " + 
                    " \"_EM_1507_XYZ_\", " + 
                    " \"_EM_4371_XYZ_\", " + 
                    " \"_EM_4372_XYZ_\", " + 
                    " \"_EM_1508_XYZ_\", " + 
                    " \"_EM_1509_XYZ_\", " + 
                    " \"_EM_1510_XYZ_\", " + 
                    " \"rzoesVD5x0H0Wc\", " + 
                    " \"chr17:g.7578410T\u003eC\", " + 
                    " \"_EM_1512_XYZ_\", " + 
                    " \"wazMO_Vu8I87Tgj\", " + 
                    " \"chr17:g.7578412A\u003eG\", " + 
                    " \"_EM_1514_XYZ_\", " + 
                    " \"chr17:g.7578413C\u003eG\", " + 
                    " \"chr17:g.7578413C\u003eT\", " + 
                    " \"_EM_1515_XYZ_\", " + 
                    " \"UV5OLYscId1dmftc\", " + 
                    " \"_EM_4373_XYZ_\", " + 
                    " \"_EM_1517_XYZ_\", " + 
                    " \"qNB_bqtBl\", " + 
                    " \"HxfeFcnVLTJXDC7\", " + 
                    " \"_EM_1520_XYZ_\", " + 
                    " \"_EM_1521_XYZ_\", " + 
                    " \"j\", " + 
                    " \"chr17:g.7578421G\u003eA\", " + 
                    " \"_EM_1523_XYZ_\", " + 
                    " \"chr17:g.7578422_/578424del\", " + 
                    " \"_EM_1524_XYZ_\", " + 
                    " \"_EM_4374_XYZ_\", " + 
                    " \"_EM_4375_XYZ_\", " + 
                    " \"_EM_1525_XYZ_\", " + 
                    " \"chr17:g.7578427T\u003eC\", " + 
                    " \"chr17:g.7578427T\u003eG\", " + 
                    " \"_EM_1526_XYZ_\", " + 
                    " \"_Kjqt3d\", " + 
                    " \"qzwivcolK\", " + 
                    " \"_EM_1529_XYZ_\", " + 
                    " \"chr17:g.7578431G\u003eA\", " + 
                    " \"C145A2QS8gdb6C\", " + 
                    " \"_EM_4376_XYZ_\", " + 
                    " \"chr17:g.7578435C\u003eA\", " + 
                    " \"chr17:g.7578437G\u003eA\", " + 
                    " \"_EM_4377_XYZ_\", " + 
                    " \"QKiamCErxV54okm\", " + 
                    " \"_EM_4378_XYZ_\", " + 
                    " \"_EM_4379_XYZ_\", " + 
                    " \"_EM_1534_XYZ_\", " + 
                    " \"_EM_4380_XYZ_\", " + 
                    " \"6m2JSXY_cBc\", " + 
                    " \"_EM_4381_XYZ_\", " + 
                    " \"tIkiAXLk\", " + 
                    " \"_EM_4382_XYZ_\", " + 
                    " \"eYPGbL50f8\", " + 
                    " \"chr17:g.7578445A\u003eC\", " + 
                    " \"_EM_1539_XYZ_\", " + 
                    " \"_EM_1540_XYZ_\", " + 
                    " \"chr17:g.7578446T\u003eA\", " + 
                    " \"_EM_4383_XYZ_\", " + 
                    " \"_EM_4384_XYZ_\", " + 
                    " \"_EM_4385_XYZ_\", " + 
                    " \"_EM_1542_XYZ_\", " + 
                    " \"chr17:h.7578452_7578453insGGCGCG\", " + 
                    " \"_EM_4386_XYZ_\", " + 
                    " \"_EM_4387_XYZ_\", " + 
                    " \"_EM_1544_XYZ_\", " + 
                    " \"_EM_1545_XYZ_\", " + 
                    " \"_EM_1546_XYZ_\", " + 
                    " \"chr17:g.7578454_7578464delinsACGC\", " + 
                    " \"_EM_4388_XYZ_\", " + 
                    " \"chr17:g.7578455C\u003e?\", " + 
                    " \"chr17:g.\u0027578455_7578460del\", " + 
                    " \"_EM_1548_XYZ_\", " + 
                    " \"chr17:g.7578457C\u003eG\", " + 
                    " \"_EM_4389_XYZ_\", " + 
                    " \"_EM_4390_XYZ_\", " + 
                    " \"_EM_1551_XYZ_\", " + 
                    " \"chr17:g.7578458G\u003eC\", " + 
                    " \"_EM_1552_XYZ_\", " + 
                    " \"_EM_1553_XYZ_\", " + 
                    " \"_EM_4391_XYZ_\", " + 
                    " \"_EM_4392_XYZ_\", " + 
                    " \"_EM_1554_XYZ_\", " + 
                    " \"_EM_1555_XYZ_\", " + 
                    " \"x\", " + 
                    " \"_EM_1557_XYZ_\", " + 
                    " \"_EM_1558_XYZ_\", " + 
                    " \"_EM_1559_XYZ_\", " + 
                    " \"R\", " + 
                    " \"_EM_4393_XYZ_\", " + 
                    " \"_EM_1561_XYZ_\", " + 
                    " \"_EM_1562_XYZ_\", " + 
                    " \"_EM_1563_XYZ_\", " + 
                    " \"_EM_1564_XYZ_\", " + 
                    " \"chr17:g.7578466G\u003eT\", " + 
                    " \"_EM_4394_XYZ_\", " + 
                    " \"_EM_1565_XYZ_\", " + 
                    " \"DtXIo\", " + 
                    " \"_EM_1567_XYZ_\", " + 
                    " \"WXW_cpPksMgzILcB\", " + 
                    " \"_EM_1569_XYZ_\", " + 
                    " \"_EM_4395_XYZ_\", " + 
                    " \"JKt_KAzPyeTgFVqa\", " + 
                    " \"chr17:g.7578469_7578470insGGG\", " + 
                    " \"dYVfOS\", " + 
                    " \"_EM_4396_XYZ_\", " + 
                    " \"chr17:g.75784;0_7578471insG\", " + 
                    " \"_EM_4397_XYZ_\", " + 
                    " \"_EM_4398_XYZ_\", " + 
                    " \"chr17:g.7578470_7578502del\", " + 
                    " \"_EM_4399_XYZ_\", " + 
                    " \"_EM_1574_XYZ_\", " + 
                    " \"_EM_1575_XYZ_\", " + 
                    " \"FHvkkTOcR\", " + 
                    " \"_EM_1577_XYZ_\", " + 
                    " \"_EM_1578_XYZ_\", " + 
                    " \"_EM_1579_XYZ_\", " + 
                    " \"_EM_4400_XYZ_\", " + 
                    " \"A_wGfM0DD8d6GwKt\", " + 
                    " \"_EM_1582_XYZ_\", " + 
                    " \"_EM_1583_XYZ_\", " + 
                    " \"chr17:g.7578475_7578476delinsTT\", " + 
                    " \"_EM_1584_XYZ_\", " + 
                    " \"eQN0zVnQ\", " + 
                    " \"_EM_1586_XYZ_\", " + 
                    " \"chr17:g.7578478G\u003eC\", " + 
                    " \"chr17:g.7578478G\u003eT\", " + 
                    " \"_EM_1587_XYZ_\", " + 
                    " \"_EM_1588_XYZ_\", " + 
                    " \"_EM_4401_XYZ_\", " + 
                    " \"_EM_1589_XYZ_\", " + 
                    " \"_EM_4402_XYZ_\", " + 
                    " \"_EM_4403_XYZ_\", " + 
                    " \"_EM_4404_XYZ_\", " + 
                    " \"_EM_1591_XYZ_\", " + 
                    " \"chr17:g.7578481_7578482insT\", " + 
                    " \"\", " + 
                    " \"_EM_4405_XYZ_\", " + 
                    " \"_EM_1593_XYZ_\", " + 
                    " \"_EM_4406_XYZ_\", " + 
                    " \"_EM_4407_XYZ_\", " + 
                    " \"_EM_1595_XYZ_\", " + 
                    " \"g9_MHm1RHuLZ\", " + 
                    " \"_EM_4408_XYZ_\", " + 
                    " \"_EM_4409_XYZ_\", " + 
                    " \"_EM_1597_XYZ_\", " + 
                    " \"chr17:g.7578493C\u003eT\", " + 
                    " \"_EM_4410_XYZ_\", " + 
                    " \"_EM_1598_XYZ_\", " + 
                    " \"chr17:g.7578495_7578507del\", " + 
                    " \"chr17:g.7578496A\u003eC\", " + 
                    " \"_EM_1599_XYZ_\", " + 
                    " \"^\", " + 
                    " \"_EM_1601_XYZ_\", " + 
                    " \"chr17:g.7578499T\u003eC\", " + 
                    " \"_EM_4411_XYZ_\", " + 
                    " \"_EM_1602_XYZ_\", " + 
                    " \"_EM_1603_XYZ_\", " + 
                    " \"_EM_1604_XYZ_\", " + 
                    " \"_EM_4412_XYZ_\", " + 
                    " \"ii8IdreQ\", " + 
                    " \"chr17:g.7578502A\u003eC\", " + 
                    " \"_EM_1607_XYZ_\", " + 
                    " \"_EM_4413_XYZ_\", " + 
                    " \"_EM_1608_XYZ_\", " + 
                    " \"p4\", " + 
                    " \"_EM_1610_XYZ_\", " + 
                    " \"_EM_4414_XYZ_\", " + 
                    " \"_EM_4415_XYZ_\", " + 
                    " \"_EM_1611_XYZ_\", " + 
                    " \"_EM_4416_XYZ_\", " + 
                    " \"_EM_1612_XYZ_\", " + 
                    " \"_EM_4417_XYZ_\", " + 
                    " \"chr17:g.7578508_7578535delinsG\", " + 
                    " \"chr17:g.7570509A\u003eC\", " + 
                    " \"_EM_4418_XYZ_\", " + 
                    " \"_EM_1614_XYZ_\", " + 
                    " \"_EM_1615_XYZ_\", " + 
                    " \"jKHRMY1Y\", " + 
                    " \"_EM_4419_XYZ_\", " + 
                    " \"_EM_4420_XYZ_\", " + 
                    " \"chr17:g.7578515T\u003eA\", " + 
                    " \"chr17:g.7578515_7578516insGGCCAGTTGGCAAAACATCTTGTTGAG\", " + 
                    " \"bqLwHZk\", " + 
                    " \"chr17:g.7578517G\u003eA\", " + 
                    " \"chr17:g.7578518C\u003eG\", " + 
                    " \"chr17:g.7578520A\u003eT\", " + 
                    " \"_EM_1619_XYZ_\", " + 
                    " \"chr17:g.7578521_7578521del\", " + 
                    " \"_EM_4421_XYZ_\", " + 
                    " \"_EM_1621_XYZ_\", " + 
                    " \"chr17:g.7578523T\u003eG8\", " + 
                    " \"_EM_4422_XYZ_\", " + 
                    " \"_EM_1622_XYZ_\", " + 
                    " \"_EM_1623_XYZ_\", " + 
                    " \"_EM_1624_XYZ_\", " + 
                    " \"_EM_4423_XYZ_\", " + 
                    " \"hal2ZRb97lQkSr\", " + 
                    " \"_EM_1627_XYZ_\", " + 
                    " \"chr17:g.7578526C\u003eT\", " + 
                    " \"chr17:g.7578526_7578527insA\", " + 
                    " \"_EM_4424_XYZ_\", " + 
                    " \"chr17:g.7578527A\u003eG\", " + 
                    " \"chr13:g.7578527A\u003eT\", " + 
                    " \"chr17:g.7578527_7578527del\", " + 
                    " \"_EM_1628_XYZ_\", " + 
                    " \"_EM_4425_XYZ_\", " + 
                    " \"chr17:g.7578528A\u003eT\", " + 
                    " \"Q\", " + 
                    " \"chr17:g.7578530A\u003eC\", " + 
                    " \"chr18:g.7578530A\u003eG\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/my_variant_info/variant?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(49))
                .body("[0].'variant'", containsString("chr17:g.7578260C>T"))
                .body("[0].'query'", containsString("chr17:g.7578260C>T"))
                .body("[0].'hgvs'", containsString("chr17:g.7578260C>T"))
                .body("[0].'snpeff'.'license'", containsString("http://bit.ly/2suyRKt"))
                .body("[0].'vcf'.'alt'", containsString("T"))
                .body("[0].'vcf'.'position'", containsString("7578260"))
                .body("[0].'vcf'.'ref'", containsString("C"))
                .body("[0].'dbsnp'.'license'", containsString("http://bit.ly/2AqoLOc"))
                .body("[0].'dbsnp'.'alleles'.size()", equalTo(1))
                .body("[0].'dbsnp'.'alleles'[0]", nullValue())
                .body("[0].'dbsnp'.'alt'", containsString("T"))
                .body("[0].'dbsnp'.'chrom'", containsString("17"))
                .body("[0].'dbsnp'.'dbsnpBuild'", numberMatches(156.0))
                .body("[0].'dbsnp'.'flags'.size()", equalTo(1))
                .body("[0].'dbsnp'.'flags'[0]", nullValue())
                .body("[0].'dbsnp'.'hg19'.'start'", numberMatches(7578260.0))
                .body("[0].'dbsnp'.'hg19'.'end'", numberMatches(7578260.0))
                .body("[0].'dbsnp'.'ref'", containsString("C"))
                .body("[0].'dbsnp'.'rsid'", containsString("rs786204041"))
                .body("[0].'dbsnp'.'vartype'", containsString("snv"))
                .body("[0].'cosmic'.'license'", containsString("http://bit.ly/2VMkY7R"))
                .body("[0].'cosmic'.'alt'", containsString("A"))
                .body("[0].'cosmic'.'chrom'", containsString("17"))
                .body("[0].'cosmic'.'cosmicId'", containsString("COSM43779"))
                .body("[0].'cosmic'.'hg19'.'start'", numberMatches(7578260.0))
                .body("[0].'cosmic'.'hg19'.'end'", numberMatches(7578260.0))
                .body("[0].'cosmic'.'mutFreq'", numberMatches(0.04))
                .body("[0].'cosmic'.'mutNt'", containsString("G>A"))
                .body("[0].'cosmic'.'ref'", containsString("G"))
                .body("[0].'cosmic'.'tumorSite'", containsString("large_intestine"))
                .body("[0].'clinVar'.'license'", containsString("http://bit.ly/2SQdcI0"))
                .body("[0].'clinVar'.'alleleId'", numberMatches(186277.0))
                .body("[0].'clinVar'.'alt'", containsString("T"))
                .body("[0].'clinVar'.'chrom'", containsString("17"))
                .body("[0].'clinVar'.'cytogenic'", containsString("17p13.1"))
                .body("[0].'clinVar'.'gene'.'symbol'", containsString("TP53"))
                .body("[0].'clinVar'.'hg19'.'start'", numberMatches(7578260.0))
                .body("[0].'clinVar'.'hg19'.'end'", numberMatches(7578260.0))
                .body("[0].'clinVar'.'hg38'.'start'", containsString("7674942"))
                .body("[0].'clinVar'.'hg38'.'end'", containsString("7674942"))
                .body("[0].'clinVar'.'hgvs'.'coding'.size()", equalTo(16))
                .body("[0].'clinVar'.'hgvs'.'coding'", hasItems("LRG_321t1:c.589G>A", "NM_000546.6:c.589G>A", "NM_001126112.3:c.589G>A", "NM_001126113.3:c.589G>A", "NM_001126114.3:c.589G>A", "NM_001126115.2:c.193G>A", "NM_001126116.2:c.193G>A", "NM_001126117.2:c.193G>A", "NM_001126118.2:c.472G>A", "NM_001276695.3:c.472G>A", "NM_001276696.3:c.472G>A", "NM_001276697.3:c.112G>A", "NM_001276698.3:c.112G>A", "NM_001276699.3:c.112G>A", "NM_001276760.3:c.472G>A", "NM_001276761.3:c.472G>A"))
                .body("[0].'clinVar'.'hgvs'.'genomic'.size()", equalTo(4))
                .body("[0].'clinVar'.'hgvs'.'genomic'", hasItems("LRG_321:g.17609G>A", "NC_000017.10:g.7578260C>T", "NC_000017.11:g.7674942C>T", "NG_017013.2:g.17609G>A"))
                .body("[0].'clinVar'.'hgvs'.'protein'.size()", equalTo(18))
                .body("[0].'clinVar'.'hgvs'.'protein'", hasItems("LRG_321p1:p.Val197Met", "NP_000537.3:p.Val197Met", "NP_000537.3:p.Val197Met", "NP_001119584.1:p.Val197Met", "NP_001119585.1:p.Val197Met", "NP_001119586.1:p.Val197Met", "NP_001119587.1:p.Val65Met", "NP_001119588.1:p.Val65Met", "NP_001119589.1:p.Val65Met", "NP_001119590.1:p.Val158Met", "NP_001263624.1:p.Val158Met", "NP_001263625.1:p.Val158Met", "NP_001263626.1:p.Val38Met", "NP_001263627.1:p.Val38Met", "NP_001263628.1:p.Val38Met", "NP_001263689.1:p.Val158Met", "NP_001263690.1:p.Val158Met", "P04637:p.Val197Met"))
                .body("[0].'clinVar'.'rcv'.size()", equalTo(3))
                .body("[0].'clinVar'.'rcv'[0].'accession'", containsString("RCV000167874"))
                .body("[0].'clinVar'.'rcv'[0].'clinicalSignificance'", containsString("Uncertain significance"))
                .body("[0].'clinVar'.'rcv'[0].'origin'", containsString("germline"))
                .body("[0].'clinVar'.'rcv'[0].'preferredName'", containsString("NM_000546.6(TP53):c.589G>A (p.Val197Met)"))
                .body("[0].'clinVar'.'rcv'[1].'accession'", containsString("RCV001024656"))
                .body("[0].'clinVar'.'rcv'[1].'clinicalSignificance'", containsString("Uncertain significance"))
                .body("[0].'clinVar'.'rcv'[1].'origin'", containsString("germline"))
                .body("[0].'clinVar'.'rcv'[1].'preferredName'", containsString("NM_000546.6(TP53):c.589G>A (p.Val197Met)"))
                .body("[0].'clinVar'.'rcv'[2].'accession'", containsString("RCV002288770"))
                .body("[0].'clinVar'.'rcv'[2].'clinicalSignificance'", containsString("Uncertain significance"))
                .body("[0].'clinVar'.'rcv'[2].'origin'", containsString("germline"))
                .body("[0].'clinVar'.'rcv'[2].'preferredName'", containsString("NM_000546.6(TP53):c.589G>A (p.Val197Met)"))
                .body("[0].'clinVar'.'variantId'", numberMatches(188060.0))
                .body("[0].'mutdb'.'ref'", containsString("G"))
                .body("[0].'mutdb'.'alt'", containsString("A"))
                .body("[0].'mutdb'.'uniprotId'", containsString("VAR_045013"))
                .body("[0].'mutdb'.'mutpredScore'", numberMatches(0.861))
                .body("[0].'mutdb'.'cosmicId'", containsString("43779"))
                .body("[0].'mutdb'.'chrom'", containsString("17"))
                .body("[0].'mutdb'.'hg19'.'start'", numberMatches(7578260.0))
                .body("[0].'mutdb'.'hg19'.'end'", numberMatches(7578260.0))
                .body("[0].'gnomadExome'.'alleleCount'.'ac'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleCount'.'ac_afr'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleCount'.'ac_amr'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleCount'.'ac_asj'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleCount'.'ac_eas'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleCount'.'ac_fin'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleCount'.'ac_nfe'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleCount'.'ac_oth'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleCount'.'ac_sas'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleNumber'.'an'", numberMatches(251486.0))
                .body("[0].'gnomadExome'.'alleleNumber'.'an_afr'", numberMatches(16256.0))
                .body("[0].'gnomadExome'.'alleleNumber'.'an_amr'", numberMatches(34592.0))
                .body("[0].'gnomadExome'.'alleleNumber'.'an_asj'", numberMatches(10080.0))
                .body("[0].'gnomadExome'.'alleleNumber'.'an_eas'", numberMatches(18394.0))
                .body("[0].'gnomadExome'.'alleleNumber'.'an_fin'", numberMatches(21648.0))
                .body("[0].'gnomadExome'.'alleleNumber'.'an_nfe'", numberMatches(113762.0))
                .body("[0].'gnomadExome'.'alleleNumber'.'an_oth'", numberMatches(6140.0))
                .body("[0].'gnomadExome'.'alleleNumber'.'an_sas'", numberMatches(30614.0))
                .body("[0].'gnomadExome'.'alleleFrequency'.'af'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleFrequency'.'af_afr'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleFrequency'.'af_amr'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleFrequency'.'af_asj'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleFrequency'.'af_eas'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleFrequency'.'af_fin'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleFrequency'.'af_nfe'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleFrequency'.'af_oth'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'alleleFrequency'.'af_sas'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'homozygotes'.'hom'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'homozygotes'.'hom_afr'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'homozygotes'.'hom_amr'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'homozygotes'.'hom_asj'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'homozygotes'.'hom_eas'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'homozygotes'.'hom_fin'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'homozygotes'.'hom_nfe'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'homozygotes'.'hom_oth'", numberMatches(0.0))
                .body("[0].'gnomadExome'.'homozygotes'.'hom_sas'", numberMatches(0.0))
                .body("[1].'variant'", containsString("chr17:g.7578262C>A"))
                .body("[1].'query'", containsString("chr17:g.7578262C>A"))
                .body("[1].'hgvs'", containsString("chr17:g.7578262C>A"))
                .body("[1].'snpeff'.'license'", containsString("http://bit.ly/2suyRKt"))
                .body("[1].'vcf'.'alt'", containsString("A"))
                .body("[1].'vcf'.'position'", containsString("7578262"))
                .body("[1].'vcf'.'ref'", containsString("C"))
                .body("[1].'dbsnp'.'license'", containsString("http://bit.ly/2AqoLOc"))
                .body("[1].'dbsnp'.'alleles'.size()", equalTo(2))
                .body("[1].'dbsnp'.'alleles'[0].'allele'", containsString("C"))
                .body("[1].'dbsnp'.'alleles'[1].'allele'", containsString("T"))
                .body("[1].'dbsnp'.'alt'", containsString("A"))
                .body("[1].'dbsnp'.'chrom'", containsString("17"))
                .body("[1].'dbsnp'.'dbsnpBuild'", numberMatches(156.0))
                .body("[1].'dbsnp'.'flags'.size()", equalTo(1))
                .body("[1].'dbsnp'.'flags'[0]", nullValue())
                .body("[1].'dbsnp'.'hg19'.'start'", numberMatches(7578262.0))
                .body("[1].'dbsnp'.'hg19'.'end'", numberMatches(7578262.0))
                .body("[1].'dbsnp'.'ref'", containsString("C"))
                .body("[1].'dbsnp'.'rsid'", containsString("rs483352697"))
                .body("[1].'dbsnp'.'vartype'", containsString("snv"))
                .body("[1].'cosmic'.'license'", containsString("http://bit.ly/2VMkY7R"))
                .body("[1].'cosmic'.'alt'", containsString("T"))
                .body("[1].'cosmic'.'chrom'", containsString("17"))
                .body("[1].'cosmic'.'cosmicId'", containsString("COSM45444"))
                .body("[1].'cosmic'.'hg19'.'start'", numberMatches(7578262.0))
                .body("[1].'cosmic'.'hg19'.'end'", numberMatches(7578262.0))
                .body("[1].'cosmic'.'mutFreq'", numberMatches(0.04))
                .body("[1].'cosmic'.'mutNt'", containsString("G>T"))
                .body("[1].'cosmic'.'ref'", containsString("G"))
                .body("[1].'cosmic'.'tumorSite'", containsString("skin"))
                .body("[1].'clinVar'.'license'", containsString("http://bit.ly/2SQdcI0"))
                .body("[1].'clinVar'.'alleleId'", numberMatches(106674.0))
                .body("[1].'clinVar'.'alt'", containsString("A"))
                .body("[1].'clinVar'.'chrom'", containsString("17"))
                .body("[1].'clinVar'.'cytogenic'", containsString("17p13.1"))
                .body("[1].'clinVar'.'gene'.'symbol'", containsString("TP53"))
                .body("[1].'clinVar'.'hg19'.'start'", numberMatches(7578262.0))
                .body("[1].'clinVar'.'hg19'.'end'", numberMatches(7578262.0))
                .body("[1].'clinVar'.'hg38'.'start'", containsString("7674944"))
                .body("[1].'clinVar'.'hg38'.'end'", containsString("7674944"))
                .body("[1].'clinVar'.'hgvs'.'coding'.size()", equalTo(16))
                .body("[1].'clinVar'.'hgvs'.'coding'", hasItems("LRG_321t1:c.587G>T", "NM_000546.6:c.587G>T", "NM_001126112.3:c.587G>T", "NM_001126113.3:c.587G>T", "NM_001126114.3:c.587G>T", "NM_001126115.2:c.191G>T", "NM_001126116.2:c.191G>T", "NM_001126117.2:c.191G>T", "NM_001126118.2:c.470G>T", "NM_001276695.3:c.470G>T", "NM_001276696.3:c.470G>T", "NM_001276697.3:c.110G>T", "NM_001276698.3:c.110G>T", "NM_001276699.3:c.110G>T", "NM_001276760.3:c.470G>T", "NM_001276761.3:c.470G>T"))
                .body("[1].'clinVar'.'hgvs'.'genomic'.size()", equalTo(4))
                .body("[1].'clinVar'.'hgvs'.'genomic'", hasItems("LRG_321:g.17607G>T", "NC_000017.10:g.7578262C>A", "NC_000017.11:g.7674944C>A", "NG_017013.2:g.17607G>T"))
                .body("[1].'clinVar'.'hgvs'.'protein'.size()", equalTo(18))
                .body("[1].'clinVar'.'hgvs'.'protein'", hasItems("LRG_321p1:p.Arg196Leu", "NP_000537.3:p.Arg196Leu", "NP_000537.3:p.Arg196Leu", "NP_001119584.1:p.Arg196Leu", "NP_001119585.1:p.Arg196Leu", "NP_001119586.1:p.Arg196Leu", "NP_001119587.1:p.Arg64Leu", "NP_001119588.1:p.Arg64Leu", "NP_001119589.1:p.Arg64Leu", "NP_001119590.1:p.Arg157Leu", "NP_001263624.1:p.Arg157Leu", "NP_001263625.1:p.Arg157Leu", "NP_001263626.1:p.Arg37Leu", "NP_001263627.1:p.Arg37Leu", "NP_001263628.1:p.Arg37Leu", "NP_001263689.1:p.Arg157Leu", "NP_001263690.1:p.Arg157Leu", "P04637:p.Arg196Leu"))
                .body("[1].'clinVar'.'rcv'.size()", equalTo(4))
                .body("[1].'clinVar'.'rcv'[0].'accession'", containsString("RCV000087172"))
                .body("[1].'clinVar'.'rcv'[0].'clinicalSignificance'", containsString("Likely pathogenic"))
                .body("[1].'clinVar'.'rcv'[0].'origin'", containsString("somatic"))
                .body("[1].'clinVar'.'rcv'[0].'preferredName'", containsString("NM_000546.6(TP53):c.587G>T (p.Arg196Leu)"))
                .body("[1].'clinVar'.'rcv'[1].'accession'", containsString("RCV001024636"))
                .body("[1].'clinVar'.'rcv'[1].'clinicalSignificance'", containsString("Uncertain significance"))
                .body("[1].'clinVar'.'rcv'[1].'origin'", containsString("germline"))
                .body("[1].'clinVar'.'rcv'[1].'preferredName'", containsString("NM_000546.6(TP53):c.587G>T (p.Arg196Leu)"))
                .body("[1].'clinVar'.'rcv'[2].'accession'", containsString("RCV001523825"))
                .body("[1].'clinVar'.'rcv'[2].'clinicalSignificance'", containsString("Likely pathogenic"))
                .body("[1].'clinVar'.'rcv'[2].'origin'", containsString("germline"))
                .body("[1].'clinVar'.'rcv'[2].'preferredName'", containsString("NM_000546.6(TP53):c.587G>T (p.Arg196Leu)"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[1].'clinVar'.'variantId'", numberMatches(100814.0))
                .body("[1].'mutdb'.'ref'", containsString("G"))
                .body("[1].'mutdb'.'alt'", containsString("T"))
                .body("[1].'mutdb'.'uniprotId'", containsString("VAR_045006"))
                .body("[1].'mutdb'.'mutpredScore'", numberMatches(0.916))
                .body("[1].'mutdb'.'cosmicId'", containsString("45444"))
                .body("[1].'mutdb'.'chrom'", containsString("17"))
                .body("[1].'mutdb'.'hg19'.'start'", numberMatches(7578262.0))
                .body("[1].'mutdb'.'hg19'.'end'", numberMatches(7578262.0))
                .body("[2].'variant'", containsString("chr17:g.7578262C>T"))
                .body("[2].'query'", containsString("chr17:g.7578262C>T"))
                .body("[2].'hgvs'", containsString("chr17:g.7578262C>T"))
                .body("[2].'snpeff'.'license'", containsString("http://bit.ly/2suyRKt"))
                .body("[2].'vcf'.'alt'", containsString("T"))
                .body("[2].'vcf'.'position'", containsString("7578262"))
                .body("[2].'vcf'.'ref'", containsString("C"))
                .body("[2].'dbsnp'.'license'", containsString("http://bit.ly/2AqoLOc"))
                .body("[2].'dbsnp'.'alleles'.size()", equalTo(2))
                .body("[2].'dbsnp'.'alleles'[0].'allele'", containsString("C"))
                .body("[2].'dbsnp'.'alleles'[1].'allele'", containsString("T"))
                .body("[2].'dbsnp'.'alt'", containsString("T"))
                .body("[2].'dbsnp'.'chrom'", containsString("17"))
                .body("[2].'dbsnp'.'dbsnpBuild'", numberMatches(156.0))
                .body("[2].'dbsnp'.'flags'.size()", equalTo(1))
                .body("[2].'dbsnp'.'flags'[0]", nullValue())
                .body("[2].'dbsnp'.'hg19'.'start'", numberMatches(7578262.0))
                .body("[2].'dbsnp'.'hg19'.'end'", numberMatches(7578262.0))
                .body("[2].'dbsnp'.'ref'", containsString("C"))
                .body("[2].'dbsnp'.'rsid'", containsString("rs483352697"))
                .body("[2].'dbsnp'.'vartype'", containsString("snv"))
                .body("[2].'cosmic'.'license'", containsString("http://bit.ly/2VMkY7R"))
                .body("[2].'cosmic'.'alt'", containsString("A"))
                .body("[2].'cosmic'.'chrom'", containsString("17"))
                .body("[2].'cosmic'.'cosmicId'", containsString("COSM44599"))
                .body("[2].'cosmic'.'hg19'.'start'", numberMatches(7578262.0))
                .body("[2].'cosmic'.'hg19'.'end'", numberMatches(7578262.0))
                .body("[2].'cosmic'.'mutFreq'", numberMatches(1.35))
                .body("[2].'cosmic'.'mutNt'", containsString("G>A"))
                .body("[2].'cosmic'.'ref'", containsString("G"))
                .body("[2].'cosmic'.'tumorSite'", containsString("thymus"))
                .body("[2].'clinVar'.'license'", containsString("http://bit.ly/2SQdcI0"))
                .body("[2].'clinVar'.'alleleId'", numberMatches(213397.0))
                .body("[2].'clinVar'.'alt'", containsString("T"))
                .body("[2].'clinVar'.'chrom'", containsString("17"))
                .body("[2].'clinVar'.'cytogenic'", containsString("17p13.1"))
                .body("[2].'clinVar'.'gene'.'symbol'", containsString("TP53"))
                .body("[2].'clinVar'.'hg19'.'start'", numberMatches(7578262.0))
                .body("[2].'clinVar'.'hg19'.'end'", numberMatches(7578262.0))
                .body("[2].'clinVar'.'hg38'.'start'", containsString("7674944"))
                .body("[2].'clinVar'.'hg38'.'end'", containsString("7674944"))
                .body("[2].'clinVar'.'hgvs'.'coding'.size()", equalTo(16))
                .body("[2].'clinVar'.'hgvs'.'coding'", hasItems("LRG_321t1:c.587G>A", "NM_000546.6:c.587G>A", "NM_001126112.3:c.587G>A", "NM_001126113.3:c.587G>A", "NM_001126114.3:c.587G>A", "NM_001126115.2:c.191G>A", "NM_001126116.2:c.191G>A", "NM_001126117.2:c.191G>A", "NM_001126118.2:c.470G>A", "NM_001276695.3:c.470G>A", "NM_001276696.3:c.470G>A", "NM_001276697.3:c.110G>A", "NM_001276698.3:c.110G>A", "NM_001276699.3:c.110G>A", "NM_001276760.3:c.470G>A", "NM_001276761.3:c.470G>A"))
                .body("[2].'clinVar'.'hgvs'.'genomic'.size()", equalTo(4))
                .body("[2].'clinVar'.'hgvs'.'genomic'", hasItems("LRG_321:g.17607G>A", "NC_000017.10:g.7578262C>T", "NC_000017.11:g.7674944C>T", "NG_017013.2:g.17607G>A"))
                .body("[2].'clinVar'.'hgvs'.'protein'.size()", equalTo(18))
                .body("[2].'clinVar'.'hgvs'.'protein'", hasItems("LRG_321p1:p.Arg196Gln", "NP_000537.3:p.Arg196Gln", "NP_000537.3:p.Arg196Gln", "NP_001119584.1:p.Arg196Gln", "NP_001119585.1:p.Arg196Gln", "NP_001119586.1:p.Arg196Gln", "NP_001119587.1:p.Arg64Gln", "NP_001119588.1:p.Arg64Gln", "NP_001119589.1:p.Arg64Gln", "NP_001119590.1:p.Arg157Gln", "NP_001263624.1:p.Arg157Gln", "NP_001263625.1:p.Arg157Gln", "NP_001263626.1:p.Arg37Gln", "NP_001263627.1:p.Arg37Gln", "NP_001263628.1:p.Arg37Gln", "NP_001263689.1:p.Arg157Gln", "NP_001263690.1:p.Arg157Gln", "P04637:p.Arg196Gln"))
                .body("[2].'clinVar'.'rcv'.size()", equalTo(5))
                .body("[2].'clinVar'.'rcv'[0].'accession'", containsString("RCV000196467"))
                .body("[2].'clinVar'.'rcv'[0].'clinicalSignificance'", containsString("Uncertain significance"))
                .body("[2].'clinVar'.'rcv'[0].'origin'", containsString("germline"))
                .body("[2].'clinVar'.'rcv'[0].'preferredName'", containsString("NM_000546.6(TP53):c.587G>A (p.Arg196Gln)"))
                .body("[2].'clinVar'.'rcv'[1].'accession'", containsString("RCV000235733"))
                .body("[2].'clinVar'.'rcv'[1].'clinicalSignificance'", containsString("Uncertain significance"))
                .body("[2].'clinVar'.'rcv'[1].'origin'", containsString("germline"))
                .body("[2].'clinVar'.'rcv'[1].'preferredName'", containsString("NM_000546.6(TP53):c.587G>A (p.Arg196Gln)"))
                .body("[2].'clinVar'.'rcv'[2].'accession'", containsString("RCV000580263"))
                .body("[2].'clinVar'.'rcv'[2].'clinicalSignificance'", containsString("Uncertain significance"))
                .body("[2].'clinVar'.'rcv'[2].'origin'", containsString("germline"))
                .body("[2].'clinVar'.'rcv'[2].'preferredName'", containsString("NM_000546.6(TP53):c.587G>A (p.Arg196Gln)"))
                // Skipping assertions on the remaining 2 elements. This limit of 3 elements can be increased in the configurations
                .body("[2].'clinVar'.'variantId'", numberMatches(216467.0))
                .body("[2].'mutdb'.'ref'", containsString("G"))
                .body("[2].'mutdb'.'alt'", containsString("A"))
                .body("[2].'mutdb'.'uniprotId'", containsString("VAR_045008"))
                .body("[2].'mutdb'.'mutpredScore'", numberMatches(0.945))
                .body("[2].'mutdb'.'cosmicId'", containsString("44599"))
                .body("[2].'mutdb'.'chrom'", containsString("17"))
                .body("[2].'mutdb'.'hg19'.'start'", numberMatches(7578262.0))
                .body("[2].'mutdb'.'hg19'.'end'", numberMatches(7578262.0))
                .body("[2].'gnomadExome'.'alleleCount'.'ac'", numberMatches(1.0))
                .body("[2].'gnomadExome'.'alleleCount'.'ac_afr'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'alleleCount'.'ac_amr'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'alleleCount'.'ac_asj'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'alleleCount'.'ac_eas'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'alleleCount'.'ac_fin'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'alleleCount'.'ac_nfe'", numberMatches(1.0))
                .body("[2].'gnomadExome'.'alleleCount'.'ac_oth'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'alleleCount'.'ac_sas'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'alleleNumber'.'an'", numberMatches(251484.0))
                .body("[2].'gnomadExome'.'alleleNumber'.'an_afr'", numberMatches(16256.0))
                .body("[2].'gnomadExome'.'alleleNumber'.'an_amr'", numberMatches(34592.0))
                .body("[2].'gnomadExome'.'alleleNumber'.'an_asj'", numberMatches(10080.0))
                .body("[2].'gnomadExome'.'alleleNumber'.'an_eas'", numberMatches(18394.0))
                .body("[2].'gnomadExome'.'alleleNumber'.'an_fin'", numberMatches(21648.0))
                .body("[2].'gnomadExome'.'alleleNumber'.'an_nfe'", numberMatches(113760.0))
                .body("[2].'gnomadExome'.'alleleNumber'.'an_oth'", numberMatches(6140.0))
                .body("[2].'gnomadExome'.'alleleNumber'.'an_sas'", numberMatches(30614.0))
                .body("[2].'gnomadExome'.'alleleFrequency'.'af'", numberMatches(3.9764E-6))
                .body("[2].'gnomadExome'.'alleleFrequency'.'af_afr'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'alleleFrequency'.'af_amr'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'alleleFrequency'.'af_asj'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'alleleFrequency'.'af_eas'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'alleleFrequency'.'af_fin'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'alleleFrequency'.'af_nfe'", numberMatches(8.79044E-6))
                .body("[2].'gnomadExome'.'alleleFrequency'.'af_oth'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'alleleFrequency'.'af_sas'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'homozygotes'.'hom'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'homozygotes'.'hom_afr'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'homozygotes'.'hom_amr'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'homozygotes'.'hom_asj'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'homozygotes'.'hom_eas'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'homozygotes'.'hom_fin'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'homozygotes'.'hom_nfe'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'homozygotes'.'hom_oth'", numberMatches(0.0))
                .body("[2].'gnomadExome'.'homozygotes'.'hom_sas'", numberMatches(0.0))
                ; // Skipping assertions on the remaining 46 elements. This limit of 3 elements can be increased in the configurations
        
    }
    
    
    @Test(timeout = 60000)
    public void test_58() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/nucleotide_context/7:g.140453136A%3ET?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'molecule'", containsString("dna"))
                .body("'seq'", containsString("CAC"))
                .body("'hgvs'", containsString("7:g.140453136A>T"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_59() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/annotation/dbsnp/rs805?" + 
                    "isoformOverrideSource=genome_nexus&" + 
                    "token=%7B%0A++++++++++++++++++++%22_EM_681_XYZ_%22%3A%22K7Xhc3mKAP_%22%0A++++++++++++++++++++%2C%0A++++++++++++++++++++%22_EM_682_XYZ_%22%3A%22UBG%22%0A++++++++++++++++++++%2C%0A++++++++++++++++++++%22_EM_683_XYZ_%22%3A%22_9hVSsGZi%22%0A++++++++++++++++++++%7D")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'variant'", containsString("rs805"))
                .body("'originalVariantQuery'", containsString("rs805"))
                .body("'assembly_name'", containsString("GRCh37"))
                .body("'seq_region_name'", containsString("22"))
                .body("'start'", numberMatches(3.4562299E7))
                .body("'end'", numberMatches(3.4562299E7))
                .body("'allele_string'", containsString("T/C"))
                .body("'strand'", numberMatches(1.0))
                .body("'most_severe_consequence'", containsString("intron_variant"))
                .body("'transcript_consequences'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'transcript_id'", containsString("ENST00000412218"))
                .body("'transcript_consequences'[0].'hgvsc'", containsString("ENST00000412218.1:n.457+4519T>C"))
                .body("'transcript_consequences'[0].'variant_allele'", containsString("C"))
                .body("'transcript_consequences'[0].'gene_symbol'", containsString("LL22NC03-86D4.1"))
                .body("'transcript_consequences'[0].'gene_id'", containsString("ENSG00000236052"))
                .body("'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("'transcript_consequences'[0].'consequence_terms'.size()", equalTo(2))
                .body("'transcript_consequences'[0].'consequence_terms'", hasItems("intron_variant", "non_coding_transcript_variant"))
                .body("'successfully_annotated'", equalTo(true));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) res_0.extract().response().jsonPath().getJsonObject("")).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_60() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/annotation/dbsnp/rs116035550?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'variant'", containsString("rs116035550"))
                .body("'originalVariantQuery'", containsString("rs116035550"))
                .body("'assembly_name'", containsString("GRCh37"))
                .body("'seq_region_name'", containsString("11"))
                .body("'start'", numberMatches(212464.0))
                .body("'end'", numberMatches(212464.0))
                .body("'allele_string'", containsString("G/A/C"))
                .body("'strand'", numberMatches(1.0))
                .body("'most_severe_consequence'", containsString("missense_variant"))
                .body("'transcript_consequences'.size()", equalTo(46))
                .body("'transcript_consequences'[0].'exon'", containsString("6/10"))
                .body("'transcript_consequences'[0].'transcript_id'", containsString("ENST00000325207"))
                .body("'transcript_consequences'[0].'hgvsp'", containsString("ENSP00000325941.5:p.Glu340Lys"))
                .body("'transcript_consequences'[0].'hgvsc'", containsString("ENST00000325207.5:c.1018G>A"))
                .body("'transcript_consequences'[0].'variant_allele'", containsString("A"))
                .body("'transcript_consequences'[0].'codons'", containsString("Gaa/Aaa"))
                .body("'transcript_consequences'[0].'protein_id'", containsString("ENSP00000325941"))
                .body("'transcript_consequences'[0].'protein_start'", numberMatches(340.0))
                .body("'transcript_consequences'[0].'protein_end'", numberMatches(340.0))
                .body("'transcript_consequences'[0].'gene_symbol'", containsString("RIC8A"))
                .body("'transcript_consequences'[0].'gene_id'", containsString("ENSG00000177963"))
                .body("'transcript_consequences'[0].'amino_acids'", containsString("E/K"))
                .body("'transcript_consequences'[0].'hgnc_id'", containsString("29550"))
                .body("'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("'transcript_consequences'[0].'polyphen_score'", numberMatches(0.932))
                .body("'transcript_consequences'[0].'polyphen_prediction'", containsString("probably_damaging"))
                .body("'transcript_consequences'[0].'sift_score'", numberMatches(0.0))
                .body("'transcript_consequences'[0].'sift_prediction'", containsString("deleterious"))
                .body("'transcript_consequences'[0].'refseq_transcript_ids'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'refseq_transcript_ids'", hasItems("NM_021932.4"))
                .body("'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'consequence_terms'", hasItems("missense_variant"))
                .body("'transcript_consequences'[1].'exon'", containsString("6/10"))
                .body("'transcript_consequences'[1].'transcript_id'", containsString("ENST00000325207"))
                .body("'transcript_consequences'[1].'hgvsp'", containsString("ENSP00000325941.5:p.Glu340Gln"))
                .body("'transcript_consequences'[1].'hgvsc'", containsString("ENST00000325207.5:c.1018G>C"))
                .body("'transcript_consequences'[1].'variant_allele'", containsString("C"))
                .body("'transcript_consequences'[1].'codons'", containsString("Gaa/Caa"))
                .body("'transcript_consequences'[1].'protein_id'", containsString("ENSP00000325941"))
                .body("'transcript_consequences'[1].'protein_start'", numberMatches(340.0))
                .body("'transcript_consequences'[1].'protein_end'", numberMatches(340.0))
                .body("'transcript_consequences'[1].'gene_symbol'", containsString("RIC8A"))
                .body("'transcript_consequences'[1].'gene_id'", containsString("ENSG00000177963"))
                .body("'transcript_consequences'[1].'amino_acids'", containsString("E/Q"))
                .body("'transcript_consequences'[1].'hgnc_id'", containsString("29550"))
                .body("'transcript_consequences'[1].'canonical'", containsString("1"))
                .body("'transcript_consequences'[1].'polyphen_score'", numberMatches(0.969))
                .body("'transcript_consequences'[1].'polyphen_prediction'", containsString("probably_damaging"))
                .body("'transcript_consequences'[1].'sift_score'", numberMatches(0.0))
                .body("'transcript_consequences'[1].'sift_prediction'", containsString("deleterious"))
                .body("'transcript_consequences'[1].'refseq_transcript_ids'.size()", equalTo(1))
                .body("'transcript_consequences'[1].'refseq_transcript_ids'", hasItems("NM_021932.4"))
                .body("'transcript_consequences'[1].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[1].'consequence_terms'", hasItems("missense_variant"))
                .body("'transcript_consequences'[2].'transcript_id'", containsString("ENST00000382743"))
                .body("'transcript_consequences'[2].'variant_allele'", containsString("A"))
                .body("'transcript_consequences'[2].'protein_id'", containsString("ENSP00000372191"))
                .body("'transcript_consequences'[2].'gene_symbol'", containsString("SIRT3"))
                .body("'transcript_consequences'[2].'gene_id'", containsString("ENSG00000142082"))
                .body("'transcript_consequences'[2].'hgnc_id'", containsString("14931"))
                .body("'transcript_consequences'[2].'canonical'", containsString("1"))
                .body("'transcript_consequences'[2].'refseq_transcript_ids'.size()", equalTo(2))
                .body("'transcript_consequences'[2].'refseq_transcript_ids'", hasItems("NM_012239.5", "NM_001017524.2"))
                .body("'transcript_consequences'[2].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[2].'consequence_terms'", hasItems("downstream_gene_variant"))
                // Skipping assertions on the remaining 43 elements. This limit of 3 elements can be increased in the configurations
                .body("'successfully_annotated'", equalTo(true));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) res_0.extract().response().jsonPath().getJsonObject("")).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_61() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_679_XYZ_")
                .get(baseUrlOfSut + "/annotation/dbsnp/rs805?" + 
                    "isoformOverrideSource=ensembl&" + 
                    "token=%7B%0A++++++++++++++++++++%22_EM_681_XYZ_%22%3A%22K7Xhc3mKAP_%22%0A++++++++++++++++++++%2C%0A++++++++++++++++++++%22_EM_682_XYZ_%22%3A%22UBG%22%0A++++++++++++++++++++%2C%0A++++++++++++++++++++%22_EM_683_XYZ_%22%3A%22_9hVSsGZi%22%0A++++++++++++++++++++%7D&" + 
                    "fields=_EM_3919_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'variant'", containsString("rs805"))
                .body("'originalVariantQuery'", containsString("rs805"))
                .body("'assembly_name'", containsString("GRCh37"))
                .body("'seq_region_name'", containsString("22"))
                .body("'start'", numberMatches(3.4562299E7))
                .body("'end'", numberMatches(3.4562299E7))
                .body("'allele_string'", containsString("T/C"))
                .body("'strand'", numberMatches(1.0))
                .body("'most_severe_consequence'", containsString("intron_variant"))
                .body("'transcript_consequences'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'transcript_id'", containsString("ENST00000412218"))
                .body("'transcript_consequences'[0].'hgvsc'", containsString("ENST00000412218.1:n.457+4519T>C"))
                .body("'transcript_consequences'[0].'variant_allele'", containsString("C"))
                .body("'transcript_consequences'[0].'gene_symbol'", containsString("LL22NC03-86D4.1"))
                .body("'transcript_consequences'[0].'gene_id'", containsString("ENSG00000236052"))
                .body("'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("'transcript_consequences'[0].'consequence_terms'.size()", equalTo(2))
                .body("'transcript_consequences'[0].'consequence_terms'", hasItems("intron_variant", "non_coding_transcript_variant"))
                .body("'successfully_annotated'", equalTo(true));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) res_0.extract().response().jsonPath().getJsonObject("")).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_62() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/annotation/MT:g.10360G%3EA?" + 
                    "isoformOverrideSource=foo&" + 
                    "token=foo&" + 
                    "fields=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'variant'", containsString("MT:g.10360G>A"))
                .body("'originalVariantQuery'", containsString("MT:g.10360G>A"))
                .body("'hgvsg'", containsString("MT:g.10360G>A"))
                .body("'assembly_name'", containsString("GRCh37"))
                .body("'seq_region_name'", containsString("MT"))
                .body("'start'", numberMatches(10360.0))
                .body("'end'", numberMatches(10360.0))
                .body("'allele_string'", containsString("G/A"))
                .body("'strand'", numberMatches(1.0))
                .body("'most_severe_consequence'", containsString("missense_variant"))
                .body("'transcript_consequences'.size()", equalTo(26))
                .body("'transcript_consequences'[0].'exon'", containsString("1/1"))
                .body("'transcript_consequences'[0].'transcript_id'", containsString("ENST00000361227"))
                .body("'transcript_consequences'[0].'hgvsp'", containsString("ENSP00000355206.2:p.Ser101Asn"))
                .body("'transcript_consequences'[0].'hgvsc'", containsString("ENST00000361227.2:c.302G>A"))
                .body("'transcript_consequences'[0].'variant_allele'", containsString("A"))
                .body("'transcript_consequences'[0].'codons'", containsString("aGt/aAt"))
                .body("'transcript_consequences'[0].'protein_id'", containsString("ENSP00000355206"))
                .body("'transcript_consequences'[0].'protein_start'", numberMatches(101.0))
                .body("'transcript_consequences'[0].'protein_end'", numberMatches(101.0))
                .body("'transcript_consequences'[0].'gene_symbol'", containsString("MT-ND3"))
                .body("'transcript_consequences'[0].'gene_id'", containsString("ENSG00000198840"))
                .body("'transcript_consequences'[0].'amino_acids'", containsString("S/N"))
                .body("'transcript_consequences'[0].'hgnc_id'", containsString("7458"))
                .body("'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("'transcript_consequences'[0].'polyphen_score'", numberMatches(0.569))
                .body("'transcript_consequences'[0].'polyphen_prediction'", containsString("possibly_damaging"))
                .body("'transcript_consequences'[0].'sift_score'", numberMatches(0.0))
                .body("'transcript_consequences'[0].'sift_prediction'", containsString("deleterious_low_confidence"))
                .body("'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'consequence_terms'", hasItems("missense_variant"))
                .body("'transcript_consequences'[1].'transcript_id'", containsString("ENST00000361335"))
                .body("'transcript_consequences'[1].'variant_allele'", containsString("A"))
                .body("'transcript_consequences'[1].'protein_id'", containsString("ENSP00000354728"))
                .body("'transcript_consequences'[1].'gene_symbol'", containsString("MT-ND4L"))
                .body("'transcript_consequences'[1].'gene_id'", containsString("ENSG00000212907"))
                .body("'transcript_consequences'[1].'hgnc_id'", containsString("7460"))
                .body("'transcript_consequences'[1].'canonical'", containsString("1"))
                .body("'transcript_consequences'[1].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[1].'consequence_terms'", hasItems("upstream_gene_variant"))
                .body("'transcript_consequences'[2].'transcript_id'", containsString("ENST00000361381"))
                .body("'transcript_consequences'[2].'variant_allele'", containsString("A"))
                .body("'transcript_consequences'[2].'protein_id'", containsString("ENSP00000354961"))
                .body("'transcript_consequences'[2].'gene_symbol'", containsString("MT-ND4"))
                .body("'transcript_consequences'[2].'gene_id'", containsString("ENSG00000198886"))
                .body("'transcript_consequences'[2].'hgnc_id'", containsString("7459"))
                .body("'transcript_consequences'[2].'canonical'", containsString("1"))
                .body("'transcript_consequences'[2].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[2].'consequence_terms'", hasItems("upstream_gene_variant"))
                // Skipping assertions on the remaining 23 elements. This limit of 3 elements can be increased in the configurations
                .body("'successfully_annotated'", equalTo(true));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) res_0.extract().response().jsonPath().getJsonObject("")).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_63() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_679_XYZ_")
                .get(baseUrlOfSut + "/annotation/dbsnp/rs996?" + 
                    "isoformOverrideSource=y&" + 
                    "token=C5&" + 
                    "fields=_EM_1986_XYZ_&" + 
                    "EMextraParam123=_EM_678_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'variant'", containsString("rs996"))
                .body("'originalVariantQuery'", containsString("rs996"))
                .body("'assembly_name'", containsString("GRCh37"))
                .body("'seq_region_name'", containsString("6"))
                .body("'start'", numberMatches(3.2154033E7))
                .body("'end'", numberMatches(3.2154033E7))
                .body("'allele_string'", containsString("G/C"))
                .body("'strand'", numberMatches(1.0))
                .body("'most_severe_consequence'", containsString("3_prime_UTR_variant"))
                .body("'transcript_consequences'.size()", equalTo(25))
                .body("'transcript_consequences'[0].'transcript_id'", containsString("ENST00000375040"))
                .body("'transcript_consequences'[0].'variant_allele'", containsString("C"))
                .body("'transcript_consequences'[0].'protein_id'", containsString("ENSP00000364180"))
                .body("'transcript_consequences'[0].'gene_symbol'", containsString("GPSM3"))
                .body("'transcript_consequences'[0].'gene_id'", containsString("ENSG00000213654"))
                .body("'transcript_consequences'[0].'hgnc_id'", containsString("13945"))
                .body("'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("'transcript_consequences'[0].'refseq_transcript_ids'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'refseq_transcript_ids'", hasItems("NM_001276501.1"))
                .body("'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'consequence_terms'", hasItems("downstream_gene_variant"))
                .body("'transcript_consequences'[1].'transcript_id'", containsString("ENST00000375043"))
                .body("'transcript_consequences'[1].'variant_allele'", containsString("C"))
                .body("'transcript_consequences'[1].'protein_id'", containsString("ENSP00000364183"))
                .body("'transcript_consequences'[1].'gene_symbol'", containsString("GPSM3"))
                .body("'transcript_consequences'[1].'gene_id'", containsString("ENSG00000213654"))
                .body("'transcript_consequences'[1].'hgnc_id'", containsString("13945"))
                .body("'transcript_consequences'[1].'refseq_transcript_ids'.size()", equalTo(1))
                .body("'transcript_consequences'[1].'refseq_transcript_ids'", hasItems("NM_022107.1"))
                .body("'transcript_consequences'[1].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[1].'consequence_terms'", hasItems("downstream_gene_variant"))
                .body("'transcript_consequences'[2].'exon'", containsString("9/9"))
                .body("'transcript_consequences'[2].'transcript_id'", containsString("ENST00000375050"))
                .body("'transcript_consequences'[2].'hgvsc'", containsString("ENST00000375050.4:c.*126C>G"))
                .body("'transcript_consequences'[2].'variant_allele'", containsString("C"))
                .body("'transcript_consequences'[2].'protein_id'", containsString("ENSP00000364190"))
                .body("'transcript_consequences'[2].'gene_symbol'", containsString("PBX2"))
                .body("'transcript_consequences'[2].'gene_id'", containsString("ENSG00000204304"))
                .body("'transcript_consequences'[2].'hgnc_id'", containsString("8633"))
                .body("'transcript_consequences'[2].'canonical'", containsString("1"))
                .body("'transcript_consequences'[2].'refseq_transcript_ids'.size()", equalTo(1))
                .body("'transcript_consequences'[2].'refseq_transcript_ids'", hasItems("NM_002586.4"))
                .body("'transcript_consequences'[2].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[2].'consequence_terms'", hasItems("3_prime_UTR_variant"))
                // Skipping assertions on the remaining 22 elements. This limit of 3 elements can be increased in the configurations
                .body("'successfully_annotated'", equalTo(true));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) res_0.extract().response().jsonPath().getJsonObject("")).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_64() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " \"MT:g.10360G\u003eA\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'variant'", containsString("MT:g.10360G>A"))
                .body("[0].'originalVariantQuery'", containsString("MT:g.10360G>A"))
                .body("[0].'hgvsg'", containsString("MT:g.10360G>A"))
                .body("[0].'assembly_name'", containsString("GRCh37"))
                .body("[0].'seq_region_name'", containsString("MT"))
                .body("[0].'start'", numberMatches(10360.0))
                .body("[0].'end'", numberMatches(10360.0))
                .body("[0].'allele_string'", containsString("G/A"))
                .body("[0].'strand'", numberMatches(1.0))
                .body("[0].'most_severe_consequence'", containsString("missense_variant"))
                .body("[0].'transcript_consequences'.size()", equalTo(26))
                .body("[0].'transcript_consequences'[0].'exon'", containsString("1/1"))
                .body("[0].'transcript_consequences'[0].'transcript_id'", containsString("ENST00000361227"))
                .body("[0].'transcript_consequences'[0].'hgvsp'", containsString("ENSP00000355206.2:p.Ser101Asn"))
                .body("[0].'transcript_consequences'[0].'hgvsc'", containsString("ENST00000361227.2:c.302G>A"))
                .body("[0].'transcript_consequences'[0].'variant_allele'", containsString("A"))
                .body("[0].'transcript_consequences'[0].'codons'", containsString("aGt/aAt"))
                .body("[0].'transcript_consequences'[0].'protein_id'", containsString("ENSP00000355206"))
                .body("[0].'transcript_consequences'[0].'protein_start'", numberMatches(101.0))
                .body("[0].'transcript_consequences'[0].'protein_end'", numberMatches(101.0))
                .body("[0].'transcript_consequences'[0].'gene_symbol'", containsString("MT-ND3"))
                .body("[0].'transcript_consequences'[0].'gene_id'", containsString("ENSG00000198840"))
                .body("[0].'transcript_consequences'[0].'amino_acids'", containsString("S/N"))
                .body("[0].'transcript_consequences'[0].'hgnc_id'", containsString("7458"))
                .body("[0].'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("[0].'transcript_consequences'[0].'polyphen_score'", numberMatches(0.569))
                .body("[0].'transcript_consequences'[0].'polyphen_prediction'", containsString("possibly_damaging"))
                .body("[0].'transcript_consequences'[0].'sift_score'", numberMatches(0.0))
                .body("[0].'transcript_consequences'[0].'sift_prediction'", containsString("deleterious_low_confidence"))
                .body("[0].'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[0].'consequence_terms'", hasItems("missense_variant"))
                .body("[0].'transcript_consequences'[1].'transcript_id'", containsString("ENST00000361335"))
                .body("[0].'transcript_consequences'[1].'variant_allele'", containsString("A"))
                .body("[0].'transcript_consequences'[1].'protein_id'", containsString("ENSP00000354728"))
                .body("[0].'transcript_consequences'[1].'gene_symbol'", containsString("MT-ND4L"))
                .body("[0].'transcript_consequences'[1].'gene_id'", containsString("ENSG00000212907"))
                .body("[0].'transcript_consequences'[1].'hgnc_id'", containsString("7460"))
                .body("[0].'transcript_consequences'[1].'canonical'", containsString("1"))
                .body("[0].'transcript_consequences'[1].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[1].'consequence_terms'", hasItems("upstream_gene_variant"))
                .body("[0].'transcript_consequences'[2].'transcript_id'", containsString("ENST00000361381"))
                .body("[0].'transcript_consequences'[2].'variant_allele'", containsString("A"))
                .body("[0].'transcript_consequences'[2].'protein_id'", containsString("ENSP00000354961"))
                .body("[0].'transcript_consequences'[2].'gene_symbol'", containsString("MT-ND4"))
                .body("[0].'transcript_consequences'[2].'gene_id'", containsString("ENSG00000198886"))
                .body("[0].'transcript_consequences'[2].'hgnc_id'", containsString("7459"))
                .body("[0].'transcript_consequences'[2].'canonical'", containsString("1"))
                .body("[0].'transcript_consequences'[2].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[2].'consequence_terms'", hasItems("upstream_gene_variant"))
                // Skipping assertions on the remaining 23 elements. This limit of 3 elements can be increased in the configurations
                .body("[0].'successfully_annotated'", equalTo(true));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_65() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"_EM_10788_XYZ_\", " + 
                    " \"start\": 365, " + 
                    " \"end\": 890, " + 
                    " \"referenceAllele\": \"_EM_10789_XYZ_\", " + 
                    " \"variantAllele\": \"_EM_10790_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"_EM_10791_XYZ_\", " + 
                    " \"start\": 913, " + 
                    " \"end\": 998, " + 
                    " \"referenceAllele\": \"\", " + 
                    " \"variantAllele\": \"_EM_10792_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"_EM_10793_XYZ_\", " + 
                    " \"start\": 157, " + 
                    " \"end\": 78, " + 
                    " \"referenceAllele\": \"_EM_10794_XYZ_\", " + 
                    " \"variantAllele\": \"_EM_10795_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"_EM_10796_XYZ_\", " + 
                    " \"start\": 911, " + 
                    " \"end\": 876, " + 
                    " \"referenceAllele\": \"_EM_10797_XYZ_\", " + 
                    " \"variantAllele\": \"_EM_10798_XYZ_\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/cancer_hotspots/genomic")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(4))
                .body("[0].'genomicLocation'.'chromosome'", containsString("_EM_10788_XYZ_"))
                .body("[0].'genomicLocation'.'start'", numberMatches(365.0))
                .body("[0].'genomicLocation'.'end'", numberMatches(890.0))
                .body("[0].'genomicLocation'.'referenceAllele'", containsString("_EM_10789_XYZ_"))
                .body("[0].'genomicLocation'.'variantAllele'", containsString("_EM_10790_XYZ_"))
                .body("[0].'variant'", containsString("_EM_10788_XYZ_:g.372_890delins90_XYZ_"))
                .body("[0].'hotspots'.size()", equalTo(0))
                .body("[1].'genomicLocation'.'chromosome'", containsString("_EM_10791_XYZ_"))
                .body("[1].'genomicLocation'.'start'", numberMatches(913.0))
                .body("[1].'genomicLocation'.'end'", numberMatches(998.0))
                .body("[1].'genomicLocation'.'referenceAllele'", containsString(""))
                .body("[1].'genomicLocation'.'variantAllele'", containsString("_EM_10792_XYZ_"))
                .body("[1].'variant'", containsString("_EM_10791_XYZ_:g.913_914ins_EM_10792_XYZ_"))
                .body("[1].'hotspots'.size()", equalTo(0))
                .body("[2].'genomicLocation'.'chromosome'", containsString("_EM_10793_XYZ_"))
                .body("[2].'genomicLocation'.'start'", numberMatches(157.0))
                .body("[2].'genomicLocation'.'end'", numberMatches(78.0))
                .body("[2].'genomicLocation'.'referenceAllele'", containsString("_EM_10794_XYZ_"))
                .body("[2].'genomicLocation'.'variantAllele'", containsString("_EM_10795_XYZ_"))
                .body("[2].'variant'", containsString("_EM_10793_XYZ_:g.165_78delins5_XYZ_"))
                .body("[2].'hotspots'.size()", equalTo(0))
                ; // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
        
    }
    
    
    @Test(timeout = 60000)
    public void test_66() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " \"rs3\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/dbsnp/?" + 
                    "isoformOverrideSource=mskcc&" + 
                    "token=%7B%7D&" + 
                    "fields=2IVOdWtGbt2J3D&fields=cu2AHT4bzitT&fields=_EM_215_XYZ_&fields=_EM_216_XYZ_&fields=_EM_2959_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'variant'", containsString("rs3"))
                .body("[0].'originalVariantQuery'", containsString("rs3"))
                .body("[0].'assembly_name'", containsString("GRCh37"))
                .body("[0].'seq_region_name'", containsString("13"))
                .body("[0].'start'", numberMatches(3.2446842E7))
                .body("[0].'end'", numberMatches(3.2446842E7))
                .body("[0].'allele_string'", containsString("C/T"))
                .body("[0].'strand'", numberMatches(1.0))
                .body("[0].'most_severe_consequence'", containsString("intron_variant"))
                .body("[0].'transcript_consequences'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[0].'transcript_id'", containsString("ENST00000428783"))
                .body("[0].'transcript_consequences'[0].'hgvsc'", containsString("ENST00000428783.1:n.99+25766C>T"))
                .body("[0].'transcript_consequences'[0].'variant_allele'", containsString("T"))
                .body("[0].'transcript_consequences'[0].'gene_symbol'", containsString("EEF1DP3"))
                .body("[0].'transcript_consequences'[0].'gene_id'", containsString("ENSG00000229715"))
                .body("[0].'transcript_consequences'[0].'hgnc_id'", containsString("30486"))
                .body("[0].'transcript_consequences'[0].'consequence_terms'.size()", equalTo(2))
                .body("[0].'transcript_consequences'[0].'consequence_terms'", hasItems("intron_variant", "non_coding_transcript_variant"))
                .body("[0].'successfully_annotated'", equalTo(true));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_67() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"X7ILwW1v\", " + 
                    " \"start\": 2811, " + 
                    " \"end\": -131064, " + 
                    " \"referenceAllele\": \"NA\", " + 
                    " \"variantAllele\": \"Xh2_\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"_EM_120_XYZ_\", " + 
                    " \"start\": 857, " + 
                    " \"end\": 897, " + 
                    " \"referenceAllele\": \"_EM_121_XYZ_\", " + 
                    " \"variantAllele\": \"_EM_3716_XYZ_\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/genomic?" + 
                    "isoformOverrideSource=Ib68bW%7E&" + 
                    "token=_EM_115_XYZ_&" + 
                    "fields=wppV&fields=_EM_3966_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'variant'", containsString("X7ILwW1v:g.2811_2812insXh2_"))
                .body("[0].'originalVariantQuery'", containsString("X7ILwW1v,2811,-131064,NA,Xh2_"))
                .body("[0].'successfully_annotated'", equalTo(false))
                .body("[1].'variant'", containsString("_EM_120_XYZ_:g.861_897delins3716_XYZ_"))
                .body("[1].'originalVariantQuery'", containsString("_EM_120_XYZ_,857,897,_EM_121_XYZ_,_EM_3716_XYZ_"))
                .body("[1].'successfully_annotated'", equalTo(false));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(1)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_68() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"7\", " + 
                    " \"start\": 140453136, " + 
                    " \"end\": -127982320, " + 
                    " \"referenceAllele\": \"_EM_488_XYZ_\", " + 
                    " \"variantAllele\": \"T\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/genomic?" + 
                    "fields=annotation_summary&fields=nucleotide_context&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'variant'", containsString("7:g.140453136_-127982320delinsT"))
                .body("[0].'originalVariantQuery'", containsString("7,140453136,-127982320,_EM_488_XYZ_,T"))
                .body("[0].'successfully_annotated'", equalTo(false));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_69() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/cancer_hotspots/genomic/19,10267171,10267171,T,C?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_70() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " \"7:g.140453136A\u003eT\", " + 
                    " \"12:g.25398285C\u003eA\", " + 
                    " \"17:g.41242962_41242963insGA\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/nucleotide_context?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'molecule'", containsString("dna"))
                .body("[0].'seq'", containsString("CAC"))
                .body("[0].'hgvs'", containsString("7:g.140453136A>T"))
                .body("[1].'molecule'", containsString("dna"))
                .body("[1].'seq'", containsString("CCA"))
                .body("[1].'hgvs'", containsString("12:g.25398285C>A"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_71() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"_EM_492_XYZ_\", " + 
                    " \"start\": 25400332, " + 
                    " \"end\": 58952716, " + 
                    " \"referenceAllele\": \"C\", " + 
                    " \"variantAllele\": \"A\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"_EM_493_XYZ_\", " + 
                    " \"start\": 25398279, " + 
                    " \"end\": 25398348, " + 
                    " \"referenceAllele\": \"_EM_494_XYZ_\", " + 
                    " \"variantAllele\": \"AA\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/genomic?fields=annotation_summary&fields=nucleotide_context")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'variant'", containsString("_EM_492_XYZ_:g.25400332C>A"))
                .body("[0].'originalVariantQuery'", containsString("_EM_492_XYZ_,25400332,58952716,C,A"))
                .body("[0].'successfully_annotated'", equalTo(false))
                .body("[1].'variant'", containsString("_EM_493_XYZ_:g.25398279_25398348delinsAA"))
                .body("[1].'originalVariantQuery'", containsString("_EM_493_XYZ_,25398279,25398348,_EM_494_XYZ_,AA"))
                .body("[1].'successfully_annotated'", equalTo(false));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(1)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_72() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"7\", " + 
                    " \"start\": 55242466, " + 
                    " \"end\": 55242480, " + 
                    " \"referenceAllele\": \"GAATTAAGAGAAGCA\", " + 
                    " \"variantAllele\": \"-\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"7\", " + 
                    " \"start\": 55249002, " + 
                    " \"end\": 55249003, " + 
                    " \"referenceAllele\": \"-\", " + 
                    " \"variantAllele\": \"CAGCGTGGA\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/cancer_hotspots/genomic?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'genomicLocation'.'chromosome'", containsString("7"))
                .body("[0].'genomicLocation'.'start'", numberMatches(5.5242466E7))
                .body("[0].'genomicLocation'.'end'", numberMatches(5.524248E7))
                .body("[0].'genomicLocation'.'referenceAllele'", containsString("GAATTAAGAGAAGCA"))
                .body("[0].'genomicLocation'.'variantAllele'", containsString("-"))
                .body("[0].'variant'", containsString("7:g.55242466_55242480del"))
                .body("[0].'hotspots'.size()", equalTo(0))
                .body("[1].'genomicLocation'.'chromosome'", containsString("7"))
                .body("[1].'genomicLocation'.'start'", numberMatches(5.5249002E7))
                .body("[1].'genomicLocation'.'end'", numberMatches(5.5249003E7))
                .body("[1].'genomicLocation'.'referenceAllele'", containsString("-"))
                .body("[1].'genomicLocation'.'variantAllele'", containsString("CAGCGTGGA"))
                .body("[1].'variant'", containsString("7:g.55249002_55249003insCAGCGTGGA"))
                .body("[1].'hotspots'.size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_73() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/annotation/summary/9:g.21994291C%3ET?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'variant'", containsString("9:g.21994291C>T"))
                .body("'genomicLocation'.'chromosome'", containsString("9"))
                .body("'genomicLocation'.'start'", numberMatches(2.1994291E7))
                .body("'genomicLocation'.'end'", numberMatches(2.1994291E7))
                .body("'genomicLocation'.'referenceAllele'", containsString("C"))
                .body("'genomicLocation'.'variantAllele'", containsString("T"))
                .body("'strandSign'", containsString("+"))
                .body("'variantType'", containsString("SNP"))
                .body("'assemblyName'", containsString("GRCh37"))
                .body("'canonicalTranscriptId'", containsString("ENST00000428597"))
                .body("'transcriptConsequences'.size()", equalTo(23))
                .body("'transcriptConsequences'[0].'transcriptId'", containsString("ENST00000361570"))
                .body("'transcriptConsequences'[0].'codonChange'", containsString("Gcg/Acg"))
                .body("'transcriptConsequences'[0].'aminoAcids'", containsString("A/T"))
                .body("'transcriptConsequences'[0].'aminoAcidRef'", containsString("A"))
                .body("'transcriptConsequences'[0].'aminoAcidAlt'", containsString("T"))
                .body("'transcriptConsequences'[0].'consequenceTerms'", containsString("missense_variant"))
                .body("'transcriptConsequences'[0].'hugoGeneSymbol'", containsString("CDKN2A"))
                .body("'transcriptConsequences'[0].'hgvspShort'", containsString("p.A55T"))
                .body("'transcriptConsequences'[0].'hgvsp'", containsString("p.Ala55Thr"))
                .body("'transcriptConsequences'[0].'hgvsc'", containsString("ENST00000361570.3:c.163G>A"))
                .body("'transcriptConsequences'[0].'proteinPosition'.'start'", numberMatches(55.0))
                .body("'transcriptConsequences'[0].'proteinPosition'.'end'", numberMatches(55.0))
                .body("'transcriptConsequences'[0].'refSeq'", containsString("NM_058195.3"))
                .body("'transcriptConsequences'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("'transcriptConsequences'[0].'exon'", containsString("1/3"))
                .body("'transcriptConsequences'[0].'polyphenScore'", numberMatches(0.014))
                .body("'transcriptConsequences'[0].'polyphenPrediction'", containsString("benign"))
                .body("'transcriptConsequences'[0].'siftScore'", numberMatches(0.09))
                .body("'transcriptConsequences'[0].'siftPrediction'", containsString("tolerated_low_confidence"))
                .body("'transcriptConsequences'[1].'transcriptId'", containsString("ENST00000428597"))
                .body("'transcriptConsequences'[1].'consequenceTerms'", containsString("upstream_gene_variant"))
                .body("'transcriptConsequences'[1].'hugoGeneSymbol'", containsString("CDKN2B-AS1"))
                .body("'transcriptConsequences'[1].'variantClassification'", containsString("5'Flank"))
                .body("'transcriptConsequences'[2].'transcriptId'", containsString("ENST00000455933"))
                .body("'transcriptConsequences'[2].'consequenceTerms'", containsString("upstream_gene_variant"))
                .body("'transcriptConsequences'[2].'hugoGeneSymbol'", containsString("CDKN2B-AS1"))
                .body("'transcriptConsequences'[2].'variantClassification'", containsString("5'Flank"))
                // Skipping assertions on the remaining 20 elements. This limit of 3 elements can be increased in the configurations
                .body("'transcriptConsequenceSummaries'.size()", equalTo(23))
                .body("'transcriptConsequenceSummaries'[0].'transcriptId'", containsString("ENST00000361570"))
                .body("'transcriptConsequenceSummaries'[0].'codonChange'", containsString("Gcg/Acg"))
                .body("'transcriptConsequenceSummaries'[0].'aminoAcids'", containsString("A/T"))
                .body("'transcriptConsequenceSummaries'[0].'aminoAcidRef'", containsString("A"))
                .body("'transcriptConsequenceSummaries'[0].'aminoAcidAlt'", containsString("T"))
                .body("'transcriptConsequenceSummaries'[0].'consequenceTerms'", containsString("missense_variant"))
                .body("'transcriptConsequenceSummaries'[0].'hugoGeneSymbol'", containsString("CDKN2A"))
                .body("'transcriptConsequenceSummaries'[0].'hgvspShort'", containsString("p.A55T"))
                .body("'transcriptConsequenceSummaries'[0].'hgvsp'", containsString("p.Ala55Thr"))
                .body("'transcriptConsequenceSummaries'[0].'hgvsc'", containsString("ENST00000361570.3:c.163G>A"))
                .body("'transcriptConsequenceSummaries'[0].'proteinPosition'.'start'", numberMatches(55.0))
                .body("'transcriptConsequenceSummaries'[0].'proteinPosition'.'end'", numberMatches(55.0))
                .body("'transcriptConsequenceSummaries'[0].'refSeq'", containsString("NM_058195.3"))
                .body("'transcriptConsequenceSummaries'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("'transcriptConsequenceSummaries'[0].'exon'", containsString("1/3"))
                .body("'transcriptConsequenceSummaries'[0].'polyphenScore'", numberMatches(0.014))
                .body("'transcriptConsequenceSummaries'[0].'polyphenPrediction'", containsString("benign"))
                .body("'transcriptConsequenceSummaries'[0].'siftScore'", numberMatches(0.09))
                .body("'transcriptConsequenceSummaries'[0].'siftPrediction'", containsString("tolerated_low_confidence"))
                .body("'transcriptConsequenceSummaries'[1].'transcriptId'", containsString("ENST00000428597"))
                .body("'transcriptConsequenceSummaries'[1].'consequenceTerms'", containsString("upstream_gene_variant"))
                .body("'transcriptConsequenceSummaries'[1].'hugoGeneSymbol'", containsString("CDKN2B-AS1"))
                .body("'transcriptConsequenceSummaries'[1].'variantClassification'", containsString("5'Flank"))
                .body("'transcriptConsequenceSummaries'[2].'transcriptId'", containsString("ENST00000455933"))
                .body("'transcriptConsequenceSummaries'[2].'consequenceTerms'", containsString("upstream_gene_variant"))
                .body("'transcriptConsequenceSummaries'[2].'hugoGeneSymbol'", containsString("CDKN2B-AS1"))
                .body("'transcriptConsequenceSummaries'[2].'variantClassification'", containsString("5'Flank"))
                // Skipping assertions on the remaining 20 elements. This limit of 3 elements can be increased in the configurations
                .body("'transcriptConsequenceSummary'.'transcriptId'", containsString("ENST00000428597"))
                .body("'transcriptConsequenceSummary'.'consequenceTerms'", containsString("upstream_gene_variant"))
                .body("'transcriptConsequenceSummary'.'hugoGeneSymbol'", containsString("CDKN2B-AS1"))
                .body("'transcriptConsequenceSummary'.'variantClassification'", containsString("5'Flank"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_74() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " \"9:g.21994291C\u003eT\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/summary?" + 
                    "isoformOverrideSource=_EM_42600_XYZ_&" + 
                    "projection=CANONICAL")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'variant'", containsString("9:g.21994291C>T"))
                .body("[0].'genomicLocation'.'chromosome'", containsString("9"))
                .body("[0].'genomicLocation'.'start'", numberMatches(2.1994291E7))
                .body("[0].'genomicLocation'.'end'", numberMatches(2.1994291E7))
                .body("[0].'genomicLocation'.'referenceAllele'", containsString("C"))
                .body("[0].'genomicLocation'.'variantAllele'", containsString("T"))
                .body("[0].'strandSign'", containsString("+"))
                .body("[0].'variantType'", containsString("SNP"))
                .body("[0].'assemblyName'", containsString("GRCh37"))
                .body("[0].'canonicalTranscriptId'", containsString("ENST00000428597"))
                .body("[0].'transcriptConsequences'.size()", equalTo(1))
                .body("[0].'transcriptConsequences'[0].'transcriptId'", containsString("ENST00000428597"))
                .body("[0].'transcriptConsequences'[0].'consequenceTerms'", containsString("upstream_gene_variant"))
                .body("[0].'transcriptConsequences'[0].'hugoGeneSymbol'", containsString("CDKN2B-AS1"))
                .body("[0].'transcriptConsequences'[0].'variantClassification'", containsString("5'Flank"))
                .body("[0].'transcriptConsequenceSummary'.'transcriptId'", containsString("ENST00000428597"))
                .body("[0].'transcriptConsequenceSummary'.'consequenceTerms'", containsString("upstream_gene_variant"))
                .body("[0].'transcriptConsequenceSummary'.'hugoGeneSymbol'", containsString("CDKN2B-AS1"))
                .body("[0].'transcriptConsequenceSummary'.'variantClassification'", containsString("5'Flank"));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("transcriptConsequenceSummaries", "transcriptConsequenceSummary", "transcriptConsequences", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_75() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"_EM_2052_XYZ_\", " + 
                    " \"start\": 140453193, " + 
                    " \"end\": 140453209, " + 
                    " \"referenceAllele\": \"-\", " + 
                    " \"variantAllele\": \"YCzIq6Y5d7W7ghOK\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"17\", " + 
                    " \"start\": -134217720, " + 
                    " \"end\": 21102972, " + 
                    " \"referenceAllele\": \"_EM_3084_XYZ_\", " + 
                    " \"variantAllele\": \"T\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"_EM_2050_XYZ_\", " + 
                    " \"start\": 2097152, " + 
                    " \"end\": 37354994, " + 
                    " \"referenceAllele\": \"G\", " + 
                    " \"variantAllele\": \"-\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"_EM_2568_XYZ_\", " + 
                    " \"start\": 32768, " + 
                    " \"end\": 562251183, " + 
                    " \"referenceAllele\": \"C\", " + 
                    " \"variantAllele\": \"NA\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"10\", " + 
                    " \"start\": 89692940, " + 
                    " \"end\": 89692940, " + 
                    " \"referenceAllele\": \"_EM_1310_XYZ_\", " + 
                    " \"variantAllele\": \"T\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/cancer_hotspots/genomic")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(4))
                .body("[0].'genomicLocation'.'chromosome'", containsString("_EM_2052_XYZ_"))
                .body("[0].'genomicLocation'.'start'", numberMatches(1.40453193E8))
                .body("[0].'genomicLocation'.'end'", numberMatches(1.40453209E8))
                .body("[0].'genomicLocation'.'referenceAllele'", containsString("-"))
                .body("[0].'genomicLocation'.'variantAllele'", containsString("YCzIq6Y5d7W7ghOK"))
                .body("[0].'variant'", containsString("_EM_2052_XYZ_:g.140453193_140453194insYCzIq6Y5d7W7ghOK"))
                .body("[0].'hotspots'.size()", equalTo(0))
                .body("[1].'genomicLocation'.'chromosome'", containsString("_EM_2050_XYZ_"))
                .body("[1].'genomicLocation'.'start'", numberMatches(2097152.0))
                .body("[1].'genomicLocation'.'end'", numberMatches(3.7354994E7))
                .body("[1].'genomicLocation'.'referenceAllele'", containsString("G"))
                .body("[1].'genomicLocation'.'variantAllele'", containsString("-"))
                .body("[1].'variant'", containsString("_EM_2050_XYZ_:g.2097152del"))
                .body("[1].'hotspots'.size()", equalTo(0))
                .body("[2].'genomicLocation'.'chromosome'", containsString("_EM_2568_XYZ_"))
                .body("[2].'genomicLocation'.'start'", numberMatches(32768.0))
                .body("[2].'genomicLocation'.'end'", numberMatches(5.62251183E8))
                .body("[2].'genomicLocation'.'referenceAllele'", containsString("C"))
                .body("[2].'genomicLocation'.'variantAllele'", containsString("NA"))
                .body("[2].'variant'", containsString("_EM_2568_XYZ_:g.32768del"))
                .body("[2].'hotspots'.size()", equalTo(0))
                ; // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
        
    }
    
    
    @Test(timeout = 60000)
    public void test_76() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"10\", " + 
                    " \"start\": 89624245, " + 
                    " \"end\": 89624245, " + 
                    " \"referenceAllele\": \"G\", " + 
                    " \"variantAllele\": \"_EM_942_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"10.0\", " + 
                    " \"start\": 89886386, " + 
                    " \"end\": 89624243, " + 
                    " \"referenceAllele\": \"AA\", " + 
                    " \"variantAllele\": \"-\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/genomic?" + 
                    "isoformOverrideSource=foo&" + 
                    "token=_EM_946_XYZ_&" + 
                    "fields=_EM_941_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'variant'", containsString("10:g.89624245delins_EM_942_XYZ_"))
                .body("[0].'originalVariantQuery'", containsString("10,89624245,89624245,G,_EM_942_XYZ_"))
                .body("[0].'successfully_annotated'", equalTo(false))
                .body("[1].'variant'", containsString("10.0:g.89886386_89624243del"))
                .body("[1].'originalVariantQuery'", containsString("10.0,89886386,89624243,AA,-"))
                .body("[1].'successfully_annotated'", equalTo(false));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(1)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_77() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/annotation/genomic/7,140453136,140453136,A,TZ?" + 
                    "token=foo&" + 
                    "fields=annotation_summary&fields=_EM_1311_XYZ_&fields=3fu29ep7cn4ed7&fields=6rrQiEZdA&fields=lCjz67ocb")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'variant'", containsString("7:g.140453136delinsTZ"))
                .body("'originalVariantQuery'", containsString("7,140453136,140453136,A,TZ"))
                .body("'hgvsg'", containsString("7:g.140453136delinsTZ"))
                .body("'assembly_name'", containsString("GRCh37"))
                .body("'seq_region_name'", containsString("7"))
                .body("'start'", numberMatches(1.40453136E8))
                .body("'end'", numberMatches(1.40453136E8))
                .body("'allele_string'", containsString("A/TZ"))
                .body("'strand'", numberMatches(1.0))
                .body("'most_severe_consequence'", containsString("coding_sequence_variant"))
                .body("'transcript_consequences'.size()", equalTo(4))
                .body("'transcript_consequences'[0].'exon'", containsString("15/18"))
                .body("'transcript_consequences'[0].'transcript_id'", containsString("ENST00000288602"))
                .body("'transcript_consequences'[0].'variant_allele'", containsString("TZ"))
                .body("'transcript_consequences'[0].'protein_id'", containsString("ENSP00000288602"))
                .body("'transcript_consequences'[0].'protein_start'", numberMatches(600.0))
                .body("'transcript_consequences'[0].'protein_end'", numberMatches(600.0))
                .body("'transcript_consequences'[0].'gene_symbol'", containsString("BRAF"))
                .body("'transcript_consequences'[0].'gene_id'", containsString("ENSG00000157764"))
                .body("'transcript_consequences'[0].'hgnc_id'", containsString("1097"))
                .body("'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("'transcript_consequences'[0].'refseq_transcript_ids'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'refseq_transcript_ids'", hasItems("NM_004333.4"))
                .body("'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'consequence_terms'", hasItems("coding_sequence_variant"))
                .body("'transcript_consequences'[1].'exon'", containsString("2/6"))
                .body("'transcript_consequences'[1].'transcript_id'", containsString("ENST00000479537"))
                .body("'transcript_consequences'[1].'variant_allele'", containsString("TZ"))
                .body("'transcript_consequences'[1].'protein_id'", containsString("ENSP00000418033"))
                .body("'transcript_consequences'[1].'protein_start'", numberMatches(28.0))
                .body("'transcript_consequences'[1].'protein_end'", numberMatches(28.0))
                .body("'transcript_consequences'[1].'gene_symbol'", containsString("BRAF"))
                .body("'transcript_consequences'[1].'gene_id'", containsString("ENSG00000157764"))
                .body("'transcript_consequences'[1].'hgnc_id'", containsString("1097"))
                .body("'transcript_consequences'[1].'consequence_terms'.size()", equalTo(2))
                .body("'transcript_consequences'[1].'consequence_terms'", hasItems("coding_sequence_variant", "NMD_transcript_variant"))
                .body("'transcript_consequences'[2].'exon'", containsString("6/10"))
                .body("'transcript_consequences'[2].'transcript_id'", containsString("ENST00000496384"))
                .body("'transcript_consequences'[2].'variant_allele'", containsString("TZ"))
                .body("'transcript_consequences'[2].'protein_id'", containsString("ENSP00000419060"))
                .body("'transcript_consequences'[2].'protein_start'", numberMatches(208.0))
                .body("'transcript_consequences'[2].'protein_end'", numberMatches(208.0))
                .body("'transcript_consequences'[2].'gene_symbol'", containsString("BRAF"))
                .body("'transcript_consequences'[2].'gene_id'", containsString("ENSG00000157764"))
                .body("'transcript_consequences'[2].'hgnc_id'", containsString("1097"))
                .body("'transcript_consequences'[2].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[2].'consequence_terms'", hasItems("coding_sequence_variant"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("'successfully_annotated'", equalTo(true))
                .body("'annotation_summary'.'variant'", containsString("7:g.140453136delinsTZ"))
                .body("'annotation_summary'.'genomicLocation'.'chromosome'", containsString("7"))
                .body("'annotation_summary'.'genomicLocation'.'start'", numberMatches(1.40453136E8))
                .body("'annotation_summary'.'genomicLocation'.'end'", numberMatches(1.40453136E8))
                .body("'annotation_summary'.'genomicLocation'.'referenceAllele'", containsString("A"))
                .body("'annotation_summary'.'genomicLocation'.'variantAllele'", containsString("TZ"))
                .body("'annotation_summary'.'strandSign'", containsString("+"))
                .body("'annotation_summary'.'variantType'", containsString("INS"))
                .body("'annotation_summary'.'assemblyName'", containsString("GRCh37"))
                .body("'annotation_summary'.'canonicalTranscriptId'", containsString("ENST00000288602"))
                .body("'annotation_summary'.'transcriptConsequences'.size()", equalTo(1))
                .body("'annotation_summary'.'transcriptConsequences'[0].'transcriptId'", containsString("ENST00000288602"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'consequenceTerms'", containsString("coding_sequence_variant"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'hugoGeneSymbol'", containsString("BRAF"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'start'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'end'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequences'[0].'refSeq'", containsString("NM_004333.4"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'variantClassification'", containsString("Frame_Shift_Ins"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'exon'", containsString("15/18"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'.size()", equalTo(4))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'transcriptId'", containsString("ENST00000288602"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'consequenceTerms'", containsString("coding_sequence_variant"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'hugoGeneSymbol'", containsString("BRAF"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'start'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'end'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'refSeq'", containsString("NM_004333.4"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'variantClassification'", containsString("Frame_Shift_Ins"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'exon'", containsString("15/18"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'transcriptId'", containsString("ENST00000479537"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'consequenceTerms'", containsString("coding_sequence_variant,NMD_transcript_variant"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'hugoGeneSymbol'", containsString("BRAF"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'start'", numberMatches(28.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'end'", numberMatches(28.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'variantClassification'", containsString("Frame_Shift_Ins"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'exon'", containsString("2/6"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'transcriptId'", containsString("ENST00000496384"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'consequenceTerms'", containsString("coding_sequence_variant"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'hugoGeneSymbol'", containsString("BRAF"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'start'", numberMatches(208.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'end'", numberMatches(208.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'variantClassification'", containsString("Frame_Shift_Ins"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'exon'", containsString("6/10"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'transcriptId'", containsString("ENST00000288602"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'consequenceTerms'", containsString("coding_sequence_variant"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'hugoGeneSymbol'", containsString("BRAF"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'start'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'end'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'refSeq'", containsString("NM_004333.4"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'variantClassification'", containsString("Frame_Shift_Ins"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'exon'", containsString("15/18"));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) res_0.extract().response().jsonPath().getJsonObject("")).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_78() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/annotation/genomic/7,140453136,140453136,A,VoPv?" + 
                    "isoformOverrideSource=URqsv&" + 
                    "token=T44&" + 
                    "fields=annotation_summary&fields=3fu29do7cn4ed7&fields=nxZaeK1hIxQH_6&fields=6l_6F5UT")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'variant'", containsString("7:g.140453136delinsVoPv"))
                .body("'originalVariantQuery'", containsString("7,140453136,140453136,A,VoPv"))
                .body("'hgvsg'", containsString("7:g.140453136delinsVoPv"))
                .body("'assembly_name'", containsString("GRCh37"))
                .body("'seq_region_name'", containsString("7"))
                .body("'start'", numberMatches(1.40453136E8))
                .body("'end'", numberMatches(1.40453136E8))
                .body("'allele_string'", containsString("A/VOPV"))
                .body("'strand'", numberMatches(1.0))
                .body("'most_severe_consequence'", containsString("coding_sequence_variant"))
                .body("'transcript_consequences'.size()", equalTo(4))
                .body("'transcript_consequences'[0].'exon'", containsString("15/18"))
                .body("'transcript_consequences'[0].'transcript_id'", containsString("ENST00000288602"))
                .body("'transcript_consequences'[0].'variant_allele'", containsString("VOPV"))
                .body("'transcript_consequences'[0].'protein_id'", containsString("ENSP00000288602"))
                .body("'transcript_consequences'[0].'protein_start'", numberMatches(600.0))
                .body("'transcript_consequences'[0].'protein_end'", numberMatches(600.0))
                .body("'transcript_consequences'[0].'gene_symbol'", containsString("BRAF"))
                .body("'transcript_consequences'[0].'gene_id'", containsString("ENSG00000157764"))
                .body("'transcript_consequences'[0].'hgnc_id'", containsString("1097"))
                .body("'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("'transcript_consequences'[0].'refseq_transcript_ids'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'refseq_transcript_ids'", hasItems("NM_004333.4"))
                .body("'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'consequence_terms'", hasItems("coding_sequence_variant"))
                .body("'transcript_consequences'[1].'exon'", containsString("2/6"))
                .body("'transcript_consequences'[1].'transcript_id'", containsString("ENST00000479537"))
                .body("'transcript_consequences'[1].'variant_allele'", containsString("VOPV"))
                .body("'transcript_consequences'[1].'protein_id'", containsString("ENSP00000418033"))
                .body("'transcript_consequences'[1].'protein_start'", numberMatches(28.0))
                .body("'transcript_consequences'[1].'protein_end'", numberMatches(28.0))
                .body("'transcript_consequences'[1].'gene_symbol'", containsString("BRAF"))
                .body("'transcript_consequences'[1].'gene_id'", containsString("ENSG00000157764"))
                .body("'transcript_consequences'[1].'hgnc_id'", containsString("1097"))
                .body("'transcript_consequences'[1].'consequence_terms'.size()", equalTo(2))
                .body("'transcript_consequences'[1].'consequence_terms'", hasItems("coding_sequence_variant", "NMD_transcript_variant"))
                .body("'transcript_consequences'[2].'exon'", containsString("6/10"))
                .body("'transcript_consequences'[2].'transcript_id'", containsString("ENST00000496384"))
                .body("'transcript_consequences'[2].'variant_allele'", containsString("VOPV"))
                .body("'transcript_consequences'[2].'protein_id'", containsString("ENSP00000419060"))
                .body("'transcript_consequences'[2].'protein_start'", numberMatches(208.0))
                .body("'transcript_consequences'[2].'protein_end'", numberMatches(208.0))
                .body("'transcript_consequences'[2].'gene_symbol'", containsString("BRAF"))
                .body("'transcript_consequences'[2].'gene_id'", containsString("ENSG00000157764"))
                .body("'transcript_consequences'[2].'hgnc_id'", containsString("1097"))
                .body("'transcript_consequences'[2].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[2].'consequence_terms'", hasItems("coding_sequence_variant"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("'successfully_annotated'", equalTo(true))
                .body("'annotation_summary'.'variant'", containsString("7:g.140453136delinsVoPv"))
                .body("'annotation_summary'.'genomicLocation'.'chromosome'", containsString("7"))
                .body("'annotation_summary'.'genomicLocation'.'start'", numberMatches(1.40453136E8))
                .body("'annotation_summary'.'genomicLocation'.'end'", numberMatches(1.40453136E8))
                .body("'annotation_summary'.'genomicLocation'.'referenceAllele'", containsString("A"))
                .body("'annotation_summary'.'genomicLocation'.'variantAllele'", containsString("VOPV"))
                .body("'annotation_summary'.'strandSign'", containsString("+"))
                .body("'annotation_summary'.'variantType'", containsString("INS"))
                .body("'annotation_summary'.'assemblyName'", containsString("GRCh37"))
                .body("'annotation_summary'.'canonicalTranscriptId'", containsString("ENST00000288602"))
                .body("'annotation_summary'.'transcriptConsequences'.size()", equalTo(1))
                .body("'annotation_summary'.'transcriptConsequences'[0].'transcriptId'", containsString("ENST00000288602"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'consequenceTerms'", containsString("coding_sequence_variant"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'hugoGeneSymbol'", containsString("BRAF"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'start'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'end'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequences'[0].'refSeq'", containsString("NM_004333.4"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'variantClassification'", containsString("In_Frame_Ins"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'exon'", containsString("15/18"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'.size()", equalTo(4))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'transcriptId'", containsString("ENST00000288602"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'consequenceTerms'", containsString("coding_sequence_variant"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'hugoGeneSymbol'", containsString("BRAF"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'start'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'end'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'refSeq'", containsString("NM_004333.4"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'variantClassification'", containsString("In_Frame_Ins"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'exon'", containsString("15/18"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'transcriptId'", containsString("ENST00000479537"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'consequenceTerms'", containsString("coding_sequence_variant,NMD_transcript_variant"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'hugoGeneSymbol'", containsString("BRAF"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'start'", numberMatches(28.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'end'", numberMatches(28.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'variantClassification'", containsString("In_Frame_Ins"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'exon'", containsString("2/6"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'transcriptId'", containsString("ENST00000496384"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'consequenceTerms'", containsString("coding_sequence_variant"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'hugoGeneSymbol'", containsString("BRAF"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'start'", numberMatches(208.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'end'", numberMatches(208.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'variantClassification'", containsString("In_Frame_Ins"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'exon'", containsString("6/10"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'transcriptId'", containsString("ENST00000288602"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'consequenceTerms'", containsString("coding_sequence_variant"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'hugoGeneSymbol'", containsString("BRAF"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'start'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'end'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'refSeq'", containsString("NM_004333.4"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'variantClassification'", containsString("In_Frame_Ins"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'exon'", containsString("15/18"));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) res_0.extract().response().jsonPath().getJsonObject("")).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_79() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"_EM_2052_XYZ_\", " + 
                    " \"start\": 140453193, " + 
                    " \"end\": 140453201, " + 
                    " \"referenceAllele\": \"gxGVo3t8QNTt\", " + 
                    " \"variantAllele\": \"_EM_1308_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"17\", " + 
                    " \"start\": 8, " + 
                    " \"end\": 21102972, " + 
                    " \"referenceAllele\": \"T\", " + 
                    " \"variantAllele\": \"T\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"_EM_2050_XYZ_\", " + 
                    " \"start\": 2097152, " + 
                    " \"end\": 37354994, " + 
                    " \"referenceAllele\": \"G\", " + 
                    " \"variantAllele\": \"-\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"_EM_2568_XYZ_\", " + 
                    " \"start\": 32768, " + 
                    " \"end\": 562251183, " + 
                    " \"referenceAllele\": \"C\", " + 
                    " \"variantAllele\": \"NA\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"10\", " + 
                    " \"start\": 89692940, " + 
                    " \"end\": 89692940, " + 
                    " \"referenceAllele\": \"_EM_1310_XYZ_\", " + 
                    " \"variantAllele\": \"T\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/cancer_hotspots/genomic")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(5))
                .body("[0].'genomicLocation'.'chromosome'", containsString("_EM_2052_XYZ_"))
                .body("[0].'genomicLocation'.'start'", numberMatches(1.40453193E8))
                .body("[0].'genomicLocation'.'end'", numberMatches(1.40453201E8))
                .body("[0].'genomicLocation'.'referenceAllele'", containsString("gxGVo3t8QNTt"))
                .body("[0].'genomicLocation'.'variantAllele'", containsString("_EM_1308_XYZ_"))
                .body("[0].'variant'", containsString("_EM_2052_XYZ_:g.140453193_140453201delins_EM_1308_XYZ_"))
                .body("[0].'hotspots'.size()", equalTo(0))
                .body("[1].'genomicLocation'.'chromosome'", containsString("17"))
                .body("[1].'genomicLocation'.'start'", numberMatches(8.0))
                .body("[1].'genomicLocation'.'end'", numberMatches(2.1102972E7))
                .body("[1].'genomicLocation'.'referenceAllele'", containsString("T"))
                .body("[1].'genomicLocation'.'variantAllele'", containsString("T"))
                .body("[1].'variant'", containsString("17:g.8T>T"))
                .body("[1].'hotspots'.size()", equalTo(0))
                .body("[2].'genomicLocation'.'chromosome'", containsString("_EM_2050_XYZ_"))
                .body("[2].'genomicLocation'.'start'", numberMatches(2097152.0))
                .body("[2].'genomicLocation'.'end'", numberMatches(3.7354994E7))
                .body("[2].'genomicLocation'.'referenceAllele'", containsString("G"))
                .body("[2].'genomicLocation'.'variantAllele'", containsString("-"))
                .body("[2].'variant'", containsString("_EM_2050_XYZ_:g.2097152del"))
                .body("[2].'hotspots'.size()", equalTo(0))
                ; // Skipping assertions on the remaining 2 elements. This limit of 3 elements can be increased in the configurations
        
    }
    
    
    @Test(timeout = 60000)
    public void test_80() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " \"9:g.21994291C\u003eT\" " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/summary?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'variant'", containsString("9:g.21994291C>T"))
                .body("[0].'genomicLocation'.'chromosome'", containsString("9"))
                .body("[0].'genomicLocation'.'start'", numberMatches(2.1994291E7))
                .body("[0].'genomicLocation'.'end'", numberMatches(2.1994291E7))
                .body("[0].'genomicLocation'.'referenceAllele'", containsString("C"))
                .body("[0].'genomicLocation'.'variantAllele'", containsString("T"))
                .body("[0].'strandSign'", containsString("+"))
                .body("[0].'variantType'", containsString("SNP"))
                .body("[0].'assemblyName'", containsString("GRCh37"))
                .body("[0].'canonicalTranscriptId'", containsString("ENST00000428597"))
                .body("[0].'transcriptConsequences'.size()", equalTo(23))
                .body("[0].'transcriptConsequences'[0].'transcriptId'", containsString("ENST00000361570"))
                .body("[0].'transcriptConsequences'[0].'codonChange'", containsString("Gcg/Acg"))
                .body("[0].'transcriptConsequences'[0].'aminoAcids'", containsString("A/T"))
                .body("[0].'transcriptConsequences'[0].'aminoAcidRef'", containsString("A"))
                .body("[0].'transcriptConsequences'[0].'aminoAcidAlt'", containsString("T"))
                .body("[0].'transcriptConsequences'[0].'consequenceTerms'", containsString("missense_variant"))
                .body("[0].'transcriptConsequences'[0].'hugoGeneSymbol'", containsString("CDKN2A"))
                .body("[0].'transcriptConsequences'[0].'hgvspShort'", containsString("p.A55T"))
                .body("[0].'transcriptConsequences'[0].'hgvsp'", containsString("p.Ala55Thr"))
                .body("[0].'transcriptConsequences'[0].'hgvsc'", containsString("ENST00000361570.3:c.163G>A"))
                .body("[0].'transcriptConsequences'[0].'proteinPosition'.'start'", numberMatches(55.0))
                .body("[0].'transcriptConsequences'[0].'proteinPosition'.'end'", numberMatches(55.0))
                .body("[0].'transcriptConsequences'[0].'refSeq'", containsString("NM_058195.3"))
                .body("[0].'transcriptConsequences'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'transcriptConsequences'[0].'exon'", containsString("1/3"))
                .body("[0].'transcriptConsequences'[0].'polyphenScore'", numberMatches(0.014))
                .body("[0].'transcriptConsequences'[0].'polyphenPrediction'", containsString("benign"))
                .body("[0].'transcriptConsequences'[0].'siftScore'", numberMatches(0.09))
                .body("[0].'transcriptConsequences'[0].'siftPrediction'", containsString("tolerated_low_confidence"))
                .body("[0].'transcriptConsequences'[1].'transcriptId'", containsString("ENST00000428597"))
                .body("[0].'transcriptConsequences'[1].'consequenceTerms'", containsString("upstream_gene_variant"))
                .body("[0].'transcriptConsequences'[1].'hugoGeneSymbol'", containsString("CDKN2B-AS1"))
                .body("[0].'transcriptConsequences'[1].'variantClassification'", containsString("5'Flank"))
                .body("[0].'transcriptConsequences'[2].'transcriptId'", containsString("ENST00000455933"))
                .body("[0].'transcriptConsequences'[2].'consequenceTerms'", containsString("upstream_gene_variant"))
                .body("[0].'transcriptConsequences'[2].'hugoGeneSymbol'", containsString("CDKN2B-AS1"))
                .body("[0].'transcriptConsequences'[2].'variantClassification'", containsString("5'Flank"))
                // Skipping assertions on the remaining 20 elements. This limit of 3 elements can be increased in the configurations
                .body("[0].'transcriptConsequenceSummaries'.size()", equalTo(23))
                .body("[0].'transcriptConsequenceSummaries'[0].'transcriptId'", containsString("ENST00000361570"))
                .body("[0].'transcriptConsequenceSummaries'[0].'codonChange'", containsString("Gcg/Acg"))
                .body("[0].'transcriptConsequenceSummaries'[0].'aminoAcids'", containsString("A/T"))
                .body("[0].'transcriptConsequenceSummaries'[0].'aminoAcidRef'", containsString("A"))
                .body("[0].'transcriptConsequenceSummaries'[0].'aminoAcidAlt'", containsString("T"))
                .body("[0].'transcriptConsequenceSummaries'[0].'consequenceTerms'", containsString("missense_variant"))
                .body("[0].'transcriptConsequenceSummaries'[0].'hugoGeneSymbol'", containsString("CDKN2A"))
                .body("[0].'transcriptConsequenceSummaries'[0].'hgvspShort'", containsString("p.A55T"))
                .body("[0].'transcriptConsequenceSummaries'[0].'hgvsp'", containsString("p.Ala55Thr"))
                .body("[0].'transcriptConsequenceSummaries'[0].'hgvsc'", containsString("ENST00000361570.3:c.163G>A"))
                .body("[0].'transcriptConsequenceSummaries'[0].'proteinPosition'.'start'", numberMatches(55.0))
                .body("[0].'transcriptConsequenceSummaries'[0].'proteinPosition'.'end'", numberMatches(55.0))
                .body("[0].'transcriptConsequenceSummaries'[0].'refSeq'", containsString("NM_058195.3"))
                .body("[0].'transcriptConsequenceSummaries'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'transcriptConsequenceSummaries'[0].'exon'", containsString("1/3"))
                .body("[0].'transcriptConsequenceSummaries'[0].'polyphenScore'", numberMatches(0.014))
                .body("[0].'transcriptConsequenceSummaries'[0].'polyphenPrediction'", containsString("benign"))
                .body("[0].'transcriptConsequenceSummaries'[0].'siftScore'", numberMatches(0.09))
                .body("[0].'transcriptConsequenceSummaries'[0].'siftPrediction'", containsString("tolerated_low_confidence"))
                .body("[0].'transcriptConsequenceSummaries'[1].'transcriptId'", containsString("ENST00000428597"))
                .body("[0].'transcriptConsequenceSummaries'[1].'consequenceTerms'", containsString("upstream_gene_variant"))
                .body("[0].'transcriptConsequenceSummaries'[1].'hugoGeneSymbol'", containsString("CDKN2B-AS1"))
                .body("[0].'transcriptConsequenceSummaries'[1].'variantClassification'", containsString("5'Flank"))
                .body("[0].'transcriptConsequenceSummaries'[2].'transcriptId'", containsString("ENST00000455933"))
                .body("[0].'transcriptConsequenceSummaries'[2].'consequenceTerms'", containsString("upstream_gene_variant"))
                .body("[0].'transcriptConsequenceSummaries'[2].'hugoGeneSymbol'", containsString("CDKN2B-AS1"))
                .body("[0].'transcriptConsequenceSummaries'[2].'variantClassification'", containsString("5'Flank"))
                // Skipping assertions on the remaining 20 elements. This limit of 3 elements can be increased in the configurations
                .body("[0].'transcriptConsequenceSummary'.'transcriptId'", containsString("ENST00000428597"))
                .body("[0].'transcriptConsequenceSummary'.'consequenceTerms'", containsString("upstream_gene_variant"))
                .body("[0].'transcriptConsequenceSummary'.'hugoGeneSymbol'", containsString("CDKN2B-AS1"))
                .body("[0].'transcriptConsequenceSummary'.'variantClassification'", containsString("5'Flank"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_81() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"_EM_3387_XYZ_\", " + 
                    " \"start\": 140977481, " + 
                    " \"end\": 140453201, " + 
                    " \"referenceAllele\": \"-\", " + 
                    " \"variantAllele\": \"NA\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"17\", " + 
                    " \"start\": 8, " + 
                    " \"end\": 21102972, " + 
                    " \"referenceAllele\": \"T\", " + 
                    " \"variantAllele\": \"T\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"_EM_2050_XYZ_\", " + 
                    " \"start\": 2097152, " + 
                    " \"end\": 37883378, " + 
                    " \"referenceAllele\": \"G\", " + 
                    " \"variantAllele\": \"JIbA3oWrhGzAcm\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"_EM_3382_XYZ_\", " + 
                    " \"start\": 6324224, " + 
                    " \"end\": 562251183, " + 
                    " \"referenceAllele\": \"C\", " + 
                    " \"variantAllele\": \"_EM_3384_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"10\", " + 
                    " \"start\": 89692940, " + 
                    " \"end\": 89692940, " + 
                    " \"referenceAllele\": \"_EM_1310_XYZ_\", " + 
                    " \"variantAllele\": \"T\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/cancer_hotspots/genomic?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(5))
                .body("[0].'genomicLocation'.'chromosome'", containsString("_EM_3387_XYZ_"))
                .body("[0].'genomicLocation'.'start'", numberMatches(1.40977481E8))
                .body("[0].'genomicLocation'.'end'", numberMatches(1.40453201E8))
                .body("[0].'genomicLocation'.'referenceAllele'", containsString("-"))
                .body("[0].'genomicLocation'.'variantAllele'", containsString("NA"))
                .body("[0].'variant'", containsString("_EM_3387_XYZ_:g.140977481_140977482insNA"))
                .body("[0].'hotspots'.size()", equalTo(0))
                .body("[1].'genomicLocation'.'chromosome'", containsString("17"))
                .body("[1].'genomicLocation'.'start'", numberMatches(8.0))
                .body("[1].'genomicLocation'.'end'", numberMatches(2.1102972E7))
                .body("[1].'genomicLocation'.'referenceAllele'", containsString("T"))
                .body("[1].'genomicLocation'.'variantAllele'", containsString("T"))
                .body("[1].'variant'", containsString("17:g.8T>T"))
                .body("[1].'hotspots'.size()", equalTo(0))
                .body("[2].'genomicLocation'.'chromosome'", containsString("_EM_2050_XYZ_"))
                .body("[2].'genomicLocation'.'start'", numberMatches(2097152.0))
                .body("[2].'genomicLocation'.'end'", numberMatches(3.7883378E7))
                .body("[2].'genomicLocation'.'referenceAllele'", containsString("G"))
                .body("[2].'genomicLocation'.'variantAllele'", containsString("JIbA3oWrhGzAcm"))
                .body("[2].'variant'", containsString("_EM_2050_XYZ_:g.2097152delinsJIbA3oWrhGzAcm"))
                .body("[2].'hotspots'.size()", equalTo(0))
                ; // Skipping assertions on the remaining 2 elements. This limit of 3 elements can be increased in the configurations
        
    }
    
    
    @Test(timeout = 60000)
    public void test_82() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"7\", " + 
                    " \"start\": 140453321, " + 
                    " \"end\": 140453193, " + 
                    " \"referenceAllele\": \"T\", " + 
                    " \"variantAllele\": \"_EM_1254_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"17\", " + 
                    " \"start\": 37880220, " + 
                    " \"end\": 37880220, " + 
                    " \"referenceAllele\": \"T\", " + 
                    " \"variantAllele\": \"C\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"_EM_1255_XYZ_\", " + 
                    " \"start\": 36831218, " + 
                    " \"end\": 37879794, " + 
                    " \"referenceAllele\": \"_EM_1256_XYZ_\", " + 
                    " \"variantAllele\": \"_EM_1257_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"12\", " + 
                    " \"start\": 25380271, " + 
                    " \"end\": 25380271, " + 
                    " \"referenceAllele\": \"C\", " + 
                    " \"variantAllele\": \"T\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"10\", " + 
                    " \"start\": 156801804, " + 
                    " \"end\": 89692940, " + 
                    " \"referenceAllele\": \"E\", " + 
                    " \"variantAllele\": \"T\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/cancer_hotspots/genomic?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(5))
                .body("[0].'genomicLocation'.'chromosome'", containsString("7"))
                .body("[0].'genomicLocation'.'start'", numberMatches(1.40453321E8))
                .body("[0].'genomicLocation'.'end'", numberMatches(1.40453193E8))
                .body("[0].'genomicLocation'.'referenceAllele'", containsString("T"))
                .body("[0].'genomicLocation'.'variantAllele'", containsString("_EM_1254_XYZ_"))
                .body("[0].'variant'", containsString("7:g.140453321delins_EM_1254_XYZ_"))
                .body("[0].'hotspots'.size()", equalTo(0))
                .body("[1].'genomicLocation'.'chromosome'", containsString("17"))
                .body("[1].'genomicLocation'.'start'", numberMatches(3.788022E7))
                .body("[1].'genomicLocation'.'end'", numberMatches(3.788022E7))
                .body("[1].'genomicLocation'.'referenceAllele'", containsString("T"))
                .body("[1].'genomicLocation'.'variantAllele'", containsString("C"))
                .body("[1].'variant'", containsString("17:g.37880220T>C"))
                .body("[1].'hotspots'.size()", equalTo(0))
                .body("[2].'genomicLocation'.'chromosome'", containsString("_EM_1255_XYZ_"))
                .body("[2].'genomicLocation'.'start'", numberMatches(3.6831218E7))
                .body("[2].'genomicLocation'.'end'", numberMatches(3.7879794E7))
                .body("[2].'genomicLocation'.'referenceAllele'", containsString("_EM_1256_XYZ_"))
                .body("[2].'genomicLocation'.'variantAllele'", containsString("_EM_1257_XYZ_"))
                .body("[2].'variant'", containsString("_EM_1255_XYZ_:g.36831225_37879794delins7_XYZ_"))
                .body("[2].'hotspots'.size()", equalTo(0))
                ; // Skipping assertions on the remaining 2 elements. This limit of 3 elements can be increased in the configurations
        
    }
    
    
    @Test(timeout = 60000)
    public void test_83() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"8\", " + 
                    " \"start\": 139928905, " + 
                    " \"end\": 106964297, " + 
                    " \"referenceAllele\": \"_EM_3857_XYZ_\", " + 
                    " \"variantAllele\": \"_EM_3858_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"17\", " + 
                    " \"start\": 37863836, " + 
                    " \"end\": 37880188, " + 
                    " \"referenceAllele\": \"_EM_3723_XYZ_\", " + 
                    " \"variantAllele\": \"-\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"17\", " + 
                    " \"start\": 37879794, " + 
                    " \"end\": 37879794, " + 
                    " \"referenceAllele\": \"G\", " + 
                    " \"variantAllele\": \"C\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"_EM_3724_XYZ_\", " + 
                    " \"start\": 25118127, " + 
                    " \"end\": 16991663, " + 
                    " \"referenceAllele\": \"C\", " + 
                    " \"variantAllele\": \"-\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"1\", " + 
                    " \"start\": 89169676, " + 
                    " \"end\": 89692939, " + 
                    " \"referenceAllele\": \"C\", " + 
                    " \"variantAllele\": \"-\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/cancer_hotspots/genomic?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(5))
                .body("[0].'genomicLocation'.'chromosome'", containsString("8"))
                .body("[0].'genomicLocation'.'start'", numberMatches(1.39928905E8))
                .body("[0].'genomicLocation'.'end'", numberMatches(1.06964297E8))
                .body("[0].'genomicLocation'.'referenceAllele'", containsString("_EM_3857_XYZ_"))
                .body("[0].'genomicLocation'.'variantAllele'", containsString("_EM_3858_XYZ_"))
                .body("[0].'variant'", containsString("8:g.139928912_106964297delins8_XYZ_"))
                .body("[0].'hotspots'.size()", equalTo(0))
                .body("[1].'genomicLocation'.'chromosome'", containsString("17"))
                .body("[1].'genomicLocation'.'start'", numberMatches(3.7863836E7))
                .body("[1].'genomicLocation'.'end'", numberMatches(3.7880188E7))
                .body("[1].'genomicLocation'.'referenceAllele'", containsString("_EM_3723_XYZ_"))
                .body("[1].'genomicLocation'.'variantAllele'", containsString("-"))
                .body("[1].'variant'", containsString("17:g.37863836_37880188del"))
                .body("[1].'hotspots'.size()", equalTo(0))
                .body("[2].'genomicLocation'.'chromosome'", containsString("17"))
                .body("[2].'genomicLocation'.'start'", numberMatches(3.7879794E7))
                .body("[2].'genomicLocation'.'end'", numberMatches(3.7879794E7))
                .body("[2].'genomicLocation'.'referenceAllele'", containsString("G"))
                .body("[2].'genomicLocation'.'variantAllele'", containsString("C"))
                .body("[2].'variant'", containsString("17:g.37879794G>C"))
                .body("[2].'hotspots'.size()", equalTo(0))
                ; // Skipping assertions on the remaining 2 elements. This limit of 3 elements can be increased in the configurations
        
    }
    
    
    @Test(timeout = 60000)
    public void test_84() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"7\", " + 
                    " \"start\": 140453193, " + 
                    " \"end\": 140453193, " + 
                    " \"referenceAllele\": \"T\", " + 
                    " \"variantAllele\": \"C\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"17\", " + 
                    " \"start\": 37880220, " + 
                    " \"end\": 37880220, " + 
                    " \"referenceAllele\": \"T\", " + 
                    " \"variantAllele\": \"C\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"17\", " + 
                    " \"start\": 37879793, " + 
                    " \"end\": 37879794, " + 
                    " \"referenceAllele\": \"_EM_2057_XYZ_\", " + 
                    " \"variantAllele\": \"_EM_2058_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"12\", " + 
                    " \"start\": 25398288, " + 
                    " \"end\": -41710579, " + 
                    " \"referenceAllele\": \"C3\", " + 
                    " \"variantAllele\": \"_EM_2059_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"12\", " + 
                    " \"start\": 25380207, " + 
                    " \"end\": 26428847, " + 
                    " \"referenceAllele\": \"C\", " + 
                    " \"variantAllele\": \"X\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"10\", " + 
                    " \"start\": 89692940, " + 
                    " \"end\": 89693004, " + 
                    " \"referenceAllele\": \"_EM_2060_XYZ_\", " + 
                    " \"variantAllele\": \"T\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/cancer_hotspots/genomic?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(6))
                .body("[0].'genomicLocation'.'chromosome'", containsString("7"))
                .body("[0].'genomicLocation'.'start'", numberMatches(1.40453193E8))
                .body("[0].'genomicLocation'.'end'", numberMatches(1.40453193E8))
                .body("[0].'genomicLocation'.'referenceAllele'", containsString("T"))
                .body("[0].'genomicLocation'.'variantAllele'", containsString("C"))
                .body("[0].'variant'", containsString("7:g.140453193T>C"))
                .body("[0].'hotspots'.size()", equalTo(0))
                .body("[1].'genomicLocation'.'chromosome'", containsString("17"))
                .body("[1].'genomicLocation'.'start'", numberMatches(3.788022E7))
                .body("[1].'genomicLocation'.'end'", numberMatches(3.788022E7))
                .body("[1].'genomicLocation'.'referenceAllele'", containsString("T"))
                .body("[1].'genomicLocation'.'variantAllele'", containsString("C"))
                .body("[1].'variant'", containsString("17:g.37880220T>C"))
                .body("[1].'hotspots'.size()", equalTo(0))
                .body("[2].'genomicLocation'.'chromosome'", containsString("17"))
                .body("[2].'genomicLocation'.'start'", numberMatches(3.7879793E7))
                .body("[2].'genomicLocation'.'end'", numberMatches(3.7879794E7))
                .body("[2].'genomicLocation'.'referenceAllele'", containsString("_EM_2057_XYZ_"))
                .body("[2].'genomicLocation'.'variantAllele'", containsString("_EM_2058_XYZ_"))
                .body("[2].'variant'", containsString("17:g.37879800_37879794delins8_XYZ_"))
                .body("[2].'hotspots'.size()", equalTo(0))
                ; // Skipping assertions on the remaining 3 elements. This limit of 3 elements can be increased in the configurations
        
    }
    
    
    @Test(timeout = 60000)
    public void test_85() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/annotation/genomic/7,140453136,140453136,A,T?" + 
                    "fields=annotation_summary&fields=nucleotide_context&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'variant'", containsString("7:g.140453136A>T"))
                .body("'originalVariantQuery'", containsString("7,140453136,140453136,A,T"))
                .body("'hgvsg'", containsString("7:g.140453136A>T"))
                .body("'assembly_name'", containsString("GRCh37"))
                .body("'seq_region_name'", containsString("7"))
                .body("'start'", numberMatches(1.40453136E8))
                .body("'end'", numberMatches(1.40453136E8))
                .body("'allele_string'", containsString("A/T"))
                .body("'strand'", numberMatches(1.0))
                .body("'most_severe_consequence'", containsString("missense_variant"))
                .body("'transcript_consequences'.size()", equalTo(4))
                .body("'transcript_consequences'[0].'exon'", containsString("15/18"))
                .body("'transcript_consequences'[0].'transcript_id'", containsString("ENST00000288602"))
                .body("'transcript_consequences'[0].'hgvsp'", containsString("ENSP00000288602.6:p.Val600Glu"))
                .body("'transcript_consequences'[0].'hgvsc'", containsString("ENST00000288602.6:c.1799T>A"))
                .body("'transcript_consequences'[0].'variant_allele'", containsString("T"))
                .body("'transcript_consequences'[0].'codons'", containsString("gTg/gAg"))
                .body("'transcript_consequences'[0].'protein_id'", containsString("ENSP00000288602"))
                .body("'transcript_consequences'[0].'protein_start'", numberMatches(600.0))
                .body("'transcript_consequences'[0].'protein_end'", numberMatches(600.0))
                .body("'transcript_consequences'[0].'gene_symbol'", containsString("BRAF"))
                .body("'transcript_consequences'[0].'gene_id'", containsString("ENSG00000157764"))
                .body("'transcript_consequences'[0].'amino_acids'", containsString("V/E"))
                .body("'transcript_consequences'[0].'hgnc_id'", containsString("1097"))
                .body("'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("'transcript_consequences'[0].'polyphen_score'", numberMatches(0.963))
                .body("'transcript_consequences'[0].'polyphen_prediction'", containsString("probably_damaging"))
                .body("'transcript_consequences'[0].'sift_score'", numberMatches(0.0))
                .body("'transcript_consequences'[0].'sift_prediction'", containsString("deleterious"))
                .body("'transcript_consequences'[0].'refseq_transcript_ids'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'refseq_transcript_ids'", hasItems("NM_004333.4"))
                .body("'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'consequence_terms'", hasItems("missense_variant"))
                .body("'transcript_consequences'[1].'exon'", containsString("2/6"))
                .body("'transcript_consequences'[1].'transcript_id'", containsString("ENST00000479537"))
                .body("'transcript_consequences'[1].'hgvsp'", containsString("ENSP00000418033.1:p.Val28Glu"))
                .body("'transcript_consequences'[1].'hgvsc'", containsString("ENST00000479537.1:c.83T>A"))
                .body("'transcript_consequences'[1].'variant_allele'", containsString("T"))
                .body("'transcript_consequences'[1].'codons'", containsString("gTg/gAg"))
                .body("'transcript_consequences'[1].'protein_id'", containsString("ENSP00000418033"))
                .body("'transcript_consequences'[1].'protein_start'", numberMatches(28.0))
                .body("'transcript_consequences'[1].'protein_end'", numberMatches(28.0))
                .body("'transcript_consequences'[1].'gene_symbol'", containsString("BRAF"))
                .body("'transcript_consequences'[1].'gene_id'", containsString("ENSG00000157764"))
                .body("'transcript_consequences'[1].'amino_acids'", containsString("V/E"))
                .body("'transcript_consequences'[1].'hgnc_id'", containsString("1097"))
                .body("'transcript_consequences'[1].'polyphen_score'", numberMatches(0.991))
                .body("'transcript_consequences'[1].'polyphen_prediction'", containsString("probably_damaging"))
                .body("'transcript_consequences'[1].'sift_score'", numberMatches(0.01))
                .body("'transcript_consequences'[1].'sift_prediction'", containsString("deleterious"))
                .body("'transcript_consequences'[1].'consequence_terms'.size()", equalTo(2))
                .body("'transcript_consequences'[1].'consequence_terms'", hasItems("missense_variant", "NMD_transcript_variant"))
                .body("'transcript_consequences'[2].'exon'", containsString("6/10"))
                .body("'transcript_consequences'[2].'transcript_id'", containsString("ENST00000496384"))
                .body("'transcript_consequences'[2].'hgvsp'", containsString("ENSP00000419060.1:p.Val208Glu"))
                .body("'transcript_consequences'[2].'hgvsc'", containsString("ENST00000496384.2:c.623T>A"))
                .body("'transcript_consequences'[2].'variant_allele'", containsString("T"))
                .body("'transcript_consequences'[2].'codons'", containsString("gTg/gAg"))
                .body("'transcript_consequences'[2].'protein_id'", containsString("ENSP00000419060"))
                .body("'transcript_consequences'[2].'protein_start'", numberMatches(208.0))
                .body("'transcript_consequences'[2].'protein_end'", numberMatches(208.0))
                .body("'transcript_consequences'[2].'gene_symbol'", containsString("BRAF"))
                .body("'transcript_consequences'[2].'gene_id'", containsString("ENSG00000157764"))
                .body("'transcript_consequences'[2].'amino_acids'", containsString("V/E"))
                .body("'transcript_consequences'[2].'hgnc_id'", containsString("1097"))
                .body("'transcript_consequences'[2].'polyphen_score'", numberMatches(0.817))
                .body("'transcript_consequences'[2].'polyphen_prediction'", containsString("possibly_damaging"))
                .body("'transcript_consequences'[2].'sift_score'", numberMatches(0.0))
                .body("'transcript_consequences'[2].'sift_prediction'", containsString("deleterious"))
                .body("'transcript_consequences'[2].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[2].'consequence_terms'", hasItems("missense_variant"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("'successfully_annotated'", equalTo(true))
                .body("'nucleotide_context'.'license'", nullValue())
                .body("'nucleotide_context'.'annotation'.'molecule'", containsString("dna"))
                .body("'nucleotide_context'.'annotation'.'seq'", containsString("CAC"))
                .body("'nucleotide_context'.'annotation'.'hgvs'", containsString("7:g.140453136A>T"))
                .body("'annotation_summary'.'variant'", containsString("7:g.140453136A>T"))
                .body("'annotation_summary'.'genomicLocation'.'chromosome'", containsString("7"))
                .body("'annotation_summary'.'genomicLocation'.'start'", numberMatches(1.40453136E8))
                .body("'annotation_summary'.'genomicLocation'.'end'", numberMatches(1.40453136E8))
                .body("'annotation_summary'.'genomicLocation'.'referenceAllele'", containsString("A"))
                .body("'annotation_summary'.'genomicLocation'.'variantAllele'", containsString("T"))
                .body("'annotation_summary'.'strandSign'", containsString("+"))
                .body("'annotation_summary'.'variantType'", containsString("SNP"))
                .body("'annotation_summary'.'assemblyName'", containsString("GRCh37"))
                .body("'annotation_summary'.'canonicalTranscriptId'", containsString("ENST00000288602"))
                .body("'annotation_summary'.'transcriptConsequences'.size()", equalTo(1))
                .body("'annotation_summary'.'transcriptConsequences'[0].'transcriptId'", containsString("ENST00000288602"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'codonChange'", containsString("gTg/gAg"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'aminoAcids'", containsString("V/E"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'aminoAcidRef'", containsString("V"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'aminoAcidAlt'", containsString("E"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'consequenceTerms'", containsString("missense_variant"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'hugoGeneSymbol'", containsString("BRAF"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'hgvspShort'", containsString("p.V600E"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'hgvsp'", containsString("p.Val600Glu"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'hgvsc'", containsString("ENST00000288602.6:c.1799T>A"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'start'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'end'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequences'[0].'refSeq'", containsString("NM_004333.4"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'exon'", containsString("15/18"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'polyphenScore'", numberMatches(0.963))
                .body("'annotation_summary'.'transcriptConsequences'[0].'polyphenPrediction'", containsString("probably_damaging"))
                .body("'annotation_summary'.'transcriptConsequences'[0].'siftScore'", numberMatches(0.0))
                .body("'annotation_summary'.'transcriptConsequences'[0].'siftPrediction'", containsString("deleterious"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'.size()", equalTo(4))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'transcriptId'", containsString("ENST00000288602"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'codonChange'", containsString("gTg/gAg"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcids'", containsString("V/E"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcidRef'", containsString("V"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcidAlt'", containsString("E"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'consequenceTerms'", containsString("missense_variant"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'hugoGeneSymbol'", containsString("BRAF"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvspShort'", containsString("p.V600E"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvsp'", containsString("p.Val600Glu"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvsc'", containsString("ENST00000288602.6:c.1799T>A"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'start'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'end'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'refSeq'", containsString("NM_004333.4"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'exon'", containsString("15/18"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'polyphenScore'", numberMatches(0.963))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'polyphenPrediction'", containsString("probably_damaging"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'siftScore'", numberMatches(0.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[0].'siftPrediction'", containsString("deleterious"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'transcriptId'", containsString("ENST00000479537"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'codonChange'", containsString("gTg/gAg"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcids'", containsString("V/E"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcidRef'", containsString("V"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcidAlt'", containsString("E"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'consequenceTerms'", containsString("missense_variant,NMD_transcript_variant"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'hugoGeneSymbol'", containsString("BRAF"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvspShort'", containsString("p.V28E"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvsp'", containsString("p.Val28Glu"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvsc'", containsString("ENST00000479537.1:c.83T>A"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'start'", numberMatches(28.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'end'", numberMatches(28.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'variantClassification'", containsString("Missense_Mutation"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'exon'", containsString("2/6"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'polyphenScore'", numberMatches(0.991))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'polyphenPrediction'", containsString("probably_damaging"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'siftScore'", numberMatches(0.01))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[1].'siftPrediction'", containsString("deleterious"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'transcriptId'", containsString("ENST00000496384"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'codonChange'", containsString("gTg/gAg"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcids'", containsString("V/E"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcidRef'", containsString("V"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcidAlt'", containsString("E"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'consequenceTerms'", containsString("missense_variant"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'hugoGeneSymbol'", containsString("BRAF"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvspShort'", containsString("p.V208E"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvsp'", containsString("p.Val208Glu"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvsc'", containsString("ENST00000496384.2:c.623T>A"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'start'", numberMatches(208.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'end'", numberMatches(208.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'variantClassification'", containsString("Missense_Mutation"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'exon'", containsString("6/10"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'polyphenScore'", numberMatches(0.817))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'polyphenPrediction'", containsString("possibly_damaging"))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'siftScore'", numberMatches(0.0))
                .body("'annotation_summary'.'transcriptConsequenceSummaries'[2].'siftPrediction'", containsString("deleterious"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'transcriptId'", containsString("ENST00000288602"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'codonChange'", containsString("gTg/gAg"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcids'", containsString("V/E"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcidRef'", containsString("V"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcidAlt'", containsString("E"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'consequenceTerms'", containsString("missense_variant"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'hugoGeneSymbol'", containsString("BRAF"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'hgvspShort'", containsString("p.V600E"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'hgvsp'", containsString("p.Val600Glu"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'hgvsc'", containsString("ENST00000288602.6:c.1799T>A"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'start'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'end'", numberMatches(600.0))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'refSeq'", containsString("NM_004333.4"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'variantClassification'", containsString("Missense_Mutation"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'exon'", containsString("15/18"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'polyphenScore'", numberMatches(0.963))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'polyphenPrediction'", containsString("probably_damaging"))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'siftScore'", numberMatches(0.0))
                .body("'annotation_summary'.'transcriptConsequenceSummary'.'siftPrediction'", containsString("deleterious"));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) res_0.extract().response().jsonPath().getJsonObject("")).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_86() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"4\", " + 
                    " \"start\": 55152095, " + 
                    " \"end\": 55152107, " + 
                    " \"referenceAllele\": \"ATCATGCATGATT\", " + 
                    " \"variantAllele\": \"A\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/genomic?" + 
                    "fields=annotation_summary&fields=nucleotide_context&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'variant'", containsString("4:g.55152096_55152107del"))
                .body("[0].'originalVariantQuery'", containsString("4,55152095,55152107,ATCATGCATGATT,A"))
                .body("[0].'hgvsg'", containsString("4:g.55152096_55152107del"))
                .body("[0].'assembly_name'", containsString("GRCh37"))
                .body("[0].'seq_region_name'", containsString("4"))
                .body("[0].'start'", numberMatches(5.5152096E7))
                .body("[0].'end'", numberMatches(5.5152107E7))
                .body("[0].'allele_string'", containsString("TCATGCATGATT/-"))
                .body("[0].'strand'", numberMatches(1.0))
                .body("[0].'most_severe_consequence'", containsString("inframe_deletion"))
                .body("[0].'transcript_consequences'.size()", equalTo(4))
                .body("[0].'transcript_consequences'[0].'exon'", containsString("18/23"))
                .body("[0].'transcript_consequences'[0].'transcript_id'", containsString("ENST00000257290"))
                .body("[0].'transcript_consequences'[0].'hgvsp'", containsString("ENSP00000257290.5:p.Ile843_Ser847delinsThr"))
                .body("[0].'transcript_consequences'[0].'hgvsc'", containsString("ENST00000257290.5:c.2528_2539del"))
                .body("[0].'transcript_consequences'[0].'variant_allele'", containsString("-"))
                .body("[0].'transcript_consequences'[0].'codons'", containsString("aTCATGCATGATTcg/acg"))
                .body("[0].'transcript_consequences'[0].'protein_id'", containsString("ENSP00000257290"))
                .body("[0].'transcript_consequences'[0].'protein_start'", numberMatches(843.0))
                .body("[0].'transcript_consequences'[0].'protein_end'", numberMatches(847.0))
                .body("[0].'transcript_consequences'[0].'gene_symbol'", containsString("PDGFRA"))
                .body("[0].'transcript_consequences'[0].'gene_id'", containsString("ENSG00000134853"))
                .body("[0].'transcript_consequences'[0].'amino_acids'", containsString("IMHDS/T"))
                .body("[0].'transcript_consequences'[0].'hgnc_id'", containsString("8803"))
                .body("[0].'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("[0].'transcript_consequences'[0].'refseq_transcript_ids'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[0].'refseq_transcript_ids'", hasItems("NM_006206.4"))
                .body("[0].'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[0].'consequence_terms'", hasItems("inframe_deletion"))
                .body("[0].'transcript_consequences'[1].'exon'", containsString("19/24"))
                .body("[0].'transcript_consequences'[1].'transcript_id'", containsString("ENST00000507166"))
                .body("[0].'transcript_consequences'[1].'hgvsp'", containsString("ENSP00000423325.1:p.Ile603_Ser607delinsThr"))
                .body("[0].'transcript_consequences'[1].'hgvsc'", containsString("ENST00000507166.1:c.1808_1819del"))
                .body("[0].'transcript_consequences'[1].'variant_allele'", containsString("-"))
                .body("[0].'transcript_consequences'[1].'codons'", containsString("aTCATGCATGATTcg/acg"))
                .body("[0].'transcript_consequences'[1].'protein_id'", containsString("ENSP00000423325"))
                .body("[0].'transcript_consequences'[1].'protein_start'", numberMatches(603.0))
                .body("[0].'transcript_consequences'[1].'protein_end'", numberMatches(607.0))
                .body("[0].'transcript_consequences'[1].'gene_symbol'", containsString("FIP1L1"))
                .body("[0].'transcript_consequences'[1].'gene_id'", containsString("ENSG00000145216"))
                .body("[0].'transcript_consequences'[1].'amino_acids'", containsString("IMHDS/T"))
                .body("[0].'transcript_consequences'[1].'hgnc_id'", containsString("19124"))
                .body("[0].'transcript_consequences'[1].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[1].'consequence_terms'", hasItems("inframe_deletion"))
                .body("[0].'transcript_consequences'[2].'transcript_id'", containsString("ENST00000507536"))
                .body("[0].'transcript_consequences'[2].'variant_allele'", containsString("-"))
                .body("[0].'transcript_consequences'[2].'gene_symbol'", containsString("PDGFRA"))
                .body("[0].'transcript_consequences'[2].'gene_id'", containsString("ENSG00000134853"))
                .body("[0].'transcript_consequences'[2].'hgnc_id'", containsString("8803"))
                .body("[0].'transcript_consequences'[2].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[2].'consequence_terms'", hasItems("downstream_gene_variant"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[0].'successfully_annotated'", equalTo(true))
                .body("[0].'annotation_summary'.'variant'", containsString("4:g.55152096_55152107del"))
                .body("[0].'annotation_summary'.'genomicLocation'.'chromosome'", containsString("4"))
                .body("[0].'annotation_summary'.'genomicLocation'.'start'", numberMatches(5.5152096E7))
                .body("[0].'annotation_summary'.'genomicLocation'.'end'", numberMatches(5.5152107E7))
                .body("[0].'annotation_summary'.'genomicLocation'.'referenceAllele'", containsString("TCATGCATGATT"))
                .body("[0].'annotation_summary'.'genomicLocation'.'variantAllele'", containsString("-"))
                .body("[0].'annotation_summary'.'strandSign'", containsString("+"))
                .body("[0].'annotation_summary'.'variantType'", containsString("DEL"))
                .body("[0].'annotation_summary'.'assemblyName'", containsString("GRCh37"))
                .body("[0].'annotation_summary'.'canonicalTranscriptId'", containsString("ENST00000257290"))
                .body("[0].'annotation_summary'.'transcriptConsequences'.size()", equalTo(1))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'transcriptId'", containsString("ENST00000257290"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'codonChange'", containsString("aTCATGCATGATTcg/acg"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'aminoAcids'", containsString("IMHDS/T"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'aminoAcidRef'", containsString("IMHDS"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'aminoAcidAlt'", containsString("T"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'consequenceTerms'", containsString("inframe_deletion"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hugoGeneSymbol'", containsString("PDGFRA"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hgvspShort'", containsString("p.I843_S847delinsT"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hgvsp'", containsString("p.Ile843_Ser847delinsThr"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hgvsc'", containsString("ENST00000257290.5:c.2528_2539del"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'start'", numberMatches(843.0))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'end'", numberMatches(847.0))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'refSeq'", containsString("NM_006206.4"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'variantClassification'", containsString("In_Frame_Del"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'exon'", containsString("18/23"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'.size()", equalTo(4))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'transcriptId'", containsString("ENST00000257290"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'codonChange'", containsString("aTCATGCATGATTcg/acg"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcids'", containsString("IMHDS/T"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcidRef'", containsString("IMHDS"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcidAlt'", containsString("T"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'consequenceTerms'", containsString("inframe_deletion"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hugoGeneSymbol'", containsString("PDGFRA"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvspShort'", containsString("p.I843_S847delinsT"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvsp'", containsString("p.Ile843_Ser847delinsThr"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvsc'", containsString("ENST00000257290.5:c.2528_2539del"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'start'", numberMatches(843.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'end'", numberMatches(847.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'refSeq'", containsString("NM_006206.4"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'variantClassification'", containsString("In_Frame_Del"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'exon'", containsString("18/23"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'transcriptId'", containsString("ENST00000507166"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'codonChange'", containsString("aTCATGCATGATTcg/acg"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcids'", containsString("IMHDS/T"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcidRef'", containsString("IMHDS"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcidAlt'", containsString("T"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'consequenceTerms'", containsString("inframe_deletion"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hugoGeneSymbol'", containsString("FIP1L1"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvspShort'", containsString("p.I603_S607delinsT"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvsp'", containsString("p.Ile603_Ser607delinsThr"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvsc'", containsString("ENST00000507166.1:c.1808_1819del"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'start'", numberMatches(603.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'end'", numberMatches(607.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'variantClassification'", containsString("In_Frame_Del"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'exon'", containsString("19/24"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'transcriptId'", containsString("ENST00000507536"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'consequenceTerms'", containsString("downstream_gene_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hugoGeneSymbol'", containsString("PDGFRA"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'variantClassification'", containsString("3'Flank"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'transcriptId'", containsString("ENST00000257290"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'codonChange'", containsString("aTCATGCATGATTcg/acg"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcids'", containsString("IMHDS/T"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcidRef'", containsString("IMHDS"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcidAlt'", containsString("T"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'consequenceTerms'", containsString("inframe_deletion"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hugoGeneSymbol'", containsString("PDGFRA"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hgvspShort'", containsString("p.I843_S847delinsT"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hgvsp'", containsString("p.Ile843_Ser847delinsThr"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hgvsc'", containsString("ENST00000257290.5:c.2528_2539del"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'start'", numberMatches(843.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'end'", numberMatches(847.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'refSeq'", containsString("NM_006206.4"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'variantClassification'", containsString("In_Frame_Del"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'exon'", containsString("18/23"));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_87() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"7\", " + 
                    " \"start\": 140453136, " + 
                    " \"end\": 140453136, " + 
                    " \"referenceAllele\": \"A\", " + 
                    " \"variantAllele\": \"T\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/genomic?" + 
                    "isoformOverrideSource=foo&" + 
                    "fields=annotation_summary&fields=nucleotide_context&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'variant'", containsString("7:g.140453136A>T"))
                .body("[0].'originalVariantQuery'", containsString("7,140453136,140453136,A,T"))
                .body("[0].'hgvsg'", containsString("7:g.140453136A>T"))
                .body("[0].'assembly_name'", containsString("GRCh37"))
                .body("[0].'seq_region_name'", containsString("7"))
                .body("[0].'start'", numberMatches(1.40453136E8))
                .body("[0].'end'", numberMatches(1.40453136E8))
                .body("[0].'allele_string'", containsString("A/T"))
                .body("[0].'strand'", numberMatches(1.0))
                .body("[0].'most_severe_consequence'", containsString("missense_variant"))
                .body("[0].'transcript_consequences'.size()", equalTo(4))
                .body("[0].'transcript_consequences'[0].'exon'", containsString("15/18"))
                .body("[0].'transcript_consequences'[0].'transcript_id'", containsString("ENST00000288602"))
                .body("[0].'transcript_consequences'[0].'hgvsp'", containsString("ENSP00000288602.6:p.Val600Glu"))
                .body("[0].'transcript_consequences'[0].'hgvsc'", containsString("ENST00000288602.6:c.1799T>A"))
                .body("[0].'transcript_consequences'[0].'variant_allele'", containsString("T"))
                .body("[0].'transcript_consequences'[0].'codons'", containsString("gTg/gAg"))
                .body("[0].'transcript_consequences'[0].'protein_id'", containsString("ENSP00000288602"))
                .body("[0].'transcript_consequences'[0].'protein_start'", numberMatches(600.0))
                .body("[0].'transcript_consequences'[0].'protein_end'", numberMatches(600.0))
                .body("[0].'transcript_consequences'[0].'gene_symbol'", containsString("BRAF"))
                .body("[0].'transcript_consequences'[0].'gene_id'", containsString("ENSG00000157764"))
                .body("[0].'transcript_consequences'[0].'amino_acids'", containsString("V/E"))
                .body("[0].'transcript_consequences'[0].'hgnc_id'", containsString("1097"))
                .body("[0].'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("[0].'transcript_consequences'[0].'polyphen_score'", numberMatches(0.963))
                .body("[0].'transcript_consequences'[0].'polyphen_prediction'", containsString("probably_damaging"))
                .body("[0].'transcript_consequences'[0].'sift_score'", numberMatches(0.0))
                .body("[0].'transcript_consequences'[0].'sift_prediction'", containsString("deleterious"))
                .body("[0].'transcript_consequences'[0].'refseq_transcript_ids'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[0].'refseq_transcript_ids'", hasItems("NM_004333.4"))
                .body("[0].'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[0].'consequence_terms'", hasItems("missense_variant"))
                .body("[0].'transcript_consequences'[1].'exon'", containsString("2/6"))
                .body("[0].'transcript_consequences'[1].'transcript_id'", containsString("ENST00000479537"))
                .body("[0].'transcript_consequences'[1].'hgvsp'", containsString("ENSP00000418033.1:p.Val28Glu"))
                .body("[0].'transcript_consequences'[1].'hgvsc'", containsString("ENST00000479537.1:c.83T>A"))
                .body("[0].'transcript_consequences'[1].'variant_allele'", containsString("T"))
                .body("[0].'transcript_consequences'[1].'codons'", containsString("gTg/gAg"))
                .body("[0].'transcript_consequences'[1].'protein_id'", containsString("ENSP00000418033"))
                .body("[0].'transcript_consequences'[1].'protein_start'", numberMatches(28.0))
                .body("[0].'transcript_consequences'[1].'protein_end'", numberMatches(28.0))
                .body("[0].'transcript_consequences'[1].'gene_symbol'", containsString("BRAF"))
                .body("[0].'transcript_consequences'[1].'gene_id'", containsString("ENSG00000157764"))
                .body("[0].'transcript_consequences'[1].'amino_acids'", containsString("V/E"))
                .body("[0].'transcript_consequences'[1].'hgnc_id'", containsString("1097"))
                .body("[0].'transcript_consequences'[1].'polyphen_score'", numberMatches(0.991))
                .body("[0].'transcript_consequences'[1].'polyphen_prediction'", containsString("probably_damaging"))
                .body("[0].'transcript_consequences'[1].'sift_score'", numberMatches(0.01))
                .body("[0].'transcript_consequences'[1].'sift_prediction'", containsString("deleterious"))
                .body("[0].'transcript_consequences'[1].'consequence_terms'.size()", equalTo(2))
                .body("[0].'transcript_consequences'[1].'consequence_terms'", hasItems("missense_variant", "NMD_transcript_variant"))
                .body("[0].'transcript_consequences'[2].'exon'", containsString("6/10"))
                .body("[0].'transcript_consequences'[2].'transcript_id'", containsString("ENST00000496384"))
                .body("[0].'transcript_consequences'[2].'hgvsp'", containsString("ENSP00000419060.1:p.Val208Glu"))
                .body("[0].'transcript_consequences'[2].'hgvsc'", containsString("ENST00000496384.2:c.623T>A"))
                .body("[0].'transcript_consequences'[2].'variant_allele'", containsString("T"))
                .body("[0].'transcript_consequences'[2].'codons'", containsString("gTg/gAg"))
                .body("[0].'transcript_consequences'[2].'protein_id'", containsString("ENSP00000419060"))
                .body("[0].'transcript_consequences'[2].'protein_start'", numberMatches(208.0))
                .body("[0].'transcript_consequences'[2].'protein_end'", numberMatches(208.0))
                .body("[0].'transcript_consequences'[2].'gene_symbol'", containsString("BRAF"))
                .body("[0].'transcript_consequences'[2].'gene_id'", containsString("ENSG00000157764"))
                .body("[0].'transcript_consequences'[2].'amino_acids'", containsString("V/E"))
                .body("[0].'transcript_consequences'[2].'hgnc_id'", containsString("1097"))
                .body("[0].'transcript_consequences'[2].'polyphen_score'", numberMatches(0.817))
                .body("[0].'transcript_consequences'[2].'polyphen_prediction'", containsString("possibly_damaging"))
                .body("[0].'transcript_consequences'[2].'sift_score'", numberMatches(0.0))
                .body("[0].'transcript_consequences'[2].'sift_prediction'", containsString("deleterious"))
                .body("[0].'transcript_consequences'[2].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[2].'consequence_terms'", hasItems("missense_variant"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[0].'successfully_annotated'", equalTo(true))
                .body("[0].'nucleotide_context'.'license'", nullValue())
                .body("[0].'nucleotide_context'.'annotation'.'molecule'", containsString("dna"))
                .body("[0].'nucleotide_context'.'annotation'.'seq'", containsString("CAC"))
                .body("[0].'nucleotide_context'.'annotation'.'hgvs'", containsString("7:g.140453136A>T"))
                .body("[0].'annotation_summary'.'variant'", containsString("7:g.140453136A>T"))
                .body("[0].'annotation_summary'.'genomicLocation'.'chromosome'", containsString("7"))
                .body("[0].'annotation_summary'.'genomicLocation'.'start'", numberMatches(1.40453136E8))
                .body("[0].'annotation_summary'.'genomicLocation'.'end'", numberMatches(1.40453136E8))
                .body("[0].'annotation_summary'.'genomicLocation'.'referenceAllele'", containsString("A"))
                .body("[0].'annotation_summary'.'genomicLocation'.'variantAllele'", containsString("T"))
                .body("[0].'annotation_summary'.'strandSign'", containsString("+"))
                .body("[0].'annotation_summary'.'variantType'", containsString("SNP"))
                .body("[0].'annotation_summary'.'assemblyName'", containsString("GRCh37"))
                .body("[0].'annotation_summary'.'canonicalTranscriptId'", containsString("ENST00000288602"))
                .body("[0].'annotation_summary'.'transcriptConsequences'.size()", equalTo(1))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'transcriptId'", containsString("ENST00000288602"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'codonChange'", containsString("gTg/gAg"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'aminoAcids'", containsString("V/E"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'aminoAcidRef'", containsString("V"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'aminoAcidAlt'", containsString("E"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'consequenceTerms'", containsString("missense_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hugoGeneSymbol'", containsString("BRAF"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hgvspShort'", containsString("p.V600E"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hgvsp'", containsString("p.Val600Glu"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hgvsc'", containsString("ENST00000288602.6:c.1799T>A"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'start'", numberMatches(600.0))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'end'", numberMatches(600.0))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'refSeq'", containsString("NM_004333.4"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'exon'", containsString("15/18"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'polyphenScore'", numberMatches(0.963))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'polyphenPrediction'", containsString("probably_damaging"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'siftScore'", numberMatches(0.0))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'siftPrediction'", containsString("deleterious"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'.size()", equalTo(4))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'transcriptId'", containsString("ENST00000288602"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'codonChange'", containsString("gTg/gAg"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcids'", containsString("V/E"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcidRef'", containsString("V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcidAlt'", containsString("E"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'consequenceTerms'", containsString("missense_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hugoGeneSymbol'", containsString("BRAF"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvspShort'", containsString("p.V600E"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvsp'", containsString("p.Val600Glu"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvsc'", containsString("ENST00000288602.6:c.1799T>A"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'start'", numberMatches(600.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'end'", numberMatches(600.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'refSeq'", containsString("NM_004333.4"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'exon'", containsString("15/18"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'polyphenScore'", numberMatches(0.963))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'polyphenPrediction'", containsString("probably_damaging"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'siftScore'", numberMatches(0.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'siftPrediction'", containsString("deleterious"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'transcriptId'", containsString("ENST00000479537"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'codonChange'", containsString("gTg/gAg"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcids'", containsString("V/E"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcidRef'", containsString("V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcidAlt'", containsString("E"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'consequenceTerms'", containsString("missense_variant,NMD_transcript_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hugoGeneSymbol'", containsString("BRAF"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvspShort'", containsString("p.V28E"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvsp'", containsString("p.Val28Glu"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvsc'", containsString("ENST00000479537.1:c.83T>A"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'start'", numberMatches(28.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'end'", numberMatches(28.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'exon'", containsString("2/6"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'polyphenScore'", numberMatches(0.991))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'polyphenPrediction'", containsString("probably_damaging"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'siftScore'", numberMatches(0.01))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'siftPrediction'", containsString("deleterious"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'transcriptId'", containsString("ENST00000496384"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'codonChange'", containsString("gTg/gAg"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcids'", containsString("V/E"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcidRef'", containsString("V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcidAlt'", containsString("E"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'consequenceTerms'", containsString("missense_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hugoGeneSymbol'", containsString("BRAF"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvspShort'", containsString("p.V208E"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvsp'", containsString("p.Val208Glu"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvsc'", containsString("ENST00000496384.2:c.623T>A"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'start'", numberMatches(208.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'end'", numberMatches(208.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'exon'", containsString("6/10"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'polyphenScore'", numberMatches(0.817))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'polyphenPrediction'", containsString("possibly_damaging"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'siftScore'", numberMatches(0.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'siftPrediction'", containsString("deleterious"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'transcriptId'", containsString("ENST00000288602"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'codonChange'", containsString("gTg/gAg"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcids'", containsString("V/E"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcidRef'", containsString("V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcidAlt'", containsString("E"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'consequenceTerms'", containsString("missense_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hugoGeneSymbol'", containsString("BRAF"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hgvspShort'", containsString("p.V600E"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hgvsp'", containsString("p.Val600Glu"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hgvsc'", containsString("ENST00000288602.6:c.1799T>A"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'start'", numberMatches(600.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'end'", numberMatches(600.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'refSeq'", containsString("NM_004333.4"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'exon'", containsString("15/18"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'polyphenScore'", numberMatches(0.963))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'polyphenPrediction'", containsString("probably_damaging"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'siftScore'", numberMatches(0.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'siftPrediction'", containsString("deleterious"));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_88() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"7\", " + 
                    " \"start\": 140453136, " + 
                    " \"end\": 140453136, " + 
                    " \"referenceAllele\": \"A\", " + 
                    " \"variantAllele\": \"R\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"A9nm43UH_1U_sb\", " + 
                    " \"start\": 520, " + 
                    " \"end\": 229, " + 
                    " \"referenceAllele\": \"TvFPefnWJBD\", " + 
                    " \"variantAllele\": \"Z\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/genomic?" + 
                    "isoformOverrideSource=bkpo&" + 
                    "token=fm&" + 
                    "fields=annotation_summary&fields=9Ip")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'variant'", containsString("7:g.140453136A>R"))
                .body("[0].'originalVariantQuery'", containsString("7,140453136,140453136,A,R"))
                .body("[0].'hgvsg'", containsString("7:g.140453136A>R"))
                .body("[0].'assembly_name'", containsString("GRCh37"))
                .body("[0].'seq_region_name'", containsString("7"))
                .body("[0].'start'", numberMatches(1.40453136E8))
                .body("[0].'end'", numberMatches(1.40453136E8))
                .body("[0].'allele_string'", containsString("A/R"))
                .body("[0].'strand'", numberMatches(1.0))
                .body("[0].'most_severe_consequence'", containsString("coding_sequence_variant"))
                .body("[0].'transcript_consequences'.size()", equalTo(4))
                .body("[0].'transcript_consequences'[0].'exon'", containsString("15/18"))
                .body("[0].'transcript_consequences'[0].'transcript_id'", containsString("ENST00000288602"))
                .body("[0].'transcript_consequences'[0].'variant_allele'", containsString("R"))
                .body("[0].'transcript_consequences'[0].'codons'", containsString("gTg/gYg"))
                .body("[0].'transcript_consequences'[0].'protein_id'", containsString("ENSP00000288602"))
                .body("[0].'transcript_consequences'[0].'protein_start'", numberMatches(600.0))
                .body("[0].'transcript_consequences'[0].'protein_end'", numberMatches(600.0))
                .body("[0].'transcript_consequences'[0].'gene_symbol'", containsString("BRAF"))
                .body("[0].'transcript_consequences'[0].'gene_id'", containsString("ENSG00000157764"))
                .body("[0].'transcript_consequences'[0].'hgnc_id'", containsString("1097"))
                .body("[0].'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("[0].'transcript_consequences'[0].'refseq_transcript_ids'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[0].'refseq_transcript_ids'", hasItems("NM_004333.4"))
                .body("[0].'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[0].'consequence_terms'", hasItems("coding_sequence_variant"))
                .body("[0].'transcript_consequences'[1].'exon'", containsString("2/6"))
                .body("[0].'transcript_consequences'[1].'transcript_id'", containsString("ENST00000479537"))
                .body("[0].'transcript_consequences'[1].'variant_allele'", containsString("R"))
                .body("[0].'transcript_consequences'[1].'codons'", containsString("gTg/gYg"))
                .body("[0].'transcript_consequences'[1].'protein_id'", containsString("ENSP00000418033"))
                .body("[0].'transcript_consequences'[1].'protein_start'", numberMatches(28.0))
                .body("[0].'transcript_consequences'[1].'protein_end'", numberMatches(28.0))
                .body("[0].'transcript_consequences'[1].'gene_symbol'", containsString("BRAF"))
                .body("[0].'transcript_consequences'[1].'gene_id'", containsString("ENSG00000157764"))
                .body("[0].'transcript_consequences'[1].'hgnc_id'", containsString("1097"))
                .body("[0].'transcript_consequences'[1].'consequence_terms'.size()", equalTo(2))
                .body("[0].'transcript_consequences'[1].'consequence_terms'", hasItems("coding_sequence_variant", "NMD_transcript_variant"))
                .body("[0].'transcript_consequences'[2].'exon'", containsString("6/10"))
                .body("[0].'transcript_consequences'[2].'transcript_id'", containsString("ENST00000496384"))
                .body("[0].'transcript_consequences'[2].'variant_allele'", containsString("R"))
                .body("[0].'transcript_consequences'[2].'codons'", containsString("gTg/gYg"))
                .body("[0].'transcript_consequences'[2].'protein_id'", containsString("ENSP00000419060"))
                .body("[0].'transcript_consequences'[2].'protein_start'", numberMatches(208.0))
                .body("[0].'transcript_consequences'[2].'protein_end'", numberMatches(208.0))
                .body("[0].'transcript_consequences'[2].'gene_symbol'", containsString("BRAF"))
                .body("[0].'transcript_consequences'[2].'gene_id'", containsString("ENSG00000157764"))
                .body("[0].'transcript_consequences'[2].'hgnc_id'", containsString("1097"))
                .body("[0].'transcript_consequences'[2].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[2].'consequence_terms'", hasItems("coding_sequence_variant"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[0].'successfully_annotated'", equalTo(true))
                .body("[0].'annotation_summary'.'variant'", containsString("7:g.140453136A>R"))
                .body("[0].'annotation_summary'.'genomicLocation'.'chromosome'", containsString("7"))
                .body("[0].'annotation_summary'.'genomicLocation'.'start'", numberMatches(1.40453136E8))
                .body("[0].'annotation_summary'.'genomicLocation'.'end'", numberMatches(1.40453136E8))
                .body("[0].'annotation_summary'.'genomicLocation'.'referenceAllele'", containsString("A"))
                .body("[0].'annotation_summary'.'genomicLocation'.'variantAllele'", containsString("R"))
                .body("[0].'annotation_summary'.'strandSign'", containsString("+"))
                .body("[0].'annotation_summary'.'variantType'", containsString("SNP"))
                .body("[0].'annotation_summary'.'assemblyName'", containsString("GRCh37"))
                .body("[0].'annotation_summary'.'canonicalTranscriptId'", containsString("ENST00000288602"))
                .body("[0].'annotation_summary'.'transcriptConsequences'.size()", equalTo(1))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'transcriptId'", containsString("ENST00000288602"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'codonChange'", containsString("gTg/gYg"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'consequenceTerms'", containsString("coding_sequence_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hugoGeneSymbol'", containsString("BRAF"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'start'", numberMatches(600.0))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'end'", numberMatches(600.0))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'refSeq'", containsString("NM_004333.4"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'exon'", containsString("15/18"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'.size()", equalTo(4))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'transcriptId'", containsString("ENST00000288602"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'codonChange'", containsString("gTg/gYg"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'consequenceTerms'", containsString("coding_sequence_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hugoGeneSymbol'", containsString("BRAF"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'start'", numberMatches(600.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'end'", numberMatches(600.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'refSeq'", containsString("NM_004333.4"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'exon'", containsString("15/18"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'transcriptId'", containsString("ENST00000479537"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'codonChange'", containsString("gTg/gYg"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'consequenceTerms'", containsString("coding_sequence_variant,NMD_transcript_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hugoGeneSymbol'", containsString("BRAF"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'start'", numberMatches(28.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'end'", numberMatches(28.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'exon'", containsString("2/6"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'transcriptId'", containsString("ENST00000496384"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'codonChange'", containsString("gTg/gYg"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'consequenceTerms'", containsString("coding_sequence_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hugoGeneSymbol'", containsString("BRAF"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'start'", numberMatches(208.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'end'", numberMatches(208.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'exon'", containsString("6/10"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'transcriptId'", containsString("ENST00000288602"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'codonChange'", containsString("gTg/gYg"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'consequenceTerms'", containsString("coding_sequence_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hugoGeneSymbol'", containsString("BRAF"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'start'", numberMatches(600.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'end'", numberMatches(600.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'refSeq'", containsString("NM_004333.4"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'exon'", containsString("15/18"))
                .body("[1].'variant'", containsString("A9nm43UH_1U_sb:g.520_229delinsZ"))
                .body("[1].'originalVariantQuery'", containsString("A9nm43UH_1U_sb,520,229,TvFPefnWJBD,Z"))
                .body("[1].'successfully_annotated'", equalTo(false));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(1)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_89() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"10\", " + 
                    " \"start\": 89624245, " + 
                    " \"end\": 89624245, " + 
                    " \"referenceAllele\": \"G\", " + 
                    " \"variantAllele\": \"T\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"10.0\", " + 
                    " \"start\": 89624242, " + 
                    " \"end\": 89624243, " + 
                    " \"referenceAllele\": \"AA\", " + 
                    " \"variantAllele\": \"-\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"\", " + 
                    " \"start\": 668, " + 
                    " \"end\": 931, " + 
                    " \"referenceAllele\": \"nk\", " + 
                    " \"variantAllele\": \"e6e5IR4\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/genomic?fields=my_variant_info")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(3))
                .body("[0].'variant'", containsString("10:g.89624245G>T"))
                .body("[0].'originalVariantQuery'", containsString("10,89624245,89624245,G,T"))
                .body("[0].'hgvsg'", containsString("10:g.89624245G>T"))
                .body("[0].'assembly_name'", containsString("GRCh37"))
                .body("[0].'seq_region_name'", containsString("10"))
                .body("[0].'start'", numberMatches(8.9624245E7))
                .body("[0].'end'", numberMatches(8.9624245E7))
                .body("[0].'allele_string'", containsString("G/T"))
                .body("[0].'strand'", numberMatches(1.0))
                .body("[0].'most_severe_consequence'", containsString("stop_gained"))
                .body("[0].'transcript_consequences'.size()", equalTo(4))
                .body("[0].'transcript_consequences'[0].'exon'", containsString("1/9"))
                .body("[0].'transcript_consequences'[0].'transcript_id'", containsString("ENST00000371953"))
                .body("[0].'transcript_consequences'[0].'hgvsp'", containsString("ENSP00000361021.3:p.Glu7Ter"))
                .body("[0].'transcript_consequences'[0].'hgvsc'", containsString("ENST00000371953.3:c.19G>T"))
                .body("[0].'transcript_consequences'[0].'variant_allele'", containsString("T"))
                .body("[0].'transcript_consequences'[0].'codons'", containsString("Gag/Tag"))
                .body("[0].'transcript_consequences'[0].'protein_id'", containsString("ENSP00000361021"))
                .body("[0].'transcript_consequences'[0].'protein_start'", numberMatches(7.0))
                .body("[0].'transcript_consequences'[0].'protein_end'", numberMatches(7.0))
                .body("[0].'transcript_consequences'[0].'gene_symbol'", containsString("PTEN"))
                .body("[0].'transcript_consequences'[0].'gene_id'", containsString("ENSG00000171862"))
                .body("[0].'transcript_consequences'[0].'amino_acids'", containsString("E/*"))
                .body("[0].'transcript_consequences'[0].'hgnc_id'", containsString("9588"))
                .body("[0].'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("[0].'transcript_consequences'[0].'refseq_transcript_ids'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[0].'refseq_transcript_ids'", hasItems("NM_000314.4"))
                .body("[0].'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[0].'consequence_terms'", hasItems("stop_gained"))
                .body("[0].'transcript_consequences'[1].'transcript_id'", containsString("ENST00000445946"))
                .body("[0].'transcript_consequences'[1].'variant_allele'", containsString("T"))
                .body("[0].'transcript_consequences'[1].'protein_id'", containsString("ENSP00000392204"))
                .body("[0].'transcript_consequences'[1].'gene_symbol'", containsString("KLLN"))
                .body("[0].'transcript_consequences'[1].'gene_id'", containsString("ENSG00000227268"))
                .body("[0].'transcript_consequences'[1].'hgnc_id'", containsString("37212"))
                .body("[0].'transcript_consequences'[1].'canonical'", containsString("1"))
                .body("[0].'transcript_consequences'[1].'refseq_transcript_ids'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[1].'refseq_transcript_ids'", hasItems("NM_001126049.1"))
                .body("[0].'transcript_consequences'[1].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[1].'consequence_terms'", hasItems("upstream_gene_variant"))
                .body("[0].'transcript_consequences'[2].'exon'", containsString("1/2"))
                .body("[0].'transcript_consequences'[2].'transcript_id'", containsString("ENST00000462694"))
                .body("[0].'transcript_consequences'[2].'hgvsc'", containsString("ENST00000462694.1:n.21G>T"))
                .body("[0].'transcript_consequences'[2].'variant_allele'", containsString("T"))
                .body("[0].'transcript_consequences'[2].'gene_symbol'", containsString("PTEN"))
                .body("[0].'transcript_consequences'[2].'gene_id'", containsString("ENSG00000171862"))
                .body("[0].'transcript_consequences'[2].'hgnc_id'", containsString("9588"))
                .body("[0].'transcript_consequences'[2].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[2].'consequence_terms'", hasItems("non_coding_transcript_exon_variant"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[0].'successfully_annotated'", equalTo(true))
                .body("[0].'my_variant_info'.'license'", nullValue())
                .body("[0].'my_variant_info'.'annotation'.'variant'", containsString("chr10:g.89624245G>T"))
                .body("[0].'my_variant_info'.'annotation'.'query'", containsString("chr10:g.89624245G>T"))
                .body("[0].'my_variant_info'.'annotation'.'hgvs'", containsString("10:g.89624245G>T"))
                .body("[0].'my_variant_info'.'annotation'.'snpeff'.'license'", containsString("http://bit.ly/2suyRKt"))
                .body("[0].'my_variant_info'.'annotation'.'vcf'.'alt'", containsString("T"))
                .body("[0].'my_variant_info'.'annotation'.'vcf'.'position'", containsString("89624245"))
                .body("[0].'my_variant_info'.'annotation'.'vcf'.'ref'", containsString("G"))
                .body("[0].'my_variant_info'.'annotation'.'dbsnp'.'license'", containsString("http://bit.ly/2AqoLOc"))
                .body("[0].'my_variant_info'.'annotation'.'dbsnp'.'alleles'.size()", equalTo(1))
                .body("[0].'my_variant_info'.'annotation'.'dbsnp'.'alleles'[0]", nullValue())
                .body("[0].'my_variant_info'.'annotation'.'dbsnp'.'alt'", containsString("T"))
                .body("[0].'my_variant_info'.'annotation'.'dbsnp'.'chrom'", containsString("10"))
                .body("[0].'my_variant_info'.'annotation'.'dbsnp'.'dbsnpBuild'", numberMatches(156.0))
                .body("[0].'my_variant_info'.'annotation'.'dbsnp'.'flags'.size()", equalTo(1))
                .body("[0].'my_variant_info'.'annotation'.'dbsnp'.'flags'[0]", nullValue())
                .body("[0].'my_variant_info'.'annotation'.'dbsnp'.'hg19'.'start'", numberMatches(8.9624245E7))
                .body("[0].'my_variant_info'.'annotation'.'dbsnp'.'hg19'.'end'", numberMatches(8.9624245E7))
                .body("[0].'my_variant_info'.'annotation'.'dbsnp'.'ref'", containsString("G"))
                .body("[0].'my_variant_info'.'annotation'.'dbsnp'.'rsid'", containsString("rs1554890335"))
                .body("[0].'my_variant_info'.'annotation'.'dbsnp'.'vartype'", containsString("snv"))
                .body("[0].'my_variant_info'.'annotation'.'cosmic'.'license'", containsString("http://bit.ly/2VMkY7R"))
                .body("[0].'my_variant_info'.'annotation'.'cosmic'.'alt'", containsString("T"))
                .body("[0].'my_variant_info'.'annotation'.'cosmic'.'chrom'", containsString("10"))
                .body("[0].'my_variant_info'.'annotation'.'cosmic'.'cosmicId'", containsString("COSM5298"))
                .body("[0].'my_variant_info'.'annotation'.'cosmic'.'hg19'.'start'", numberMatches(8.9624245E7))
                .body("[0].'my_variant_info'.'annotation'.'cosmic'.'hg19'.'end'", numberMatches(8.9624245E7))
                .body("[0].'my_variant_info'.'annotation'.'cosmic'.'mutFreq'", numberMatches(0.19))
                .body("[0].'my_variant_info'.'annotation'.'cosmic'.'mutNt'", containsString("G>T"))
                .body("[0].'my_variant_info'.'annotation'.'cosmic'.'ref'", containsString("G"))
                .body("[0].'my_variant_info'.'annotation'.'cosmic'.'tumorSite'", containsString("large_intestine"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'license'", containsString("http://bit.ly/2SQdcI0"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'alleleId'", numberMatches(486042.0))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'alt'", containsString("T"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'chrom'", containsString("10"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'cytogenic'", containsString("10q23.31"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'gene'.'symbol'", containsString("PTEN"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'hg19'.'start'", numberMatches(8.9624245E7))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'hg19'.'end'", numberMatches(8.9624245E7))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'hg38'.'start'", containsString("87864488"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'hg38'.'end'", containsString("87864488"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'hgvs'.'coding'.size()", equalTo(3))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'hgvs'.'coding'", hasItems("NM_000314.8:c.19G>T", "NM_001304717.5:c.538G>T", "NM_001304718.2:c.-687G>T"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'hgvs'.'genomic'.size()", equalTo(6))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'hgvs'.'genomic'", hasItems("LRG_1087:g.3950C>A", "LRG_311:g.6050G>T", "NC_000010.10:g.89624245G>T", "NC_000010.11:g.87864488G>T", "NG_007466.2:g.6050G>T", "NG_033079.1:g.3950C>A"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'hgvs'.'protein'.size()", equalTo(3))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'hgvs'.'protein'", hasItems("", "NP_000305.3:p.Glu7Ter", "NP_001291646.4:p.Glu180Ter"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'rcv'.size()", equalTo(2))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'rcv'[0].'accession'", containsString("RCV000585486"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'rcv'[0].'clinicalSignificance'", containsString("Pathogenic"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'rcv'[0].'origin'", containsString("germline"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'rcv'[0].'preferredName'", containsString("NM_000314.8(PTEN):c.19G>T (p.Glu7Ter)"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'rcv'[1].'accession'", containsString("RCV003451323"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'rcv'[1].'clinicalSignificance'", containsString("Pathogenic"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'rcv'[1].'origin'", containsString("unknown"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'rcv'[1].'preferredName'", containsString("NM_000314.8(PTEN):c.19G>T (p.Glu7Ter)"))
                .body("[0].'my_variant_info'.'annotation'.'clinVar'.'variantId'", numberMatches(493079.0))
                .body("[1].'variant'", containsString("10.0:g.89624242_89624243del"))
                .body("[1].'originalVariantQuery'", containsString("10.0,89624242,89624243,AA,-"))
                .body("[1].'successfully_annotated'", equalTo(false))
                .body("[2].'variant'", containsString(":g.668_931delinse6e5IR4"))
                .body("[2].'originalVariantQuery'", containsString(",668,931,nk,e6e5IR4"))
                .body("[2].'successfully_annotated'", equalTo(false));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(1)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(2)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_90() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"12\", " + 
                    " \"start\": 25398284, " + 
                    " \"end\": 25398284, " + 
                    " \"referenceAllele\": \"C\", " + 
                    " \"variantAllele\": \"A\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"_EM_606_XYZ_\", " + 
                    " \"start\": 25398283, " + 
                    " \"end\": 25398540, " + 
                    " \"referenceAllele\": \"AC\", " + 
                    " \"variantAllele\": \"AA\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/genomic?" + 
                    "isoformOverrideSource=foo&" + 
                    "token=foo&" + 
                    "fields=annotation_summary&fields=_EM_605_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'variant'", containsString("12:g.25398284C>A"))
                .body("[0].'originalVariantQuery'", containsString("12,25398284,25398284,C,A"))
                .body("[0].'hgvsg'", containsString("12:g.25398284C>A"))
                .body("[0].'assembly_name'", containsString("GRCh37"))
                .body("[0].'seq_region_name'", containsString("12"))
                .body("[0].'start'", numberMatches(2.5398284E7))
                .body("[0].'end'", numberMatches(2.5398284E7))
                .body("[0].'allele_string'", containsString("C/A"))
                .body("[0].'strand'", numberMatches(1.0))
                .body("[0].'most_severe_consequence'", containsString("missense_variant"))
                .body("[0].'transcript_consequences'.size()", equalTo(4))
                .body("[0].'transcript_consequences'[0].'exon'", containsString("2/6"))
                .body("[0].'transcript_consequences'[0].'transcript_id'", containsString("ENST00000256078"))
                .body("[0].'transcript_consequences'[0].'hgvsp'", containsString("ENSP00000256078.4:p.Gly12Val"))
                .body("[0].'transcript_consequences'[0].'hgvsc'", containsString("ENST00000256078.4:c.35G>T"))
                .body("[0].'transcript_consequences'[0].'variant_allele'", containsString("A"))
                .body("[0].'transcript_consequences'[0].'codons'", containsString("gGt/gTt"))
                .body("[0].'transcript_consequences'[0].'protein_id'", containsString("ENSP00000256078"))
                .body("[0].'transcript_consequences'[0].'protein_start'", numberMatches(12.0))
                .body("[0].'transcript_consequences'[0].'protein_end'", numberMatches(12.0))
                .body("[0].'transcript_consequences'[0].'gene_symbol'", containsString("KRAS"))
                .body("[0].'transcript_consequences'[0].'gene_id'", containsString("ENSG00000133703"))
                .body("[0].'transcript_consequences'[0].'amino_acids'", containsString("G/V"))
                .body("[0].'transcript_consequences'[0].'hgnc_id'", containsString("6407"))
                .body("[0].'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("[0].'transcript_consequences'[0].'polyphen_score'", numberMatches(0.972))
                .body("[0].'transcript_consequences'[0].'polyphen_prediction'", containsString("probably_damaging"))
                .body("[0].'transcript_consequences'[0].'sift_score'", numberMatches(0.0))
                .body("[0].'transcript_consequences'[0].'sift_prediction'", containsString("deleterious"))
                .body("[0].'transcript_consequences'[0].'refseq_transcript_ids'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[0].'refseq_transcript_ids'", hasItems("NM_033360.2"))
                .body("[0].'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[0].'consequence_terms'", hasItems("missense_variant"))
                .body("[0].'transcript_consequences'[1].'exon'", containsString("2/5"))
                .body("[0].'transcript_consequences'[1].'transcript_id'", containsString("ENST00000311936"))
                .body("[0].'transcript_consequences'[1].'hgvsp'", containsString("ENSP00000308495.3:p.Gly12Val"))
                .body("[0].'transcript_consequences'[1].'hgvsc'", containsString("ENST00000311936.3:c.35G>T"))
                .body("[0].'transcript_consequences'[1].'variant_allele'", containsString("A"))
                .body("[0].'transcript_consequences'[1].'codons'", containsString("gGt/gTt"))
                .body("[0].'transcript_consequences'[1].'protein_id'", containsString("ENSP00000308495"))
                .body("[0].'transcript_consequences'[1].'protein_start'", numberMatches(12.0))
                .body("[0].'transcript_consequences'[1].'protein_end'", numberMatches(12.0))
                .body("[0].'transcript_consequences'[1].'gene_symbol'", containsString("KRAS"))
                .body("[0].'transcript_consequences'[1].'gene_id'", containsString("ENSG00000133703"))
                .body("[0].'transcript_consequences'[1].'amino_acids'", containsString("G/V"))
                .body("[0].'transcript_consequences'[1].'hgnc_id'", containsString("6407"))
                .body("[0].'transcript_consequences'[1].'polyphen_score'", numberMatches(0.96))
                .body("[0].'transcript_consequences'[1].'polyphen_prediction'", containsString("probably_damaging"))
                .body("[0].'transcript_consequences'[1].'sift_score'", numberMatches(0.0))
                .body("[0].'transcript_consequences'[1].'sift_prediction'", containsString("deleterious"))
                .body("[0].'transcript_consequences'[1].'refseq_transcript_ids'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[1].'refseq_transcript_ids'", hasItems("NM_004985.3"))
                .body("[0].'transcript_consequences'[1].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[1].'consequence_terms'", hasItems("missense_variant"))
                .body("[0].'transcript_consequences'[2].'exon'", containsString("2/3"))
                .body("[0].'transcript_consequences'[2].'transcript_id'", containsString("ENST00000556131"))
                .body("[0].'transcript_consequences'[2].'hgvsp'", containsString("ENSP00000451856.1:p.Gly12Val"))
                .body("[0].'transcript_consequences'[2].'hgvsc'", containsString("ENST00000556131.1:c.35G>T"))
                .body("[0].'transcript_consequences'[2].'variant_allele'", containsString("A"))
                .body("[0].'transcript_consequences'[2].'codons'", containsString("gGt/gTt"))
                .body("[0].'transcript_consequences'[2].'protein_id'", containsString("ENSP00000451856"))
                .body("[0].'transcript_consequences'[2].'protein_start'", numberMatches(12.0))
                .body("[0].'transcript_consequences'[2].'protein_end'", numberMatches(12.0))
                .body("[0].'transcript_consequences'[2].'gene_symbol'", containsString("KRAS"))
                .body("[0].'transcript_consequences'[2].'gene_id'", containsString("ENSG00000133703"))
                .body("[0].'transcript_consequences'[2].'amino_acids'", containsString("G/V"))
                .body("[0].'transcript_consequences'[2].'hgnc_id'", containsString("6407"))
                .body("[0].'transcript_consequences'[2].'polyphen_score'", numberMatches(0.884))
                .body("[0].'transcript_consequences'[2].'polyphen_prediction'", containsString("possibly_damaging"))
                .body("[0].'transcript_consequences'[2].'sift_score'", numberMatches(0.0))
                .body("[0].'transcript_consequences'[2].'sift_prediction'", containsString("deleterious"))
                .body("[0].'transcript_consequences'[2].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[2].'consequence_terms'", hasItems("missense_variant"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[0].'successfully_annotated'", equalTo(true))
                .body("[0].'annotation_summary'.'variant'", containsString("12:g.25398284C>A"))
                .body("[0].'annotation_summary'.'genomicLocation'.'chromosome'", containsString("12"))
                .body("[0].'annotation_summary'.'genomicLocation'.'start'", numberMatches(2.5398284E7))
                .body("[0].'annotation_summary'.'genomicLocation'.'end'", numberMatches(2.5398284E7))
                .body("[0].'annotation_summary'.'genomicLocation'.'referenceAllele'", containsString("C"))
                .body("[0].'annotation_summary'.'genomicLocation'.'variantAllele'", containsString("A"))
                .body("[0].'annotation_summary'.'strandSign'", containsString("+"))
                .body("[0].'annotation_summary'.'variantType'", containsString("SNP"))
                .body("[0].'annotation_summary'.'assemblyName'", containsString("GRCh37"))
                .body("[0].'annotation_summary'.'canonicalTranscriptId'", containsString("ENST00000256078"))
                .body("[0].'annotation_summary'.'transcriptConsequences'.size()", equalTo(1))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'transcriptId'", containsString("ENST00000256078"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'codonChange'", containsString("gGt/gTt"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'aminoAcids'", containsString("G/V"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'aminoAcidRef'", containsString("G"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'aminoAcidAlt'", containsString("V"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'consequenceTerms'", containsString("missense_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hugoGeneSymbol'", containsString("KRAS"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hgvspShort'", containsString("p.G12V"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hgvsp'", containsString("p.Gly12Val"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hgvsc'", containsString("ENST00000256078.4:c.35G>T"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'start'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'end'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'refSeq'", containsString("NM_033360.2"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'exon'", containsString("2/6"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'polyphenScore'", numberMatches(0.972))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'polyphenPrediction'", containsString("probably_damaging"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'siftScore'", numberMatches(0.0))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'siftPrediction'", containsString("deleterious"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'.size()", equalTo(4))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'transcriptId'", containsString("ENST00000256078"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'codonChange'", containsString("gGt/gTt"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcids'", containsString("G/V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcidRef'", containsString("G"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcidAlt'", containsString("V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'consequenceTerms'", containsString("missense_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hugoGeneSymbol'", containsString("KRAS"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvspShort'", containsString("p.G12V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvsp'", containsString("p.Gly12Val"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvsc'", containsString("ENST00000256078.4:c.35G>T"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'start'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'end'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'refSeq'", containsString("NM_033360.2"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'exon'", containsString("2/6"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'polyphenScore'", numberMatches(0.972))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'polyphenPrediction'", containsString("probably_damaging"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'siftScore'", numberMatches(0.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'siftPrediction'", containsString("deleterious"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'transcriptId'", containsString("ENST00000311936"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'codonChange'", containsString("gGt/gTt"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcids'", containsString("G/V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcidRef'", containsString("G"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcidAlt'", containsString("V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'consequenceTerms'", containsString("missense_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hugoGeneSymbol'", containsString("KRAS"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvspShort'", containsString("p.G12V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvsp'", containsString("p.Gly12Val"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvsc'", containsString("ENST00000311936.3:c.35G>T"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'start'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'end'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'refSeq'", containsString("NM_004985.3"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'exon'", containsString("2/5"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'polyphenScore'", numberMatches(0.96))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'polyphenPrediction'", containsString("probably_damaging"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'siftScore'", numberMatches(0.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'siftPrediction'", containsString("deleterious"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'transcriptId'", containsString("ENST00000556131"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'codonChange'", containsString("gGt/gTt"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcids'", containsString("G/V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcidRef'", containsString("G"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcidAlt'", containsString("V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'consequenceTerms'", containsString("missense_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hugoGeneSymbol'", containsString("KRAS"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvspShort'", containsString("p.G12V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvsp'", containsString("p.Gly12Val"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvsc'", containsString("ENST00000556131.1:c.35G>T"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'start'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'end'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'exon'", containsString("2/3"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'polyphenScore'", numberMatches(0.884))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'polyphenPrediction'", containsString("possibly_damaging"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'siftScore'", numberMatches(0.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'siftPrediction'", containsString("deleterious"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'transcriptId'", containsString("ENST00000256078"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'codonChange'", containsString("gGt/gTt"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcids'", containsString("G/V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcidRef'", containsString("G"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcidAlt'", containsString("V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'consequenceTerms'", containsString("missense_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hugoGeneSymbol'", containsString("KRAS"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hgvspShort'", containsString("p.G12V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hgvsp'", containsString("p.Gly12Val"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hgvsc'", containsString("ENST00000256078.4:c.35G>T"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'start'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'end'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'refSeq'", containsString("NM_033360.2"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'exon'", containsString("2/6"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'polyphenScore'", numberMatches(0.972))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'polyphenPrediction'", containsString("probably_damaging"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'siftScore'", numberMatches(0.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'siftPrediction'", containsString("deleterious"))
                .body("[1].'variant'", containsString("_EM_606_XYZ_:g.25398284C>A"))
                .body("[1].'originalVariantQuery'", containsString("_EM_606_XYZ_,25398283,25398540,AC,AA"))
                .body("[1].'successfully_annotated'", equalTo(false));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(1)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_91() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"12\", " + 
                    " \"start\": 25398284, " + 
                    " \"end\": 25398284, " + 
                    " \"referenceAllele\": \"C\", " + 
                    " \"variantAllele\": \"A\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"12\", " + 
                    " \"start\": 25398283, " + 
                    " \"end\": 25398284, " + 
                    " \"referenceAllele\": \"AC\", " + 
                    " \"variantAllele\": \"AA\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/genomic?" + 
                    "fields=annotation_summary&fields=nucleotide_context&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'variant'", containsString("12:g.25398284C>A"))
                .body("[0].'originalVariantQuery'", containsString("12,25398284,25398284,C,A"))
                .body("[0].'hgvsg'", containsString("12:g.25398284C>A"))
                .body("[0].'assembly_name'", containsString("GRCh37"))
                .body("[0].'seq_region_name'", containsString("12"))
                .body("[0].'start'", numberMatches(2.5398284E7))
                .body("[0].'end'", numberMatches(2.5398284E7))
                .body("[0].'allele_string'", containsString("C/A"))
                .body("[0].'strand'", numberMatches(1.0))
                .body("[0].'most_severe_consequence'", containsString("missense_variant"))
                .body("[0].'transcript_consequences'.size()", equalTo(4))
                .body("[0].'transcript_consequences'[0].'exon'", containsString("2/6"))
                .body("[0].'transcript_consequences'[0].'transcript_id'", containsString("ENST00000256078"))
                .body("[0].'transcript_consequences'[0].'hgvsp'", containsString("ENSP00000256078.4:p.Gly12Val"))
                .body("[0].'transcript_consequences'[0].'hgvsc'", containsString("ENST00000256078.4:c.35G>T"))
                .body("[0].'transcript_consequences'[0].'variant_allele'", containsString("A"))
                .body("[0].'transcript_consequences'[0].'codons'", containsString("gGt/gTt"))
                .body("[0].'transcript_consequences'[0].'protein_id'", containsString("ENSP00000256078"))
                .body("[0].'transcript_consequences'[0].'protein_start'", numberMatches(12.0))
                .body("[0].'transcript_consequences'[0].'protein_end'", numberMatches(12.0))
                .body("[0].'transcript_consequences'[0].'gene_symbol'", containsString("KRAS"))
                .body("[0].'transcript_consequences'[0].'gene_id'", containsString("ENSG00000133703"))
                .body("[0].'transcript_consequences'[0].'amino_acids'", containsString("G/V"))
                .body("[0].'transcript_consequences'[0].'hgnc_id'", containsString("6407"))
                .body("[0].'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("[0].'transcript_consequences'[0].'polyphen_score'", numberMatches(0.972))
                .body("[0].'transcript_consequences'[0].'polyphen_prediction'", containsString("probably_damaging"))
                .body("[0].'transcript_consequences'[0].'sift_score'", numberMatches(0.0))
                .body("[0].'transcript_consequences'[0].'sift_prediction'", containsString("deleterious"))
                .body("[0].'transcript_consequences'[0].'refseq_transcript_ids'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[0].'refseq_transcript_ids'", hasItems("NM_033360.2"))
                .body("[0].'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[0].'consequence_terms'", hasItems("missense_variant"))
                .body("[0].'transcript_consequences'[1].'exon'", containsString("2/5"))
                .body("[0].'transcript_consequences'[1].'transcript_id'", containsString("ENST00000311936"))
                .body("[0].'transcript_consequences'[1].'hgvsp'", containsString("ENSP00000308495.3:p.Gly12Val"))
                .body("[0].'transcript_consequences'[1].'hgvsc'", containsString("ENST00000311936.3:c.35G>T"))
                .body("[0].'transcript_consequences'[1].'variant_allele'", containsString("A"))
                .body("[0].'transcript_consequences'[1].'codons'", containsString("gGt/gTt"))
                .body("[0].'transcript_consequences'[1].'protein_id'", containsString("ENSP00000308495"))
                .body("[0].'transcript_consequences'[1].'protein_start'", numberMatches(12.0))
                .body("[0].'transcript_consequences'[1].'protein_end'", numberMatches(12.0))
                .body("[0].'transcript_consequences'[1].'gene_symbol'", containsString("KRAS"))
                .body("[0].'transcript_consequences'[1].'gene_id'", containsString("ENSG00000133703"))
                .body("[0].'transcript_consequences'[1].'amino_acids'", containsString("G/V"))
                .body("[0].'transcript_consequences'[1].'hgnc_id'", containsString("6407"))
                .body("[0].'transcript_consequences'[1].'polyphen_score'", numberMatches(0.96))
                .body("[0].'transcript_consequences'[1].'polyphen_prediction'", containsString("probably_damaging"))
                .body("[0].'transcript_consequences'[1].'sift_score'", numberMatches(0.0))
                .body("[0].'transcript_consequences'[1].'sift_prediction'", containsString("deleterious"))
                .body("[0].'transcript_consequences'[1].'refseq_transcript_ids'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[1].'refseq_transcript_ids'", hasItems("NM_004985.3"))
                .body("[0].'transcript_consequences'[1].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[1].'consequence_terms'", hasItems("missense_variant"))
                .body("[0].'transcript_consequences'[2].'exon'", containsString("2/3"))
                .body("[0].'transcript_consequences'[2].'transcript_id'", containsString("ENST00000556131"))
                .body("[0].'transcript_consequences'[2].'hgvsp'", containsString("ENSP00000451856.1:p.Gly12Val"))
                .body("[0].'transcript_consequences'[2].'hgvsc'", containsString("ENST00000556131.1:c.35G>T"))
                .body("[0].'transcript_consequences'[2].'variant_allele'", containsString("A"))
                .body("[0].'transcript_consequences'[2].'codons'", containsString("gGt/gTt"))
                .body("[0].'transcript_consequences'[2].'protein_id'", containsString("ENSP00000451856"))
                .body("[0].'transcript_consequences'[2].'protein_start'", numberMatches(12.0))
                .body("[0].'transcript_consequences'[2].'protein_end'", numberMatches(12.0))
                .body("[0].'transcript_consequences'[2].'gene_symbol'", containsString("KRAS"))
                .body("[0].'transcript_consequences'[2].'gene_id'", containsString("ENSG00000133703"))
                .body("[0].'transcript_consequences'[2].'amino_acids'", containsString("G/V"))
                .body("[0].'transcript_consequences'[2].'hgnc_id'", containsString("6407"))
                .body("[0].'transcript_consequences'[2].'polyphen_score'", numberMatches(0.884))
                .body("[0].'transcript_consequences'[2].'polyphen_prediction'", containsString("possibly_damaging"))
                .body("[0].'transcript_consequences'[2].'sift_score'", numberMatches(0.0))
                .body("[0].'transcript_consequences'[2].'sift_prediction'", containsString("deleterious"))
                .body("[0].'transcript_consequences'[2].'consequence_terms'.size()", equalTo(1))
                .body("[0].'transcript_consequences'[2].'consequence_terms'", hasItems("missense_variant"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[0].'successfully_annotated'", equalTo(true))
                .body("[0].'nucleotide_context'.'license'", nullValue())
                .body("[0].'nucleotide_context'.'annotation'.'molecule'", containsString("dna"))
                .body("[0].'nucleotide_context'.'annotation'.'seq'", containsString("ACC"))
                .body("[0].'nucleotide_context'.'annotation'.'hgvs'", containsString("12:g.25398284C>A"))
                .body("[0].'annotation_summary'.'variant'", containsString("12:g.25398284C>A"))
                .body("[0].'annotation_summary'.'genomicLocation'.'chromosome'", containsString("12"))
                .body("[0].'annotation_summary'.'genomicLocation'.'start'", numberMatches(2.5398284E7))
                .body("[0].'annotation_summary'.'genomicLocation'.'end'", numberMatches(2.5398284E7))
                .body("[0].'annotation_summary'.'genomicLocation'.'referenceAllele'", containsString("C"))
                .body("[0].'annotation_summary'.'genomicLocation'.'variantAllele'", containsString("A"))
                .body("[0].'annotation_summary'.'strandSign'", containsString("+"))
                .body("[0].'annotation_summary'.'variantType'", containsString("SNP"))
                .body("[0].'annotation_summary'.'assemblyName'", containsString("GRCh37"))
                .body("[0].'annotation_summary'.'canonicalTranscriptId'", containsString("ENST00000256078"))
                .body("[0].'annotation_summary'.'transcriptConsequences'.size()", equalTo(1))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'transcriptId'", containsString("ENST00000256078"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'codonChange'", containsString("gGt/gTt"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'aminoAcids'", containsString("G/V"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'aminoAcidRef'", containsString("G"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'aminoAcidAlt'", containsString("V"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'consequenceTerms'", containsString("missense_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hugoGeneSymbol'", containsString("KRAS"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hgvspShort'", containsString("p.G12V"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hgvsp'", containsString("p.Gly12Val"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'hgvsc'", containsString("ENST00000256078.4:c.35G>T"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'start'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'end'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'refSeq'", containsString("NM_033360.2"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'exon'", containsString("2/6"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'polyphenScore'", numberMatches(0.972))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'polyphenPrediction'", containsString("probably_damaging"))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'siftScore'", numberMatches(0.0))
                .body("[0].'annotation_summary'.'transcriptConsequences'[0].'siftPrediction'", containsString("deleterious"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'.size()", equalTo(4))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'transcriptId'", containsString("ENST00000256078"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'codonChange'", containsString("gGt/gTt"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcids'", containsString("G/V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcidRef'", containsString("G"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcidAlt'", containsString("V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'consequenceTerms'", containsString("missense_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hugoGeneSymbol'", containsString("KRAS"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvspShort'", containsString("p.G12V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvsp'", containsString("p.Gly12Val"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvsc'", containsString("ENST00000256078.4:c.35G>T"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'start'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'end'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'refSeq'", containsString("NM_033360.2"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'exon'", containsString("2/6"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'polyphenScore'", numberMatches(0.972))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'polyphenPrediction'", containsString("probably_damaging"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'siftScore'", numberMatches(0.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[0].'siftPrediction'", containsString("deleterious"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'transcriptId'", containsString("ENST00000311936"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'codonChange'", containsString("gGt/gTt"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcids'", containsString("G/V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcidRef'", containsString("G"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcidAlt'", containsString("V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'consequenceTerms'", containsString("missense_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hugoGeneSymbol'", containsString("KRAS"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvspShort'", containsString("p.G12V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvsp'", containsString("p.Gly12Val"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvsc'", containsString("ENST00000311936.3:c.35G>T"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'start'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'end'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'refSeq'", containsString("NM_004985.3"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'exon'", containsString("2/5"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'polyphenScore'", numberMatches(0.96))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'polyphenPrediction'", containsString("probably_damaging"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'siftScore'", numberMatches(0.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[1].'siftPrediction'", containsString("deleterious"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'transcriptId'", containsString("ENST00000556131"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'codonChange'", containsString("gGt/gTt"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcids'", containsString("G/V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcidRef'", containsString("G"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcidAlt'", containsString("V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'consequenceTerms'", containsString("missense_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hugoGeneSymbol'", containsString("KRAS"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvspShort'", containsString("p.G12V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvsp'", containsString("p.Gly12Val"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvsc'", containsString("ENST00000556131.1:c.35G>T"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'start'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'end'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'exon'", containsString("2/3"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'polyphenScore'", numberMatches(0.884))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'polyphenPrediction'", containsString("possibly_damaging"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'siftScore'", numberMatches(0.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummaries'[2].'siftPrediction'", containsString("deleterious"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'transcriptId'", containsString("ENST00000256078"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'codonChange'", containsString("gGt/gTt"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcids'", containsString("G/V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcidRef'", containsString("G"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcidAlt'", containsString("V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'consequenceTerms'", containsString("missense_variant"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hugoGeneSymbol'", containsString("KRAS"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hgvspShort'", containsString("p.G12V"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hgvsp'", containsString("p.Gly12Val"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'hgvsc'", containsString("ENST00000256078.4:c.35G>T"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'start'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'end'", numberMatches(12.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'refSeq'", containsString("NM_033360.2"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'variantClassification'", containsString("Missense_Mutation"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'exon'", containsString("2/6"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'polyphenScore'", numberMatches(0.972))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'polyphenPrediction'", containsString("probably_damaging"))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'siftScore'", numberMatches(0.0))
                .body("[0].'annotation_summary'.'transcriptConsequenceSummary'.'siftPrediction'", containsString("deleterious"))
                .body("[1].'variant'", containsString("12:g.25398284C>A"))
                .body("[1].'originalVariantQuery'", containsString("12,25398283,25398284,AC,AA"))
                .body("[1].'hgvsg'", containsString("12:g.25398284C>A"))
                .body("[1].'assembly_name'", containsString("GRCh37"))
                .body("[1].'seq_region_name'", containsString("12"))
                .body("[1].'start'", numberMatches(2.5398284E7))
                .body("[1].'end'", numberMatches(2.5398284E7))
                .body("[1].'allele_string'", containsString("C/A"))
                .body("[1].'strand'", numberMatches(1.0))
                .body("[1].'most_severe_consequence'", containsString("missense_variant"))
                .body("[1].'transcript_consequences'.size()", equalTo(4))
                .body("[1].'transcript_consequences'[0].'exon'", containsString("2/6"))
                .body("[1].'transcript_consequences'[0].'transcript_id'", containsString("ENST00000256078"))
                .body("[1].'transcript_consequences'[0].'hgvsp'", containsString("ENSP00000256078.4:p.Gly12Val"))
                .body("[1].'transcript_consequences'[0].'hgvsc'", containsString("ENST00000256078.4:c.35G>T"))
                .body("[1].'transcript_consequences'[0].'variant_allele'", containsString("A"))
                .body("[1].'transcript_consequences'[0].'codons'", containsString("gGt/gTt"))
                .body("[1].'transcript_consequences'[0].'protein_id'", containsString("ENSP00000256078"))
                .body("[1].'transcript_consequences'[0].'protein_start'", numberMatches(12.0))
                .body("[1].'transcript_consequences'[0].'protein_end'", numberMatches(12.0))
                .body("[1].'transcript_consequences'[0].'gene_symbol'", containsString("KRAS"))
                .body("[1].'transcript_consequences'[0].'gene_id'", containsString("ENSG00000133703"))
                .body("[1].'transcript_consequences'[0].'amino_acids'", containsString("G/V"))
                .body("[1].'transcript_consequences'[0].'hgnc_id'", containsString("6407"))
                .body("[1].'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("[1].'transcript_consequences'[0].'polyphen_score'", numberMatches(0.972))
                .body("[1].'transcript_consequences'[0].'polyphen_prediction'", containsString("probably_damaging"))
                .body("[1].'transcript_consequences'[0].'sift_score'", numberMatches(0.0))
                .body("[1].'transcript_consequences'[0].'sift_prediction'", containsString("deleterious"))
                .body("[1].'transcript_consequences'[0].'refseq_transcript_ids'.size()", equalTo(1))
                .body("[1].'transcript_consequences'[0].'refseq_transcript_ids'", hasItems("NM_033360.2"))
                .body("[1].'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("[1].'transcript_consequences'[0].'consequence_terms'", hasItems("missense_variant"))
                .body("[1].'transcript_consequences'[1].'exon'", containsString("2/5"))
                .body("[1].'transcript_consequences'[1].'transcript_id'", containsString("ENST00000311936"))
                .body("[1].'transcript_consequences'[1].'hgvsp'", containsString("ENSP00000308495.3:p.Gly12Val"))
                .body("[1].'transcript_consequences'[1].'hgvsc'", containsString("ENST00000311936.3:c.35G>T"))
                .body("[1].'transcript_consequences'[1].'variant_allele'", containsString("A"))
                .body("[1].'transcript_consequences'[1].'codons'", containsString("gGt/gTt"))
                .body("[1].'transcript_consequences'[1].'protein_id'", containsString("ENSP00000308495"))
                .body("[1].'transcript_consequences'[1].'protein_start'", numberMatches(12.0))
                .body("[1].'transcript_consequences'[1].'protein_end'", numberMatches(12.0))
                .body("[1].'transcript_consequences'[1].'gene_symbol'", containsString("KRAS"))
                .body("[1].'transcript_consequences'[1].'gene_id'", containsString("ENSG00000133703"))
                .body("[1].'transcript_consequences'[1].'amino_acids'", containsString("G/V"))
                .body("[1].'transcript_consequences'[1].'hgnc_id'", containsString("6407"))
                .body("[1].'transcript_consequences'[1].'polyphen_score'", numberMatches(0.96))
                .body("[1].'transcript_consequences'[1].'polyphen_prediction'", containsString("probably_damaging"))
                .body("[1].'transcript_consequences'[1].'sift_score'", numberMatches(0.0))
                .body("[1].'transcript_consequences'[1].'sift_prediction'", containsString("deleterious"))
                .body("[1].'transcript_consequences'[1].'refseq_transcript_ids'.size()", equalTo(1))
                .body("[1].'transcript_consequences'[1].'refseq_transcript_ids'", hasItems("NM_004985.3"))
                .body("[1].'transcript_consequences'[1].'consequence_terms'.size()", equalTo(1))
                .body("[1].'transcript_consequences'[1].'consequence_terms'", hasItems("missense_variant"))
                .body("[1].'transcript_consequences'[2].'exon'", containsString("2/3"))
                .body("[1].'transcript_consequences'[2].'transcript_id'", containsString("ENST00000556131"))
                .body("[1].'transcript_consequences'[2].'hgvsp'", containsString("ENSP00000451856.1:p.Gly12Val"))
                .body("[1].'transcript_consequences'[2].'hgvsc'", containsString("ENST00000556131.1:c.35G>T"))
                .body("[1].'transcript_consequences'[2].'variant_allele'", containsString("A"))
                .body("[1].'transcript_consequences'[2].'codons'", containsString("gGt/gTt"))
                .body("[1].'transcript_consequences'[2].'protein_id'", containsString("ENSP00000451856"))
                .body("[1].'transcript_consequences'[2].'protein_start'", numberMatches(12.0))
                .body("[1].'transcript_consequences'[2].'protein_end'", numberMatches(12.0))
                .body("[1].'transcript_consequences'[2].'gene_symbol'", containsString("KRAS"))
                .body("[1].'transcript_consequences'[2].'gene_id'", containsString("ENSG00000133703"))
                .body("[1].'transcript_consequences'[2].'amino_acids'", containsString("G/V"))
                .body("[1].'transcript_consequences'[2].'hgnc_id'", containsString("6407"))
                .body("[1].'transcript_consequences'[2].'polyphen_score'", numberMatches(0.884))
                .body("[1].'transcript_consequences'[2].'polyphen_prediction'", containsString("possibly_damaging"))
                .body("[1].'transcript_consequences'[2].'sift_score'", numberMatches(0.0))
                .body("[1].'transcript_consequences'[2].'sift_prediction'", containsString("deleterious"))
                .body("[1].'transcript_consequences'[2].'consequence_terms'.size()", equalTo(1))
                .body("[1].'transcript_consequences'[2].'consequence_terms'", hasItems("missense_variant"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[1].'successfully_annotated'", equalTo(true))
                .body("[1].'nucleotide_context'.'license'", nullValue())
                .body("[1].'nucleotide_context'.'annotation'.'molecule'", containsString("dna"))
                .body("[1].'nucleotide_context'.'annotation'.'seq'", containsString("ACC"))
                .body("[1].'nucleotide_context'.'annotation'.'hgvs'", containsString("12:g.25398284C>A"))
                .body("[1].'annotation_summary'.'variant'", containsString("12:g.25398284C>A"))
                .body("[1].'annotation_summary'.'genomicLocation'.'chromosome'", containsString("12"))
                .body("[1].'annotation_summary'.'genomicLocation'.'start'", numberMatches(2.5398284E7))
                .body("[1].'annotation_summary'.'genomicLocation'.'end'", numberMatches(2.5398284E7))
                .body("[1].'annotation_summary'.'genomicLocation'.'referenceAllele'", containsString("C"))
                .body("[1].'annotation_summary'.'genomicLocation'.'variantAllele'", containsString("A"))
                .body("[1].'annotation_summary'.'strandSign'", containsString("+"))
                .body("[1].'annotation_summary'.'variantType'", containsString("SNP"))
                .body("[1].'annotation_summary'.'assemblyName'", containsString("GRCh37"))
                .body("[1].'annotation_summary'.'canonicalTranscriptId'", containsString("ENST00000256078"))
                .body("[1].'annotation_summary'.'transcriptConsequences'.size()", equalTo(1))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'transcriptId'", containsString("ENST00000256078"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'codonChange'", containsString("gGt/gTt"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'aminoAcids'", containsString("G/V"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'aminoAcidRef'", containsString("G"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'aminoAcidAlt'", containsString("V"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'consequenceTerms'", containsString("missense_variant"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'hugoGeneSymbol'", containsString("KRAS"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'hgvspShort'", containsString("p.G12V"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'hgvsp'", containsString("p.Gly12Val"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'hgvsc'", containsString("ENST00000256078.4:c.35G>T"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'start'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'end'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'refSeq'", containsString("NM_033360.2"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'exon'", containsString("2/6"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'polyphenScore'", numberMatches(0.972))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'polyphenPrediction'", containsString("probably_damaging"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'siftScore'", numberMatches(0.0))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'siftPrediction'", containsString("deleterious"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'.size()", equalTo(4))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'transcriptId'", containsString("ENST00000256078"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'codonChange'", containsString("gGt/gTt"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcids'", containsString("G/V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcidRef'", containsString("G"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcidAlt'", containsString("V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'consequenceTerms'", containsString("missense_variant"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hugoGeneSymbol'", containsString("KRAS"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvspShort'", containsString("p.G12V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvsp'", containsString("p.Gly12Val"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvsc'", containsString("ENST00000256078.4:c.35G>T"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'start'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'end'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'refSeq'", containsString("NM_033360.2"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'exon'", containsString("2/6"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'polyphenScore'", numberMatches(0.972))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'polyphenPrediction'", containsString("probably_damaging"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'siftScore'", numberMatches(0.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'siftPrediction'", containsString("deleterious"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'transcriptId'", containsString("ENST00000311936"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'codonChange'", containsString("gGt/gTt"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcids'", containsString("G/V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcidRef'", containsString("G"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcidAlt'", containsString("V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'consequenceTerms'", containsString("missense_variant"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hugoGeneSymbol'", containsString("KRAS"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvspShort'", containsString("p.G12V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvsp'", containsString("p.Gly12Val"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvsc'", containsString("ENST00000311936.3:c.35G>T"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'start'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'end'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'refSeq'", containsString("NM_004985.3"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'variantClassification'", containsString("Missense_Mutation"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'exon'", containsString("2/5"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'polyphenScore'", numberMatches(0.96))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'polyphenPrediction'", containsString("probably_damaging"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'siftScore'", numberMatches(0.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'siftPrediction'", containsString("deleterious"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'transcriptId'", containsString("ENST00000556131"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'codonChange'", containsString("gGt/gTt"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcids'", containsString("G/V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcidRef'", containsString("G"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcidAlt'", containsString("V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'consequenceTerms'", containsString("missense_variant"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hugoGeneSymbol'", containsString("KRAS"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvspShort'", containsString("p.G12V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvsp'", containsString("p.Gly12Val"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvsc'", containsString("ENST00000556131.1:c.35G>T"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'start'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'end'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'variantClassification'", containsString("Missense_Mutation"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'exon'", containsString("2/3"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'polyphenScore'", numberMatches(0.884))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'polyphenPrediction'", containsString("possibly_damaging"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'siftScore'", numberMatches(0.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'siftPrediction'", containsString("deleterious"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'transcriptId'", containsString("ENST00000256078"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'codonChange'", containsString("gGt/gTt"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcids'", containsString("G/V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcidRef'", containsString("G"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcidAlt'", containsString("V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'consequenceTerms'", containsString("missense_variant"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'hugoGeneSymbol'", containsString("KRAS"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'hgvspShort'", containsString("p.G12V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'hgvsp'", containsString("p.Gly12Val"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'hgvsc'", containsString("ENST00000256078.4:c.35G>T"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'start'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'end'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'refSeq'", containsString("NM_033360.2"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'variantClassification'", containsString("Missense_Mutation"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'exon'", containsString("2/6"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'polyphenScore'", numberMatches(0.972))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'polyphenPrediction'", containsString("probably_damaging"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'siftScore'", numberMatches(0.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'siftPrediction'", containsString("deleterious"));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(1)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }
    
    
    @Test(timeout = 60000)
    public void test_92() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" [ " + 
                    " { " + 
                    " \"chromosome\": \"12\", " + 
                    " \"start\": 25398284, " + 
                    " \"end\": 25398284, " + 
                    " \"referenceAllele\": \"_EM_22819_XYZ_\", " + 
                    " \"variantAllele\": \"A\" " + 
                    " }, " + 
                    " { " + 
                    " \"chromosome\": \"12\", " + 
                    " \"start\": 25398283, " + 
                    " \"end\": 25398284, " + 
                    " \"referenceAllele\": \"AC\", " + 
                    " \"variantAllele\": \"AA\" " + 
                    " } " + 
                    " ] ")
                .post(baseUrlOfSut + "/annotation/genomic?" + 
                    "isoformOverrideSource=foo&" + 
                    "fields=annotation_summary&fields=nucleotide_context")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'variant'", containsString("12:g.25398284_25398284delinsA"))
                .body("[0].'originalVariantQuery'", containsString("12,25398284,25398284,_EM_22819_XYZ_,A"))
                .body("[0].'successfully_annotated'", equalTo(false))
                .body("[1].'variant'", containsString("12:g.25398284C>A"))
                .body("[1].'originalVariantQuery'", containsString("12,25398283,25398284,AC,AA"))
                .body("[1].'hgvsg'", containsString("12:g.25398284C>A"))
                .body("[1].'assembly_name'", containsString("GRCh37"))
                .body("[1].'seq_region_name'", containsString("12"))
                .body("[1].'start'", numberMatches(2.5398284E7))
                .body("[1].'end'", numberMatches(2.5398284E7))
                .body("[1].'allele_string'", containsString("C/A"))
                .body("[1].'strand'", numberMatches(1.0))
                .body("[1].'most_severe_consequence'", containsString("missense_variant"))
                .body("[1].'transcript_consequences'.size()", equalTo(4))
                .body("[1].'transcript_consequences'[0].'exon'", containsString("2/6"))
                .body("[1].'transcript_consequences'[0].'transcript_id'", containsString("ENST00000256078"))
                .body("[1].'transcript_consequences'[0].'hgvsp'", containsString("ENSP00000256078.4:p.Gly12Val"))
                .body("[1].'transcript_consequences'[0].'hgvsc'", containsString("ENST00000256078.4:c.35G>T"))
                .body("[1].'transcript_consequences'[0].'variant_allele'", containsString("A"))
                .body("[1].'transcript_consequences'[0].'codons'", containsString("gGt/gTt"))
                .body("[1].'transcript_consequences'[0].'protein_id'", containsString("ENSP00000256078"))
                .body("[1].'transcript_consequences'[0].'protein_start'", numberMatches(12.0))
                .body("[1].'transcript_consequences'[0].'protein_end'", numberMatches(12.0))
                .body("[1].'transcript_consequences'[0].'gene_symbol'", containsString("KRAS"))
                .body("[1].'transcript_consequences'[0].'gene_id'", containsString("ENSG00000133703"))
                .body("[1].'transcript_consequences'[0].'amino_acids'", containsString("G/V"))
                .body("[1].'transcript_consequences'[0].'hgnc_id'", containsString("6407"))
                .body("[1].'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("[1].'transcript_consequences'[0].'polyphen_score'", numberMatches(0.972))
                .body("[1].'transcript_consequences'[0].'polyphen_prediction'", containsString("probably_damaging"))
                .body("[1].'transcript_consequences'[0].'sift_score'", numberMatches(0.0))
                .body("[1].'transcript_consequences'[0].'sift_prediction'", containsString("deleterious"))
                .body("[1].'transcript_consequences'[0].'refseq_transcript_ids'.size()", equalTo(1))
                .body("[1].'transcript_consequences'[0].'refseq_transcript_ids'", hasItems("NM_033360.2"))
                .body("[1].'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("[1].'transcript_consequences'[0].'consequence_terms'", hasItems("missense_variant"))
                .body("[1].'transcript_consequences'[1].'exon'", containsString("2/5"))
                .body("[1].'transcript_consequences'[1].'transcript_id'", containsString("ENST00000311936"))
                .body("[1].'transcript_consequences'[1].'hgvsp'", containsString("ENSP00000308495.3:p.Gly12Val"))
                .body("[1].'transcript_consequences'[1].'hgvsc'", containsString("ENST00000311936.3:c.35G>T"))
                .body("[1].'transcript_consequences'[1].'variant_allele'", containsString("A"))
                .body("[1].'transcript_consequences'[1].'codons'", containsString("gGt/gTt"))
                .body("[1].'transcript_consequences'[1].'protein_id'", containsString("ENSP00000308495"))
                .body("[1].'transcript_consequences'[1].'protein_start'", numberMatches(12.0))
                .body("[1].'transcript_consequences'[1].'protein_end'", numberMatches(12.0))
                .body("[1].'transcript_consequences'[1].'gene_symbol'", containsString("KRAS"))
                .body("[1].'transcript_consequences'[1].'gene_id'", containsString("ENSG00000133703"))
                .body("[1].'transcript_consequences'[1].'amino_acids'", containsString("G/V"))
                .body("[1].'transcript_consequences'[1].'hgnc_id'", containsString("6407"))
                .body("[1].'transcript_consequences'[1].'polyphen_score'", numberMatches(0.96))
                .body("[1].'transcript_consequences'[1].'polyphen_prediction'", containsString("probably_damaging"))
                .body("[1].'transcript_consequences'[1].'sift_score'", numberMatches(0.0))
                .body("[1].'transcript_consequences'[1].'sift_prediction'", containsString("deleterious"))
                .body("[1].'transcript_consequences'[1].'refseq_transcript_ids'.size()", equalTo(1))
                .body("[1].'transcript_consequences'[1].'refseq_transcript_ids'", hasItems("NM_004985.3"))
                .body("[1].'transcript_consequences'[1].'consequence_terms'.size()", equalTo(1))
                .body("[1].'transcript_consequences'[1].'consequence_terms'", hasItems("missense_variant"))
                .body("[1].'transcript_consequences'[2].'exon'", containsString("2/3"))
                .body("[1].'transcript_consequences'[2].'transcript_id'", containsString("ENST00000556131"))
                .body("[1].'transcript_consequences'[2].'hgvsp'", containsString("ENSP00000451856.1:p.Gly12Val"))
                .body("[1].'transcript_consequences'[2].'hgvsc'", containsString("ENST00000556131.1:c.35G>T"))
                .body("[1].'transcript_consequences'[2].'variant_allele'", containsString("A"))
                .body("[1].'transcript_consequences'[2].'codons'", containsString("gGt/gTt"))
                .body("[1].'transcript_consequences'[2].'protein_id'", containsString("ENSP00000451856"))
                .body("[1].'transcript_consequences'[2].'protein_start'", numberMatches(12.0))
                .body("[1].'transcript_consequences'[2].'protein_end'", numberMatches(12.0))
                .body("[1].'transcript_consequences'[2].'gene_symbol'", containsString("KRAS"))
                .body("[1].'transcript_consequences'[2].'gene_id'", containsString("ENSG00000133703"))
                .body("[1].'transcript_consequences'[2].'amino_acids'", containsString("G/V"))
                .body("[1].'transcript_consequences'[2].'hgnc_id'", containsString("6407"))
                .body("[1].'transcript_consequences'[2].'polyphen_score'", numberMatches(0.884))
                .body("[1].'transcript_consequences'[2].'polyphen_prediction'", containsString("possibly_damaging"))
                .body("[1].'transcript_consequences'[2].'sift_score'", numberMatches(0.0))
                .body("[1].'transcript_consequences'[2].'sift_prediction'", containsString("deleterious"))
                .body("[1].'transcript_consequences'[2].'consequence_terms'.size()", equalTo(1))
                .body("[1].'transcript_consequences'[2].'consequence_terms'", hasItems("missense_variant"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[1].'successfully_annotated'", equalTo(true))
                .body("[1].'nucleotide_context'.'license'", nullValue())
                .body("[1].'nucleotide_context'.'annotation'.'molecule'", containsString("dna"))
                .body("[1].'nucleotide_context'.'annotation'.'seq'", containsString("ACC"))
                .body("[1].'nucleotide_context'.'annotation'.'hgvs'", containsString("12:g.25398284C>A"))
                .body("[1].'annotation_summary'.'variant'", containsString("12:g.25398284C>A"))
                .body("[1].'annotation_summary'.'genomicLocation'.'chromosome'", containsString("12"))
                .body("[1].'annotation_summary'.'genomicLocation'.'start'", numberMatches(2.5398284E7))
                .body("[1].'annotation_summary'.'genomicLocation'.'end'", numberMatches(2.5398284E7))
                .body("[1].'annotation_summary'.'genomicLocation'.'referenceAllele'", containsString("C"))
                .body("[1].'annotation_summary'.'genomicLocation'.'variantAllele'", containsString("A"))
                .body("[1].'annotation_summary'.'strandSign'", containsString("+"))
                .body("[1].'annotation_summary'.'variantType'", containsString("SNP"))
                .body("[1].'annotation_summary'.'assemblyName'", containsString("GRCh37"))
                .body("[1].'annotation_summary'.'canonicalTranscriptId'", containsString("ENST00000256078"))
                .body("[1].'annotation_summary'.'transcriptConsequences'.size()", equalTo(1))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'transcriptId'", containsString("ENST00000256078"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'codonChange'", containsString("gGt/gTt"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'aminoAcids'", containsString("G/V"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'aminoAcidRef'", containsString("G"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'aminoAcidAlt'", containsString("V"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'consequenceTerms'", containsString("missense_variant"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'hugoGeneSymbol'", containsString("KRAS"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'hgvspShort'", containsString("p.G12V"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'hgvsp'", containsString("p.Gly12Val"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'hgvsc'", containsString("ENST00000256078.4:c.35G>T"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'start'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'proteinPosition'.'end'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'refSeq'", containsString("NM_033360.2"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'exon'", containsString("2/6"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'polyphenScore'", numberMatches(0.972))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'polyphenPrediction'", containsString("probably_damaging"))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'siftScore'", numberMatches(0.0))
                .body("[1].'annotation_summary'.'transcriptConsequences'[0].'siftPrediction'", containsString("deleterious"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'.size()", equalTo(4))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'transcriptId'", containsString("ENST00000256078"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'codonChange'", containsString("gGt/gTt"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcids'", containsString("G/V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcidRef'", containsString("G"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'aminoAcidAlt'", containsString("V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'consequenceTerms'", containsString("missense_variant"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hugoGeneSymbol'", containsString("KRAS"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvspShort'", containsString("p.G12V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvsp'", containsString("p.Gly12Val"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'hgvsc'", containsString("ENST00000256078.4:c.35G>T"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'start'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'proteinPosition'.'end'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'refSeq'", containsString("NM_033360.2"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'variantClassification'", containsString("Missense_Mutation"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'exon'", containsString("2/6"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'polyphenScore'", numberMatches(0.972))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'polyphenPrediction'", containsString("probably_damaging"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'siftScore'", numberMatches(0.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[0].'siftPrediction'", containsString("deleterious"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'transcriptId'", containsString("ENST00000311936"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'codonChange'", containsString("gGt/gTt"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcids'", containsString("G/V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcidRef'", containsString("G"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'aminoAcidAlt'", containsString("V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'consequenceTerms'", containsString("missense_variant"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hugoGeneSymbol'", containsString("KRAS"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvspShort'", containsString("p.G12V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvsp'", containsString("p.Gly12Val"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'hgvsc'", containsString("ENST00000311936.3:c.35G>T"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'start'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'proteinPosition'.'end'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'refSeq'", containsString("NM_004985.3"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'variantClassification'", containsString("Missense_Mutation"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'exon'", containsString("2/5"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'polyphenScore'", numberMatches(0.96))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'polyphenPrediction'", containsString("probably_damaging"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'siftScore'", numberMatches(0.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[1].'siftPrediction'", containsString("deleterious"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'transcriptId'", containsString("ENST00000556131"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'codonChange'", containsString("gGt/gTt"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcids'", containsString("G/V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcidRef'", containsString("G"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'aminoAcidAlt'", containsString("V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'consequenceTerms'", containsString("missense_variant"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hugoGeneSymbol'", containsString("KRAS"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvspShort'", containsString("p.G12V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvsp'", containsString("p.Gly12Val"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'hgvsc'", containsString("ENST00000556131.1:c.35G>T"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'start'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'proteinPosition'.'end'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'variantClassification'", containsString("Missense_Mutation"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'exon'", containsString("2/3"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'polyphenScore'", numberMatches(0.884))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'polyphenPrediction'", containsString("possibly_damaging"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'siftScore'", numberMatches(0.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummaries'[2].'siftPrediction'", containsString("deleterious"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'transcriptId'", containsString("ENST00000256078"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'codonChange'", containsString("gGt/gTt"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcids'", containsString("G/V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcidRef'", containsString("G"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'aminoAcidAlt'", containsString("V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'consequenceTerms'", containsString("missense_variant"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'hugoGeneSymbol'", containsString("KRAS"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'hgvspShort'", containsString("p.G12V"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'hgvsp'", containsString("p.Gly12Val"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'hgvsc'", containsString("ENST00000256078.4:c.35G>T"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'start'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'proteinPosition'.'end'", numberMatches(12.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'refSeq'", containsString("NM_033360.2"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'variantClassification'", containsString("Missense_Mutation"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'exon'", containsString("2/6"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'polyphenScore'", numberMatches(0.972))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'polyphenPrediction'", containsString("probably_damaging"))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'siftScore'", numberMatches(0.0))
                .body("[1].'annotation_summary'.'transcriptConsequenceSummary'.'siftPrediction'", containsString("deleterious"));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(0)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")))
            .that(rso, ((Map) ((List) res_0.extract().response().jsonPath().getJsonObject("")).get(1)).keySet().containsAll(Arrays.asList("id", "intergenic_consequences", "originalVariantQuery", "variant")));
    }


}
