import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2024-06-01T00:06:07.280+02:00[Europe/Paris]
 * <br>
 * The generated test suite contains 7 tests
 * <br>
 * Covered targets: 333
 * <br>
 * Used time: 1h 0m 23s
 * <br>
 * Needed budget for current results: 92%
 * <br>
 * This file contains test cases that represent successful calls.
 */
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.embedded.br.com.codenation.hospital.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    /**
    * rso - response structure oracle - checking that the response objects match the responses defined in the schema
    */
    private static boolean rso = false;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test(timeout = 60000)
    public void test_0() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
        
        expectationHandler.expect(ems)
            /*
             Note: No supported codes appear to be defined. https://swagger.io/docs/specification/describing-responses/.
             This is somewhat unexpected, so the code below is likely to lead to a failed expectation
            */
            .that(sco, Arrays.asList().contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/v1/hospitais/;VELg")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_2() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/v1/hospitais/?EMextraParam123=_EM_34_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_3() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"address\": \"xAe\", " + 
                    " \"availableBeds\": 319, " + 
                    " \"longitude\": \"_EM_24348_XYZ_\", " + 
                    " \"name\": \"_EM_24349_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/v1/hospitais/")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("_EM_24349_XYZ_"))
                .body("'address'", containsString("xAe"))
                .body("'beds'", numberMatches(0.0))
                .body("'availableBeds'", numberMatches(319.0))
                .body("'longitude'", containsString("105.6509587"))
                .body("'latitude'", containsString("14.6156423"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_4() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"address\": \"h\", " + 
                    " \"beds\": 41, " + 
                    " \"latitude\": \"_EM_3923_XYZ_\", " + 
                    " \"longitude\": \"_EM_3924_XYZ_\", " + 
                    " \"name\": \"_EM_3925_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/v1/hospitais/")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("_EM_3925_XYZ_"))
                .body("'address'", containsString("h"))
                .body("'beds'", numberMatches(41.0))
                .body("'availableBeds'", numberMatches(0.0))
                .body("'longitude'", containsString("9.0284647"))
                .body("'latitude'", containsString("50.6080651"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_5() throws Exception {
        
        String location_hospitais = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"address\": \"vNo\", " + 
                    " \"availableBeds\": 978, " + 
                    " \"name\": \"A\" " + 
                    " } ")
                .post(baseUrlOfSut + "/v1/hospitais/")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("A"))
                .body("'address'", containsString("vNo"))
                .body("'beds'", numberMatches(0.0))
                .body("'availableBeds'", numberMatches(978.0))
                .body("'longitude'", containsString("25.290314330439507"))
                .body("'latitude'", containsString("54.63483615"));
        location_hospitais = "/v1/hospitais/" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_hospitais, baseUrlOfSut + "/v1/hospitais/maisProximo?lat=0.7877751995109015&lon=0.816215184388342&raioMaximo=0.5545985539610934"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("A"))
                .body("'address'", containsString("vNo"))
                .body("'beds'", numberMatches(0.0))
                .body("'availableBeds'", numberMatches(978.0))
                .body("'longitude'", containsString("25.290314330439507"))
                .body("'latitude'", containsString("54.63483615"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_6() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_hospitais = "";
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"address\": \"h\", " + 
                    " \"beds\": 41, " + 
                    " \"latitude\": \"_EM_3923_XYZ_\", " + 
                    " \"longitude\": \"_EM_3924_XYZ_\", " + 
                    " \"name\": \"_EM_3925_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/v1/hospitais/")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("_EM_3925_XYZ_"))
                .body("'address'", containsString("h"))
                .body("'beds'", numberMatches(41.0))
                .body("'availableBeds'", numberMatches(0.0))
                .body("'longitude'", containsString("9.0284647"))
                .body("'latitude'", containsString("50.6080651"));
        location_hospitais = "/v1/hospitais/" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_hospitais, baseUrlOfSut + "/v1/hospitais/_EM_3971_XYZ_/pacientes?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("_EM_3925_XYZ_"))
                .body("'address'", containsString("h"))
                .body("'beds'", numberMatches(41.0))
                .body("'availableBeds'", numberMatches(0.0))
                .body("'longitude'", containsString("9.0284647"))
                .body("'latitude'", containsString("50.6080651"));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) res_1.extract().response().jsonPath().getJsonObject("")).keySet().containsAll(Arrays.asList()));
    }


}
