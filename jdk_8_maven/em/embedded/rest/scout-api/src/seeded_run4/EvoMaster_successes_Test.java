import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2024-06-01T12:08:11.889+02:00[Europe/Paris]
 * <br>
 * The generated test suite contains 53 tests
 * <br>
 * Covered targets: 1679
 * <br>
 * Used time: 2h 0m 51s
 * <br>
 * Needed budget for current results: 99%
 * <br>
 * This file contains test cases that represent successful calls.
 */
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.embedded.se.devscout.scoutapi.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("ACTIVITY","ACTIVITY_DERIVED","ACTIVITY_PROPERTIES","ACTIVITY_PROPERTIES_MEDIA_FILE","ACTIVITY_PROPERTIES_TAG","ACTIVITY_RATING","ACTIVITY_RELATION","USERS","USER_IDENTITY","MEDIA_FILE","MEDIA_FILE_KEYWORDS","TAG","TAG_DERIVED","SYSTEM_MESSAGE"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test(timeout = 60000)
    public void test_0() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .get(baseUrlOfSut + "/api/swagger.json")
                .then()
                .statusCode(200);
        
        expectationHandler.expect(ems)
            /*
             Note: No supported codes appear to be defined. https://swagger.io/docs/specification/describing-responses/.
             This is somewhat unexpected, so the code below is likely to lead to a failed expectation
            */
            .that(sco, Arrays.asList().contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/system/roles?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_2() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags/30976?" + 
                    "attrs=E9&" + 
                    "ratings_count_min=tYp1&" + 
                    "random=9kFMdQmKOowhegga&" + 
                    "ratings_average_min=_EM_99333_XYZ_&" + 
                    "age_1=Bl9rBOq5IwwU&" + 
                    "text=u&" + 
                    "id=30978")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_3() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 6255L)
            .and().insertInto("ACTIVITY", 6256L)
            .and().insertInto("ACTIVITY", 6257L)
            .and().insertInto("SYSTEM_MESSAGE", 6258L)
                .d("KEY", "\"nhOqmCCiTXGqw8V\"")
                .d("VALID_FROM", "\"2019-05-13 16:27:29\"")
                .d("VALID_TO", "\"2100-08-28 16:52:15\"")
                .d("VALUE", "\"yx2kSB1x8_DI\"")
            .and().insertInto("MEDIA_FILE", 6259L)
                .d("AUTHOR", "\"WR2r4Pb6\"")
                .d("CAPTURE_DATE", "\"2036-02-16 00:26:03\"")
                .d("COPY_RIGHT", "\"5702850\"")
                .d("MIME_TYPE", "\"5703993\"")
                .d("NAME", "\"_EM_31184_XYZ_\"")
                .d("URI", "\"3hQexp8ssAFS8\"")
            .and().insertInto("MEDIA_FILE", 6260L)
                .d("AUTHOR", "\"_EM_43335_XYZ_\"")
                .d("CAPTURE_DATE", "\"1912-03-09 22:01:42\"")
                .d("COPY_RIGHT", "\"LEFT\"")
                .d("MIME_TYPE", "\"f814dONzf8\"")
                .d("NAME", "\"_EM_44484_XYZ_\"")
                .d("URI", "\"P0OkLYyPtf\"")
            .and().insertInto("MEDIA_FILE", 6261L)
                .d("AUTHOR", "\"5704276\"")
                .d("CAPTURE_DATE", "\"2000-06-16 00:57:29\"")
                .d("COPY_RIGHT", "\"_EM_31186_XYZ_\"")
                .d("MIME_TYPE", "\"ACTIVITY_ID\"")
                .d("NAME", "\"_EM_43304_XYZ_\"")
                .d("URI", "\"_EM_44485_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 6270L)
                .d("URI", "\"2OtCQFq6ohG2w\"")
            .and().insertInto("TAG", 6269L)
                .d("GRP", "\"8\"")
                .d("NAME", "\"Qwae\"")
            .and().insertInto("TAG_DERIVED", 6268L)
                .r("TAG_ID", 6269L)
                .d("ACTIVITIES_COUNT", "-134217728")
            .and().insertInto("MEDIA_FILE", 6273L)
                .d("URI", "\"5698070\"")
            .and().insertInto("TAG", 6272L)
                .d("GRP", "\"T1nRDCxaivzKDf7t\"")
                .d("NAME", "\"dT5off4CJyJCPvJD\"")
            .and().insertInto("TAG_DERIVED", 6271L)
                .r("TAG_ID", 6272L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 6276L)
                .d("URI", "\"_EM_44486_XYZ_\"")
            .and().insertInto("TAG", 6275L)
                .d("GRP", "\"AGE_MAX\"")
                .d("NAME", "\"47\"")
            .and().insertInto("USERS", 39570L)
                .d("AUTHORIZATION_LEVEL", "499")
                .d("NAME", "\"SP\"")
            .and().insertInto("ACTIVITY", 39569L)
            .and().insertInto("ACTIVITY_RATING", 39568L)
                .r("ACTIVITY_ID", 6255L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "567")
            .and().insertInto("USERS", 39573L)
                .d("AUTHORIZATION_LEVEL", "524")
                .d("NAME", "\"NMQ\"")
            .and().insertInto("ACTIVITY", 39572L)
            .and().insertInto("ACTIVITY_RATING", 39571L)
                .r("ACTIVITY_ID", 6257L)
                .r("USER_ID", 39573L)
                .d("FAVOURITE", "false")
                .d("RATING", "984")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages/-4611686018426208248?attrs=_EM_13564_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_4() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1403L)
            .and().insertInto("ACTIVITY", 1404L)
            .and().insertInto("ACTIVITY", 1405L)
            .and().insertInto("ACTIVITY", 1406L)
            .and().insertInto("MEDIA_FILE", 1407L)
                .d("AUTHOR", "\"Y3iOPruQkzx86\"")
                .d("CAPTURE_DATE", "\"1968-02-24 08:59:17\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"moderator\"")
                .d("URI", "\"lwa5A\"")
            .and().insertInto("MEDIA_FILE", 1408L)
                .d("AUTHOR", "\"_EM_41947_XYZ_\"")
                .d("CAPTURE_DATE", "\"2007-07-10 06:46:47\"")
                .d("COPY_RIGHT", "\"kfbIUyrCd7\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"_EM_33511_XYZ_\"")
                .d("URI", "\"_EM_41948_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 1409L)
                .d("AUTHOR", "\"_EM_34234_XYZ_\"")
                .d("CAPTURE_DATE", "\"2007-11-23 12:40:44\"")
                .d("COPY_RIGHT", "\"IwNc\"")
                .d("MIME_TYPE", "\"v1NJ\"")
                .d("NAME", "\"5609184\"")
                .d("URI", "\"_EM_11990_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 1410L)
                .d("AUTHOR", "\"Mb72UvLH6h3P\"")
                .d("CAPTURE_DATE", "\"2045-10-25 03:00:29\"")
                .d("COPY_RIGHT", "\"nkIH5gl1\"")
                .d("MIME_TYPE", "\"_EM_34236_XYZ_\"")
                .d("NAME", "\"zk9n\"")
                .d("URI", "\"TABLE_TYPE\"")
            .and().insertInto("MEDIA_FILE", 1411L)
                .d("AUTHOR", "\"Q_YEIEZvWL4fs\"")
                .d("CAPTURE_DATE", "\"2066-01-14 00:51:25\"")
                .d("COPY_RIGHT", "\"USERS\"")
                .d("MIME_TYPE", "\"xlmdP7\"")
                .d("NAME", "\"_EM_41949_XYZ_\"")
                .d("URI", "\"_EM_34238_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 6928L)
                .d("KEY", "\"\"")
                .d("VALID_FROM", "\"2000-06-19 11:43:29\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_41950_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 6929L)
                .d("KEY", "\"_EM_41951_XYZ_\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1963-10-02 23:04:30\"")
                .d("VALUE", "\"_EM_34239_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 6930L)
                .d("KEY", "\"_EM_34240_XYZ_\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2020-10-14 04:17:13\"")
                .d("VALUE", "\"xqjLRWmnhWW6aXok\"")
            .and().insertInto("USERS", 9031L)
                .d("AUTHORIZATION_LEVEL", "729")
                .d("NAME", "\"MqYDEfT5U5Lh\"")
            .and().insertInto("ACTIVITY", 9030L)
            .and().insertInto("ACTIVITY_RATING", 9029L)
                .r("ACTIVITY_ID", 1406L)
                .r("USER_ID", 9031L)
                .d("FAVOURITE", "true")
                .d("RATING", "823")
            .and().insertInto("USERS", 9034L)
                .d("AUTHORIZATION_LEVEL", "1070")
                .d("NAME", "\"GfZsu8qpd\"")
            .and().insertInto("ACTIVITY", 9033L)
            .and().insertInto("ACTIVITY_RATING", 9032L)
                .r("ACTIVITY_ID", 1404L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "809")
            .and().insertInto("USERS", 9037L)
                .d("AUTHORIZATION_LEVEL", "874")
                .d("NAME", "\"_EM_41952_XYZ_\"")
            .and().insertInto("ACTIVITY", 9036L)
            .and().insertInto("ACTIVITY_RATING", 9035L)
                .r("ACTIVITY_ID", 1406L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "121")
            .and().insertInto("USERS", 9040L)
                .d("AUTHORIZATION_LEVEL", "-740220417")
                .d("NAME", "\"iJTPJK7zHQX4osRC\"")
            .and().insertInto("ACTIVITY", 9039L)
            .and().insertInto("ACTIVITY_RATING", 9038L)
                .r("ACTIVITY_ID", 1405L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "800")
            .and().insertInto("USERS", 9043L)
                .d("AUTHORIZATION_LEVEL", "535")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 9042L)
            .and().insertInto("ACTIVITY_RATING", 9041L)
                .r("ACTIVITY_ID", 9036L)
                .r("USER_ID", 9040L)
                .d("FAVOURITE", "false")
                .d("RATING", "246")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/0?attrs=wwn")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_5() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/166?" + 
                    "attrs=rW99X7aD&" + 
                    "EMextraParam123=_EM_12_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_6() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities/2061390569?attrs=_EM_68_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_7() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/media_files?uri=Y6wn_nFWOOI")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_8() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 6255L)
            .and().insertInto("ACTIVITY", 6256L)
            .and().insertInto("ACTIVITY", 6257L)
            .and().insertInto("SYSTEM_MESSAGE", 6258L)
                .d("KEY", "\"nhOqmCCiTXGqw8V\"")
                .d("VALID_FROM", "\"2000-06-13 16:29:30\"")
                .d("VALID_TO", "\"2099-02-27 17:52:23\"")
                .d("VALUE", "\"_EM_57689_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 6259L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2000-06-16 15:00:02\"")
                .d("COPY_RIGHT", "\"5702850\"")
                .d("MIME_TYPE", "\"5703993\"")
                .d("NAME", "\"E6y_xdcHUL\"")
                .d("URI", "\"3hQexp8ssAFS8c\"")
            .and().insertInto("MEDIA_FILE", 6260L)
                .d("AUTHOR", "\"5805183\"")
                .d("CAPTURE_DATE", "\"1912-03-09 22:01:42\"")
                .d("COPY_RIGHT", "\"LEFT\"")
                .d("MIME_TYPE", "\"_EM_89346_XYZ_\"")
                .d("NAME", "\"[ZkZT\"")
                .d("URI", "\"NrlH13Y11B991Oz\"")
            .and().insertInto("MEDIA_FILE", 6261L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2000-05-16 00:25:29\"")
                .d("COPY_RIGHT", "\"ENAIgc\"")
                .d("MIME_TYPE", "\"5698291\"")
                .d("NAME", "\"8MsABIgye\"")
                .d("URI", "\"pVKFBX1vdwh4q\"")
            .and().insertInto("MEDIA_FILE", 6270L)
                .d("URI", "\"nXatPqqkh\"")
            .and().insertInto("TAG", 6269L)
                .d("GRP", "\"8\"")
                .d("NAME", "\"Qwae\"")
            .and().insertInto("TAG_DERIVED", 6268L)
                .r("TAG_ID", 6269L)
                .d("ACTIVITIES_COUNT", "-134225920")
            .and().insertInto("MEDIA_FILE", 6273L)
                .d("URI", "\"5698070\"")
            .and().insertInto("TAG", 6272L)
                .d("GRP", "\"E\"")
                .d("NAME", "\"_EM_57690_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 6271L)
                .r("TAG_ID", 6272L)
                .d("ACTIVITIES_COUNT", "2")
            .and().insertInto("MEDIA_FILE", 6276L)
                .d("URI", "\"-28\"")
            .and().insertInto("TAG", 6275L)
                .d("GRP", "\"AGE_MAX\"")
                .d("NAME", "\"47\"")
            .and().insertInto("USERS", 22138L)
                .d("AUTHORIZATION_LEVEL", "518")
                .d("NAME", "\"xUe0huLpHrF2D\"")
            .and().insertInto("ACTIVITY", 22137L)
            .and().insertInto("ACTIVITY_RATING", 22136L)
                .r("ACTIVITY_ID", 6256L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "174")
            .and().insertInto("USERS", 22141L)
                .d("AUTHORIZATION_LEVEL", "374")
                .d("NAME", "\"zVn\"")
            .and().insertInto("ACTIVITY", 22140L)
            .and().insertInto("ACTIVITY_RATING", 22139L)
                .r("ACTIVITY_ID", 6256L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 22144L)
                .d("AUTHORIZATION_LEVEL", "451")
                .d("NAME", "\"2_a_5eMD\"")
            .and().insertInto("ACTIVITY", 22143L)
            .and().insertInto("ACTIVITY_RATING", 22142L)
                .r("ACTIVITY_ID", 22140L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories/2?attrs=_EM_57886_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("isEmpty()", is(true));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_9() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 17406L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"_EM_72323_XYZ_\"")
                .d("MIME_TYPE", "\"SETTINGS\"")
                .d("NAME", "\"_EM_72325_XYZ_\"")
                .d("URI", "\"ET\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'mime_type'", containsString("SETTINGS"))
                .body("[0].'uri'", containsString("ET"))
                .body("[0].'name'", containsString("_EM_72325_XYZ_"))
                .body("[0].'capture_date'", nullValue())
                .body("[0].'copy_right'", containsString("_EM_72323_XYZ_"))
                .body("[0].'author'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_10() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 1538L)
                .d("KEY", "\"4Lb47TCX85osTex\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1921-06-05 12:23:14\"")
                .d("VALUE", "\"_EM_12481_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=4Lb47TCX85osTex&" + 
                    "attrs=_EM_12482_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("'[0]'.isEmpty()", is(true));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_11() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1403L)
            .and().insertInto("ACTIVITY", 1404L)
            .and().insertInto("ACTIVITY", 1405L)
            .and().insertInto("ACTIVITY", 1406L)
            .and().insertInto("MEDIA_FILE", 1407L)
                .d("AUTHOR", "\"Y3iOPruQkzx8\"")
                .d("CAPTURE_DATE", "\"1968-01-24 08:59:17\"")
                .d("COPY_RIGHT", "\"qiyy\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"moderator\"")
                .d("URI", "\"5716872\"")
            .and().insertInto("MEDIA_FILE", 1408L)
                .d("AUTHOR", "\"_EM_41947_XYZ_\"")
                .d("CAPTURE_DATE", "\"2007-07-10 06:46:47\"")
                .d("COPY_RIGHT", "\"kfbIUyrCd6\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"_EM_86608_XYZ_\"")
                .d("URI", "\"5777807\"")
            .and().insertInto("MEDIA_FILE", 1409L)
                .d("AUTHOR", "\"_EM_34234_XYZ_\"")
                .d("CAPTURE_DATE", "\"2006-07-23 13:40:44\"")
                .d("COPY_RIGHT", "\"KwNc\"")
                .d("MIME_TYPE", "\"v1NJ\"")
                .d("NAME", "\"5609184\"")
                .d("URI", "\"_EM_11990_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 1410L)
                .d("AUTHOR", "\"_EM_86609_XYZ_\"")
                .d("CAPTURE_DATE", "\"2045-10-25 03:00:29\"")
                .d("COPY_RIGHT", "\"nkIH5gl1\"")
                .d("MIME_TYPE", "\"RATINGS_AVG\"")
                .d("NAME", "\"zk9n\"")
                .d("URI", "\"TABLE_TYPE\"")
            .and().insertInto("MEDIA_FILE", 1411L)
                .d("AUTHOR", "\"U`YEIEZxWL4jU\"")
                .d("CAPTURE_DATE", "\"2066-01-14 00:51:25\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"xlmdP7\"")
                .d("NAME", "\"5767818\"")
                .d("URI", "\"D\"")
            .and().insertInto("SYSTEM_MESSAGE", 6928L)
                .d("KEY", "\"H\"")
                .d("VALID_FROM", "\"2000-06-19 11:43:29\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_86605_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 6929L)
                .d("KEY", "\"_EM_41951_XYZ_\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1963-10-02 23:03:14\"")
                .d("VALUE", "\"_EM_34239_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 6930L)
                .d("KEY", "\"_EM_34240_XYZ_\"")
                .d("VALID_FROM", "\"1967-02-04 20:44:23\"")
                .d("VALID_TO", "\"2020-06-14 04:17:13\"")
                .d("VALUE", "\"_EM_86606_XYZ_\"")
            .and().insertInto("USERS", 9031L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_86610_XYZ_\"")
            .and().insertInto("ACTIVITY", 9030L)
            .and().insertInto("ACTIVITY_RATING", 9029L)
                .r("ACTIVITY_ID", 1406L)
                .r("USER_ID", 9031L)
                .d("FAVOURITE", "false")
                .d("RATING", "823")
            .and().insertInto("USERS", 9034L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"GfZsu8qpd\"")
            .and().insertInto("ACTIVITY", 9033L)
            .and().insertInto("ACTIVITY_RATING", 9032L)
                .r("ACTIVITY_ID", 1404L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "809")
            .and().insertInto("USERS", 9037L)
                .d("AUTHORIZATION_LEVEL", "874")
                .d("NAME", "\"2098-05-28 00:25:16\"")
            .and().insertInto("ACTIVITY", 9036L)
            .and().insertInto("ACTIVITY_RATING", 9035L)
                .r("ACTIVITY_ID", 9030L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "-32647")
            .and().insertInto("USERS", 9040L)
                .d("AUTHORIZATION_LEVEL", "-740220417")
                .d("NAME", "\"iJTPJK7zHQX4osRC\"")
            .and().insertInto("ACTIVITY", 9039L)
            .and().insertInto("ACTIVITY_RATING", 9038L)
                .r("ACTIVITY_ID", 9030L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 9043L)
                .d("AUTHORIZATION_LEVEL", "536")
                .d("NAME", "\"Z\"")
            .and().insertInto("ACTIVITY", 9042L)
            .and().insertInto("ACTIVITY_RATING", 9041L)
                .r("ACTIVITY_ID", 9036L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "246")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "valid=now_and_future&" + 
                    "attrs=8rJZBWKf8")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("'[0]'.isEmpty()", is(true));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_12() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 1453L)
                .d("KEY", "\"480sIpW\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_12036_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=480sIpW&" + 
                    "valid=now&" + 
                    "attrs=_EM_12037_XYZ_&" + 
                    "EMextraParam123=_EM_12038_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("'[0]'.isEmpty()", is(true));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_13() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 1797L)
                .d("AUTHORIZATION_LEVEL", "674")
                .d("DATE_CREATED", "\"2069-05-31 06:54:50\"")
                .d("EMAIL_ADDRESS", "\"uCJXK7zBdDV7rTlp\"")
                .d("NAME", "\"Fv6ml2qc0\"")
            .and().insertInto("USERS", 1798L)
                .d("AUTHORIZATION_LEVEL", "711")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "\"9cS\"")
                .d("NAME", "\"YQgL\"")
            .and().insertInto("USERS", 1799L)
                .d("AUTHORIZATION_LEVEL", "178")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "\"gvGQulnrzbckLoy\"")
                .d("NAME", "\"fj8_\"")
            .and().insertInto("SYSTEM_MESSAGE", 6082L)
                .d("KEY", "\"iAbUp\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2049-08-15 18:38:01\"")
                .d("VALUE", "\"_mQBAq2nR8mWU_p\"")
            .and().insertInto("SYSTEM_MESSAGE", 6083L)
                .d("KEY", "\"o9fZ6XcFkyg\"")
                .d("VALID_FROM", "\"2041-02-13 06:28:32\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"nkCsbwMuS1\"")
            .and().insertInto("SYSTEM_MESSAGE", 6084L)
                .d("KEY", "\"8f6ReoI\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2013-07-29 01:45:09\"")
                .d("VALUE", "\"S9IghUV9jbR5\"")
            .and().insertInto("SYSTEM_MESSAGE", 6085L)
                .d("KEY", "\"H_eYjt\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2005-04-08 11:53:07\"")
                .d("VALUE", "\"5\"")
            .and().insertInto("SYSTEM_MESSAGE", 6086L)
                .d("KEY", "\"tMd6_Yh6VAe1\"")
                .d("VALID_FROM", "\"1979-09-01 16:22:42\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"\"")
            .and().insertInto("USERS", 501L)
                .d("AUTHORIZATION_LEVEL", "734")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "\"_EM_8795_XYZ_\"")
                .d("NAME", "\"_EM_8796_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=tbOU9qCMHor&" + 
                    "valid=now_and_future&" + 
                    "attrs=pv5x")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_14() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 10591L)
                .d("AUTHOR", "\"nkdIhD\"")
                .d("CAPTURE_DATE", "\"2002-09-16 14:29:56\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_46922_XYZ_\"")
                .d("NAME", "\"j2Wab\"")
                .d("URI", "\"_8TYS14p8W\"")
            .and().insertInto("MEDIA_FILE", 10592L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"WqRbQDYr2\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"tLSL1G\"")
                .d("URI", "\"LznWNN\"")
            .and().insertInto("MEDIA_FILE", 10593L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1946-11-10 16:59:27\"")
                .d("COPY_RIGHT", "\"d2ARJuTw891\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_46923_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 10594L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2069-08-18 13:30:18\"")
                .d("COPY_RIGHT", "\"poW2vfQOZC_b\"")
                .d("MIME_TYPE", "\"\"")
                .d("NAME", "NULL")
                .d("URI", "\"qxzl4\"")
            .and().insertInto("MEDIA_FILE", 10595L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "\"2057-11-22 23:23:53\"")
                .d("COPY_RIGHT", "\"fCn5xKlzj7OhH7FB\"")
                .d("MIME_TYPE", "\"_EM_46924_XYZ_\"")
                .d("NAME", "\"upzmA\"")
                .d("URI", "\"upV\"")
            .and().insertInto("MEDIA_FILE", 10601L)
                .d("URI", "\"au4VQWq9q3e\"")
            .and().insertInto("USERS", 10600L)
                .d("AUTHORIZATION_LEVEL", "584")
                .d("NAME", "\"_EM_46925_XYZ_\"")
            .and().insertInto("ACTIVITY", 10599L)
            .and().insertInto("ACTIVITY", 10598L)
            .and().insertInto("ACTIVITY_PROPERTIES", 10597L)
                .r("ACTIVITY_ID", 10599L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 10596L)
                .r("ACTIVITY_PROPERTIES_ID", 10597L)
                .r("MEDIA_FILE_ID", 10592L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 32477L)
                .d("URI", "\"hz7qfWn\"")
            .and().insertInto("TAG", 32476L)
                .d("GRP", "\"nn6EOsf6gcyROkyq\"")
                .d("NAME", "\"1fI4\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 32479L)
                .d("URI", "\"BOQwm91YW1hG0sI\"")
            .and().insertInto("TAG", 32478L)
                .d("GRP", "\"eM\"")
                .d("NAME", "\"kaRvZLX6moJZ1B\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 32481L)
                .d("URI", "\"hYwoYt\"")
            .and().insertInto("TAG", 32480L)
                .d("GRP", "\"u2VgHAYDcU5H\"")
                .d("NAME", "\"DAKd\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 32483L)
                .d("URI", "\"Garh5CurRHMVuB\"")
            .and().insertInto("TAG", 32482L)
                .d("GRP", "\"jMO\"")
                .d("NAME", "\"H8iP\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 32485L)
                .d("URI", "\"q17juUl\"")
            .and().insertInto("TAG", 32484L)
                .d("GRP", "\"XUU0sVU\"")
                .d("NAME", "\"W\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 32492L)
                .d("URI", "\"shm\"")
            .and().insertInto("TAG", 32491L)
                .d("GRP", "\"_P\"")
                .d("NAME", "\"9Gxqw1zaw5KyJMU\"")
            .and().insertInto("USERS", 32490L)
                .d("AUTHORIZATION_LEVEL", "876")
                .d("NAME", "\"WZvDnz\"")
            .and().insertInto("ACTIVITY", 32489L)
            .and().insertInto("ACTIVITY", 32488L)
            .and().insertInto("ACTIVITY_PROPERTIES", 32487L)
                .r("ACTIVITY_ID", 10599L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 32486L)
                .r("ACTIVITY_PROPERTIES_ID", 32487L)
                .r("TAG_ID", 32480L)
            .and().insertInto("MEDIA_FILE", 32499L)
                .d("URI", "\"C47xXj85CrQRqT\"")
            .and().insertInto("TAG", 32498L)
                .d("GRP", "\"xrLv54JZASfRUrG\"")
                .d("NAME", "\"52YT5YJLt3cnpB6\"")
            .and().insertInto("USERS", 32497L)
                .d("AUTHORIZATION_LEVEL", "125")
                .d("NAME", "\"x69jQWHCaqU8\"")
            .and().insertInto("ACTIVITY", 32496L)
            .and().insertInto("ACTIVITY", 32495L)
            .and().insertInto("ACTIVITY_PROPERTIES", 32494L)
                .r("ACTIVITY_ID", 32495L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 32493L)
                .r("ACTIVITY_PROPERTIES_ID", 32494L)
                .r("TAG_ID", 32476L)
            .and().insertInto("MEDIA_FILE", 32506L)
                .d("URI", "\"yLMifnMuR5KYk\"")
            .and().insertInto("TAG", 32505L)
                .d("GRP", "\"j6yA7Qim8\"")
                .d("NAME", "\"GKa9x0H\"")
            .and().insertInto("USERS", 32504L)
                .d("AUTHORIZATION_LEVEL", "545")
                .d("NAME", "\"_W\"")
            .and().insertInto("ACTIVITY", 32503L)
            .and().insertInto("ACTIVITY", 32502L)
            .and().insertInto("ACTIVITY_PROPERTIES", 32501L)
                .r("ACTIVITY_ID", 32489L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 32500L)
                .r("ACTIVITY_PROPERTIES_ID", 32494L)
                .r("TAG_ID", 32484L)
            .and().insertInto("MEDIA_FILE", 32513L)
                .d("URI", "\"l_BvIwKbzFMyUaZ\"")
            .and().insertInto("TAG", 32512L)
                .d("GRP", "\"QNr6zu\"")
                .d("NAME", "\"zy7YJlFCt\"")
            .and().insertInto("USERS", 32511L)
                .d("AUTHORIZATION_LEVEL", "404")
                .d("NAME", "\"rdVKmUe3MWeX\"")
            .and().insertInto("ACTIVITY", 32510L)
            .and().insertInto("ACTIVITY", 32509L)
            .and().insertInto("ACTIVITY_PROPERTIES", 32508L)
                .r("ACTIVITY_ID", 32503L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 32507L)
                .r("ACTIVITY_PROPERTIES_ID", 32508L)
                .r("TAG_ID", 32505L)
            .and().insertInto("MEDIA_FILE", 40922L)
                .d("URI", "\"r3Exhv9\"")
            .and().insertInto("TAG", 40921L)
                .d("GRP", "\"I\"")
                .d("NAME", "\"CbTn3mc5mWts4\"")
            .and().insertInto("TAG_DERIVED", 40920L)
                .r("TAG_ID", 32476L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 40925L)
                .d("URI", "\"TNpU\"")
            .and().insertInto("TAG", 40924L)
                .d("GRP", "\"eNXC710Q5O3xlj\"")
                .d("NAME", "\"BK\"")
            .and().insertInto("TAG_DERIVED", 40923L)
                .r("TAG_ID", 32491L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 40928L)
                .d("URI", "\"t\"")
            .and().insertInto("TAG", 40927L)
                .d("GRP", "\"NVkHknHicV\"")
                .d("NAME", "\"iJPoDNvKe\"")
            .and().insertInto("TAG_DERIVED", 40926L)
                .r("TAG_ID", 32484L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 40931L)
                .d("URI", "\"UAEy9\"")
            .and().insertInto("TAG", 40930L)
                .d("GRP", "\"xTepm_JlFjaWD_qZ\"")
                .d("NAME", "\"s6ws7gyOsQ\"")
            .and().insertInto("TAG_DERIVED", 40929L)
                .r("TAG_ID", 32505L)
                .d("ACTIVITIES_COUNT", "931")
            .and().insertInto("MEDIA_FILE", 40934L)
                .d("URI", "\"y88opG\"")
            .and().insertInto("TAG", 40933L)
                .d("GRP", "\"32Vf8mzu\"")
                .d("NAME", "\"XPcrABR1AT3K5Z1\"")
            .and().insertInto("TAG_DERIVED", 40932L)
                .r("TAG_ID", 40933L)
                .d("ACTIVITIES_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(14))
                .body("[0].'group'", containsString("nn6EOsf6gcyROkyq"))
                .body("[0].'name'", containsString("1fI4"))
                .body("[0].'media_file'", nullValue())
                .body("[0].'activities_count'", numberMatches(0.0))
                .body("[1].'group'", containsString("eM"))
                .body("[1].'name'", containsString("kaRvZLX6moJZ1B"))
                .body("[1].'media_file'", nullValue())
                .body("[1].'activities_count'", numberMatches(0.0))
                .body("[2].'group'", containsString("_P"))
                .body("[2].'name'", containsString("9Gxqw1zaw5KyJMU"))
                .body("[2].'media_file'", nullValue())
                .body("[2].'activities_count'", numberMatches(0.0))
                ; // Skipping assertions on the remaining 11 elements. This limit of 3 elements can be increased in the configurations
        
    }
    
    
    @Test(timeout = 60000)
    public void test_15() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1713L)
                .d("URI", "\"39Y08oQIYref37Za\"")
            .and().insertInto("TAG", 1712L)
                .d("GRP", "\"_EM_13274_XYZ_\"")
                .d("NAME", "\"_EM_13275_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 1711L)
                .r("TAG_ID", 1712L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 1716L)
                .d("URI", "\"qXzc6vnk2QUwKl7Z\"")
            .and().insertInto("TAG", 1715L)
                .d("GRP", "\"tJI260ZotJbcz\"")
                .d("NAME", "\"_EM_13276_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 1714L)
                .r("TAG_ID", 1715L)
                .d("ACTIVITIES_COUNT", "785")
            .and().insertInto("MEDIA_FILE", 1719L)
                .d("URI", "\"MAIGx3N72Q\"")
            .and().insertInto("TAG", 1718L)
                .d("GRP", "\"2y6x0Xw\"")
                .d("NAME", "\"diSTzH_\"")
            .and().insertInto("TAG_DERIVED", 1717L)
                .r("TAG_ID", 1718L)
                .d("ACTIVITIES_COUNT", "207")
            .and().insertInto("MEDIA_FILE", 1722L)
                .d("URI", "\"_EM_13277_XYZ_\"")
            .and().insertInto("TAG", 1721L)
                .d("GRP", "\"Raqjl\"")
                .d("NAME", "\"\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories?" + 
                    "min_activities_count=-1680313500&" + 
                    "attrs=zz_l6UE")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("'[0]'.isEmpty()", is(true))
                .body("'[1]'.isEmpty()", is(true));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_16() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 6255L)
            .and().insertInto("ACTIVITY", 6256L)
            .and().insertInto("ACTIVITY", 6257L)
            .and().insertInto("SYSTEM_MESSAGE", 6258L)
                .d("KEY", "\"nhOqmCCiTXGqw8V\"")
                .d("VALID_FROM", "\"2000-06-13 16:29:30\"")
                .d("VALID_TO", "\"2099-02-27 17:52:23\"")
                .d("VALUE", "\"_EM_57689_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 6259L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2000-06-16 15:00:02\"")
                .d("COPY_RIGHT", "\"5702850\"")
                .d("MIME_TYPE", "\"5703993\"")
                .d("NAME", "\"E6y_xdcHUL\"")
                .d("URI", "\"3hQexp8ssAFS8c\"")
            .and().insertInto("MEDIA_FILE", 6260L)
                .d("AUTHOR", "\"5805183\"")
                .d("CAPTURE_DATE", "\"1912-03-09 22:01:42\"")
                .d("COPY_RIGHT", "\"LEFT\"")
                .d("MIME_TYPE", "\"_EM_89346_XYZ_\"")
                .d("NAME", "\"[ZkZT\"")
                .d("URI", "\"NrlH13Y11B991Oz\"")
            .and().insertInto("MEDIA_FILE", 6261L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2000-05-16 00:25:29\"")
                .d("COPY_RIGHT", "\"ENAIgc\"")
                .d("MIME_TYPE", "\"5698291\"")
                .d("NAME", "\"8MsABIgye\"")
                .d("URI", "\"pVKFBX1vdwh4q\"")
            .and().insertInto("MEDIA_FILE", 6270L)
                .d("URI", "\"nXatPqqkh\"")
            .and().insertInto("TAG", 6269L)
                .d("GRP", "\"8\"")
                .d("NAME", "\"Qwae\"")
            .and().insertInto("TAG_DERIVED", 6268L)
                .r("TAG_ID", 6269L)
                .d("ACTIVITIES_COUNT", "-134225920")
            .and().insertInto("MEDIA_FILE", 6273L)
                .d("URI", "\"5698070\"")
            .and().insertInto("TAG", 6272L)
                .d("GRP", "\"E\"")
                .d("NAME", "\"_EM_57690_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 6271L)
                .r("TAG_ID", 6272L)
                .d("ACTIVITIES_COUNT", "2")
            .and().insertInto("MEDIA_FILE", 6276L)
                .d("URI", "\"-28\"")
            .and().insertInto("TAG", 6275L)
                .d("GRP", "\"AGE_MAX\"")
                .d("NAME", "\"47\"")
            .and().insertInto("USERS", 22138L)
                .d("AUTHORIZATION_LEVEL", "518")
                .d("NAME", "\"xUe0huLpHrF2D\"")
            .and().insertInto("ACTIVITY", 22137L)
            .and().insertInto("ACTIVITY_RATING", 22136L)
                .r("ACTIVITY_ID", 6256L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "174")
            .and().insertInto("USERS", 22141L)
                .d("AUTHORIZATION_LEVEL", "374")
                .d("NAME", "\"zVn\"")
            .and().insertInto("ACTIVITY", 22140L)
            .and().insertInto("ACTIVITY_RATING", 22139L)
                .r("ACTIVITY_ID", 6256L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 22144L)
                .d("AUTHORIZATION_LEVEL", "451")
                .d("NAME", "\"2_a_5eMD\"")
            .and().insertInto("ACTIVITY", 22143L)
            .and().insertInto("ACTIVITY_RATING", 22142L)
                .r("ACTIVITY_ID", 22140L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "group=F%5Dw7%3B_5T&" + 
                    "name=_EM_13612_XYZ_&" + 
                    "min_activities_count=-4611686018477555712&" + 
                    "attrs=l")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_17() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_18() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users?name=_EM_1788_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_19() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"\", " + 
                    " \"value\": \"_EM_42338_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages?EMextraParam123=_EM_42339_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'key'", containsString(""))
                .body("'value'", containsString("_EM_42338_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_20() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 224L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1975-01-09 19:09:56\"")
                .d("COPY_RIGHT", "\"_EM_56705_XYZ_\"")
                .d("MIME_TYPE", "\"m82QhuhygpivOsXH\"")
                .d("NAME", "\"EBqGTacNLA9\"")
                .d("URI", "\"j41\"")
            .and().insertInto("MEDIA_FILE", 225L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2000-06-29 11:10:45\"")
                .d("COPY_RIGHT", "\"_EM_56706_XYZ_\"")
                .d("MIME_TYPE", "\"4Qs\"")
                .d("NAME", "\"_EM_23165_XYZ_\"")
                .d("URI", "\"_WTvUPnNY1x4f\"")
            .and().insertInto("MEDIA_FILE", 226L)
                .d("AUTHOR", "\"5612156\"")
                .d("CAPTURE_DATE", "\"1922-06-30 12:29:29\"")
                .d("COPY_RIGHT", "\"p9fz\"")
                .d("MIME_TYPE", "\"5612089\"")
                .d("NAME", "NULL")
                .d("URI", "\"RATINGS_3_1_4_\"")
            .and().insertInto("MEDIA_FILE", 227L)
                .d("AUTHOR", "\"5668231\"")
                .d("CAPTURE_DATE", "\"1978-03-09 05:24:13\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_23167_XYZ_\"")
                .d("NAME", "\"_EM_23168_XYZ_\"")
                .d("URI", "\"2055-06-18 18:00:35\"")
            .and().insertInto("MEDIA_FILE", 2038L)
                .d("URI", "\"_EM_56707_XYZ_\"")
            .and().insertInto("USERS", 2037L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_23170_XYZ_\"")
            .and().insertInto("ACTIVITY", 2036L)
            .and().insertInto("ACTIVITY", 2035L)
            .and().insertInto("ACTIVITY_PROPERTIES", 2034L)
                .r("ACTIVITY_ID", 2036L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 2033L)
                .r("ACTIVITY_PROPERTIES_ID", 2034L)
                .r("MEDIA_FILE_ID", 227L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 2044L)
                .d("URI", "\"U\"")
            .and().insertInto("USERS", 2043L)
                .d("AUTHORIZATION_LEVEL", "134217758")
                .d("NAME", "\"_EM_56708_XYZ_\"")
            .and().insertInto("ACTIVITY", 2042L)
            .and().insertInto("ACTIVITY", 2041L)
            .and().insertInto("ACTIVITY_PROPERTIES", 2040L)
                .r("ACTIVITY_ID", 2035L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 2039L)
                .r("ACTIVITY_PROPERTIES_ID", 2034L)
                .r("MEDIA_FILE_ID", 226L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 2050L)
                .d("URI", "\"_EM_56709_XYZ_\"")
            .and().insertInto("USERS", 2049L)
                .d("AUTHORIZATION_LEVEL", "451")
                .d("NAME", "\"_EM_23172_XYZ_\"")
            .and().insertInto("ACTIVITY", 2048L)
            .and().insertInto("ACTIVITY", 2047L)
            .and().insertInto("ACTIVITY_PROPERTIES", 2046L)
                .r("ACTIVITY_ID", 2035L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 2045L)
                .r("ACTIVITY_PROPERTIES_ID", 2046L)
                .r("MEDIA_FILE_ID", 225L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 2056L)
                .d("URI", "\"L92dMYySg9M\"")
            .and().insertInto("USERS", 2055L)
                .d("AUTHORIZATION_LEVEL", "1857")
                .d("NAME", "\"_EM_56710_XYZ_\"")
            .and().insertInto("ACTIVITY", 2054L)
            .and().insertInto("ACTIVITY", 2053L)
            .and().insertInto("ACTIVITY_PROPERTIES", 2052L)
                .r("ACTIVITY_ID", 2048L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 2051L)
                .r("ACTIVITY_PROPERTIES_ID", 2046L)
                .r("MEDIA_FILE_ID", 2044L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 13915L)
                .d("AUTHORIZATION_LEVEL", "437")
                .d("NAME", "\"ezwz\"")
            .and().insertInto("USER_IDENTITY", 13914L)
                .d("DATE_CREATED", "\"2071-07-08 03:02:47\"")
                .d("TYPE", "\"_EM_56711_XYZ_\"")
                .d("VALUE", "\"AIrA\"")
                .r("USER_ID", 2037L)
            .and().insertInto("USERS", 13917L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"QORC25\"")
            .and().insertInto("USER_IDENTITY", 13916L)
                .d("DATE_CREATED", "NULL")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"Uts6r\"")
                .r("USER_ID", 2049L)
            .and().insertInto("USERS", 13919L)
                .d("AUTHORIZATION_LEVEL", "25")
                .d("NAME", "\"E\"")
            .and().insertInto("USER_IDENTITY", 13918L)
                .d("DATE_CREATED", "NULL")
                .d("TYPE", "\"_EM_56712_XYZ_\"")
                .d("VALUE", "\"0kgDkALcQYV\"")
                .r("USER_ID", 2043L)
            .and().insertInto("USERS", 13921L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"O56CpaJwRNRub\"")
            .and().insertInto("USER_IDENTITY", 13920L)
                .d("DATE_CREATED", "\"1921-04-25 17:43:34\"")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"_EM_56713_XYZ_\"")
                .d("USER_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"fP4sdjjlRhAo\", " + 
                    " \"identities\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("fP4sdjjlRhAo"))
                .body("'authorization_level'", numberMatches(0.0))
                .body("'identities'.size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_21() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/8502570893177264458?" + 
                    "attrs=_EM_4985_XYZ_&" + 
                    "EMextraParam123=_EM_4986_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_22() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(3))
                .body("[0].'name'", containsString("INTEGRATION TEST USER"))
                .body("[0].'email_address'", nullValue())
                .body("[0].'authorization_level'", numberMatches(0.0))
                .body("[0].'identities'.size()", equalTo(1))
                .body("[0].'identities'[0].'date_created'", numberMatches(9.811548E11))
                .body("[0].'identities'[0].'type'", containsString("API"))
                .body("[0].'identities'[0].'value'", containsString("user"))
                .body("[1].'name'", containsString("INTEGRATION TEST ADMINISTRATOR"))
                .body("[1].'email_address'", nullValue())
                .body("[1].'authorization_level'", numberMatches(20.0))
                .body("[1].'identities'.size()", equalTo(1))
                .body("[1].'identities'[0].'date_created'", numberMatches(9.811548E11))
                .body("[1].'identities'[0].'type'", containsString("API"))
                .body("[1].'identities'[0].'value'", containsString("administrator"))
                .body("[2].'name'", containsString("INTEGRATION TEST MODERATOR"))
                .body("[2].'email_address'", nullValue())
                .body("[2].'authorization_level'", numberMatches(10.0))
                .body("[2].'identities'.size()", equalTo(1))
                .body("[2].'identities'[0].'date_created'", numberMatches(9.811548E11))
                .body("[2].'identities'[0].'type'", containsString("API"))
                .body("[2].'identities'[0].'value'", containsString("moderator"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_23() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1721_XYZ_")
                .get(baseUrlOfSut + "/api/v1/users/profile?EMextraParam123=_EM_1720_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'role_permissions'.size()", equalTo(9))
                .body("'role_permissions'", hasItems("activity_create", "activity_edit_own", "auth_profile_edit", "comment_create", "comment_edit_own", "mediaitem_edit_own", "rating_set_own", "reference_edit_own", "system_message_read"))
                .body("'name'", containsString("INTEGRATION TEST USER"))
                .body("'role'", containsString("user"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_24() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_12533_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"_EM_12526_XYZ_\", " + 
                    " \"name\": \"_EM_12527_XYZ_\", " + 
                    " \"activities_count\": 7262763676935239352 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("_EM_12526_XYZ_"))
                .body("'name'", containsString("_EM_12527_XYZ_"))
                .body("'activities_count'", numberMatches(7.2627636769352397E18));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_25() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 2233L)
                .d("KEY", "\"ZT\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1918-11-21 21:27:08\"")
                .d("VALUE", "\"9sBG\"")
            .and().insertInto("MEDIA_FILE", 26346L)
                .d("AUTHOR", "\"lrczptQoZ2HP2Nk\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"7mV6QhGjSp0QMUsw\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"3hMzanV\"")
                .d("URI", "\"pBafli2x0PP\"")
            .and().insertInto("MEDIA_FILE", 26347L)
                .d("AUTHOR", "\"aUqjNAYgMyqUUowL\"")
                .d("CAPTURE_DATE", "\"1971-05-19 21:48:12\"")
                .d("COPY_RIGHT", "\"Q1diF\"")
                .d("MIME_TYPE", "\"2sJ\"")
                .d("NAME", "\"NuIbZYDojX\"")
                .d("URI", "\"ilouj1A\"")
            .and().insertInto("MEDIA_FILE", 26348L)
                .d("AUTHOR", "\"CaoUfO8hJ\"")
                .d("CAPTURE_DATE", "\"1926-09-05 06:50:27\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"cdGI\"")
                .d("NAME", "NULL")
                .d("URI", "\"L\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 306, " + 
                    " \"key\": \"erUKCOrpxywYfd2\", " + 
                    " \"value\": \"1MCLv_bEgNS\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/1")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'key'", containsString("erUKCOrpxywYfd2"))
                .body("'value'", containsString("1MCLv_bEgNS"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_26() throws Exception {
        
        String location_categories = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"bYvgi2Wi_i0Iq\", " + 
                    " \"name\": \"HslOWSrb8\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("bYvgi2Wi_i0Iq"))
                .body("'name'", containsString("HslOWSrb8"))
                .body("'activities_count'", numberMatches(0.0));
        location_categories = "/api/v1/categories" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"ezqpSj\" " + 
                    " } ")
                .put(resolveLocation(location_categories, baseUrlOfSut + "/api/v1/categories/518?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString(""))
                .body("'name'", containsString("ezqpSj"))
                .body("'activities_count'", numberMatches(0.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_27() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 4095L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2020-10-08 21:26:13\"")
                .d("COPY_RIGHT", "\"_EM_23179_XYZ_\"")
                .d("MIME_TYPE", "\"MgAqy_eWikAoxU8\"")
                .d("NAME", "NULL")
                .d("URI", "\"Iyw\"")
            .and().insertInto("MEDIA_FILE", 4096L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "\"2000-12-24 11:29:25\"")
                .d("COPY_RIGHT", "\"_EM_73894_XYZ_\"")
                .d("MIME_TYPE", "\"FIn04UEzf7PS\"")
                .d("NAME", "\"_EM_23180_XYZ_\"")
                .d("URI", "\"6NG_c5p\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_16463_XYZ_\", " + 
                    " \"uri\": \"https://53.19.228.106:3/9eHhnacyh3J7VR7//GG4gH5Bvle\", " + 
                    " \"name\": \"_EM_16465_XYZ_\", " + 
                    " \"copy_right\": \"_EM_16466_XYZ_\", " + 
                    " \"author\": \"znxbpVhF5_P_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("_EM_16463_XYZ_"))
                .body("'uri'", containsString("https://53.19.228.106:3/9eHhnacyh3J7VR7//GG4gH5Bvle"))
                .body("'name'", containsString("_EM_16465_XYZ_"))
                .body("'copy_right'", containsString("_EM_16466_XYZ_"))
                .body("'author'", containsString("znxbpVhF5_P_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_28() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 52990L)
                .d("URI", "\"30P\"")
            .and().insertInto("TAG", 52989L)
                .d("GRP", "\"QxnL1i8TUP3aRLf\"")
                .d("NAME", "\"QPO6fW047Y6oy\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 52992L)
                .d("URI", "\"bj64QrbL2qP\"")
            .and().insertInto("TAG", 52991L)
                .d("GRP", "\"eJS2\"")
                .d("NAME", "\"mf4EqkDpjt\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 52994L)
                .d("URI", "\"2q4tISlUBhKa\"")
            .and().insertInto("TAG", 52993L)
                .d("GRP", "\"EDczgTH3Oo\"")
                .d("NAME", "\"gKi7Eu\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"nK04yH6VndOhQTL\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"aEi\", " + 
                    " \"name\": \"8t6Xd38N5ao\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString(""))
                .body("'name'", containsString("nK04yH6VndOhQTL"))
                .body("'media_file'.'uri'", containsString("aEi"))
                .body("'media_file'.'name'", containsString("8t6Xd38N5ao"))
                .body("'activities_count'", numberMatches(0.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_29() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 36132L)
            .and().insertInto("ACTIVITY", 36134L)
            .and().insertInto("ACTIVITY_DERIVED", 36133L)
                .r("ACTIVITY_ID", 36132L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "823")
                .d("RATINGS_SUM", "821")
            .and().insertInto("MEDIA_FILE", 36150L)
                .d("URI", "\"xoHq6P\"")
            .and().insertInto("TAG", 36149L)
                .d("GRP", "\"O6Q9wKIUbr07Zw4k\"")
                .d("NAME", "\"8G7j40iv\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 36152L)
                .d("URI", "\"g_3S\"")
            .and().insertInto("TAG", 36151L)
                .d("GRP", "\"njqxEjVGOZ4\"")
                .d("NAME", "\"i76McsP272S\"")
                .r("MEDIA_FILE_ID", 36152L)
            .and().insertInto("MEDIA_FILE", 17406L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"_EM_72323_XYZ_\"")
                .d("MIME_TYPE", "\"SETTINGS\"")
                .d("NAME", "\"_EM_72325_XYZ_\"")
                .d("URI", "\"0ASL5wYRn\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "durations=1&" + 
                    "ratings_average_min=0.22583470875942002&" + 
                    "random=110&" + 
                    "favourites=71&" + 
                    "uri=0ASL5wYRn")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_30() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_11498_XYZ_")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "attrs=_EM_11489_XYZ_&" + 
                    "name=_EM_11490_XYZ_&" + 
                    "text=SgRpMHqy")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_31() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"_EM_41159_XYZ_\", " + 
                    " \"name\": \"6OP52cbTTNeWWjd\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"s2pXL4ocv7\", " + 
                    " \"uri\": \"iE_CgsBy33wKg\" " + 
                    " }, " + 
                    " \"activities_count\": 514 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("_EM_41159_XYZ_"))
                .body("'name'", containsString("6OP52cbTTNeWWjd"))
                .body("'media_file'.'mime_type'", containsString("s2pXL4ocv7"))
                .body("'media_file'.'uri'", containsString("iE_CgsBy33wKg"))
                .body("'activities_count'", numberMatches(514.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_32() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 30977L)
                .d("URI", "\"AblBPc6k\"")
            .and().insertInto("TAG", 30976L)
                .d("GRP", "\"OjqZGb6I\"")
                .d("NAME", "\"_EM_99331_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("USERS", 30979L)
                .d("AUTHORIZATION_LEVEL", "96")
                .d("NAME", "\"GRZ\"")
            .and().insertInto("USER_IDENTITY", 30978L)
                .d("DATE_CREATED", "\"2013-12-06 23:48:51\"")
                .d("TYPE", "\"_EM_99332_XYZ_\"")
                .d("VALUE", "\"xDaAt\"")
                .d("USER_ID", "NULL")
            .and().insertInto("ACTIVITY", 30980L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=E9&" + 
                    "name=TW9dHyTyZ6j&" + 
                    "id=30976&" + 
                    "ratings_average_min=30976.0&" + 
                    "random=409")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_33() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 4095L)
                .d("AUTHOR", "\"A29FGhJEaSNGI\"")
                .d("CAPTURE_DATE", "\"2000-06-08 21:29:13\"")
                .d("COPY_RIGHT", "\"_EM_23179_XYZ_\"")
                .d("MIME_TYPE", "\"MgAqy_eWikAoxU8\"")
                .d("NAME", "NULL")
                .d("URI", "\"Iy\"")
            .and().insertInto("MEDIA_FILE", 4096L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "\"2000-12-24 11:29:25\"")
                .d("COPY_RIGHT", "\"7K\"")
                .d("MIME_TYPE", "\"FIn04UEzf7PS\"")
                .d("NAME", "\"_EM_23180_XYZ_\"")
                .d("URI", "\"6NG_c5p\"")
            .and().insertInto("USERS", 31218L)
                .d("AUTHORIZATION_LEVEL", "585")
                .d("NAME", "\"U\"")
            .and().insertInto("ACTIVITY", 31217L)
            .and().insertInto("ACTIVITY", 31216L)
            .and().insertInto("ACTIVITY_RELATION", 31215L)
                .r("ACTIVITY_1_ID", 31217L)
                .r("ACTIVITY_2_ID", 31216L)
                .d("OWNER_ID", "2")
            .and().insertInto("USERS", 31222L)
                .d("AUTHORIZATION_LEVEL", "961")
                .d("NAME", "\"g8LuW9tYRKoVr7\"")
            .and().insertInto("ACTIVITY", 31221L)
            .and().insertInto("ACTIVITY", 31220L)
            .and().insertInto("ACTIVITY_RELATION", 31219L)
                .r("ACTIVITY_1_ID", 31220L)
                .r("ACTIVITY_2_ID", 31221L)
                .r("OWNER_ID", 31222L)
            .and().insertInto("USERS", 31228L)
                .d("AUTHORIZATION_LEVEL", "623")
                .d("NAME", "\"Iv\"")
            .and().insertInto("ACTIVITY", 31227L)
            .and().insertInto("ACTIVITY_RATING", 31226L)
                .r("ACTIVITY_ID", 31220L)
                .r("USER_ID", 31222L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 31231L)
                .d("AUTHORIZATION_LEVEL", "459")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 31230L)
            .and().insertInto("ACTIVITY_RATING", 31229L)
                .r("ACTIVITY_ID", 31220L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "622")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/favourites?" + 
                    "name=lvD7uZeS&" + 
                    "attrs=Y56S2QEm")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0]", numberMatches(4.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_34() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 20403L)
            .and().insertInto("ACTIVITY", 20404L)
            .and().insertInto("ACTIVITY", 20406L)
            .and().insertInto("ACTIVITY_DERIVED", 20405L)
                .r("ACTIVITY_ID", 20403L)
                .d("FAVOURITES_COUNT", "840")
                .d("RATINGS_AVG", "0.05236992813295993")
                .d("RATINGS_COUNT", "990")
                .d("RATINGS_SUM", "976")
            .and().insertInto("ACTIVITY", 20408L)
            .and().insertInto("ACTIVITY_DERIVED", 20407L)
                .r("ACTIVITY_ID", 20406L)
                .d("FAVOURITES_COUNT", "493")
                .d("RATINGS_AVG", "12.962319536295402")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "5094839858257843274")
            .and().insertInto("ACTIVITY", 20410L)
            .and().insertInto("ACTIVITY_DERIVED", 20409L)
                .r("ACTIVITY_ID", 20408L)
                .d("FAVOURITES_COUNT", "323")
                .d("RATINGS_AVG", "0.9361078149604573")
                .d("RATINGS_COUNT", "818")
                .d("RATINGS_SUM", "270")
            .and().insertInto("ACTIVITY", 20412L)
            .and().insertInto("ACTIVITY_DERIVED", 20411L)
                .r("ACTIVITY_ID", 20412L)
                .d("FAVOURITES_COUNT", "-1100679777")
                .d("RATINGS_AVG", "0.3562018758586969")
                .d("RATINGS_COUNT", "222")
                .d("RATINGS_SUM", "4927533437952796737")
            .and().insertInto("ACTIVITY", 20414L)
            .and().insertInto("ACTIVITY_DERIVED", 20413L)
                .r("ACTIVITY_ID", 20404L)
                .d("FAVOURITES_COUNT", "33407")
                .d("RATINGS_AVG", "0.03388078860126986")
                .d("RATINGS_COUNT", "957")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("USERS", 20773L)
                .d("AUTHORIZATION_LEVEL", "576")
                .d("NAME", "\"Mx^wCMRUSnsiz9\"")
            .and().insertInto("ACTIVITY", 20772L)
            .and().insertInto("ACTIVITY", 20771L)
            .and().insertInto("ACTIVITY_PROPERTIES", 20770L)
                .d("AGE_MAX", "-893")
                .d("AGE_MIN", "-2147482693")
                .d("DATE_CREATED", "\"1966-11-22 14:05:03\"")
                .d("DATE_PUBLISHED", "\"1923-01-12 02:43:52\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"/\"")
                .d("DESCRIPTION_MAIN", "\"_EM_105139_XYZ_\"")
                .d("DESCRIPTION_MATERIAL", "\"7MQZ8XtwU\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"l86zjmb\"")
                .d("DESCRIPTION_SAFETY", "\"_EM_85039_XYZ_\"")
                .d("FEATURED", "false")
                .d("NAME", "\"gU5cmfnJ8ccFj\"")
                .d("PARTICIPANTS_MAX", "516")
                .d("PARTICIPANTS_MIN", "223")
                .d("SOURCE", "\"_EM_85040_XYZ_\"")
                .d("TIME_MAX", "754")
                .d("TIME_MIN", "343")
                .r("ACTIVITY_ID", 20772L)
                .d("AUTHOR_ID", "3")
                .r("PUBLISHING_ACTIVITY_ID", 20408L)
            .and().insertInto("USERS", 37646L)
                .d("AUTHORIZATION_LEVEL", "816")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 37645L)
            .and().insertInto("ACTIVITY", 37644L)
            .and().insertInto("ACTIVITY_RELATION", 37643L)
                .r("ACTIVITY_1_ID", 20408L)
                .r("ACTIVITY_2_ID", 20406L)
                .r("OWNER_ID", 20773L)
            .and().insertInto("USERS", 37650L)
                .d("AUTHORIZATION_LEVEL", "995")
                .d("NAME", "\"DBBty\"")
            .and().insertInto("ACTIVITY", 37649L)
            .and().insertInto("ACTIVITY", 37648L)
            .and().insertInto("ACTIVITY_RELATION", 37647L)
                .r("ACTIVITY_1_ID", 20771L)
                .r("ACTIVITY_2_ID", 20771L)
                .r("OWNER_ID", 20773L)
            .and().insertInto("USERS", 37654L)
                .d("AUTHORIZATION_LEVEL", "867238671")
                .d("NAME", "\"l4TwZt4dZGc_Wf76\"")
            .and().insertInto("ACTIVITY", 37653L)
            .and().insertInto("ACTIVITY", 37652L)
            .and().insertInto("ACTIVITY_RELATION", 37651L)
                .r("ACTIVITY_1_ID", 20414L)
                .r("ACTIVITY_2_ID", 20772L)
                .d("OWNER_ID", "2")
            .and().insertInto("USERS", 37658L)
                .d("AUTHORIZATION_LEVEL", "346")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 37657L)
            .and().insertInto("ACTIVITY", 37656L)
            .and().insertInto("ACTIVITY_RELATION", 37655L)
                .r("ACTIVITY_1_ID", 20406L)
                .r("ACTIVITY_2_ID", 37657L)
                .d("OWNER_ID", "3")
            .and().insertInto("USERS", 37662L)
                .d("AUTHORIZATION_LEVEL", "750")
                .d("NAME", "\"ki56j5cAPoFilG\"")
            .and().insertInto("ACTIVITY", 37661L)
            .and().insertInto("ACTIVITY", 37660L)
            .and().insertInto("ACTIVITY_RELATION", 37659L)
                .r("ACTIVITY_1_ID", 37661L)
                .r("ACTIVITY_2_ID", 37653L)
                .r("OWNER_ID", 37646L)
            .and().insertInto("MEDIA_FILE", 37668L)
                .d("URI", "\"UyRv\"")
            .and().insertInto("USERS", 37667L)
                .d("AUTHORIZATION_LEVEL", "586")
                .d("NAME", "\"596hcORDFpEr\"")
            .and().insertInto("ACTIVITY", 37666L)
            .and().insertInto("ACTIVITY", 37665L)
            .and().insertInto("ACTIVITY_PROPERTIES", 37664L)
                .r("ACTIVITY_ID", 37657L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 37663L)
                .r("ACTIVITY_PROPERTIES_ID", 37664L)
                .r("MEDIA_FILE_ID", 37668L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 37674L)
                .d("URI", "\"UDPeLOKFV7gb\"")
            .and().insertInto("USERS", 37673L)
                .d("AUTHORIZATION_LEVEL", "772")
                .d("NAME", "\"d3VxZMXbFUZOg5xg\"")
            .and().insertInto("ACTIVITY", 37672L)
            .and().insertInto("ACTIVITY", 37671L)
            .and().insertInto("ACTIVITY_PROPERTIES", 37670L)
                .r("ACTIVITY_ID", 37653L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 37669L)
                .r("ACTIVITY_PROPERTIES_ID", 37664L)
                .r("MEDIA_FILE_ID", 37674L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 37681L)
                .d("URI", "\"PdClYF\"")
            .and().insertInto("TAG", 37680L)
                .d("GRP", "\"caT6yqIvrDNu8Q6q\"")
                .d("NAME", "\"aQ\"")
            .and().insertInto("USERS", 37679L)
                .d("AUTHORIZATION_LEVEL", "855")
                .d("NAME", "\"xhR3epnRyLkeD7_4\"")
            .and().insertInto("ACTIVITY", 37678L)
            .and().insertInto("ACTIVITY", 37677L)
            .and().insertInto("ACTIVITY_PROPERTIES", 37676L)
                .r("ACTIVITY_ID", 37677L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 37675L)
                .r("ACTIVITY_PROPERTIES_ID", 20770L)
                .r("TAG_ID", 37680L)
            .and().insertInto("MEDIA_FILE", 37688L)
                .d("URI", "\"_5\"")
            .and().insertInto("TAG", 37687L)
                .d("GRP", "\"Q6X30nFtuzxs5dNC\"")
                .d("NAME", "\"mD4Zd2_csEWEQ_\"")
            .and().insertInto("USERS", 37686L)
                .d("AUTHORIZATION_LEVEL", "798")
                .d("NAME", "\"7lV6fT17Mw5\"")
            .and().insertInto("ACTIVITY", 37685L)
            .and().insertInto("ACTIVITY", 37684L)
            .and().insertInto("ACTIVITY_PROPERTIES", 37683L)
                .r("ACTIVITY_ID", 37677L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 37682L)
                .r("ACTIVITY_PROPERTIES_ID", 20770L)
                .r("TAG_ID", 37687L)
            .and().insertInto("MEDIA_FILE", 37695L)
                .d("URI", "\"8JqYey1w8Z\"")
            .and().insertInto("TAG", 37694L)
                .d("GRP", "\"_jwO0\"")
                .d("NAME", "\"iSuQLYE7cVSsAM\"")
            .and().insertInto("USERS", 37693L)
                .d("AUTHORIZATION_LEVEL", "732")
                .d("NAME", "\"_EM_105224_XYZ_\"")
            .and().insertInto("ACTIVITY", 37692L)
            .and().insertInto("ACTIVITY", 37691L)
            .and().insertInto("ACTIVITY_PROPERTIES", 37690L)
                .r("ACTIVITY_ID", 37678L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 37689L)
                .r("ACTIVITY_PROPERTIES_ID", 37690L)
                .r("TAG_ID", 37680L)
            .and().insertInto("MEDIA_FILE", 37702L)
                .d("URI", "\"jfsan7\"")
            .and().insertInto("TAG", 37701L)
                .d("GRP", "\"Lwd2\"")
                .d("NAME", "\"zXk8ZLM7n\"")
            .and().insertInto("USERS", 37700L)
                .d("AUTHORIZATION_LEVEL", "186")
                .d("NAME", "\"6_vWY9PM6fY\"")
            .and().insertInto("ACTIVITY", 37699L)
            .and().insertInto("ACTIVITY", 37698L)
            .and().insertInto("ACTIVITY_PROPERTIES", 37697L)
                .r("ACTIVITY_ID", 37699L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 37696L)
                .r("ACTIVITY_PROPERTIES_ID", 37664L)
                .r("TAG_ID", 37701L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "name=oJR_cbYV&" + 
                    "text=J&" + 
                    "featured=false&" + 
                    "categories=7&" + 
                    "favourites=67&" + 
                    "uri=0ASL5wYRn")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_35() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 12401L)
                .d("AUTHORIZATION_LEVEL", "701")
                .d("NAME", "\"PW8U3BPUh8WOCm\"")
            .and().insertInto("ACTIVITY", 12400L)
            .and().insertInto("ACTIVITY", 12399L)
            .and().insertInto("ACTIVITY_PROPERTIES", 12398L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-2147483648")
                .d("DATE_CREATED", "\"1975-04-09 03:17:39\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1970-06-05 20:05:31\"")
                .d("DESCRIPTION_INTRODUCTION", "\"1SF_4IeUQtUlvLJ\"")
                .d("DESCRIPTION_MAIN", "\"fCu0tIcGpd\"")
                .d("DESCRIPTION_MATERIAL", "\"4PwZrtjE\"")
                .d("DESCRIPTION_NOTES", "\"NdlFiayRCi\"")
                .d("DESCRIPTION_PREPARE", "\"-8\"")
                .d("DESCRIPTION_SAFETY", "\"j9\"")
                .d("FEATURED", "false")
                .d("NAME", "\"p\"")
                .d("PARTICIPANTS_MAX", "303")
                .d("PARTICIPANTS_MIN", "448")
                .d("SOURCE", "\"_EM_51395_XYZ_\"")
                .d("TIME_MAX", "-8387898")
                .d("TIME_MIN", "-16776380")
                .r("ACTIVITY_ID", 12400L)
                .d("AUTHOR_ID", "1")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 12405L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"oyN0gd\"")
            .and().insertInto("ACTIVITY", 12404L)
            .and().insertInto("ACTIVITY", 12403L)
            .and().insertInto("ACTIVITY_PROPERTIES", 12402L)
                .d("AGE_MAX", "-2147483632")
                .d("AGE_MIN", "-636")
                .d("DATE_CREATED", "\"2023-04-26 15:18:17\"")
                .d("DATE_PUBLISHED", "\"1960-12-12 14:11:09\"")
                .d("DATE_UPDATED", "\"1947-12-01 11:17:47\"")
                .d("DESCRIPTION_INTRODUCTION", "\"zToKBNu8t9yhr\"")
                .d("DESCRIPTION_MAIN", "\"OWeWDX3M\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"lS_9Z1rvR\"")
                .d("DESCRIPTION_PREPARE", "\"Ea3\"")
                .d("DESCRIPTION_SAFETY", "\"4zLzLN2bk46\"")
                .d("FEATURED", "false")
                .d("NAME", "\"_EM_60576_XYZ_\"")
                .d("PARTICIPANTS_MAX", "433")
                .d("PARTICIPANTS_MIN", "2097205")
                .d("SOURCE", "\"mW\"")
                .d("TIME_MAX", "0")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 12403L)
                .r("AUTHOR_ID", 12401L)
                .r("PUBLISHING_ACTIVITY_ID", 12399L)
            .and().insertInto("USERS", 12409L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_51397_XYZ_\"")
            .and().insertInto("ACTIVITY", 12408L)
            .and().insertInto("ACTIVITY", 12407L)
            .and().insertInto("ACTIVITY_PROPERTIES", 12406L)
                .d("AGE_MAX", "-1950")
                .d("AGE_MIN", "-26")
                .d("DATE_CREATED", "\"2000-10-04 08:33:26\"")
                .d("DATE_PUBLISHED", "\"2055-01-30 22:59:16\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"uiTOAfVaAP3bWk\"")
                .d("DESCRIPTION_MAIN", "\"_EM_99996_XYZ_\"")
                .d("DESCRIPTION_MATERIAL", "\"PkH\"")
                .d("DESCRIPTION_NOTES", "\"UUh\"")
                .d("DESCRIPTION_PREPARE", "\"sicFij\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "false")
                .d("NAME", "\"ceNhKuU8Ay\"")
                .d("PARTICIPANTS_MAX", "12")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"_EM_60577_XYZ_\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "0")
                .r("ACTIVITY_ID", 12408L)
                .d("AUTHOR_ID", "2")
                .r("PUBLISHING_ACTIVITY_ID", 12407L)
            .and().insertInto("ACTIVITY", 12411L)
            .and().insertInto("ACTIVITY_DERIVED", 12410L)
                .r("ACTIVITY_ID", 12408L)
                .d("FAVOURITES_COUNT", "0")
                .d("RATINGS_AVG", "-1053.5084567578183")
                .d("RATINGS_COUNT", "-524119")
                .d("RATINGS_SUM", "357")
            .and().insertInto("ACTIVITY", 12413L)
            .and().insertInto("ACTIVITY_DERIVED", 12412L)
                .r("ACTIVITY_ID", 12407L)
                .d("FAVOURITES_COUNT", "622")
                .d("RATINGS_AVG", "0.6461821251684141")
                .d("RATINGS_COUNT", "263084")
                .d("RATINGS_SUM", "-16776757")
            .and().insertInto("ACTIVITY", 12415L)
            .and().insertInto("ACTIVITY_DERIVED", 12414L)
                .r("ACTIVITY_ID", 12413L)
                .d("FAVOURITES_COUNT", "-935721196981423287")
                .d("RATINGS_AVG", "1.2154713371597943")
                .d("RATINGS_COUNT", "2707083374313161940")
                .d("RATINGS_SUM", "1061944221")
            .and().insertInto("ACTIVITY", 12417L)
            .and().insertInto("ACTIVITY_DERIVED", 12416L)
                .r("ACTIVITY_ID", 12400L)
                .d("FAVOURITES_COUNT", "565")
                .d("RATINGS_AVG", "0.6164848480106224")
                .d("RATINGS_COUNT", "-520550804687045338")
                .d("RATINGS_SUM", "0")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=foo&" + 
                    "name=_EM_60572_XYZ_&" + 
                    "text=-UtOv&" + 
                    "featured=false&" + 
                    "ratings_count_min=-4&" + 
                    "ratings_average_min=0.0&" + 
                    "random=253&" + 
                    "favourites=1073741180")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_36() throws Exception {
        
        String location_tags = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"1Ctb_TwyQZuS1Gz\", " + 
                    " \"name\": \"7tUH7IApvZZ0f\", " + 
                    " \"activities_count\": 20 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("1Ctb_TwyQZuS1Gz"))
                .body("'name'", containsString("7tUH7IApvZZ0f"))
                .body("'activities_count'", numberMatches(20.0));
        location_tags = "/api/v2/tags" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"Rsn7PBaA3fT\", " + 
                    " \"name\": \"JAtxilolZqPwE\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 1481160019708125760, " + 
                    " \"mime_type\": \"b8\", " + 
                    " \"uri\": \"2rfhgjyLdCfpRZ\", " + 
                    " \"copy_right\": \"z_AFxRjKUf\" " + 
                    " }, " + 
                    " \"activities_count\": 992752570 " + 
                    " } ")
                .put(resolveLocation(location_tags, baseUrlOfSut + "/api/v2/tags/737"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("Rsn7PBaA3fT"))
                .body("'name'", containsString("JAtxilolZqPwE"))
                .body("'activities_count'", numberMatches(0.0));
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/roles")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_37() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 5390L)
            .and().insertInto("ACTIVITY", 5391L)
            .and().insertInto("USERS", 15016L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_59854_XYZ_\"")
            .and().insertInto("ACTIVITY", 15015L)
            .and().insertInto("ACTIVITY_RATING", 15014L)
                .r("ACTIVITY_ID", 15015L)
                .r("USER_ID", 15016L)
                .d("FAVOURITE", "false")
                .d("RATING", "588")
            .and().insertInto("USERS", 15019L)
                .d("AUTHORIZATION_LEVEL", "262173")
                .d("NAME", "\"_EM_59855_XYZ_\"")
            .and().insertInto("ACTIVITY", 15018L)
            .and().insertInto("ACTIVITY_RATING", 15017L)
                .r("ACTIVITY_ID", 15018L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "717")
            .and().insertInto("USERS", 15022L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_59856_XYZ_\"")
            .and().insertInto("ACTIVITY", 15021L)
            .and().insertInto("ACTIVITY_RATING", 15020L)
                .r("ACTIVITY_ID", 5390L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 1, " + 
                    " 532, " + 
                    " -4549524690892743290 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v2/activities/617?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_38() throws Exception {
        
        String location_media_files = "";
        String location_tags = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"lmNI\", " + 
                    " \"copy_right\": \"Sw\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("lmNI"))
                .body("'copy_right'", containsString("Sw"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 907, " + 
                    " \"mime_type\": \"jN6Mk_P8H1nf\", " + 
                    " \"uri\": \"lmNI\", " + 
                    " \"author\": \"Pbnj\" " + 
                    " } ")
                .put(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/-597369741?random=rYE4zBhnH5fxqX8&attrs=DzFlTe7ZjNYjiH_a"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("jN6Mk_P8H1nf"))
                .body("'uri'", containsString("lmNI"))
                .body("'copy_right'", containsString("Sw"));
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"_EM_4323_XYZ_\", " + 
                    " \"name\": \"_EM_4324_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("_EM_4323_XYZ_"))
                .body("'name'", containsString("_EM_4324_XYZ_"))
                .body("'activities_count'", numberMatches(0.0));
        location_tags = "/api/v2/tags" + "/" + res_2.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_tags, baseUrlOfSut + "/api/v2/tags/873"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("_EM_4323_XYZ_"))
                .body("'name'", containsString("_EM_4324_XYZ_"))
                .body("'media_file'", nullValue())
                .body("'activities_count'", numberMatches(0.0));
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/roles?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_39() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_introduction\": \"_EM_6499_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_6500_XYZ_\", " + 
                    " \"description_main\": \"_EM_6501_XYZ_\", " + 
                    " \"description_notes\": \"_EM_6503_XYZ_\", " + 
                    " \"age_min\": 0, " + 
                    " \"participants_min\": 254, " + 
                    " \"participants_max\": 348, " + 
                    " \"time_max\": 376, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"_EM_6504_XYZ_\", " + 
                    " \"activity\": { " + 
                    " \"id\": 560, " + 
                    " \"favourites_count\": -7192676986062669318, " + 
                    " \"related\": [ " + 
                    " -129978373, " + 
                    " 558 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T12:08:08.748Z"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("_EM_6499_XYZ_"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("_EM_6500_XYZ_"))
                .body("'properties_revisions'[0].'description_main'", containsString("_EM_6501_XYZ_"))
                .body("'properties_revisions'[0].'description_notes'", containsString("_EM_6503_XYZ_"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(0.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(254.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(348.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(376.0))
                .body("'properties_revisions'[0].'featured'", equalTo(true))
                .body("'properties_revisions'[0].'source'", containsString("_EM_6504_XYZ_"))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'date_created'", containsString("2024-06-01T12:08:08.748Z"))
                .body("'properties'.'description_introduction'", containsString("_EM_6499_XYZ_"))
                .body("'properties'.'description_prepare'", containsString("_EM_6500_XYZ_"))
                .body("'properties'.'description_main'", containsString("_EM_6501_XYZ_"))
                .body("'properties'.'description_notes'", containsString("_EM_6503_XYZ_"))
                .body("'properties'.'age_min'", numberMatches(0.0))
                .body("'properties'.'participants_min'", numberMatches(254.0))
                .body("'properties'.'participants_max'", numberMatches(348.0))
                .body("'properties'.'time_max'", numberMatches(376.0))
                .body("'properties'.'featured'", equalTo(true))
                .body("'properties'.'source'", containsString("_EM_6504_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_40() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 20403L)
            .and().insertInto("ACTIVITY", 20404L)
            .and().insertInto("ACTIVITY", 20406L)
            .and().insertInto("ACTIVITY_DERIVED", 20405L)
                .r("ACTIVITY_ID", 20406L)
                .d("FAVOURITES_COUNT", "840")
                .d("RATINGS_AVG", "0.05236992813295993")
                .d("RATINGS_COUNT", "918")
                .d("RATINGS_SUM", "976")
            .and().insertInto("ACTIVITY", 20408L)
            .and().insertInto("ACTIVITY_DERIVED", 20407L)
                .r("ACTIVITY_ID", 20403L)
                .d("FAVOURITES_COUNT", "493")
                .d("RATINGS_AVG", "0.44070423754690846")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "5094839858257843274")
            .and().insertInto("ACTIVITY", 20410L)
            .and().insertInto("ACTIVITY_DERIVED", 20409L)
                .r("ACTIVITY_ID", 20410L)
                .d("FAVOURITES_COUNT", "323")
                .d("RATINGS_AVG", "0.9361078149604573")
                .d("RATINGS_COUNT", "818")
                .d("RATINGS_SUM", "270")
            .and().insertInto("ACTIVITY", 20412L)
            .and().insertInto("ACTIVITY_DERIVED", 20411L)
                .r("ACTIVITY_ID", 20408L)
                .d("FAVOURITES_COUNT", "-1100679777")
                .d("RATINGS_AVG", "0.3562018758586969")
                .d("RATINGS_COUNT", "478")
                .d("RATINGS_SUM", "4927533437952796737")
            .and().insertInto("ACTIVITY", 20414L)
            .and().insertInto("ACTIVITY_DERIVED", 20413L)
                .r("ACTIVITY_ID", 20404L)
                .d("FAVOURITES_COUNT", "33407")
                .d("RATINGS_AVG", "0.03388078860126986")
                .d("RATINGS_COUNT", "961")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("USERS", 20773L)
                .d("AUTHORIZATION_LEVEL", "584")
                .d("NAME", "\"Mx_yCMRKSmsiz9\"")
            .and().insertInto("ACTIVITY", 20772L)
            .and().insertInto("ACTIVITY", 20771L)
            .and().insertInto("ACTIVITY_PROPERTIES", 20770L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-2147482693")
                .d("DATE_CREATED", "\"1966-11-26 14:05:03\"")
                .d("DATE_PUBLISHED", "\"1923-01-12 02:43:52\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"\"")
                .d("DESCRIPTION_MAIN", "\"Ban6\"")
                .d("DESCRIPTION_MATERIAL", "\"7MQZ8XtwU\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"l86zjmb\"")
                .d("DESCRIPTION_SAFETY", "\"_EM_85039_XYZ_\"")
                .d("FEATURED", "false")
                .d("NAME", "\"gU5cmfnJ8ccFj\"")
                .d("PARTICIPANTS_MAX", "516")
                .d("PARTICIPANTS_MIN", "223")
                .d("SOURCE", "\"_EM_85040_XYZ_\"")
                .d("TIME_MAX", "754")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 20403L)
                .d("AUTHOR_ID", "3")
                .r("PUBLISHING_ACTIVITY_ID", 20406L)
            .and().insertInto("MEDIA_FILE", 17406L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2081-11-02 01:45:53\"")
                .d("COPY_RIGHT", "\"_EM_72323_XYZ_\"")
                .d("MIME_TYPE", "\"SETTINGS\"")
                .d("NAME", "\"1908-12-10 08:30:05\"")
                .d("URI", "\"0ASL5wYRn\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "name=oJR_cbZ&" + 
                    "text=L&" + 
                    "featured=false&" + 
                    "categories=&" + 
                    "random=110&" + 
                    "favourites=67&" + 
                    "uri=0ASL5wYRn")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'properties_revisions'.size()", equalTo(0))
                .body("[0].'ratings_count'", numberMatches(918.0))
                .body("[0].'ratings_sum'", numberMatches(976.0))
                .body("[0].'ratings_average'", numberMatches(1.0631808278867103))
                .body("[0].'favourites_count'", numberMatches(840.0))
                .body("[0].'properties'.'name'", containsString("gU5cmfnJ8ccFj"))
                .body("[0].'properties'.'date_published'", numberMatches(-1.482268568E12))
                .body("[0].'properties'.'date_created'", numberMatches(-9.7757697E10))
                .body("[0].'properties'.'date_updated'", nullValue())
                .body("[0].'properties'.'description_material'", containsString("7MQZ8XtwU"))
                .body("[0].'properties'.'description_introduction'", containsString(""))
                .body("[0].'properties'.'description_prepare'", containsString("l86zjmb"))
                .body("[0].'properties'.'description_main'", containsString("Ban6"))
                .body("[0].'properties'.'description_safety'", containsString("_EM_85039_XYZ_"))
                .body("[0].'properties'.'description_notes'", nullValue())
                .body("[0].'properties'.'age_min'", numberMatches(-2.147482693E9))
                .body("[0].'properties'.'age_max'", nullValue())
                .body("[0].'properties'.'participants_min'", numberMatches(223.0))
                .body("[0].'properties'.'participants_max'", numberMatches(516.0))
                .body("[0].'properties'.'time_min'", nullValue())
                .body("[0].'properties'.'time_max'", numberMatches(754.0))
                .body("[0].'properties'.'featured'", equalTo(false))
                .body("[0].'properties'.'source'", containsString("_EM_85040_XYZ_"))
                .body("[0].'properties'.'tags'.size()", equalTo(0))
                .body("[0].'properties'.'media_files'.size()", equalTo(0))
                .body("[0].'properties'.'author'.'name'", containsString("INTEGRATION TEST ADMINISTRATOR"))
                .body("[0].'properties'.'author'.'email_address'", nullValue())
                .body("[0].'properties'.'author'.'authorization_level'", numberMatches(20.0))
                .body("[0].'properties'.'author'.'identities'.size()", equalTo(1))
                .body("[0].'properties'.'author'.'identities'[0].'date_created'", numberMatches(9.811548E11))
                .body("[0].'properties'.'author'.'identities'[0].'type'", containsString("API"))
                .body("[0].'properties'.'author'.'identities'[0].'value'", containsString("administrator"))
                .body("[0].'related'.size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_41() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 782L)
            .and().insertInto("ACTIVITY", 783L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_4043_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_4045_XYZ_\", " + 
                    " \"description_safety\": \"_EM_4047_XYZ_\", " + 
                    " \"description_notes\": \"_EM_4048_XYZ_\", " + 
                    " \"participants_min\": 328, " + 
                    " \"featured\": false, " + 
                    " \"activity\": { " + 
                    " \"id\": 627, " + 
                    " \"properties_revisions\": [], " + 
                    " \"related\": [ " + 
                    " 491, " + 
                    " 339, " + 
                    " 312 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("_EM_4043_XYZ_"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T12:07:21.780Z"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("_EM_4045_XYZ_"))
                .body("'properties_revisions'[0].'description_safety'", containsString("_EM_4047_XYZ_"))
                .body("'properties_revisions'[0].'description_notes'", containsString("_EM_4048_XYZ_"))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(328.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'name'", containsString("_EM_4043_XYZ_"))
                .body("'properties'.'date_created'", containsString("2024-06-01T12:07:21.780Z"))
                .body("'properties'.'description_introduction'", containsString("_EM_4045_XYZ_"))
                .body("'properties'.'description_safety'", containsString("_EM_4047_XYZ_"))
                .body("'properties'.'description_notes'", containsString("_EM_4048_XYZ_"))
                .body("'properties'.'participants_min'", numberMatches(328.0))
                .body("'properties'.'featured'", equalTo(false));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"favourite\": true " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/1969/rating"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/1969/rating?attrs=_EM_4098_XYZ_"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'rating'", nullValue())
                .body("'favourite'", equalTo(true))
                .body("'activity'.isEmpty()", is(true))
                .body("'user'.isEmpty()", is(true));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_42() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 10591L)
                .d("AUTHOR", "\"nkdIhD\"")
                .d("CAPTURE_DATE", "\"2002-09-16 14:29:56\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_46922_XYZ_\"")
                .d("NAME", "\"j2Wab\"")
                .d("URI", "\"_8TYS14p8W\"")
            .and().insertInto("MEDIA_FILE", 10592L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"WqRbQDYr2\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"tLSL1G\"")
                .d("URI", "\"LznWNN\"")
            .and().insertInto("MEDIA_FILE", 10593L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1946-11-10 16:59:27\"")
                .d("COPY_RIGHT", "\"d2ARJuTw891\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_46923_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 10594L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2069-08-18 13:30:18\"")
                .d("COPY_RIGHT", "\"poW2vfQOZC_b\"")
                .d("MIME_TYPE", "\"\"")
                .d("NAME", "NULL")
                .d("URI", "\"qxzl4\"")
            .and().insertInto("MEDIA_FILE", 10595L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "\"2057-11-22 23:23:53\"")
                .d("COPY_RIGHT", "\"fCn5xKlzj7OhH7FB\"")
                .d("MIME_TYPE", "\"_EM_46924_XYZ_\"")
                .d("NAME", "\"upzmA\"")
                .d("URI", "\"upV\"")
            .and().insertInto("MEDIA_FILE", 10601L)
                .d("URI", "\"au4VQWq9q3e\"")
            .and().insertInto("USERS", 10600L)
                .d("AUTHORIZATION_LEVEL", "584")
                .d("NAME", "\"_EM_46925_XYZ_\"")
            .and().insertInto("ACTIVITY", 10599L)
            .and().insertInto("ACTIVITY", 10598L)
            .and().insertInto("ACTIVITY_PROPERTIES", 10597L)
                .r("ACTIVITY_ID", 10599L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 10596L)
                .r("ACTIVITY_PROPERTIES_ID", 10597L)
                .r("MEDIA_FILE_ID", 10592L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 32477L)
                .d("URI", "\"hz7qfWn\"")
            .and().insertInto("TAG", 32476L)
                .d("GRP", "\"nn6EOsf6gcyROkyq\"")
                .d("NAME", "\"1fI4\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 32479L)
                .d("URI", "\"BOQwm91YW1hG0sI\"")
            .and().insertInto("TAG", 32478L)
                .d("GRP", "\"eM\"")
                .d("NAME", "\"kaRvZLX6moJZ1B\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 32481L)
                .d("URI", "\"hYwoYt\"")
            .and().insertInto("TAG", 32480L)
                .d("GRP", "\"u2VgHAYDcU5H\"")
                .d("NAME", "\"DAKd\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 32483L)
                .d("URI", "\"Garh5CurRHMVuB\"")
            .and().insertInto("TAG", 32482L)
                .d("GRP", "\"jMO\"")
                .d("NAME", "\"H8iP\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 32485L)
                .d("URI", "\"q17juUl\"")
            .and().insertInto("TAG", 32484L)
                .d("GRP", "\"XUU0sVU\"")
                .d("NAME", "\"W\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 32492L)
                .d("URI", "\"shm\"")
            .and().insertInto("TAG", 32491L)
                .d("GRP", "\"_P\"")
                .d("NAME", "\"9Gxqw1zaw5KyJMU\"")
            .and().insertInto("USERS", 32490L)
                .d("AUTHORIZATION_LEVEL", "876")
                .d("NAME", "\"WZvDnz\"")
            .and().insertInto("ACTIVITY", 32489L)
            .and().insertInto("ACTIVITY", 32488L)
            .and().insertInto("ACTIVITY_PROPERTIES", 32487L)
                .r("ACTIVITY_ID", 10599L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 32486L)
                .r("ACTIVITY_PROPERTIES_ID", 32487L)
                .r("TAG_ID", 32480L)
            .and().insertInto("MEDIA_FILE", 32499L)
                .d("URI", "\"C47xXj85CrQRqT\"")
            .and().insertInto("TAG", 32498L)
                .d("GRP", "\"xrLv54JZASfRUrG\"")
                .d("NAME", "\"52YT5YJLt3cnpB6\"")
            .and().insertInto("USERS", 32497L)
                .d("AUTHORIZATION_LEVEL", "125")
                .d("NAME", "\"x69jQWHCaqU8\"")
            .and().insertInto("ACTIVITY", 32496L)
            .and().insertInto("ACTIVITY", 32495L)
            .and().insertInto("ACTIVITY_PROPERTIES", 32494L)
                .r("ACTIVITY_ID", 32495L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 32493L)
                .r("ACTIVITY_PROPERTIES_ID", 32494L)
                .r("TAG_ID", 32476L)
            .and().insertInto("MEDIA_FILE", 32506L)
                .d("URI", "\"yLMifnMuR5KYk\"")
            .and().insertInto("TAG", 32505L)
                .d("GRP", "\"j6yA7Qim8\"")
                .d("NAME", "\"GKa9x0H\"")
            .and().insertInto("USERS", 32504L)
                .d("AUTHORIZATION_LEVEL", "545")
                .d("NAME", "\"_W\"")
            .and().insertInto("ACTIVITY", 32503L)
            .and().insertInto("ACTIVITY", 32502L)
            .and().insertInto("ACTIVITY_PROPERTIES", 32501L)
                .r("ACTIVITY_ID", 32489L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 32500L)
                .r("ACTIVITY_PROPERTIES_ID", 32494L)
                .r("TAG_ID", 32484L)
            .and().insertInto("MEDIA_FILE", 32513L)
                .d("URI", "\"l_BvIwKbzFMyUaZ\"")
            .and().insertInto("TAG", 32512L)
                .d("GRP", "\"QNr6zu\"")
                .d("NAME", "\"zy7YJlFCt\"")
            .and().insertInto("USERS", 32511L)
                .d("AUTHORIZATION_LEVEL", "404")
                .d("NAME", "\"rdVKmUe3MWeX\"")
            .and().insertInto("ACTIVITY", 32510L)
            .and().insertInto("ACTIVITY", 32509L)
            .and().insertInto("ACTIVITY_PROPERTIES", 32508L)
                .r("ACTIVITY_ID", 32503L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 32507L)
                .r("ACTIVITY_PROPERTIES_ID", 32508L)
                .r("TAG_ID", 32505L)
            .and().insertInto("MEDIA_FILE", 40922L)
                .d("URI", "\"r3Exhv9\"")
            .and().insertInto("TAG", 40921L)
                .d("GRP", "\"I\"")
                .d("NAME", "\"CbTn3mc5mWts4\"")
            .and().insertInto("TAG_DERIVED", 40920L)
                .r("TAG_ID", 32476L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 40925L)
                .d("URI", "\"TNpU\"")
            .and().insertInto("TAG", 40924L)
                .d("GRP", "\"eNXC710Q5O3xlj\"")
                .d("NAME", "\"BK\"")
            .and().insertInto("TAG_DERIVED", 40923L)
                .r("TAG_ID", 32491L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 40928L)
                .d("URI", "\"t\"")
            .and().insertInto("TAG", 40927L)
                .d("GRP", "\"NVkHknHicV\"")
                .d("NAME", "\"iJPoDNvKe\"")
            .and().insertInto("TAG_DERIVED", 40926L)
                .r("TAG_ID", 32484L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 40931L)
                .d("URI", "\"UAEy9\"")
            .and().insertInto("TAG", 40930L)
                .d("GRP", "\"xTepm_JlFjaWD_qZ\"")
                .d("NAME", "\"s6ws7gyOsQ\"")
            .and().insertInto("TAG_DERIVED", 40929L)
                .r("TAG_ID", 32505L)
                .d("ACTIVITIES_COUNT", "931")
            .and().insertInto("MEDIA_FILE", 40934L)
                .d("URI", "\"y88opG\"")
            .and().insertInto("TAG", 40933L)
                .d("GRP", "\"32Vf8mzu\"")
                .d("NAME", "\"XPcrABR1AT3K5Z1\"")
            .and().insertInto("TAG_DERIVED", 40932L)
                .r("TAG_ID", 40933L)
                .d("ACTIVITIES_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"za2cwXacfw\", " + 
                    " \"description_material\": \"8wvmIsVTs3HOCb2\", " + 
                    " \"description_prepare\": \"6nM9DA\", " + 
                    " \"description_safety\": \"gs8j0Y6\", " + 
                    " \"description_notes\": \"Hf\", " + 
                    " \"participants_min\": 570, " + 
                    " \"participants_max\": 435, " + 
                    " \"time_min\": 184, " + 
                    " \"time_max\": 1022, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"haMnnOZE\", " + 
                    " \"uri\": \"2Az\", " + 
                    " \"name\": \"\", " + 
                    " \"copy_right\": \"08\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("za2cwXacfw"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T12:08:11.363Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("8wvmIsVTs3HOCb2"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("6nM9DA"))
                .body("'properties_revisions'[0].'description_safety'", containsString("gs8j0Y6"))
                .body("'properties_revisions'[0].'description_notes'", containsString("Hf"))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(570.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(435.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(184.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(1022.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'tags'.size()", equalTo(0))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(1))
                .body("'properties_revisions'[0].'media_files'[0].'mime_type'", containsString("haMnnOZE"))
                .body("'properties_revisions'[0].'media_files'[0].'uri'", containsString("2Az"))
                .body("'properties_revisions'[0].'media_files'[0].'name'", containsString(""))
                .body("'properties_revisions'[0].'media_files'[0].'copy_right'", containsString("08"))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'name'", containsString("za2cwXacfw"))
                .body("'properties'.'date_created'", containsString("2024-06-01T12:08:11.363Z"))
                .body("'properties'.'description_material'", containsString("8wvmIsVTs3HOCb2"))
                .body("'properties'.'description_prepare'", containsString("6nM9DA"))
                .body("'properties'.'description_safety'", containsString("gs8j0Y6"))
                .body("'properties'.'description_notes'", containsString("Hf"))
                .body("'properties'.'participants_min'", numberMatches(570.0))
                .body("'properties'.'participants_max'", numberMatches(435.0))
                .body("'properties'.'time_min'", numberMatches(184.0))
                .body("'properties'.'time_max'", numberMatches(1022.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'tags'.size()", equalTo(0))
                .body("'properties'.'media_files'.size()", equalTo(1))
                .body("'properties'.'media_files'[0].'mime_type'", containsString("haMnnOZE"))
                .body("'properties'.'media_files'[0].'uri'", containsString("2Az"))
                .body("'properties'.'media_files'[0].'name'", containsString(""))
                .body("'properties'.'media_files'[0].'copy_right'", containsString("08"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_43() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 2233L)
                .d("KEY", "\"ZT\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1918-11-21 21:27:08\"")
                .d("VALUE", "\"9sBG\"")
            .and().insertInto("MEDIA_FILE", 26346L)
                .d("AUTHOR", "\"lrczptQoZ2HP2Nk\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"7mV6QhGjSp0UMUsw\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"3hMzanV\"")
                .d("URI", "\"pBafli2x0PP\"")
            .and().insertInto("MEDIA_FILE", 26347L)
                .d("AUTHOR", "\"aVqjNAYgMyqBUowL\"")
                .d("CAPTURE_DATE", "\"1971-05-19 21:48:12\"")
                .d("COPY_RIGHT", "\"Q1diF\"")
                .d("MIME_TYPE", "\"2sJ\"")
                .d("NAME", "NULL")
                .d("URI", "\"ilouj1A\"")
            .and().insertInto("MEDIA_FILE", 26348L)
                .d("AUTHOR", "\"CasUfO8hJ\"")
                .d("CAPTURE_DATE", "\"1926-09-05 06:50:27\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"cdGI\"")
                .d("NAME", "NULL")
                .d("URI", "\"P\"")
            .and().insertInto("MEDIA_FILE", 26354L)
                .d("URI", "\"Ws5owB\"")
            .and().insertInto("USERS", 26353L)
                .d("AUTHORIZATION_LEVEL", "77")
                .d("NAME", "\"EAGC5V3N\"")
            .and().insertInto("ACTIVITY", 26352L)
            .and().insertInto("ACTIVITY", 26351L)
            .and().insertInto("ACTIVITY_PROPERTIES", 26350L)
                .r("ACTIVITY_ID", 26351L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 26349L)
                .r("ACTIVITY_PROPERTIES_ID", 26350L)
                .r("MEDIA_FILE_ID", 26346L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 26360L)
                .d("URI", "\"\"")
            .and().insertInto("USERS", 26359L)
                .d("AUTHORIZATION_LEVEL", "379")
                .d("NAME", "\"HYCCIzpTQcB\"")
            .and().insertInto("ACTIVITY", 26358L)
            .and().insertInto("ACTIVITY", 26357L)
            .and().insertInto("ACTIVITY_PROPERTIES", 26356L)
                .r("ACTIVITY_ID", 26357L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 26355L)
                .r("ACTIVITY_PROPERTIES_ID", 26356L)
                .r("MEDIA_FILE_ID", 26360L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 26366L)
                .d("URI", "\"QK861VwskEGA\"")
            .and().insertInto("USERS", 26365L)
                .d("AUTHORIZATION_LEVEL", "213")
                .d("NAME", "\"U_\"")
            .and().insertInto("ACTIVITY", 26364L)
            .and().insertInto("ACTIVITY", 26363L)
            .and().insertInto("ACTIVITY_PROPERTIES", 26362L)
                .r("ACTIVITY_ID", 26358L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 26361L)
                .r("ACTIVITY_PROPERTIES_ID", 26356L)
                .r("MEDIA_FILE_ID", 26366L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 26372L)
                .d("URI", "\"mVGolKAeFwYMz\"")
            .and().insertInto("USERS", 26371L)
                .d("AUTHORIZATION_LEVEL", "-32008")
                .d("NAME", "\"J08KKgljXJPOv0c\"")
            .and().insertInto("ACTIVITY", 26370L)
            .and().insertInto("ACTIVITY", 26369L)
            .and().insertInto("ACTIVITY_PROPERTIES", 26368L)
                .r("ACTIVITY_ID", 26364L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 26367L)
                .r("ACTIVITY_PROPERTIES_ID", 26362L)
                .r("MEDIA_FILE_ID", 26346L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 26378L)
                .d("URI", "\"3jmkzCzXimgVKVX\"")
            .and().insertInto("USERS", 26377L)
                .d("AUTHORIZATION_LEVEL", "148")
                .d("NAME", "\"Nndn426\"")
            .and().insertInto("ACTIVITY", 26376L)
            .and().insertInto("ACTIVITY", 26375L)
            .and().insertInto("ACTIVITY_PROPERTIES", 26374L)
                .r("ACTIVITY_ID", 26352L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 26373L)
                .r("ACTIVITY_PROPERTIES_ID", 26362L)
                .r("MEDIA_FILE_ID", 26366L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 26899L)
                .d("URI", "\"_EM_95272_XYZ_\"")
            .and().insertInto("TAG", 26898L)
                .d("GRP", "\"I\"")
                .d("NAME", "\"TrcK\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 26901L)
                .d("URI", "\"GEI0eFbjYWH0APfU\"")
            .and().insertInto("TAG", 26900L)
                .d("GRP", "\"HU9HplJ1JFQi2zVB\"")
                .d("NAME", "\"REoUiqmtuI7AYh6\"")
                .r("MEDIA_FILE_ID", 26372L)
            .and().insertInto("MEDIA_FILE", 26903L)
                .d("URI", "\"QQYwWV\"")
            .and().insertInto("TAG", 26902L)
                .d("GRP", "\"1ZgyZm00x7kOWa\"")
                .d("NAME", "\"OpcG\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 26905L)
                .d("URI", "\"kz0ILTiI90rfK\"")
            .and().insertInto("TAG", 26904L)
                .d("GRP", "\"nolb0Il1KT0PqviZ\"")
                .d("NAME", "\"qOujsFv\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"YDrdHzrpDn\", " + 
                    " \"description_main\": \"FZhM7qqIX\", " + 
                    " \"description_notes\": \"jzGaYC5_BUpcQ\", " + 
                    " \"participants_min\": 227, " + 
                    " \"participants_max\": 544, " + 
                    " \"time_min\": 949, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"vMY9\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"D7x2sec8Vz\", " + 
                    " \"uri\": \"9D\", " + 
                    " \"copy_right\": \"G54\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 361, " + 
                    " \"ratings_sum\": 496, " + 
                    " \"favourites_count\": 141 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T12:08:11.202Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("YDrdHzrpDn"))
                .body("'properties_revisions'[0].'description_main'", containsString("FZhM7qqIX"))
                .body("'properties_revisions'[0].'description_notes'", containsString("jzGaYC5_BUpcQ"))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(227.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(544.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(949.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'source'", containsString("vMY9"))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(1))
                .body("'properties_revisions'[0].'media_files'[0].'mime_type'", containsString("D7x2sec8Vz"))
                .body("'properties_revisions'[0].'media_files'[0].'uri'", containsString("9D"))
                .body("'properties_revisions'[0].'media_files'[0].'copy_right'", containsString("G54"))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'date_created'", containsString("2024-06-01T12:08:11.202Z"))
                .body("'properties'.'description_material'", containsString("YDrdHzrpDn"))
                .body("'properties'.'description_main'", containsString("FZhM7qqIX"))
                .body("'properties'.'description_notes'", containsString("jzGaYC5_BUpcQ"))
                .body("'properties'.'participants_min'", numberMatches(227.0))
                .body("'properties'.'participants_max'", numberMatches(544.0))
                .body("'properties'.'time_min'", numberMatches(949.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'source'", containsString("vMY9"))
                .body("'properties'.'media_files'.size()", equalTo(1))
                .body("'properties'.'media_files'[0].'mime_type'", containsString("D7x2sec8Vz"))
                .body("'properties'.'media_files'[0].'uri'", containsString("9D"))
                .body("'properties'.'media_files'[0].'copy_right'", containsString("G54"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_44() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/system/ping?EMextraParam123=42")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_45() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 6973L)
                .d("AUTHORIZATION_LEVEL", "529")
                .d("DATE_CREATED", "\"1942-12-13 05:38:18\"")
                .d("EMAIL_ADDRESS", "\"O8V\"")
                .d("NAME", "\"_EM_34324_XYZ_\"")
            .and().insertInto("USERS", 6974L)
                .d("AUTHORIZATION_LEVEL", "581")
                .d("DATE_CREATED", "\"2067-01-16 00:19:03\"")
                .d("EMAIL_ADDRESS", "\"_EM_34325_XYZ_\"")
                .d("NAME", "\"_EM_34326_XYZ_\"")
            .and().insertInto("USERS", 6975L)
                .d("AUTHORIZATION_LEVEL", "8891")
                .d("DATE_CREATED", "\"2093-11-22 05:20:58\"")
                .d("EMAIL_ADDRESS", "\"hZHtZ0O_\"")
                .d("NAME", "\"7dZ\"")
            .and().insertInto("USERS", 6976L)
                .d("AUTHORIZATION_LEVEL", "-134217294")
                .d("DATE_CREATED", "\"2100-05-29 17:26:21\"")
                .d("EMAIL_ADDRESS", "\"oH783LuxR7TF\"")
                .d("NAME", "\"_EM_90743_XYZ_\"")
            .and().insertInto("USERS", 6977L)
                .d("AUTHORIZATION_LEVEL", "223")
                .d("DATE_CREATED", "\"2028-09-23 15:37:13\"")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"0TxT\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/users/7")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_46() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 49843L)
                .d("KEY", "\"vqCnstA8BPKe\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2008-01-17 00:10:55\"")
                .d("VALUE", "\"BL2nZc1WS20wd\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/1?attrs=xBYiXk")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_47() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 14306L)
            .and().insertInto("ACTIVITY", 14307L)
            .and().insertInto("ACTIVITY", 14308L)
            .and().insertInto("ACTIVITY", 14309L)
            .and().insertInto("USERS", 47382L)
                .d("AUTHORIZATION_LEVEL", "943")
                .d("NAME", "\"jnq62sd_3aoMtbKL\"")
            .and().insertInto("ACTIVITY", 47381L)
            .and().insertInto("ACTIVITY", 47380L)
            .and().insertInto("ACTIVITY_RELATION", 47379L)
                .r("ACTIVITY_1_ID", 47381L)
                .r("ACTIVITY_2_ID", 47380L)
                .r("OWNER_ID", 47382L)
            .and().insertInto("USERS", 47386L)
                .d("AUTHORIZATION_LEVEL", "343")
                .d("NAME", "\"1fCLy9OBp\"")
            .and().insertInto("ACTIVITY", 47385L)
            .and().insertInto("ACTIVITY", 47384L)
            .and().insertInto("ACTIVITY_RELATION", 47383L)
                .r("ACTIVITY_1_ID", 14309L)
                .r("ACTIVITY_2_ID", 14306L)
                .r("OWNER_ID", 47382L)
            .and().insertInto("USERS", 47390L)
                .d("AUTHORIZATION_LEVEL", "566")
                .d("NAME", "\"RbHYb\"")
            .and().insertInto("ACTIVITY", 47389L)
            .and().insertInto("ACTIVITY", 47388L)
            .and().insertInto("ACTIVITY_RELATION", 47387L)
                .r("ACTIVITY_1_ID", 14307L)
                .r("ACTIVITY_2_ID", 47381L)
                .r("OWNER_ID", 47390L)
            .and().insertInto("USERS", 47394L)
                .d("AUTHORIZATION_LEVEL", "656")
                .d("NAME", "\"s_\"")
            .and().insertInto("ACTIVITY", 47393L)
            .and().insertInto("ACTIVITY", 47392L)
            .and().insertInto("ACTIVITY_RELATION", 47391L)
                .r("ACTIVITY_1_ID", 14308L)
                .r("ACTIVITY_2_ID", 47392L)
                .d("OWNER_ID", "2")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/7?" + 
                    "uri=jCed6&" + 
                    "attrs=wyr4rnY6MzFUNL")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_48() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 6255L)
            .and().insertInto("ACTIVITY", 6256L)
            .and().insertInto("ACTIVITY", 6257L)
            .and().insertInto("SYSTEM_MESSAGE", 6258L)
                .d("KEY", "\"nhOqmCCiTXGqw8V\"")
                .d("VALID_FROM", "\"2019-05-13 16:27:29\"")
                .d("VALID_TO", "\"2100-08-28 16:52:15\"")
                .d("VALUE", "\"yx2kSB1x8_DI\"")
            .and().insertInto("MEDIA_FILE", 6259L)
                .d("AUTHOR", "\"WR2r4Pb6\"")
                .d("CAPTURE_DATE", "\"2036-02-16 00:26:03\"")
                .d("COPY_RIGHT", "\"5702850\"")
                .d("MIME_TYPE", "\"5703993\"")
                .d("NAME", "\"_EM_31184_XYZ_\"")
                .d("URI", "\"3hQexp8ssAFS8\"")
            .and().insertInto("MEDIA_FILE", 6260L)
                .d("AUTHOR", "\"_EM_43335_XYZ_\"")
                .d("CAPTURE_DATE", "\"1912-03-09 22:01:42\"")
                .d("COPY_RIGHT", "\"LEFT\"")
                .d("MIME_TYPE", "\"f814dONzf8\"")
                .d("NAME", "\"_EM_44484_XYZ_\"")
                .d("URI", "\"P0OkLYyPtf\"")
            .and().insertInto("MEDIA_FILE", 6261L)
                .d("AUTHOR", "\"5704276\"")
                .d("CAPTURE_DATE", "\"2000-06-16 00:57:29\"")
                .d("COPY_RIGHT", "\"_EM_31186_XYZ_\"")
                .d("MIME_TYPE", "\"ACTIVITY_ID\"")
                .d("NAME", "\"_EM_43304_XYZ_\"")
                .d("URI", "\"_EM_44485_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 6270L)
                .d("URI", "\"2OtCQFq6ohG2w\"")
            .and().insertInto("TAG", 6269L)
                .d("GRP", "\"8\"")
                .d("NAME", "\"Qwae\"")
            .and().insertInto("TAG_DERIVED", 6268L)
                .r("TAG_ID", 6269L)
                .d("ACTIVITIES_COUNT", "-134217728")
            .and().insertInto("MEDIA_FILE", 6273L)
                .d("URI", "\"5698070\"")
            .and().insertInto("TAG", 6272L)
                .d("GRP", "\"T1nRDCxaivzKDf7t\"")
                .d("NAME", "\"dT5off4CJyJCPvJD\"")
            .and().insertInto("TAG_DERIVED", 6271L)
                .r("TAG_ID", 6272L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 6276L)
                .d("URI", "\"_EM_44486_XYZ_\"")
            .and().insertInto("TAG", 6275L)
                .d("GRP", "\"AGE_MAX\"")
                .d("NAME", "\"47\"")
            .and().insertInto("USERS", 39570L)
                .d("AUTHORIZATION_LEVEL", "499")
                .d("NAME", "\"SP\"")
            .and().insertInto("ACTIVITY", 39569L)
            .and().insertInto("ACTIVITY_RATING", 39568L)
                .r("ACTIVITY_ID", 6255L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "567")
            .and().insertInto("USERS", 39573L)
                .d("AUTHORIZATION_LEVEL", "524")
                .d("NAME", "\"NMQ\"")
            .and().insertInto("ACTIVITY", 39572L)
            .and().insertInto("ACTIVITY_RATING", 39571L)
                .r("ACTIVITY_ID", 6257L)
                .r("USER_ID", 39573L)
                .d("FAVOURITE", "false")
                .d("RATING", "984")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/1/rating")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_49() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1403L)
            .and().insertInto("ACTIVITY", 1404L)
            .and().insertInto("ACTIVITY", 1405L)
            .and().insertInto("ACTIVITY", 1406L)
            .and().insertInto("MEDIA_FILE", 1407L)
                .d("AUTHOR", "\"Y3iOPruQkzx86\"")
                .d("CAPTURE_DATE", "\"1968-02-24 08:59:17\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"moderator\"")
                .d("URI", "\"lwa5A\"")
            .and().insertInto("MEDIA_FILE", 1408L)
                .d("AUTHOR", "\"_EM_41947_XYZ_\"")
                .d("CAPTURE_DATE", "\"2007-07-10 06:46:47\"")
                .d("COPY_RIGHT", "\"kfbIUyrCd7\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"_EM_33511_XYZ_\"")
                .d("URI", "\"_EM_41948_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 1409L)
                .d("AUTHOR", "\"_EM_34234_XYZ_\"")
                .d("CAPTURE_DATE", "\"2007-11-23 12:40:44\"")
                .d("COPY_RIGHT", "\"IwNc\"")
                .d("MIME_TYPE", "\"v1NJ\"")
                .d("NAME", "\"5609184\"")
                .d("URI", "\"_EM_11990_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 1410L)
                .d("AUTHOR", "\"Mb72UvLH6h3P\"")
                .d("CAPTURE_DATE", "\"2045-10-25 03:00:29\"")
                .d("COPY_RIGHT", "\"nkIH5gl1\"")
                .d("MIME_TYPE", "\"_EM_34236_XYZ_\"")
                .d("NAME", "\"zk9n\"")
                .d("URI", "\"TABLE_TYPE\"")
            .and().insertInto("MEDIA_FILE", 1411L)
                .d("AUTHOR", "\"Q_YEIEZvWL4fs\"")
                .d("CAPTURE_DATE", "\"2066-01-14 00:51:25\"")
                .d("COPY_RIGHT", "\"USERS\"")
                .d("MIME_TYPE", "\"xlmdP7\"")
                .d("NAME", "\"_EM_41949_XYZ_\"")
                .d("URI", "\"_EM_34238_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 6928L)
                .d("KEY", "\"\"")
                .d("VALID_FROM", "\"2000-06-19 11:43:29\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_41950_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 6929L)
                .d("KEY", "\"_EM_41951_XYZ_\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1963-10-02 23:04:30\"")
                .d("VALUE", "\"_EM_34239_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 6930L)
                .d("KEY", "\"_EM_34240_XYZ_\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2020-10-14 04:17:13\"")
                .d("VALUE", "\"xqjLRWmnhWW6aXok\"")
            .and().insertInto("USERS", 9031L)
                .d("AUTHORIZATION_LEVEL", "729")
                .d("NAME", "\"MqYDEfT5U5Lh\"")
            .and().insertInto("ACTIVITY", 9030L)
            .and().insertInto("ACTIVITY_RATING", 9029L)
                .r("ACTIVITY_ID", 1406L)
                .r("USER_ID", 9031L)
                .d("FAVOURITE", "true")
                .d("RATING", "823")
            .and().insertInto("USERS", 9034L)
                .d("AUTHORIZATION_LEVEL", "1070")
                .d("NAME", "\"GfZsu8qpd\"")
            .and().insertInto("ACTIVITY", 9033L)
            .and().insertInto("ACTIVITY_RATING", 9032L)
                .r("ACTIVITY_ID", 1404L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "809")
            .and().insertInto("USERS", 9037L)
                .d("AUTHORIZATION_LEVEL", "874")
                .d("NAME", "\"_EM_41952_XYZ_\"")
            .and().insertInto("ACTIVITY", 9036L)
            .and().insertInto("ACTIVITY_RATING", 9035L)
                .r("ACTIVITY_ID", 1406L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "121")
            .and().insertInto("USERS", 9040L)
                .d("AUTHORIZATION_LEVEL", "-740220417")
                .d("NAME", "\"iJTPJK7zHQX4osRC\"")
            .and().insertInto("ACTIVITY", 9039L)
            .and().insertInto("ACTIVITY_RATING", 9038L)
                .r("ACTIVITY_ID", 1405L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "800")
            .and().insertInto("USERS", 9043L)
                .d("AUTHORIZATION_LEVEL", "535")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 9042L)
            .and().insertInto("ACTIVITY_RATING", 9041L)
                .r("ACTIVITY_ID", 9036L)
                .r("USER_ID", 9040L)
                .d("FAVOURITE", "false")
                .d("RATING", "246")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/4/rating")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_50() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 1, " + 
                    " 532, " + 
                    " -4549524690892743290 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=42")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_51() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 6255L)
            .and().insertInto("ACTIVITY", 6256L)
            .and().insertInto("ACTIVITY", 6257L)
            .and().insertInto("SYSTEM_MESSAGE", 6258L)
                .d("KEY", "\"nhOqmCCiTXGqw8V\"")
                .d("VALID_FROM", "\"2000-06-13 16:29:30\"")
                .d("VALID_TO", "\"2099-02-27 17:52:23\"")
                .d("VALUE", "\"_EM_57689_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 6259L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2000-06-16 15:00:02\"")
                .d("COPY_RIGHT", "\"5702850\"")
                .d("MIME_TYPE", "\"5703993\"")
                .d("NAME", "\"E6y_xdcHUL\"")
                .d("URI", "\"3hQexp8ssAFS8c\"")
            .and().insertInto("MEDIA_FILE", 6260L)
                .d("AUTHOR", "\"5805183\"")
                .d("CAPTURE_DATE", "\"1912-03-09 22:01:42\"")
                .d("COPY_RIGHT", "\"LEFT\"")
                .d("MIME_TYPE", "\"_EM_89346_XYZ_\"")
                .d("NAME", "\"[ZkZT\"")
                .d("URI", "\"NrlH13Y11B991Oz\"")
            .and().insertInto("MEDIA_FILE", 6261L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2000-05-16 00:25:29\"")
                .d("COPY_RIGHT", "\"ENAIgc\"")
                .d("MIME_TYPE", "\"5698291\"")
                .d("NAME", "\"8MsABIgye\"")
                .d("URI", "\"pVKFBX1vdwh4q\"")
            .and().insertInto("MEDIA_FILE", 6270L)
                .d("URI", "\"nXatPqqkh\"")
            .and().insertInto("TAG", 6269L)
                .d("GRP", "\"8\"")
                .d("NAME", "\"Qwae\"")
            .and().insertInto("TAG_DERIVED", 6268L)
                .r("TAG_ID", 6269L)
                .d("ACTIVITIES_COUNT", "-134225920")
            .and().insertInto("MEDIA_FILE", 6273L)
                .d("URI", "\"5698070\"")
            .and().insertInto("TAG", 6272L)
                .d("GRP", "\"E\"")
                .d("NAME", "\"_EM_57690_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 6271L)
                .r("TAG_ID", 6272L)
                .d("ACTIVITIES_COUNT", "2")
            .and().insertInto("MEDIA_FILE", 6276L)
                .d("URI", "\"-28\"")
            .and().insertInto("TAG", 6275L)
                .d("GRP", "\"AGE_MAX\"")
                .d("NAME", "\"47\"")
            .and().insertInto("USERS", 22138L)
                .d("AUTHORIZATION_LEVEL", "518")
                .d("NAME", "\"xUe0huLpHrF2D\"")
            .and().insertInto("ACTIVITY", 22137L)
            .and().insertInto("ACTIVITY_RATING", 22136L)
                .r("ACTIVITY_ID", 6256L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "174")
            .and().insertInto("USERS", 22141L)
                .d("AUTHORIZATION_LEVEL", "374")
                .d("NAME", "\"zVn\"")
            .and().insertInto("ACTIVITY", 22140L)
            .and().insertInto("ACTIVITY_RATING", 22139L)
                .r("ACTIVITY_ID", 6256L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 22144L)
                .d("AUTHORIZATION_LEVEL", "451")
                .d("NAME", "\"2_a_5eMD\"")
            .and().insertInto("ACTIVITY", 22143L)
            .and().insertInto("ACTIVITY_RATING", 22142L)
                .r("ACTIVITY_ID", 22140L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities/2/rating")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_52() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 8430L)
            .and().insertInto("ACTIVITY", 8431L)
            .and().insertInto("USERS", 8434L)
                .d("AUTHORIZATION_LEVEL", "911")
                .d("NAME", "\"ibFbxZCim\"")
            .and().insertInto("ACTIVITY", 8433L)
            .and().insertInto("ACTIVITY_RATING", 8432L)
                .r("ACTIVITY_ID", 8431L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "301")
            .and().insertInto("USERS", 8437L)
                .d("AUTHORIZATION_LEVEL", "1002")
                .d("NAME", "\"_EM_41001_XYZ_\"")
            .and().insertInto("ACTIVITY", 8436L)
            .and().insertInto("ACTIVITY_RATING", 8435L)
                .r("ACTIVITY_ID", 8433L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "486")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 124, " + 
                    " 704, " + 
                    " 78, " + 
                    " -1164571221 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }


}
