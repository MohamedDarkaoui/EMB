import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2024-06-01T12:08:11.815+02:00[Europe/Paris]
 * <br>
 * The generated test suite contains 79 tests
 * <br>
 * Covered targets: 1568
 * <br>
 * Used time: 2h 0m 51s
 * <br>
 * Needed budget for current results: 99%
 * <br>
 * This file contains test cases that are likely to indicate faults.
 */
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.se.devscout.scoutapi.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    /**
    * rso - response structure oracle - checking that the response objects match the responses defined in the schema
    */
    private static boolean rso = false;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("MEDIA_FILE","ACTIVITY_PROPERTIES_MEDIA_FILE","MEDIA_FILE_KEYWORDS","TAG","ACTIVITY_PROPERTIES_TAG","TAG_DERIVED","ACTIVITY","ACTIVITY_DERIVED","ACTIVITY_PROPERTIES","ACTIVITY_RATING","ACTIVITY_RELATION","USERS","USER_IDENTITY","SYSTEM_MESSAGE"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * [test_0_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_0_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=_EM_1767_XYZ_&" + 
                    "text=_EM_1769_XYZ_&" + 
                    "featured=false&" + 
                    "categories=_EM_1770_XYZ_&" + 
                    "participants=_EM_1772_XYZ_&" + 
                    "durations=RsHD2jHD&" + 
                    "my_favourites=true&" + 
                    "ratings_count_min=972&" + 
                    "random=668")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_77_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
    }
    
    
    /**
    * [test_1_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_1_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "attrs=_EM_1791_XYZ_&" + 
                    "name=_EM_1792_XYZ_&" + 
                    "text=_EM_1793_XYZ_&" + 
                    "age_1=_EM_1795_XYZ_&" + 
                    "participants=_EM_1797_XYZ_&" + 
                    "time_1=_EM_1798_XYZ_&" + 
                    "time_2=_EM_1799_XYZ_&" + 
                    "my_favourites=false&" + 
                    "ratings_average_min=0.5736932341881326")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
    }
    
    
    /**
    * [test_2_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_2_with500() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/media_files/3/file?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_3_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_3_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3596_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/tags?EMextraParam123=_EM_3595_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_4_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_4_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_5119_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_33_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_5_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_5_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_5132_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_6_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_6_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/users/916?EMextraParam123=_EM_8198_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_7_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_7_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/users/113?EMextraParam123=_EM_4988_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_48_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_8_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_8_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/tags/170?EMextraParam123=_EM_3450_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_9_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_9_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/698849193")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_41_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_10_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_10_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/categories/152")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_11_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_11_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1932_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=_EM_1931_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/FavouritesResourceV1_66_put
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_12_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_12_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/568?EMextraParam123=_EM_3436_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_13_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_13_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1644_XYZ_")
                .delete(baseUrlOfSut + "/api/v2/activities/133/rating?EMextraParam123=_EM_1643_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_14_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_14_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1922_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=_EM_1921_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_15_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_15_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/895/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_16_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_16_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1649_XYZ_")
                .get(baseUrlOfSut + "/api/v1/activities/753/rating?EMextraParam123=_EM_1648_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_17_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_17_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1651_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/activities/97/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_18_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_18_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_5112_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_19_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_19_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -1517072294 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_78_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_20_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_20_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v2/activities/704")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_21_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_21_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3504_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/activities/573")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_22_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_22_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/507?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_23_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_23_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3431_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .patch(baseUrlOfSut + "/api/v2/activities/532?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_24_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_24_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3502_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .patch(baseUrlOfSut + "/api/v1/activities/703")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_25_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_25_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 942, " + 
                    " \"name\": \"5f1\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_62_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_26_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_26_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"A\", " + 
                    " \"email_address\": \"Wh0cbpmybXDX\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_40_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_27_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_27_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/86829222831013492?verify_unused=true")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_28_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_28_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"email_address\": \"_EM_16469_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/674")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_100_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_29_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_29_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 36132L)
            .and().insertInto("ACTIVITY", 36134L)
            .and().insertInto("ACTIVITY_DERIVED", 36133L)
                .r("ACTIVITY_ID", 36132L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "823")
                .d("RATINGS_SUM", "821")
            .and().insertInto("MEDIA_FILE", 36150L)
                .d("URI", "\"xoHq6P\"")
            .and().insertInto("TAG", 36149L)
                .d("GRP", "\"O6Q9wKIUbr07Zw4k\"")
                .d("NAME", "\"8G7j40iv\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 36152L)
                .d("URI", "\"g_3S\"")
            .and().insertInto("TAG", 36151L)
                .d("GRP", "\"njqxEjVGOZ4\"")
                .d("NAME", "\"i76McsP272S\"")
                .r("MEDIA_FILE_ID", 36152L)
            .and().insertInto("MEDIA_FILE", 17406L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"_EM_72323_XYZ_\"")
                .d("MIME_TYPE", "\"SETTINGS\"")
                .d("NAME", "\"_EM_72325_XYZ_\"")
                .d("URI", "\"0ASL5wYRn\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 977, " + 
                    " \"group\": \"Wey\", " + 
                    " \"name\": \"ZMWBUucQIvI\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_60_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_30_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_30_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 2213L)
                .d("KEY", "\"_EM_14996_XYZ_\"")
                .d("VALID_FROM", "\"1979-06-07 12:16:02\"")
                .d("VALID_TO", "\"1907-09-13 15:33:49\"")
                .d("VALUE", "\"_EM_14997_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_15000_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 126, " + 
                    " \"key\": \"AgGklNtk\", " + 
                    " \"value\": \"_EM_14998_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/2213?EMextraParam123=_EM_14999_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_102_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_31_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_31_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1812_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 694, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities/694/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_32_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_32_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 6255L)
            .and().insertInto("ACTIVITY", 6256L)
            .and().insertInto("ACTIVITY", 6257L)
            .and().insertInto("SYSTEM_MESSAGE", 6258L)
                .d("KEY", "\"nhOqmCCiTXGqw8V\"")
                .d("VALID_FROM", "\"2019-05-13 16:27:29\"")
                .d("VALID_TO", "\"2100-08-28 16:52:15\"")
                .d("VALUE", "\"yx2kSB1x8_DI\"")
            .and().insertInto("MEDIA_FILE", 6259L)
                .d("AUTHOR", "\"WR2r4Pb6\"")
                .d("CAPTURE_DATE", "\"2036-02-16 00:26:03\"")
                .d("COPY_RIGHT", "\"5702850\"")
                .d("MIME_TYPE", "\"5703993\"")
                .d("NAME", "\"_EM_31184_XYZ_\"")
                .d("URI", "\"3hQexp8ssAFS8\"")
            .and().insertInto("MEDIA_FILE", 6260L)
                .d("AUTHOR", "\"_EM_43335_XYZ_\"")
                .d("CAPTURE_DATE", "\"1912-03-09 22:01:42\"")
                .d("COPY_RIGHT", "\"LEFT\"")
                .d("MIME_TYPE", "\"f814dONzf8\"")
                .d("NAME", "\"_EM_44484_XYZ_\"")
                .d("URI", "\"P0OkLYyPtf\"")
            .and().insertInto("MEDIA_FILE", 6261L)
                .d("AUTHOR", "\"5704276\"")
                .d("CAPTURE_DATE", "\"2000-06-16 00:57:29\"")
                .d("COPY_RIGHT", "\"_EM_31186_XYZ_\"")
                .d("MIME_TYPE", "\"ACTIVITY_ID\"")
                .d("NAME", "\"_EM_43304_XYZ_\"")
                .d("URI", "\"_EM_44485_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 6270L)
                .d("URI", "\"2OtCQFq6ohG2w\"")
            .and().insertInto("TAG", 6269L)
                .d("GRP", "\"8\"")
                .d("NAME", "\"Qwae\"")
            .and().insertInto("TAG_DERIVED", 6268L)
                .r("TAG_ID", 6269L)
                .d("ACTIVITIES_COUNT", "-134217728")
            .and().insertInto("MEDIA_FILE", 6273L)
                .d("URI", "\"5698070\"")
            .and().insertInto("TAG", 6272L)
                .d("GRP", "\"T1nRDCxaivzKDf7t\"")
                .d("NAME", "\"dT5off4CJyJCPvJD\"")
            .and().insertInto("TAG_DERIVED", 6271L)
                .r("TAG_ID", 6272L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 6276L)
                .d("URI", "\"_EM_44486_XYZ_\"")
            .and().insertInto("TAG", 6275L)
                .d("GRP", "\"AGE_MAX\"")
                .d("NAME", "\"47\"")
            .and().insertInto("USERS", 39570L)
                .d("AUTHORIZATION_LEVEL", "499")
                .d("NAME", "\"SP\"")
            .and().insertInto("ACTIVITY", 39569L)
            .and().insertInto("ACTIVITY_RATING", 39568L)
                .r("ACTIVITY_ID", 6255L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "567")
            .and().insertInto("USERS", 39573L)
                .d("AUTHORIZATION_LEVEL", "524")
                .d("NAME", "\"NMQ\"")
            .and().insertInto("ACTIVITY", 39572L)
            .and().insertInto("ACTIVITY_RATING", 39571L)
                .r("ACTIVITY_ID", 6257L)
                .r("USER_ID", 39573L)
                .d("FAVOURITE", "false")
                .d("RATING", "984")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 895, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities/8389503/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_33_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_33_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 910, " + 
                    " \"uri\": \"KdvU7T7yO\", " + 
                    " \"copy_right\": \"S3KcYcypp\", " + 
                    " \"author\": \"G\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_109_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_34_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_34_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 907, " + 
                    " \"mime_type\": \"jN6Mk_P8H1nf\", " + 
                    " \"uri\": \"lmNI\", " + 
                    " \"author\": \"Pbnj\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/-597369741?" + 
                    "random=rYE4zBhnH5fxqX8&" + 
                    "attrs=DzFlTe7ZjNYjiH_a")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_295_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_35_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_35_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_5165_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_5160_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"_EM_5161_XYZ_\", " + 
                    " \"copy_right\": \"_EM_5162_XYZ_\", " + 
                    " \"author\": \"_EM_5163_XYZ_\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_36_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_36_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 606, " + 
                    " \"uri\": \"_EM_35724_XYZ_\", " + 
                    " \"copy_right\": \"_EM_35726_XYZ_\", " + 
                    " \"author\": \"_EM_35727_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_137_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_37_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_37_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1853L)
                .d("AUTHOR", "\"L6L2_0dNdLeO\"")
                .d("CAPTURE_DATE", "\"1917-07-12 02:59:53\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"T5RN\"")
                .d("NAME", "NULL")
                .d("URI", "\"8\"")
            .and().insertInto("MEDIA_FILE", 1854L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"uzr3err\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_23378_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_11632_XYZ_\", " + 
                    " \"uri\": \"_EM_11633_XYZ_\", " + 
                    " \"name\": \"_EM_11634_XYZ_\", " + 
                    " \"copy_right\": \"_EM_11635_XYZ_\", " + 
                    " \"author\": \"CREATE SEQUENCE PUBLIC.SYSTEM_SEQUENCE_D4338032_0CB2_4E8B_A983_E1FA0260B1ED START WITH 33 BELONGS_TO_TABLE\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_38_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_38_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 2233L)
                .d("KEY", "\"ZT\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1918-11-21 21:27:08\"")
                .d("VALUE", "\"9sBG\"")
            .and().insertInto("MEDIA_FILE", 26346L)
                .d("AUTHOR", "\"lrczptQoZ2HP2Nk\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"7mV6QhGjSp0QMUsw\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"3hMzanV\"")
                .d("URI", "\"pBafli2x0PP\"")
            .and().insertInto("MEDIA_FILE", 26347L)
                .d("AUTHOR", "\"aVqjNAYgMyqBUowL\"")
                .d("CAPTURE_DATE", "\"1971-05-19 21:48:12\"")
                .d("COPY_RIGHT", "\"Q1diF\"")
                .d("MIME_TYPE", "\"2sJ\"")
                .d("NAME", "NULL")
                .d("URI", "\"ilouj1A\"")
            .and().insertInto("MEDIA_FILE", 26348L)
                .d("AUTHOR", "\"CasUfO8hJ\"")
                .d("CAPTURE_DATE", "\"1926-09-05 06:50:27\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"cdGI\"")
                .d("NAME", "NULL")
                .d("URI", "\"L\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 302, " + 
                    " \"value\": \"1MCLv_bEgNS\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/1")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_108_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_39_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_39_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 254, " + 
                    " \"group\": \"_EM_29260_XYZ_\", " + 
                    " \"name\": \"_EM_29261_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"_EM_29262_XYZ_\", " + 
                    " \"uri\": \"_EM_29263_XYZ_\", " + 
                    " \"copy_right\": \"_EM_29265_XYZ_\", " + 
                    " \"author\": \"_EM_29266_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 721480019544041847 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_61_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_40_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_40_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 14306L)
            .and().insertInto("ACTIVITY", 14307L)
            .and().insertInto("ACTIVITY", 14308L)
            .and().insertInto("ACTIVITY", 14309L)
            .and().insertInto("USERS", 45208L)
                .d("AUTHORIZATION_LEVEL", "906")
                .d("NAME", "\"8mWEU\"")
            .and().insertInto("ACTIVITY", 45207L)
            .and().insertInto("ACTIVITY", 45206L)
            .and().insertInto("ACTIVITY_RELATION", 45205L)
                .r("ACTIVITY_1_ID", 14307L)
                .r("ACTIVITY_2_ID", 14309L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 45212L)
                .d("AUTHORIZATION_LEVEL", "255")
                .d("NAME", "\"jduLFcD7SKOek3j1\"")
            .and().insertInto("ACTIVITY", 45211L)
            .and().insertInto("ACTIVITY", 45210L)
            .and().insertInto("ACTIVITY_RELATION", 45209L)
                .r("ACTIVITY_1_ID", 14308L)
                .r("ACTIVITY_2_ID", 45206L)
                .r("OWNER_ID", 45212L)
            .and().insertInto("MEDIA_FILE", 45214L)
                .d("AUTHOR", "\"1KeZd\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"OlYdY82W\"")
                .d("NAME", "NULL")
                .d("URI", "\"M\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"Rsn7PBaA3fT\", " + 
                    " \"name\": \"JAtxilolZqPwE\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 1481160019708125760, " + 
                    " \"mime_type\": \"b8\", " + 
                    " \"uri\": \"2rfhgjyLdCfpRZ\", " + 
                    " \"copy_right\": \"z_AFxRjKUf\" " + 
                    " }, " + 
                    " \"activities_count\": 992752570 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/tags/737")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_41_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_41_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_users = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"J2\", " + 
                    " \"email_address\": \"BASOiS6s1pCKtu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("J2"))
                .body("'email_address'", containsString("BASOiS6s1pCKtu"))
                .body("'authorization_level'", numberMatches(0.0))
                .body("'identities'.size()", equalTo(0));
        location_users = "/api/v1/users" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 928, " + 
                    " \"email_address\": \"6\" " + 
                    " } ")
                .put(resolveLocation(location_users, baseUrlOfSut + "/api/v1/users/928"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_122_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    /**
    * [test_42_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_42_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 2233L)
                .d("KEY", "\"ZT\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1918-11-21 21:27:08\"")
                .d("VALUE", "\"9sBG\"")
            .and().insertInto("MEDIA_FILE", 26346L)
                .d("AUTHOR", "\"lrczptQoZ2HP2Nk\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"7mV6QhGjSp0UMUsw\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"3hMzanV\"")
                .d("URI", "\"pBafli2x0PP\"")
            .and().insertInto("MEDIA_FILE", 26347L)
                .d("AUTHOR", "\"aVqjNAYgMyqBUowL\"")
                .d("CAPTURE_DATE", "\"1971-05-19 21:48:12\"")
                .d("COPY_RIGHT", "\"Q1diF\"")
                .d("MIME_TYPE", "\"2sJ\"")
                .d("NAME", "NULL")
                .d("URI", "\"ilouj1A\"")
            .and().insertInto("MEDIA_FILE", 26348L)
                .d("AUTHOR", "\"CasUfO8hJ\"")
                .d("CAPTURE_DATE", "\"1926-09-05 06:50:27\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"cdGI\"")
                .d("NAME", "NULL")
                .d("URI", "\"P\"")
            .and().insertInto("MEDIA_FILE", 26354L)
                .d("URI", "\"Ws5owB\"")
            .and().insertInto("USERS", 26353L)
                .d("AUTHORIZATION_LEVEL", "77")
                .d("NAME", "\"EAGC5V3N\"")
            .and().insertInto("ACTIVITY", 26352L)
            .and().insertInto("ACTIVITY", 26351L)
            .and().insertInto("ACTIVITY_PROPERTIES", 26350L)
                .r("ACTIVITY_ID", 26351L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 26349L)
                .r("ACTIVITY_PROPERTIES_ID", 26350L)
                .r("MEDIA_FILE_ID", 26346L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 26360L)
                .d("URI", "\"\"")
            .and().insertInto("USERS", 26359L)
                .d("AUTHORIZATION_LEVEL", "379")
                .d("NAME", "\"HYCCIzpTQcB\"")
            .and().insertInto("ACTIVITY", 26358L)
            .and().insertInto("ACTIVITY", 26357L)
            .and().insertInto("ACTIVITY_PROPERTIES", 26356L)
                .r("ACTIVITY_ID", 26357L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 26355L)
                .r("ACTIVITY_PROPERTIES_ID", 26356L)
                .r("MEDIA_FILE_ID", 26360L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 26366L)
                .d("URI", "\"QK861VwskEGA\"")
            .and().insertInto("USERS", 26365L)
                .d("AUTHORIZATION_LEVEL", "213")
                .d("NAME", "\"U_\"")
            .and().insertInto("ACTIVITY", 26364L)
            .and().insertInto("ACTIVITY", 26363L)
            .and().insertInto("ACTIVITY_PROPERTIES", 26362L)
                .r("ACTIVITY_ID", 26358L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 26361L)
                .r("ACTIVITY_PROPERTIES_ID", 26356L)
                .r("MEDIA_FILE_ID", 26366L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 26372L)
                .d("URI", "\"mVGolKAeFwYMz\"")
            .and().insertInto("USERS", 26371L)
                .d("AUTHORIZATION_LEVEL", "-32008")
                .d("NAME", "\"J08KKgljXJPOv0c\"")
            .and().insertInto("ACTIVITY", 26370L)
            .and().insertInto("ACTIVITY", 26369L)
            .and().insertInto("ACTIVITY_PROPERTIES", 26368L)
                .r("ACTIVITY_ID", 26364L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 26367L)
                .r("ACTIVITY_PROPERTIES_ID", 26362L)
                .r("MEDIA_FILE_ID", 26346L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 26378L)
                .d("URI", "\"3jmkzCzXimgVKVX\"")
            .and().insertInto("USERS", 26377L)
                .d("AUTHORIZATION_LEVEL", "148")
                .d("NAME", "\"Nndn426\"")
            .and().insertInto("ACTIVITY", 26376L)
            .and().insertInto("ACTIVITY", 26375L)
            .and().insertInto("ACTIVITY_PROPERTIES", 26374L)
                .r("ACTIVITY_ID", 26352L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 26373L)
                .r("ACTIVITY_PROPERTIES_ID", 26362L)
                .r("MEDIA_FILE_ID", 26366L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 26899L)
                .d("URI", "\"_EM_95272_XYZ_\"")
            .and().insertInto("TAG", 26898L)
                .d("GRP", "\"I\"")
                .d("NAME", "\"TrcK\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 26901L)
                .d("URI", "\"GEI0eFbjYWH0APfU\"")
            .and().insertInto("TAG", 26900L)
                .d("GRP", "\"HU9HplJ1JFQi2zVB\"")
                .d("NAME", "\"REoUiqmtuI7AYh6\"")
                .r("MEDIA_FILE_ID", 26372L)
            .and().insertInto("MEDIA_FILE", 26903L)
                .d("URI", "\"QQYwWV\"")
            .and().insertInto("TAG", 26902L)
                .d("GRP", "\"1ZgyZm00x7kOWa\"")
                .d("NAME", "\"OpcG\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 26905L)
                .d("URI", "\"kz0ILTiI90rfK\"")
            .and().insertInto("TAG", 26904L)
                .d("GRP", "\"nolb0Il1KT0PqviZ\"")
                .d("NAME", "\"qOujsFv\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 402, " + 
                    " \"group\": \"s9A1GGAA5\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"tzPqDvxCN1qbLGA\", " + 
                    " \"uri\": \"8XcD_xHiO9\", " + 
                    " \"name\": \"B6IJn\", " + 
                    " \"author\": \"03TcS0fxzYyRLnn\" " + 
                    " }, " + 
                    " \"activities_count\": 3981096346592374855 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/418")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_43_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_43_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 4095L)
                .d("AUTHOR", "\"A29FGhJEaSNGI\"")
                .d("CAPTURE_DATE", "\"2000-06-08 21:29:13\"")
                .d("COPY_RIGHT", "\"_EM_23179_XYZ_\"")
                .d("MIME_TYPE", "\"MgAqy_eWikAoxU8\"")
                .d("NAME", "NULL")
                .d("URI", "\"Iy\"")
            .and().insertInto("MEDIA_FILE", 4096L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "\"2000-12-24 11:29:25\"")
                .d("COPY_RIGHT", "\"7K\"")
                .d("MIME_TYPE", "\"FIn04UEzf7PS\"")
                .d("NAME", "\"_EM_23180_XYZ_\"")
                .d("URI", "\"6NG_c5p\"")
            .and().insertInto("USERS", 31218L)
                .d("AUTHORIZATION_LEVEL", "585")
                .d("NAME", "\"U\"")
            .and().insertInto("ACTIVITY", 31217L)
            .and().insertInto("ACTIVITY", 31216L)
            .and().insertInto("ACTIVITY_RELATION", 31215L)
                .r("ACTIVITY_1_ID", 31217L)
                .r("ACTIVITY_2_ID", 31216L)
                .d("OWNER_ID", "2")
            .and().insertInto("USERS", 31222L)
                .d("AUTHORIZATION_LEVEL", "961")
                .d("NAME", "\"g8LuW9tYRKoVr7\"")
            .and().insertInto("ACTIVITY", 31221L)
            .and().insertInto("ACTIVITY", 31220L)
            .and().insertInto("ACTIVITY_RELATION", 31219L)
                .r("ACTIVITY_1_ID", 31220L)
                .r("ACTIVITY_2_ID", 31221L)
                .r("OWNER_ID", 31222L)
            .and().insertInto("USERS", 31228L)
                .d("AUTHORIZATION_LEVEL", "623")
                .d("NAME", "\"Iv\"")
            .and().insertInto("ACTIVITY", 31227L)
            .and().insertInto("ACTIVITY_RATING", 31226L)
                .r("ACTIVITY_ID", 31220L)
                .r("USER_ID", 31222L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 31231L)
                .d("AUTHORIZATION_LEVEL", "459")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 31230L)
            .and().insertInto("ACTIVITY_RATING", 31229L)
                .r("ACTIVITY_ID", 31220L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "622")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/FavouritesResourceV1_58_lambda$put$3
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_44_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_44_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 17406L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"_EM_72323_XYZ_\"")
                .d("MIME_TYPE", "\"SETTINGS\"")
                .d("NAME", "\"_EM_72325_XYZ_\"")
                .d("URI", "\"ET\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 524424, " + 
                    " \"mime_type\": \"_EM_72318_XYZ_\", " + 
                    " \"uri\": \"data:,ZmVzMFRYMXFWTmlmQ3Rz\", " + 
                    " \"author\": \"HnEeDZXrTRi\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_45_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_45_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1853L)
                .d("AUTHOR", "\"_EM_39195_XYZ_\"")
                .d("CAPTURE_DATE", "\"1917-07-12 02:59:53\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"T5RN\"")
                .d("NAME", "NULL")
                .d("URI", "\"8\"")
            .and().insertInto("MEDIA_FILE", 1854L)
                .d("AUTHOR", "\"x\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"uzr3err\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"cBy1ICJp\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"data:text/plain;base64,a1I\u003d\", " + 
                    " \"copy_right\": \"_EM_11635_XYZ_\", " + 
                    " \"author\": \"_EM_11636_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_46_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_46_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1252L)
            .and().insertInto("ACTIVITY", 1253L)
            .and().insertInto("ACTIVITY", 1254L)
            .and().insertInto("ACTIVITY", 1255L)
            .and().insertInto("ACTIVITY", 1256L)
            .and().insertInto("MEDIA_FILE", 9404L)
                .d("URI", "\"_EM_76960_XYZ_\"")
            .and().insertInto("TAG", 9403L)
                .d("GRP", "\"z8Pe\"")
                .d("NAME", "\"\"")
                .r("MEDIA_FILE_ID", 9404L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_tags = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v2/activities/554?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"CVTPSxk03\", " + 
                    " \"activities_count\": -4904991468178075023 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString(""))
                .body("'name'", containsString("CVTPSxk03"))
                .body("'activities_count'", numberMatches(-4.9049914681780746E18));
        location_tags = "/api/v2/tags" + "/" + res_1.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_tags, baseUrlOfSut + "/api/v2/tags/1148321136"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    /**
    * [test_47_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_47_with500() throws Exception {
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"_EM_20364_XYZ_\", " + 
                    " \"copy_right\": \"_EM_20366_XYZ_\", " + 
                    " \"author\": \"_EM_20367_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("_EM_20364_XYZ_"))
                .body("'copy_right'", containsString("_EM_20366_XYZ_"))
                .body("'author'", containsString("_EM_20367_XYZ_"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/433/file?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_268_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_48_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_48_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 52990L)
                .d("URI", "\"30P\"")
            .and().insertInto("TAG", 52989L)
                .d("GRP", "\"QxnL1i8TUP3aRLf\"")
                .d("NAME", "\"QPO6fW047Y6oy\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 52992L)
                .d("URI", "\"bj64QrbL2qP\"")
            .and().insertInto("TAG", 52991L)
                .d("GRP", "\"eJS2\"")
                .d("NAME", "\"mf4EqkDpjt\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 52994L)
                .d("URI", "\"2q4tISlUBhKa\"")
            .and().insertInto("TAG", 52993L)
                .d("GRP", "\"EDczgTH3Oo\"")
                .d("NAME", "\"gKi7Eu\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_categories = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"nK04yH6VndOhQTL\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"aEi\", " + 
                    " \"name\": \"8t6Xd38N5ao\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString(""))
                .body("'name'", containsString("nK04yH6VndOhQTL"))
                .body("'media_file'.'uri'", containsString("aEi"))
                .body("'media_file'.'name'", containsString("8t6Xd38N5ao"))
                .body("'activities_count'", numberMatches(0.0));
        location_categories = "/api/v1/categories" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -549904296 " + 
                    " } ")
                .put(resolveLocation(location_categories, baseUrlOfSut + "/api/v1/categories/-549904295"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_83_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    /**
    * [test_49_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_49_with500() throws Exception {
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"C\", " + 
                    " \"name\": \"xSgIEacgX\", " + 
                    " \"copy_right\": \"HEJopnOgK\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("C"))
                .body("'name'", containsString("xSgIEacgX"))
                .body("'copy_right'", containsString("HEJopnOgK"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/823?verify_unused=true&attrs=chyHvriMNhye&name=xSgIEacgX&participants=cIuou0"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/823?uri=jCed6")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_50_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_50_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 14306L)
            .and().insertInto("ACTIVITY", 14307L)
            .and().insertInto("ACTIVITY", 14308L)
            .and().insertInto("ACTIVITY", 14309L)
            .and().insertInto("USERS", 47382L)
                .d("AUTHORIZATION_LEVEL", "943")
                .d("NAME", "\"jnq62sd_3aoMtbKL\"")
            .and().insertInto("ACTIVITY", 47381L)
            .and().insertInto("ACTIVITY", 47380L)
            .and().insertInto("ACTIVITY_RELATION", 47379L)
                .r("ACTIVITY_1_ID", 47381L)
                .r("ACTIVITY_2_ID", 47380L)
                .r("OWNER_ID", 47382L)
            .and().insertInto("USERS", 47386L)
                .d("AUTHORIZATION_LEVEL", "343")
                .d("NAME", "\"1fCLy9OBp\"")
            .and().insertInto("ACTIVITY", 47385L)
            .and().insertInto("ACTIVITY", 47384L)
            .and().insertInto("ACTIVITY_RELATION", 47383L)
                .r("ACTIVITY_1_ID", 14309L)
                .r("ACTIVITY_2_ID", 14306L)
                .r("OWNER_ID", 47382L)
            .and().insertInto("USERS", 47390L)
                .d("AUTHORIZATION_LEVEL", "566")
                .d("NAME", "\"RbHYb\"")
            .and().insertInto("ACTIVITY", 47389L)
            .and().insertInto("ACTIVITY", 47388L)
            .and().insertInto("ACTIVITY_RELATION", 47387L)
                .r("ACTIVITY_1_ID", 14307L)
                .r("ACTIVITY_2_ID", 47381L)
                .r("OWNER_ID", 47390L)
            .and().insertInto("USERS", 47394L)
                .d("AUTHORIZATION_LEVEL", "656")
                .d("NAME", "\"s_\"")
            .and().insertInto("ACTIVITY", 47393L)
            .and().insertInto("ACTIVITY", 47392L)
            .and().insertInto("ACTIVITY_RELATION", 47391L)
                .r("ACTIVITY_1_ID", 14308L)
                .r("ACTIVITY_2_ID", 47392L)
                .d("OWNER_ID", "2")
            .and().insertInto("USERS", 47470L)
                .d("AUTHORIZATION_LEVEL", "43")
                .d("NAME", "\"zsS4d\"")
            .and().insertInto("ACTIVITY", 47469L)
            .and().insertInto("ACTIVITY", 47468L)
            .and().insertInto("ACTIVITY_PROPERTIES", 47467L)
                .d("AGE_MAX", "-1915718751")
                .d("AGE_MIN", "-2147483181")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"2062-02-28 22:04:04\"")
                .d("DATE_UPDATED", "\"1954-12-07 06:49:02\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"M6E4Xo_\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"JXuLSVRQB\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "\"LTFyrxwkK\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "304")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 47469L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 47474L)
                .d("AUTHORIZATION_LEVEL", "789")
                .d("NAME", "\"x3GB\"")
            .and().insertInto("ACTIVITY", 47473L)
            .and().insertInto("ACTIVITY", 47472L)
            .and().insertInto("ACTIVITY_PROPERTIES", 47471L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-265")
                .d("DATE_CREATED", "\"1983-04-04 17:32:21\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"P0gjGLMBMZ5zhv6\"")
                .d("DESCRIPTION_MAIN", "\"G1VeRhEgn3ay5\"")
                .d("DESCRIPTION_MATERIAL", "\"bkteLf59l0B6Cm\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "384")
                .d("PARTICIPANTS_MIN", "968")
                .d("SOURCE", "\"0zVLs7Hxgk2\"")
                .d("TIME_MAX", "332")
                .d("TIME_MIN", "234")
                .r("ACTIVITY_ID", 47381L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 47393L)
            .and().insertInto("USERS", 47478L)
                .d("AUTHORIZATION_LEVEL", "322")
                .d("NAME", "\"t\"")
            .and().insertInto("ACTIVITY", 47477L)
            .and().insertInto("ACTIVITY", 47476L)
            .and().insertInto("ACTIVITY_PROPERTIES", 47475L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"1956-12-30 19:02:01\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"0vuo\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"NVSWNJr\"")
                .d("DESCRIPTION_PREPARE", "\"vRmksoejECKU\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "false")
                .d("NAME", "\"tLFoxqBnPnBUA\"")
                .d("PARTICIPANTS_MAX", "267")
                .d("PARTICIPANTS_MIN", "242")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "459")
                .d("TIME_MIN", "351")
                .r("ACTIVITY_ID", 47472L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 47389L)
            .and().insertInto("USERS", 47482L)
                .d("AUTHORIZATION_LEVEL", "64")
                .d("NAME", "\"La151Np5XB0x\"")
            .and().insertInto("ACTIVITY", 47481L)
            .and().insertInto("ACTIVITY", 47480L)
            .and().insertInto("ACTIVITY_PROPERTIES", 47479L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-139822577")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"2038-09-20 23:22:29\"")
                .d("DESCRIPTION_INTRODUCTION", "\"wCkyUPK\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"mtH\"")
                .d("FEATURED", "NULL")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "633")
                .d("PARTICIPANTS_MIN", "358")
                .d("SOURCE", "\"dLUhRITV\"")
                .d("TIME_MAX", "566")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 47385L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 14307L)
            .and().insertInto("USERS", 47485L)
                .d("AUTHORIZATION_LEVEL", "873")
                .d("NAME", "\"I49RWQMBk4K\"")
            .and().insertInto("ACTIVITY", 47484L)
            .and().insertInto("ACTIVITY_RATING", 47483L)
                .r("ACTIVITY_ID", 14309L)
                .r("USER_ID", 47386L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/7?" + 
                    "uri=jCed6&" + 
                    "attrs=wyr4rnY6MzFUNL")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_104_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_51_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_51_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 4095L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2020-10-08 21:26:13\"")
                .d("COPY_RIGHT", "\"_EM_23179_XYZ_\"")
                .d("MIME_TYPE", "\"MgAqy_eWikAoxU8\"")
                .d("NAME", "NULL")
                .d("URI", "\"Iyw\"")
            .and().insertInto("MEDIA_FILE", 4096L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "\"2000-12-24 11:29:25\"")
                .d("COPY_RIGHT", "\"_EM_73894_XYZ_\"")
                .d("MIME_TYPE", "\"FIn04UEzf7PS\"")
                .d("NAME", "\"_EM_23180_XYZ_\"")
                .d("URI", "\"6NG_c5p\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_16463_XYZ_\", " + 
                    " \"uri\": \"https://53.19.228.106:3/9eHhnacyh3J7VR7//GG4gH5Bvle\", " + 
                    " \"name\": \"_EM_16465_XYZ_\", " + 
                    " \"copy_right\": \"_EM_16466_XYZ_\", " + 
                    " \"author\": \"znxbpVhF5_P_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("_EM_16463_XYZ_"))
                .body("'uri'", containsString("https://53.19.228.106:3/9eHhnacyh3J7VR7//GG4gH5Bvle"))
                .body("'name'", containsString("_EM_16465_XYZ_"))
                .body("'copy_right'", containsString("_EM_16466_XYZ_"))
                .body("'author'", containsString("znxbpVhF5_P_"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/601/file?size=448"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_279_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
    }
    
    
    /**
    * [test_52_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_52_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 14306L)
            .and().insertInto("ACTIVITY", 14307L)
            .and().insertInto("ACTIVITY", 14308L)
            .and().insertInto("ACTIVITY", 14309L)
            .and().insertInto("USERS", 45208L)
                .d("AUTHORIZATION_LEVEL", "906")
                .d("NAME", "\"8mWEU\"")
            .and().insertInto("ACTIVITY", 45207L)
            .and().insertInto("ACTIVITY", 45206L)
            .and().insertInto("ACTIVITY_RELATION", 45205L)
                .r("ACTIVITY_1_ID", 14307L)
                .r("ACTIVITY_2_ID", 45206L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 45212L)
                .d("AUTHORIZATION_LEVEL", "255")
                .d("NAME", "\"jduLFcD7SKOek3j1\"")
            .and().insertInto("ACTIVITY", 45211L)
            .and().insertInto("ACTIVITY", 45210L)
            .and().insertInto("ACTIVITY_RELATION", 45209L)
                .r("ACTIVITY_1_ID", 14308L)
                .r("ACTIVITY_2_ID", 14307L)
                .r("OWNER_ID", 45212L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_tags = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"1Ctb_TwyQZuS1Gz\", " + 
                    " \"name\": \"7tUH7IApvZZ0f\", " + 
                    " \"activities_count\": 20 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("1Ctb_TwyQZuS1Gz"))
                .body("'name'", containsString("7tUH7IApvZZ0f"))
                .body("'activities_count'", numberMatches(20.0));
        location_tags = "/api/v2/tags" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"media_file\": { " + 
                    " \"id\": 1481160019708125760, " + 
                    " \"mime_type\": \"b8\", " + 
                    " \"uri\": \"2rfhgjyLdCfpRZ\", " + 
                    " \"copy_right\": \"z_AFxRjKUf\" " + 
                    " }, " + 
                    " \"activities_count\": 992752570 " + 
                    " } ")
                .put(resolveLocation(location_tags, baseUrlOfSut + "/api/v2/tags/737?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_89_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/737?uri=jCed6")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_53_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_53_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_categories = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"_EM_41159_XYZ_\", " + 
                    " \"name\": \"6OP52cbTTNeWWjd\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"s2pXL4ocv7\", " + 
                    " \"uri\": \"iE_CgsBy33wKg\" " + 
                    " }, " + 
                    " \"activities_count\": 514 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("_EM_41159_XYZ_"))
                .body("'name'", containsString("6OP52cbTTNeWWjd"))
                .body("'media_file'.'mime_type'", containsString("s2pXL4ocv7"))
                .body("'media_file'.'uri'", containsString("iE_CgsBy33wKg"))
                .body("'activities_count'", numberMatches(514.0));
        location_categories = "/api/v1/categories" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_categories, baseUrlOfSut + "/api/v1/categories/2444"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=_EM_7130_XYZ_&" + 
                    "name=6_&" + 
                    "text=_EM_41160_XYZ_&" + 
                    "featured=false&" + 
                    "participants=_EM_7133_XYZ_&" + 
                    "id=_EM_7135_XYZ_&" + 
                    "my_favourites=true&" + 
                    "ratings_average_min=0.9873856460728516&" + 
                    "favourites=518299985")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_77_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v2/activities/-2056829993")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    /**
    * [test_54_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_54_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 6255L)
            .and().insertInto("ACTIVITY", 6256L)
            .and().insertInto("ACTIVITY", 6257L)
            .and().insertInto("SYSTEM_MESSAGE", 6258L)
                .d("KEY", "\"nhOqmCCiTXGqw8V\"")
                .d("VALID_FROM", "\"2019-05-13 16:27:29\"")
                .d("VALID_TO", "\"2100-08-28 16:52:15\"")
                .d("VALUE", "\"yx2kSB1x8_DI\"")
            .and().insertInto("MEDIA_FILE", 6259L)
                .d("AUTHOR", "\"WR2r4Pb6\"")
                .d("CAPTURE_DATE", "\"2036-02-16 00:26:03\"")
                .d("COPY_RIGHT", "\"5702850\"")
                .d("MIME_TYPE", "\"5703993\"")
                .d("NAME", "\"_EM_31184_XYZ_\"")
                .d("URI", "\"3hQexp8ssAFS8\"")
            .and().insertInto("MEDIA_FILE", 6260L)
                .d("AUTHOR", "\"_EM_43335_XYZ_\"")
                .d("CAPTURE_DATE", "\"1912-03-09 22:01:42\"")
                .d("COPY_RIGHT", "\"LEFT\"")
                .d("MIME_TYPE", "\"f814dONzf8\"")
                .d("NAME", "\"_EM_44484_XYZ_\"")
                .d("URI", "\"P0OkLYyPtf\"")
            .and().insertInto("MEDIA_FILE", 6261L)
                .d("AUTHOR", "\"5704276\"")
                .d("CAPTURE_DATE", "\"2000-06-16 00:57:29\"")
                .d("COPY_RIGHT", "\"_EM_31186_XYZ_\"")
                .d("MIME_TYPE", "\"ACTIVITY_ID\"")
                .d("NAME", "\"_EM_43304_XYZ_\"")
                .d("URI", "\"_EM_44485_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 6270L)
                .d("URI", "\"2OtCQFq6ohG2w\"")
            .and().insertInto("TAG", 6269L)
                .d("GRP", "\"8\"")
                .d("NAME", "\"Qwae\"")
            .and().insertInto("TAG_DERIVED", 6268L)
                .r("TAG_ID", 6269L)
                .d("ACTIVITIES_COUNT", "-134217728")
            .and().insertInto("MEDIA_FILE", 6273L)
                .d("URI", "\"5698070\"")
            .and().insertInto("TAG", 6272L)
                .d("GRP", "\"T1nRDCxaivzKDf7t\"")
                .d("NAME", "\"dT5off4CJyJCPvJD\"")
            .and().insertInto("TAG_DERIVED", 6271L)
                .r("TAG_ID", 6272L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 6276L)
                .d("URI", "\"_EM_44486_XYZ_\"")
            .and().insertInto("TAG", 6275L)
                .d("GRP", "\"AGE_MAX\"")
                .d("NAME", "\"47\"")
            .and().insertInto("USERS", 39570L)
                .d("AUTHORIZATION_LEVEL", "499")
                .d("NAME", "\"SP\"")
            .and().insertInto("ACTIVITY", 39569L)
            .and().insertInto("ACTIVITY_RATING", 39568L)
                .r("ACTIVITY_ID", 6255L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "567")
            .and().insertInto("USERS", 39573L)
                .d("AUTHORIZATION_LEVEL", "524")
                .d("NAME", "\"NMQ\"")
            .and().insertInto("ACTIVITY", 39572L)
            .and().insertInto("ACTIVITY_RATING", 39571L)
                .r("ACTIVITY_ID", 6257L)
                .r("USER_ID", 39573L)
                .d("FAVOURITE", "false")
                .d("RATING", "984")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_13616_XYZ_\", " + 
                    " \"description_material\": \"_EM_13617_XYZ_\", " + 
                    " \"description_introduction\": \"U\", " + 
                    " \"description_prepare\": \"_EM_44483_XYZ_\", " + 
                    " \"description_safety\": \"_EM_13620_XYZ_\", " + 
                    " \"description_notes\": \"_EM_13621_XYZ_\", " + 
                    " \"age_min\": 43, " + 
                    " \"age_max\": -583, " + 
                    " \"participants_min\": 0, " + 
                    " \"participants_max\": 209, " + 
                    " \"time_min\": 665, " + 
                    " \"time_max\": 525, " + 
                    " \"source\": \"OKXaCk3GF\", " + 
                    " \"activity\": { " + 
                    " \"ratings_count\": 915, " + 
                    " \"ratings_average\": 0.6336641801452114, " + 
                    " \"related\": [ " + 
                    " 489, " + 
                    " 643, " + 
                    " 236 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/activities/942")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_55_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_55_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 224L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1975-01-09 19:09:56\"")
                .d("COPY_RIGHT", "\"_EM_56705_XYZ_\"")
                .d("MIME_TYPE", "\"m82QhuhygpivOsXH\"")
                .d("NAME", "\"EBqGTacNLA9\"")
                .d("URI", "\"j41\"")
            .and().insertInto("MEDIA_FILE", 225L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2000-06-29 11:10:45\"")
                .d("COPY_RIGHT", "\"_EM_56706_XYZ_\"")
                .d("MIME_TYPE", "\"4Qs\"")
                .d("NAME", "\"_EM_23165_XYZ_\"")
                .d("URI", "\"_WTvUPnNY1x4f\"")
            .and().insertInto("MEDIA_FILE", 226L)
                .d("AUTHOR", "\"5612156\"")
                .d("CAPTURE_DATE", "\"1922-06-30 12:29:29\"")
                .d("COPY_RIGHT", "\"p9fz\"")
                .d("MIME_TYPE", "\"5612089\"")
                .d("NAME", "NULL")
                .d("URI", "\"RATINGS_3_1_4_\"")
            .and().insertInto("MEDIA_FILE", 227L)
                .d("AUTHOR", "\"5668231\"")
                .d("CAPTURE_DATE", "\"1978-03-09 05:24:13\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_23167_XYZ_\"")
                .d("NAME", "\"_EM_23168_XYZ_\"")
                .d("URI", "\"2055-06-18 18:00:35\"")
            .and().insertInto("MEDIA_FILE", 2038L)
                .d("URI", "\"_EM_56707_XYZ_\"")
            .and().insertInto("USERS", 2037L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_23170_XYZ_\"")
            .and().insertInto("ACTIVITY", 2036L)
            .and().insertInto("ACTIVITY", 2035L)
            .and().insertInto("ACTIVITY_PROPERTIES", 2034L)
                .r("ACTIVITY_ID", 2036L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 2033L)
                .r("ACTIVITY_PROPERTIES_ID", 2034L)
                .r("MEDIA_FILE_ID", 227L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 2044L)
                .d("URI", "\"U\"")
            .and().insertInto("USERS", 2043L)
                .d("AUTHORIZATION_LEVEL", "134217758")
                .d("NAME", "\"_EM_56708_XYZ_\"")
            .and().insertInto("ACTIVITY", 2042L)
            .and().insertInto("ACTIVITY", 2041L)
            .and().insertInto("ACTIVITY_PROPERTIES", 2040L)
                .r("ACTIVITY_ID", 2035L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 2039L)
                .r("ACTIVITY_PROPERTIES_ID", 2034L)
                .r("MEDIA_FILE_ID", 226L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 2050L)
                .d("URI", "\"_EM_56709_XYZ_\"")
            .and().insertInto("USERS", 2049L)
                .d("AUTHORIZATION_LEVEL", "451")
                .d("NAME", "\"_EM_23172_XYZ_\"")
            .and().insertInto("ACTIVITY", 2048L)
            .and().insertInto("ACTIVITY", 2047L)
            .and().insertInto("ACTIVITY_PROPERTIES", 2046L)
                .r("ACTIVITY_ID", 2035L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 2045L)
                .r("ACTIVITY_PROPERTIES_ID", 2046L)
                .r("MEDIA_FILE_ID", 225L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 2056L)
                .d("URI", "\"L92dMYySg9M\"")
            .and().insertInto("USERS", 2055L)
                .d("AUTHORIZATION_LEVEL", "1857")
                .d("NAME", "\"_EM_56710_XYZ_\"")
            .and().insertInto("ACTIVITY", 2054L)
            .and().insertInto("ACTIVITY", 2053L)
            .and().insertInto("ACTIVITY_PROPERTIES", 2052L)
                .r("ACTIVITY_ID", 2048L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 2051L)
                .r("ACTIVITY_PROPERTIES_ID", 2046L)
                .r("MEDIA_FILE_ID", 2044L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 13915L)
                .d("AUTHORIZATION_LEVEL", "437")
                .d("NAME", "\"ezwz\"")
            .and().insertInto("USER_IDENTITY", 13914L)
                .d("DATE_CREATED", "\"2071-07-08 03:02:47\"")
                .d("TYPE", "\"_EM_56711_XYZ_\"")
                .d("VALUE", "\"AIrA\"")
                .r("USER_ID", 2037L)
            .and().insertInto("USERS", 13917L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"QORC25\"")
            .and().insertInto("USER_IDENTITY", 13916L)
                .d("DATE_CREATED", "NULL")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"Uts6r\"")
                .r("USER_ID", 2049L)
            .and().insertInto("USERS", 13919L)
                .d("AUTHORIZATION_LEVEL", "25")
                .d("NAME", "\"E\"")
            .and().insertInto("USER_IDENTITY", 13918L)
                .d("DATE_CREATED", "NULL")
                .d("TYPE", "\"_EM_56712_XYZ_\"")
                .d("VALUE", "\"0kgDkALcQYV\"")
                .r("USER_ID", 2043L)
            .and().insertInto("USERS", 13921L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"O56CpaJwRNRub\"")
            .and().insertInto("USER_IDENTITY", 13920L)
                .d("DATE_CREATED", "\"1921-04-25 17:43:34\"")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"_EM_56713_XYZ_\"")
                .d("USER_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_users = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 910, " + 
                    " \"uri\": \"KdvU7T7yO\", " + 
                    " \"copy_right\": \"S3KcYcypp\", " + 
                    " \"author\": \"G\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_109_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?uri=KdvU7T7yO%C2%81")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/0/file?" + 
                    "size=715&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"fP4sdjjlRhAo\", " + 
                    " \"identities\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("fP4sdjjlRhAo"))
                .body("'authorization_level'", numberMatches(0.0))
                .body("'identities'.size()", equalTo(0));
        location_users = "/api/v1/users" + "/" + res_3.extract().body().path("id").toString();
        
        
        ValidatableResponse res_4 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_users, baseUrlOfSut + "/api/v1/users/profile?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("fP4sdjjlRhAo"))
                .body("'email_address'", nullValue())
                .body("'authorization_level'", numberMatches(0.0))
                .body("'identities'.size()", equalTo(0));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) res_4.extract().response().jsonPath().getJsonObject("")).keySet().containsAll(Arrays.asList()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_4972_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/media_files/136?" + 
                    "verify_unused=true&" + 
                    "EMextraParam123=_EM_4971_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_56_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_56_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"4uL\", " + 
                    " \"description_introduction\": \"xcstvAdcVeqxzV\", " + 
                    " \"description_main\": \"aGM6KQ5h7nX\", " + 
                    " \"description_notes\": \"\", " + 
                    " \"age_min\": -2147482813, " + 
                    " \"age_max\": -2147483541, " + 
                    " \"participants_max\": 751, " + 
                    " \"time_min\": 694, " + 
                    " \"time_max\": 996, " + 
                    " \"source\": \"O\", " + 
                    " \"author\": { " + 
                    " \"id\": 691395456, " + 
                    " \"name\": \"Kw\", " + 
                    " \"email_address\": \"54QP\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"favourites_count\": 989 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?" + 
                    "my_favourites=&" + 
                    "ratings_average_min=wAD13T4r3CXSp&" + 
                    "uri=jUuLIr9gzAAS69&" + 
                    "attrs=x")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_57_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_57_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 120, " + 
                    " \"name\": \"S\", " + 
                    " \"description_introduction\": \"Gak1bfgFQat5dEZt\", " + 
                    " \"description_prepare\": \"N\", " + 
                    " \"description_main\": \"\", " + 
                    " \"age_min\": -665607128, " + 
                    " \"age_max\": -522, " + 
                    " \"participants_min\": 272772616, " + 
                    " \"time_min\": -1633881625, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"sn6\", " + 
                    " \"activity\": { " + 
                    " \"ratings_sum\": 528, " + 
                    " \"ratings_average\": 0.8030534796591126, " + 
                    " \"favourites_count\": 276, " + 
                    " \"related\": [ " + 
                    " 657, " + 
                    " 3, " + 
                    " 535 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_114_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_58_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_58_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/ping")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=zX0KGfWcid&" + 
                    "valid=now")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/4/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_120_deleteRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/-15/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        ValidatableResponse res_4 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 616 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/680")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_295_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_4.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/0?attrs=wwn")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        ValidatableResponse res_6 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/media_files/0")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_6.extract().statusCode()));
    }
    
    
    /**
    * [test_59_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_59_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 16286L)
                .d("AUTHORIZATION_LEVEL", "8388868")
                .d("NAME", "\"_EM_63632_XYZ_\"")
            .and().insertInto("ACTIVITY", 16285L)
            .and().insertInto("ACTIVITY", 16284L)
            .and().insertInto("ACTIVITY_PROPERTIES", 16283L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-651")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"_EM_63633_XYZ_\"")
                .d("DESCRIPTION_MAIN", "\"2vG1_X6tui\"")
                .d("DESCRIPTION_MATERIAL", "\"_EM_63634_XYZ_\"")
                .d("DESCRIPTION_NOTES", "\"iw3LCJV\"")
                .d("DESCRIPTION_PREPARE", "\"BszuUWtnBhXxiScX\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "false")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "792")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "-523525")
                .d("TIME_MIN", "420")
                .r("ACTIVITY_ID", 16285L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 589, " + 
                    " \"name\": \"5645961\", " + 
                    " \"description_introduction\": \"_EM_63631_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_18170_XYZ_\", " + 
                    " \"age_min\": -651, " + 
                    " \"age_max\": -2147483576, " + 
                    " \"participants_max\": 143, " + 
                    " \"time_max\": 44227176, " + 
                    " \"source\": \"_EM_18174_XYZ_\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 789, " + 
                    " \"group\": \"_EM_18175_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 781, " + 
                    " \"name\": \"_EM_18182_XYZ_\", " + 
                    " \"activities_count\": -8976172848195607808 " + 
                    " }, " + 
                    " { " + 
                    " \"activities_count\": 8858729986680781191 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"_EM_18206_XYZ_\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_sum\": 57, " + 
                    " \"ratings_average\": 0.33411054841075905, " + 
                    " \"related\": [] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_60_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_60_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 11970L)
                .d("URI", "\"POgU9BEj\"")
            .and().insertInto("TAG", 11969L)
                .d("GRP", "\"mzPCcSqFB\"")
                .d("NAME", "\"_EM_50174_XYZ_\"")
                .r("MEDIA_FILE_ID", 11970L)
            .and().insertInto("MEDIA_FILE", 11972L)
                .d("URI", "\"_EM_50175_XYZ_\"")
            .and().insertInto("TAG", 11971L)
                .d("GRP", "\"_EM_50176_XYZ_\"")
                .d("NAME", "\"6Asc\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 11974L)
                .d("URI", "\"Q7sQ\"")
            .and().insertInto("TAG", 11973L)
                .d("GRP", "\"kPKkn2vwldmNAU\"")
                .d("NAME", "\"fWOwryL0rchX\"")
                .r("MEDIA_FILE_ID", 11970L)
            .and().insertInto("MEDIA_FILE", 11976L)
                .d("URI", "\"_EM_50126_XYZ_\"")
            .and().insertInto("TAG", 11975L)
                .d("GRP", "\"_EM_50177_XYZ_\"")
                .d("NAME", "\"uIPjz7LXm9c\"")
                .r("MEDIA_FILE_ID", 11976L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 791, " + 
                    " \"name\": \"_EM_50171_XYZ_\", " + 
                    " \"description_material\": \"_EM_50173_XYZ_\", " + 
                    " \"description_prepare\": \"I8\", " + 
                    " \"description_main\": \"_EM_3090_XYZ_\", " + 
                    " \"age_min\": -414, " + 
                    " \"age_max\": -2139094767, " + 
                    " \"participants_min\": 1916711655, " + 
                    " \"participants_max\": 765, " + 
                    " \"source\": \"rm1ie1rPG\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 946, " + 
                    " \"mime_type\": \"Y\", " + 
                    " \"uri\": \"wR7S3sHL\", " + 
                    " \"name\": \"CrqF9U\", " + 
                    " \"copy_right\": \"x5J1tKKk0Ru\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"_EM_3112_XYZ_\", " + 
                    " \"authorization_level\": -1979, " + 
                    " \"identities\": [] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_211_lambda$initMediaFiles$8
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_61_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_61_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 4095L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2020-10-08 21:26:13\"")
                .d("COPY_RIGHT", "\"_EM_23179_XYZ_\"")
                .d("MIME_TYPE", "\"MgAqy_eWikAoxU8\"")
                .d("NAME", "NULL")
                .d("URI", "\"Iyw\"")
            .and().insertInto("MEDIA_FILE", 4096L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "\"2000-12-24 11:29:25\"")
                .d("COPY_RIGHT", "\"_EM_73894_XYZ_\"")
                .d("MIME_TYPE", "\"FIn04UEzf7PS\"")
                .d("NAME", "\"_EM_23180_XYZ_\"")
                .d("URI", "\"6NG_c5p\"")
            .and().insertInto("ACTIVITY", 31085L)
            .and().insertInto("ACTIVITY", 31086L)
            .and().insertInto("ACTIVITY", 31087L)
            .and().insertInto("ACTIVITY", 31088L)
            .and().insertInto("ACTIVITY", 31089L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"EEq0R6368\", " + 
                    " \"description_introduction\": \"IL0HKylDPk_QvHl\", " + 
                    " \"description_main\": \"MZybkm7olUWt\", " + 
                    " \"description_safety\": \"8WiUIj4MOLEMyA4Y\", " + 
                    " \"participants_min\": 367, " + 
                    " \"participants_max\": 856, " + 
                    " \"time_min\": 660, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": -1412896749887154051, " + 
                    " \"group\": \"YFpSdT4EXbP\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 268 " + 
                    " }, " + 
                    " \"activities_count\": 87 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 365, " + 
                    " \"group\": \"_XJfyp_nvT\", " + 
                    " \"name\": \"NSeFlefqguRc4pl\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 549, " + 
                    " \"ratings_average\": 0.5943035337192291, " + 
                    " \"related\": [ " + 
                    " -1970680069, " + 
                    " 973, " + 
                    " 839, " + 
                    " -2153966975844628104 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_113_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_62_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_62_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 294L)
            .and().insertInto("ACTIVITY", 295L)
            .and().insertInto("ACTIVITY", 296L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_4043_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_4045_XYZ_\", " + 
                    " \"description_safety\": \"_EM_4047_XYZ_\", " + 
                    " \"description_notes\": \"_EM_4048_XYZ_\", " + 
                    " \"participants_min\": 328, " + 
                    " \"featured\": false, " + 
                    " \"activity\": { " + 
                    " \"id\": 627, " + 
                    " \"properties_revisions\": [], " + 
                    " \"related\": [ " + 
                    " 491, " + 
                    " 339, " + 
                    " 312 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("_EM_4043_XYZ_"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T12:07:22.324Z"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("_EM_4045_XYZ_"))
                .body("'properties_revisions'[0].'description_safety'", containsString("_EM_4047_XYZ_"))
                .body("'properties_revisions'[0].'description_notes'", containsString("_EM_4048_XYZ_"))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(328.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'name'", containsString("_EM_4043_XYZ_"))
                .body("'properties'.'date_created'", containsString("2024-06-01T12:07:22.324Z"))
                .body("'properties'.'description_introduction'", containsString("_EM_4045_XYZ_"))
                .body("'properties'.'description_safety'", containsString("_EM_4047_XYZ_"))
                .body("'properties'.'description_notes'", containsString("_EM_4048_XYZ_"))
                .body("'properties'.'participants_min'", numberMatches(328.0))
                .body("'properties'.'featured'", equalTo(false));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/-16776279/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_112_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/-16776279/rating?attrs=2&EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    /**
    * [test_63_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_63_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 2392L)
            .and().insertInto("ACTIVITY", 2393L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 721, " + 
                    " \"description_introduction\": \"rtVcVg8GWA\", " + 
                    " \"description_prepare\": \"XIsHolX\", " + 
                    " \"description_main\": \"ZTpMGGnJdE9\", " + 
                    " \"age_min\": 20, " + 
                    " \"age_max\": -815, " + 
                    " \"time_min\": 38, " + 
                    " \"time_max\": 766, " + 
                    " \"source\": \"lrNZSVh3OJ\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"activities_count\": 820 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 386471696489257623, " + 
                    " \"activities_count\": 542 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"j2kdhRQJ\" " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"M4R6iLuQdl44zKvX\", " + 
                    " \"activities_count\": 707 " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"yAdeJcOEQUF2\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"ratings_sum\": 770, " + 
                    " \"ratings_average\": 0.39735687613303394, " + 
                    " \"favourites_count\": 844 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_64_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_64_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_prepare\": \"QjYBJcs\", " + 
                    " \"description_main\": \"FYYoUv\", " + 
                    " \"description_safety\": \"vcokPdabjL9G\", " + 
                    " \"description_notes\": \"1DiKMKctIm\", " + 
                    " \"age_min\": 39, " + 
                    " \"participants_min\": 658, " + 
                    " \"participants_max\": 904, " + 
                    " \"time_min\": 535, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"name\": \"AzxHjEpwsOP\", " + 
                    " \"activities_count\": 59 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 503, " + 
                    " \"activities_count\": 174 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_65_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_65_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_16972_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_16974_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_16975_XYZ_\", " + 
                    " \"description_main\": \"_EM_16976_XYZ_\", " + 
                    " \"description_safety\": \"_EM_16977_XYZ_\", " + 
                    " \"description_notes\": \"_EM_16978_XYZ_\", " + 
                    " \"age_max\": -2147482765, " + 
                    " \"participants_min\": 543, " + 
                    " \"time_max\": 921, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"_EM_16979_XYZ_\", " + 
                    " \"tags\": [], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 766, " + 
                    " \"favourites_count\": 909 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("_EM_16972_XYZ_"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T12:07:23.27Z"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("_EM_16974_XYZ_"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("_EM_16975_XYZ_"))
                .body("'properties_revisions'[0].'description_main'", containsString("_EM_16976_XYZ_"))
                .body("'properties_revisions'[0].'description_safety'", containsString("_EM_16977_XYZ_"))
                .body("'properties_revisions'[0].'description_notes'", containsString("_EM_16978_XYZ_"))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147482765E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(543.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(921.0))
                .body("'properties_revisions'[0].'featured'", equalTo(true))
                .body("'properties_revisions'[0].'source'", containsString("_EM_16979_XYZ_"))
                .body("'properties_revisions'[0].'tags'.size()", equalTo(0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'name'", containsString("_EM_16972_XYZ_"))
                .body("'properties'.'date_created'", containsString("2024-06-01T12:07:23.27Z"))
                .body("'properties'.'description_introduction'", containsString("_EM_16974_XYZ_"))
                .body("'properties'.'description_prepare'", containsString("_EM_16975_XYZ_"))
                .body("'properties'.'description_main'", containsString("_EM_16976_XYZ_"))
                .body("'properties'.'description_safety'", containsString("_EM_16977_XYZ_"))
                .body("'properties'.'description_notes'", containsString("_EM_16978_XYZ_"))
                .body("'properties'.'age_max'", numberMatches(-2.147482765E9))
                .body("'properties'.'participants_min'", numberMatches(543.0))
                .body("'properties'.'time_max'", numberMatches(921.0))
                .body("'properties'.'featured'", equalTo(true))
                .body("'properties'.'source'", containsString("_EM_16979_XYZ_"))
                .body("'properties'.'tags'.size()", equalTo(0));
        location_activities = "/api/v2/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .patch(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/481?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityProperties_369_isContentEqual
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    /**
    * [test_66_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_66_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 14161L)
            .and().insertInto("ACTIVITY", 14162L)
            .and().insertInto("ACTIVITY", 14163L)
            .and().insertInto("ACTIVITY", 14164L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"q5Q_LTMN1lh\", " + 
                    " \"description_prepare\": \"7_sJ\", " + 
                    " \"description_notes\": \"\", " + 
                    " \"age_max\": -2147483566, " + 
                    " \"participants_min\": 889, " + 
                    " \"time_min\": 188, " + 
                    " \"source\": \"V\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"QviOoSKyAA\", " + 
                    " \"uri\": \"C6E6i\", " + 
                    " \"name\": \"bxYUO3\", " + 
                    " \"author\": \"zkm\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -264614647, " + 
                    " \"mime_type\": \"1cpgRpx69\", " + 
                    " \"uri\": \"ZPeo5SZY\", " + 
                    " \"name\": \"W4rsUv0htLXpb\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 184 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 456, " + 
                    " \"ratings_average\": 0.4537299431298554, " + 
                    " \"favourites_count\": 523, " + 
                    " \"related\": [ " + 
                    " 244, " + 
                    " 619, " + 
                    " 7626679082920926712, " + 
                    " 131, " + 
                    " 881 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_67_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_67_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 5967L)
                .d("URI", "\"_EM_29616_XYZ_\"")
            .and().insertInto("TAG", 5966L)
                .d("GRP", "\"\"")
                .d("NAME", "\"_EM_29617_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 5969L)
                .d("URI", "\"_EM_29618_XYZ_\"")
            .and().insertInto("TAG", 5968L)
                .d("GRP", "\"e9t\"")
                .d("NAME", "\"B5iU\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_19876_XYZ_\", " + 
                    " \"description_material\": \"_EM_19877_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_19878_XYZ_\", " + 
                    " \"description_safety\": \"_EM_19881_XYZ_\", " + 
                    " \"description_notes\": \"kRXbF2lcmmM\", " + 
                    " \"participants_min\": 651, " + 
                    " \"time_min\": 122, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 5105374030072120627, " + 
                    " \"activities_count\": 2097221 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"_EM_19890_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 96115664, " + 
                    " \"mime_type\": \"_EM_19891_XYZ_\", " + 
                    " \"name\": \"_EM_19893_XYZ_\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 536, " + 
                    " \"name\": \"_EM_19898_XYZ_\", " + 
                    " \"author\": \"_EM_19900_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": {}, " + 
                    " \"activity\": { " + 
                    " \"id\": 2408767529412952539, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 572, " + 
                    " \"ratings_average\": 0.6893926399341583, " + 
                    " \"favourites_count\": 477 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=_EM_19904_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_68_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_68_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 258, " + 
                    " \"name\": \"hh_NeP9\", " + 
                    " \"description_material\": \"D6h9UOf\", " + 
                    " \"description_introduction\": \"tdMdQf7H1P\", " + 
                    " \"description_prepare\": \"_EM_53989_XYZ_\", " + 
                    " \"description_main\": \"Jg3QGvZive\", " + 
                    " \"description_safety\": \"TWgjl1MpNut\", " + 
                    " \"age_min\": 0, " + 
                    " \"age_max\": -551, " + 
                    " \"participants_min\": -32208, " + 
                    " \"time_min\": 89, " + 
                    " \"time_max\": 977, " + 
                    " \"featured\": false, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 711, " + 
                    " \"mime_type\": \"MT9fuKCzD49JJCq\", " + 
                    " \"name\": \"MaO6QauPKDmBr8hh\", " + 
                    " \"copy_right\": \"\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 921, " + 
                    " \"mime_type\": \"\", " + 
                    " \"uri\": \"0n3jRo9DJySCFy\", " + 
                    " \"name\": \"Xwz8fEaQkHEb\", " + 
                    " \"copy_right\": \"Nuun6HXGX\", " + 
                    " \"author\": \"nwArwGGCz\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 340, " + 
                    " \"email_address\": \"7wGXjwV\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 191, " + 
                    " \"ratings_sum\": 665 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_69_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_69_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -4611686018444224512, " + 
                    " \"description_material\": \"_EM_93595_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_93597_XYZ_\", " + 
                    " \"description_prepare\": \"lnRIMIOZa3hT\", " + 
                    " \"description_main\": \"_EM_89498_XYZ_\", " + 
                    " \"description_notes\": \"_G1HkvQJYXsA83NY\", " + 
                    " \"age_min\": -2147442963, " + 
                    " \"age_max\": -1603236685, " + 
                    " \"participants_min\": -2099980763, " + 
                    " \"participants_max\": 4838, " + 
                    " \"time_max\": -176, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"EJ1NwE\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"uri\": \"xosuJAog2q\", " + 
                    " \"name\": \"aWBwyvk93e\", " + 
                    " \"author\": \"xzIAsF6vyf1\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 631, " + 
                    " \"name\": \"b\", " + 
                    " \"email_address\": \"BMeHLevPl_ymNLP\", " + 
                    " \"authorization_level\": 535 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": -15914, " + 
                    " \"ratings_count\": 743, " + 
                    " \"ratings_average\": 0.589002912186221 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_70_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_70_with500() throws Exception {
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"BrDl0EbGnJ\", " + 
                    " \"description_material\": \"S98N3\", " + 
                    " \"description_safety\": \"_EM_40698_XYZ_\", " + 
                    " \"description_notes\": \"_EM_40699_XYZ_\", " + 
                    " \"age_min\": -722, " + 
                    " \"age_max\": -2147482692, " + 
                    " \"participants_min\": 691, " + 
                    " \"participants_max\": 297, " + 
                    " \"time_min\": 958, " + 
                    " \"time_max\": 316, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("BrDl0EbGnJ"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T12:07:21.726Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("S98N3"))
                .body("'properties_revisions'[0].'description_safety'", containsString("_EM_40698_XYZ_"))
                .body("'properties_revisions'[0].'description_notes'", containsString("_EM_40699_XYZ_"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-722.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147482692E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(691.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(297.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(958.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(316.0))
                .body("'properties_revisions'[0].'featured'", equalTo(true))
                .body("'properties_revisions'[0].'tags'.size()", equalTo(0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'name'", containsString("BrDl0EbGnJ"))
                .body("'properties'.'date_created'", containsString("2024-06-01T12:07:21.726Z"))
                .body("'properties'.'description_material'", containsString("S98N3"))
                .body("'properties'.'description_safety'", containsString("_EM_40698_XYZ_"))
                .body("'properties'.'description_notes'", containsString("_EM_40699_XYZ_"))
                .body("'properties'.'age_min'", numberMatches(-722.0))
                .body("'properties'.'age_max'", numberMatches(-2.147482692E9))
                .body("'properties'.'participants_min'", numberMatches(691.0))
                .body("'properties'.'participants_max'", numberMatches(297.0))
                .body("'properties'.'time_min'", numberMatches(958.0))
                .body("'properties'.'time_max'", numberMatches(316.0))
                .body("'properties'.'featured'", equalTo(true))
                .body("'properties'.'tags'.size()", equalTo(0));
        location_activities = "/api/v2/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/372/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_112_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/372/rating?attrs=_EM_40706_XYZ_&EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    /**
    * [test_71_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_71_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 32019L)
            .and().insertInto("ACTIVITY", 32020L)
            .and().insertInto("ACTIVITY", 32021L)
            .and().insertInto("ACTIVITY", 32022L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/ping")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/1323764676")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"U6\", " + 
                    " \"description_introduction\": \"Pl\", " + 
                    " \"description_prepare\": \"pKrBwBOVCRsn\", " + 
                    " \"description_safety\": \"D1rJncOL6cv0jfy\", " + 
                    " \"description_notes\": \"\", " + 
                    " \"participants_min\": 13, " + 
                    " \"participants_max\": 84, " + 
                    " \"time_max\": 22, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"Z\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("U6"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T12:08:06.595Z"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("Pl"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("pKrBwBOVCRsn"))
                .body("'properties_revisions'[0].'description_safety'", containsString("D1rJncOL6cv0jfy"))
                .body("'properties_revisions'[0].'description_notes'", containsString(""))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(13.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(84.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(22.0))
                .body("'properties_revisions'[0].'featured'", equalTo(true))
                .body("'properties_revisions'[0].'source'", containsString("Z"))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'name'", containsString("U6"))
                .body("'properties'.'date_created'", containsString("2024-06-01T12:08:06.595Z"))
                .body("'properties'.'description_introduction'", containsString("Pl"))
                .body("'properties'.'description_prepare'", containsString("pKrBwBOVCRsn"))
                .body("'properties'.'description_safety'", containsString("D1rJncOL6cv0jfy"))
                .body("'properties'.'description_notes'", containsString(""))
                .body("'properties'.'participants_min'", numberMatches(13.0))
                .body("'properties'.'participants_max'", numberMatches(84.0))
                .body("'properties'.'time_max'", numberMatches(22.0))
                .body("'properties'.'featured'", equalTo(true))
                .body("'properties'.'source'", containsString("Z"));
        location_activities = "/api/v2/activities" + "/" + res_2.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/744/rating?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_112_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/744/rating?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating_78_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_72_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_72_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 14502L)
            .and().insertInto("ACTIVITY", 14503L)
            .and().insertInto("ACTIVITY", 14504L)
            .and().insertInto("ACTIVITY", 14505L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -3277458375574725917, " + 
                    " \"description_material\": \"qE6j1\", " + 
                    " \"description_main\": \"7Q_A3\", " + 
                    " \"description_safety\": \"\", " + 
                    " \"description_notes\": \"r00xWvVsnsOlr5p\", " + 
                    " \"age_min\": -782, " + 
                    " \"age_max\": -99, " + 
                    " \"participants_min\": 718, " + 
                    " \"participants_max\": 945, " + 
                    " \"time_max\": 10, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 37, " + 
                    " \"group\": \"9\", " + 
                    " \"name\": \"XGZVkoizAugN4b\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 1345910043, " + 
                    " \"group\": \"8kJk\", " + 
                    " \"activities_count\": 334 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"GmG\", " + 
                    " \"name\": \"\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 46, " + 
                    " \"group\": \"kxtZm\", " + 
                    " \"name\": \"EbaZE\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 889, " + 
                    " \"mime_type\": \"q7\", " + 
                    " \"author\": \"qe40zjlzXhCsPl\" " + 
                    " }, " + 
                    " \"activities_count\": 270 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"authorization_level\": 771 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 481, " + 
                    " \"ratings_count\": 228, " + 
                    " \"ratings_sum\": 61, " + 
                    " \"favourites_count\": 836 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_73_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_73_with500() throws Exception {
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_4043_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_4045_XYZ_\", " + 
                    " \"description_safety\": \"_EM_4047_XYZ_\", " + 
                    " \"description_notes\": \"_EM_4048_XYZ_\", " + 
                    " \"participants_min\": 328, " + 
                    " \"featured\": false, " + 
                    " \"activity\": { " + 
                    " \"id\": 627, " + 
                    " \"properties_revisions\": [], " + 
                    " \"related\": [ " + 
                    " 491, " + 
                    " 339, " + 
                    " 312 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("_EM_4043_XYZ_"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T12:07:23.505Z"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("_EM_4045_XYZ_"))
                .body("'properties_revisions'[0].'description_safety'", containsString("_EM_4047_XYZ_"))
                .body("'properties_revisions'[0].'description_notes'", containsString("_EM_4048_XYZ_"))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(328.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'name'", containsString("_EM_4043_XYZ_"))
                .body("'properties'.'date_created'", containsString("2024-06-01T12:07:23.505Z"))
                .body("'properties'.'description_introduction'", containsString("_EM_4045_XYZ_"))
                .body("'properties'.'description_safety'", containsString("_EM_4047_XYZ_"))
                .body("'properties'.'description_notes'", containsString("_EM_4048_XYZ_"))
                .body("'properties'.'participants_min'", numberMatches(328.0))
                .body("'properties'.'featured'", equalTo(false));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"favourite\": true " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/0/rating?EMextraParam123=42"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/0/rating?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/AbstractResource_63_toJson
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("Could not generated JSON from ActivityRating object."));
        
    }
    
    
    /**
    * [test_74_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_74_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 9808L)
                .d("URI", "\"rTpnm2Y\"")
            .and().insertInto("TAG", 9807L)
                .d("GRP", "\"_EM_44702_XYZ_\"")
                .d("NAME", "\"_EM_44703_XYZ_\"")
                .r("MEDIA_FILE_ID", 9808L)
            .and().insertInto("MEDIA_FILE", 9810L)
                .d("URI", "\"Cba\"")
            .and().insertInto("TAG", 9809L)
                .d("GRP", "\"JBsqT\"")
                .d("NAME", "\"_EM_44704_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 9812L)
                .d("URI", "\"RYAlCQkdIZg\"")
            .and().insertInto("TAG", 9811L)
                .d("GRP", "\"_EM_44705_XYZ_\"")
                .d("NAME", "\"_EM_44706_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 9814L)
                .d("URI", "\"bOP\"")
            .and().insertInto("TAG", 9813L)
                .d("GRP", "\"_EM_44707_XYZ_\"")
                .d("NAME", "\"_EM_44708_XYZ_\"")
                .r("MEDIA_FILE_ID", 9810L)
            .and().insertInto("MEDIA_FILE", 9816L)
                .d("URI", "\"uXOTE6nkVwT4Hwjr\"")
            .and().insertInto("TAG", 9815L)
                .d("GRP", "\"tj\"")
                .d("NAME", "\"H0xgyCl\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -134217530, " + 
                    " \"name\": \"4iIK\", " + 
                    " \"description_material\": \"_EM_21808_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_21810_XYZ_\", " + 
                    " \"description_main\": \"e\", " + 
                    " \"description_notes\": \"_EM_21813_XYZ_\", " + 
                    " \"age_min\": -163, " + 
                    " \"age_max\": -270, " + 
                    " \"participants_min\": 16777985, " + 
                    " \"participants_max\": 145, " + 
                    " \"time_min\": 170, " + 
                    " \"time_max\": 131475, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 405, " + 
                    " \"group\": \"FKAiajseHzHL\", " + 
                    " \"activities_count\": -7494298857555513877 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"_EM_21821_XYZ_\", " + 
                    " \"name\": \"_EM_21822_XYZ_\", " + 
                    " \"activities_count\": 435 " + 
                    " }, " + 
                    " {} " + 
                    " ], " + 
                    " \"media_files\": [], " + 
                    " \"author\": { " + 
                    " \"name\": \"_EM_21835_XYZ_\", " + 
                    " \"authorization_level\": 413, " + 
                    " \"identities\": [] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 514, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 204, " + 
                    " \"ratings_average\": 0.9325886669046526, " + 
                    " \"favourites_count\": 325 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_75_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_75_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/1/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_120_deleteRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=tcNgxVh&" + 
                    "valid=now&" + 
                    "attrs=BVYc&" + 
                    "uri=eSYPN")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 895, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities/8389503/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages/-4611686018426208248?attrs=_EM_13564_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        ValidatableResponse res_4 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v2/activities/750")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_4.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "group=blzWMJAWVq2&" + 
                    "min_activities_count=-100662812&" + 
                    "attrs=_EM_13613_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_6 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_13616_XYZ_\", " + 
                    " \"description_material\": \"_EM_13617_XYZ_\", " + 
                    " \"description_introduction\": \"U\", " + 
                    " \"description_prepare\": \"_EM_44483_XYZ_\", " + 
                    " \"description_safety\": \"_EM_13620_XYZ_\", " + 
                    " \"description_notes\": \"_EM_13621_XYZ_\", " + 
                    " \"age_min\": 43, " + 
                    " \"age_max\": -583, " + 
                    " \"participants_min\": 0, " + 
                    " \"participants_max\": 209, " + 
                    " \"time_min\": 665, " + 
                    " \"time_max\": 525, " + 
                    " \"source\": \"OKXaCk3GF\", " + 
                    " \"activity\": { " + 
                    " \"ratings_count\": 915, " + 
                    " \"ratings_average\": 0.6336641801452114, " + 
                    " \"related\": [ " + 
                    " 489, " + 
                    " 643, " + 
                    " 236 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/activities/942")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_6.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/576460752198603073/file")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 6, " + 
                    " \"favourite\": true " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities/-33554814/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_76_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_76_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1403L)
            .and().insertInto("ACTIVITY", 1404L)
            .and().insertInto("ACTIVITY", 1405L)
            .and().insertInto("ACTIVITY", 1406L)
            .and().insertInto("MEDIA_FILE", 1407L)
                .d("AUTHOR", "\"_EM_77199_XYZ_\"")
                .d("CAPTURE_DATE", "\"2065-02-26 08:52:13\"")
                .d("COPY_RIGHT", "\"qiyy\"")
                .d("MIME_TYPE", "\"_EM_11986_XYZ_\"")
                .d("NAME", "\"_EM_11987_XYZ_\"")
                .d("URI", "\"2yK_WJ\"")
            .and().insertInto("MEDIA_FILE", 1408L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1975-07-10 06:46:47\"")
                .d("COPY_RIGHT", "\"kfbIUyrCd6s\"")
                .d("MIME_TYPE", "\"-1\"")
                .d("NAME", "\"v90zfcgpiIS4nUz\"")
                .d("URI", "\"n9Ew4vo2LOU6z\"")
            .and().insertInto("MEDIA_FILE", 1409L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "\"2007-11-23 12:48:46\"")
                .d("COPY_RIGHT", "\"1\"")
                .d("MIME_TYPE", "\"v1NJ\"")
                .d("NAME", "\"wXGItGy\"")
                .d("URI", "\"_EM_11990_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 1410L)
                .d("AUTHOR", "\"Mb72UvLH6h3P\"")
                .d("CAPTURE_DATE", "\"2045-10-25 11:44:32\"")
                .d("COPY_RIGHT", "\"_EM_77200_XYZ_\"")
                .d("MIME_TYPE", "\"S3pJcy8bF9hv3\"")
                .d("NAME", "\"_EM_11991_XYZ_\"")
                .d("URI", "\"_EM_11992_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 1411L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2066-01-14 00:51:25\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"arS7Y\"")
                .d("NAME", "\"91ovbOrV\"")
                .d("URI", "\"@\"")
            .and().insertInto("SYSTEM_MESSAGE", 19255L)
                .d("KEY", "\"Qtqg0Gu2Q9AOO5\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"obhtT\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/ping")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=zX0KGfWcid&" + 
                    "valid=now&" + 
                    "attrs=_EM_8976_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_safety\": \"ywVS7Q\", " + 
                    " \"age_max\": -2147483233, " + 
                    " \"time_min\": 291 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T12:07:22.423Z"))
                .body("'properties_revisions'[0].'description_safety'", containsString("ywVS7Q"))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147483233E9))
                .body("'properties_revisions'[0].'time_min'", numberMatches(291.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'date_created'", containsString("2024-06-01T12:07:22.423Z"))
                .body("'properties'.'description_safety'", containsString("ywVS7Q"))
                .body("'properties'.'age_max'", numberMatches(-2.147483233E9))
                .body("'properties'.'time_min'", numberMatches(291.0));
        location_activities = "/api/v1/activities" + "/" + res_2.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/582/rating"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/582/rating"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/-4621313464977984092/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        ValidatableResponse res_6 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 616 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/584")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_295_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_6.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/585")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        ValidatableResponse res_8 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/media_files/375")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_8.extract().statusCode()));
    }
    
    
    /**
    * [test_77_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_77_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"za2cwXacfw\", " + 
                    " \"description_material\": \"8wvmIsVTs3HOCb2\", " + 
                    " \"description_prepare\": \"6nM9DA\", " + 
                    " \"description_safety\": \"gs8j0Y6\", " + 
                    " \"description_notes\": \"Hf\", " + 
                    " \"participants_min\": 570, " + 
                    " \"participants_max\": 435, " + 
                    " \"time_min\": 184, " + 
                    " \"time_max\": 1022, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"haMnnOZE\", " + 
                    " \"uri\": \"2Az\", " + 
                    " \"name\": \"\", " + 
                    " \"copy_right\": \"08\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("za2cwXacfw"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T12:08:06.800Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("8wvmIsVTs3HOCb2"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("6nM9DA"))
                .body("'properties_revisions'[0].'description_safety'", containsString("gs8j0Y6"))
                .body("'properties_revisions'[0].'description_notes'", containsString("Hf"))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(570.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(435.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(184.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(1022.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'tags'.size()", equalTo(0))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(1))
                .body("'properties_revisions'[0].'media_files'[0].'mime_type'", containsString("haMnnOZE"))
                .body("'properties_revisions'[0].'media_files'[0].'uri'", containsString("2Az"))
                .body("'properties_revisions'[0].'media_files'[0].'name'", containsString(""))
                .body("'properties_revisions'[0].'media_files'[0].'copy_right'", containsString("08"))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'name'", containsString("za2cwXacfw"))
                .body("'properties'.'date_created'", containsString("2024-06-01T12:08:06.800Z"))
                .body("'properties'.'description_material'", containsString("8wvmIsVTs3HOCb2"))
                .body("'properties'.'description_prepare'", containsString("6nM9DA"))
                .body("'properties'.'description_safety'", containsString("gs8j0Y6"))
                .body("'properties'.'description_notes'", containsString("Hf"))
                .body("'properties'.'participants_min'", numberMatches(570.0))
                .body("'properties'.'participants_max'", numberMatches(435.0))
                .body("'properties'.'time_min'", numberMatches(184.0))
                .body("'properties'.'time_max'", numberMatches(1022.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'tags'.size()", equalTo(0))
                .body("'properties'.'media_files'.size()", equalTo(1))
                .body("'properties'.'media_files'[0].'mime_type'", containsString("haMnnOZE"))
                .body("'properties'.'media_files'[0].'uri'", containsString("2Az"))
                .body("'properties'.'media_files'[0].'name'", containsString(""))
                .body("'properties'.'media_files'[0].'copy_right'", containsString("08"));
        location_activities = "/api/v1/activities" + "/" + res_2.extract().body().path("id").toString();
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/968?uri=7ax3QPST1HKnCc"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityProperties_369_isContentEqual
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    /**
    * [test_78_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_78_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 2233L)
                .d("KEY", "\"ZT\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1918-11-21 21:27:08\"")
                .d("VALUE", "\"9sBG\"")
            .and().insertInto("MEDIA_FILE", 26346L)
                .d("AUTHOR", "\"lrczptQoZ2HP2Nk\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"7mV6QhGjSp0UMUsw\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"3hMzanV\"")
                .d("URI", "\"pBafli2x0PP\"")
            .and().insertInto("MEDIA_FILE", 26347L)
                .d("AUTHOR", "\"aVqjNAYgMyqBUowL\"")
                .d("CAPTURE_DATE", "\"1971-05-19 21:48:12\"")
                .d("COPY_RIGHT", "\"Q1diF\"")
                .d("MIME_TYPE", "\"2sJ\"")
                .d("NAME", "NULL")
                .d("URI", "\"ilouj1A\"")
            .and().insertInto("MEDIA_FILE", 26348L)
                .d("AUTHOR", "\"CasUfO8hJ\"")
                .d("CAPTURE_DATE", "\"1926-09-05 06:50:27\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"cdGI\"")
                .d("NAME", "NULL")
                .d("URI", "\"P\"")
            .and().insertInto("MEDIA_FILE", 26354L)
                .d("URI", "\"Ws5owB\"")
            .and().insertInto("USERS", 26353L)
                .d("AUTHORIZATION_LEVEL", "77")
                .d("NAME", "\"EAGC5V3N\"")
            .and().insertInto("ACTIVITY", 26352L)
            .and().insertInto("ACTIVITY", 26351L)
            .and().insertInto("ACTIVITY_PROPERTIES", 26350L)
                .r("ACTIVITY_ID", 26351L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 26349L)
                .r("ACTIVITY_PROPERTIES_ID", 26350L)
                .r("MEDIA_FILE_ID", 26346L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 26360L)
                .d("URI", "\"\"")
            .and().insertInto("USERS", 26359L)
                .d("AUTHORIZATION_LEVEL", "379")
                .d("NAME", "\"HYCCIzpTQcB\"")
            .and().insertInto("ACTIVITY", 26358L)
            .and().insertInto("ACTIVITY", 26357L)
            .and().insertInto("ACTIVITY_PROPERTIES", 26356L)
                .r("ACTIVITY_ID", 26357L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 26355L)
                .r("ACTIVITY_PROPERTIES_ID", 26356L)
                .r("MEDIA_FILE_ID", 26360L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 26366L)
                .d("URI", "\"QK861VwskEGA\"")
            .and().insertInto("USERS", 26365L)
                .d("AUTHORIZATION_LEVEL", "213")
                .d("NAME", "\"U_\"")
            .and().insertInto("ACTIVITY", 26364L)
            .and().insertInto("ACTIVITY", 26363L)
            .and().insertInto("ACTIVITY_PROPERTIES", 26362L)
                .r("ACTIVITY_ID", 26358L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 26361L)
                .r("ACTIVITY_PROPERTIES_ID", 26356L)
                .r("MEDIA_FILE_ID", 26366L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 26372L)
                .d("URI", "\"mVGolKAeFwYMz\"")
            .and().insertInto("USERS", 26371L)
                .d("AUTHORIZATION_LEVEL", "-32008")
                .d("NAME", "\"J08KKgljXJPOv0c\"")
            .and().insertInto("ACTIVITY", 26370L)
            .and().insertInto("ACTIVITY", 26369L)
            .and().insertInto("ACTIVITY_PROPERTIES", 26368L)
                .r("ACTIVITY_ID", 26364L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 26367L)
                .r("ACTIVITY_PROPERTIES_ID", 26362L)
                .r("MEDIA_FILE_ID", 26346L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 26378L)
                .d("URI", "\"3jmkzCzXimgVKVX\"")
            .and().insertInto("USERS", 26377L)
                .d("AUTHORIZATION_LEVEL", "148")
                .d("NAME", "\"Nndn426\"")
            .and().insertInto("ACTIVITY", 26376L)
            .and().insertInto("ACTIVITY", 26375L)
            .and().insertInto("ACTIVITY_PROPERTIES", 26374L)
                .r("ACTIVITY_ID", 26352L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 26373L)
                .r("ACTIVITY_PROPERTIES_ID", 26362L)
                .r("MEDIA_FILE_ID", 26366L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 26899L)
                .d("URI", "\"_EM_95272_XYZ_\"")
            .and().insertInto("TAG", 26898L)
                .d("GRP", "\"I\"")
                .d("NAME", "\"TrcK\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 26901L)
                .d("URI", "\"GEI0eFbjYWH0APfU\"")
            .and().insertInto("TAG", 26900L)
                .d("GRP", "\"HU9HplJ1JFQi2zVB\"")
                .d("NAME", "\"REoUiqmtuI7AYh6\"")
                .r("MEDIA_FILE_ID", 26372L)
            .and().insertInto("MEDIA_FILE", 26903L)
                .d("URI", "\"QQYwWV\"")
            .and().insertInto("TAG", 26902L)
                .d("GRP", "\"1ZgyZm00x7kOWa\"")
                .d("NAME", "\"OpcG\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 26905L)
                .d("URI", "\"kz0ILTiI90rfK\"")
            .and().insertInto("TAG", 26904L)
                .d("GRP", "\"nolb0Il1KT0PqviZ\"")
                .d("NAME", "\"qOujsFv\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_33_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=bEkp7ANkEXhEwz&" + 
                    "valid=now_and_future&" + 
                    "attrs=EQT8F2&" + 
                    "uri=_EM_95271_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"YDrdHzrpDn\", " + 
                    " \"description_main\": \"FZhM7qqIX\", " + 
                    " \"description_notes\": \"jzGaYC5_BUpcQ\", " + 
                    " \"participants_min\": 227, " + 
                    " \"participants_max\": 544, " + 
                    " \"time_min\": 949, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"vMY9\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"D7x2sec8Vz\", " + 
                    " \"uri\": \"9D\", " + 
                    " \"copy_right\": \"G54\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 361, " + 
                    " \"ratings_sum\": 496, " + 
                    " \"favourites_count\": 141 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T12:08:06.439Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("YDrdHzrpDn"))
                .body("'properties_revisions'[0].'description_main'", containsString("FZhM7qqIX"))
                .body("'properties_revisions'[0].'description_notes'", containsString("jzGaYC5_BUpcQ"))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(227.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(544.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(949.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'source'", containsString("vMY9"))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(1))
                .body("'properties_revisions'[0].'media_files'[0].'mime_type'", containsString("D7x2sec8Vz"))
                .body("'properties_revisions'[0].'media_files'[0].'uri'", containsString("9D"))
                .body("'properties_revisions'[0].'media_files'[0].'copy_right'", containsString("G54"))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'date_created'", containsString("2024-06-01T12:08:06.439Z"))
                .body("'properties'.'description_material'", containsString("YDrdHzrpDn"))
                .body("'properties'.'description_main'", containsString("FZhM7qqIX"))
                .body("'properties'.'description_notes'", containsString("jzGaYC5_BUpcQ"))
                .body("'properties'.'participants_min'", numberMatches(227.0))
                .body("'properties'.'participants_max'", numberMatches(544.0))
                .body("'properties'.'time_min'", numberMatches(949.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'source'", containsString("vMY9"))
                .body("'properties'.'media_files'.size()", equalTo(1))
                .body("'properties'.'media_files'[0].'mime_type'", containsString("D7x2sec8Vz"))
                .body("'properties'.'media_files'[0].'uri'", containsString("9D"))
                .body("'properties'.'media_files'[0].'copy_right'", containsString("G54"));
        location_activities = "/api/v2/activities" + "/" + res_2.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/721"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", nullValue())
                .body("'properties_revisions'[0].'date_published'", nullValue())
                .body("'properties_revisions'[0].'date_created'", numberMatches(1.717236486439E12))
                .body("'properties_revisions'[0].'date_updated'", nullValue())
                .body("'properties_revisions'[0].'description_material'", containsString("YDrdHzrpDn"))
                .body("'properties_revisions'[0].'description_introduction'", nullValue())
                .body("'properties_revisions'[0].'description_prepare'", nullValue())
                .body("'properties_revisions'[0].'description_main'", containsString("FZhM7qqIX"))
                .body("'properties_revisions'[0].'description_safety'", nullValue())
                .body("'properties_revisions'[0].'description_notes'", containsString("jzGaYC5_BUpcQ"))
                .body("'properties_revisions'[0].'age_min'", nullValue())
                .body("'properties_revisions'[0].'age_max'", nullValue())
                .body("'properties_revisions'[0].'participants_min'", numberMatches(227.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(544.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(949.0))
                .body("'properties_revisions'[0].'time_max'", nullValue())
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'source'", containsString("vMY9"))
                .body("'properties_revisions'[0].'tags'.size()", equalTo(0))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(1))
                .body("'properties_revisions'[0].'media_files'[0].'mime_type'", containsString("D7x2sec8Vz"))
                .body("'properties_revisions'[0].'media_files'[0].'uri'", containsString("9D"))
                .body("'properties_revisions'[0].'media_files'[0].'name'", nullValue())
                .body("'properties_revisions'[0].'media_files'[0].'capture_date'", nullValue())
                .body("'properties_revisions'[0].'media_files'[0].'copy_right'", containsString("G54"))
                .body("'properties_revisions'[0].'media_files'[0].'author'", nullValue())
                .body("'properties_revisions'[0].'author'", nullValue())
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'name'", nullValue())
                .body("'properties'.'date_published'", nullValue())
                .body("'properties'.'date_created'", numberMatches(1.717236486439E12))
                .body("'properties'.'date_updated'", nullValue())
                .body("'properties'.'description_material'", containsString("YDrdHzrpDn"))
                .body("'properties'.'description_introduction'", nullValue())
                .body("'properties'.'description_prepare'", nullValue())
                .body("'properties'.'description_main'", containsString("FZhM7qqIX"))
                .body("'properties'.'description_safety'", nullValue())
                .body("'properties'.'description_notes'", containsString("jzGaYC5_BUpcQ"))
                .body("'properties'.'age_min'", nullValue())
                .body("'properties'.'age_max'", nullValue())
                .body("'properties'.'participants_min'", numberMatches(227.0))
                .body("'properties'.'participants_max'", numberMatches(544.0))
                .body("'properties'.'time_min'", numberMatches(949.0))
                .body("'properties'.'time_max'", nullValue())
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'source'", containsString("vMY9"))
                .body("'properties'.'tags'.size()", equalTo(0))
                .body("'properties'.'media_files'.size()", equalTo(1))
                .body("'properties'.'media_files'[0].'mime_type'", containsString("D7x2sec8Vz"))
                .body("'properties'.'media_files'[0].'uri'", containsString("9D"))
                .body("'properties'.'media_files'[0].'name'", nullValue())
                .body("'properties'.'media_files'[0].'capture_date'", nullValue())
                .body("'properties'.'media_files'[0].'copy_right'", containsString("G54"))
                .body("'properties'.'media_files'[0].'author'", nullValue())
                .body("'properties'.'author'", nullValue())
                .body("'related'.size()", equalTo(0));
        
        
        ValidatableResponse res_4 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 302, " + 
                    " \"value\": \"1MCLv_bEgNS\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/721")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_102_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_4.extract().statusCode()));
        
        ValidatableResponse res_5 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 402, " + 
                    " \"group\": \"s9A1GGAA5\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"tzPqDvxCN1qbLGA\", " + 
                    " \"uri\": \"8XcD_xHiO9\", " + 
                    " \"name\": \"B6IJn\", " + 
                    " \"author\": \"03TcS0fxzYyRLnn\" " + 
                    " }, " + 
                    " \"activities_count\": 3981096346592374855 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/418")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_5.extract().statusCode()));
    }


}
