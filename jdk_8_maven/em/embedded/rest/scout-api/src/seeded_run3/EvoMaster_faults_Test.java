import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2024-05-30T20:55:29.940+02:00[Europe/Paris]
 * <br>
 * The generated test suite contains 88 tests
 * <br>
 * Covered targets: 1626
 * <br>
 * Used time: 2h 1m 3s
 * <br>
 * Needed budget for current results: 99%
 * <br>
 * This file contains test cases that are likely to indicate faults.
 */
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.se.devscout.scoutapi.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("MEDIA_FILE","ACTIVITY_PROPERTIES_MEDIA_FILE","MEDIA_FILE_KEYWORDS","TAG","ACTIVITY_PROPERTIES_TAG","TAG_DERIVED","USERS","ACTIVITY_PROPERTIES","ACTIVITY_RATING","ACTIVITY_RELATION","USER_IDENTITY","ACTIVITY","ACTIVITY_DERIVED","SYSTEM_MESSAGE"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * [test_0_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_0_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=_EM_1738_XYZ_&" + 
                    "text=_EM_1740_XYZ_&" + 
                    "featured=false&" + 
                    "categories=_EM_1741_XYZ_&" + 
                    "participants=_EM_1743_XYZ_&" + 
                    "durations=_EM_1744_XYZ_&" + 
                    "my_favourites=true&" + 
                    "ratings_count_min=972&" + 
                    "random=668")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_77_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
    }
    
    
    /**
    * [test_1_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_1_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "attrs=_EM_1764_XYZ_&" + 
                    "name=XiQlBzrRV&" + 
                    "text=_EM_1765_XYZ_&" + 
                    "age_1=_EM_1766_XYZ_&" + 
                    "participants=_EM_1768_XYZ_&" + 
                    "time_1=_EM_1769_XYZ_&" + 
                    "time_2=_EM_1770_XYZ_&" + 
                    "my_favourites=false&" + 
                    "ratings_average_min=0.5736932341881326")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
    }
    
    
    /**
    * [test_2_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_2_with500() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/media_files/3/file?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_3_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_3_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3551_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/tags?EMextraParam123=_EM_3550_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_4_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_4_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_5073_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_33_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_5_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_5_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_5089_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_6_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_6_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_10974_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/users/149?EMextraParam123=_EM_10973_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_7_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_7_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/users/113?EMextraParam123=_EM_4936_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_48_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_8_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_8_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/tags/170?EMextraParam123=_EM_3405_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_9_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_9_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/698849193")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_41_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_10_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_10_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_9374_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/system_messages/693?EMextraParam123=_EM_9373_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_102_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_11_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_11_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/568?EMextraParam123=_EM_3391_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_12_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_12_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1897_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=_EM_1896_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/FavouritesResourceV1_66_put
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_13_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_13_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/categories/152")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_14_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_14_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_40_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_15_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_15_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1626_XYZ_")
                .delete(baseUrlOfSut + "/api/v2/activities/133/rating?EMextraParam123=_EM_1625_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_16_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_16_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1632_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/activities/97/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_17_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_17_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/895/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_18_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_18_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1630_XYZ_")
                .get(baseUrlOfSut + "/api/v1/activities/753/rating?EMextraParam123=_EM_1629_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_19_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_19_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_5062_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_20_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_20_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=_EM_1886_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_21_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_21_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 407L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 25, " + 
                    " \"copy_right\": \"sJEMtj\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_109_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_22_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_22_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3459_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/activities/573")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_23_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_23_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/507?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_24_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_24_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v2/activities/704")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_25_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_25_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3386_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .patch(baseUrlOfSut + "/api/v2/activities/532?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_26_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_26_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3457_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .patch(baseUrlOfSut + "/api/v1/activities/703")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_27_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_27_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3798_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/activities/832")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_28_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_28_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1157L)
                .d("AUTHOR", "\"HT7NujGwhvxSeP\"")
                .d("CAPTURE_DATE", "\"1915-06-04 04:30:53\"")
                .d("COPY_RIGHT", "\"nNPidi1A\"")
                .d("MIME_TYPE", "\"Dp7zM_txa6GfOu\"")
                .d("NAME", "\"F7niqMSarvO4CVhd\"")
                .d("URI", "\"6\"")
            .and().insertInto("MEDIA_FILE", 1158L)
                .d("AUTHOR", "\"Krtcmmc3nHs\"")
                .d("CAPTURE_DATE", "\"1964-09-12 16:22:59\"")
                .d("COPY_RIGHT", "\"HNxeV\"")
                .d("MIME_TYPE", "\"rQ\"")
                .d("NAME", "\"lBXo2l5Raj2K59dw\"")
                .d("URI", "\"yRquzPFU\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_4921_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/media_files/136?verify_unused=true")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_29_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_29_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 13828, " + 
                    " \"key\": \"JYB5KM2zbAVItka\", " + 
                    " \"value\": \"EL\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_78_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_30_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_30_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 319L)
                .d("AUTHORIZATION_LEVEL", "313")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"_EM_8213_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_8217_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"email_address\": \"_EM_8215_XYZ_\", " + 
                    " \"identities\": [] " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/319")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_100_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_31_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_31_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1782_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 694, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities/694/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_32_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_32_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3120L)
            .and().insertInto("ACTIVITY", 3121L)
            .and().insertInto("ACTIVITY", 3122L)
            .and().insertInto("ACTIVITY", 3123L)
            .and().insertInto("USERS", 20771L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"VNop3KC_akwt6K\"")
            .and().insertInto("ACTIVITY", 20770L)
            .and().insertInto("ACTIVITY_RATING", 20769L)
                .r("ACTIVITY_ID", 3120L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 0, " + 
                    " \"favourite\": true " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities/0/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_33_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_33_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 500, " + 
                    " \"email_address\": \"\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": -2077702763, " + 
                    " \"type\": \"GOOGLE\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_62_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_34_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_34_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_14276_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -139704074, " + 
                    " \"group\": \"_EM_14270_XYZ_\", " + 
                    " \"activities_count\": 1124995053207817234 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_61_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_35_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_35_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 16802L)
                .d("URI", "\"Mol\"")
            .and().insertInto("TAG", 16801L)
                .d("GRP", "\"kP8IBi3\"")
                .d("NAME", "\"aeNjjZfBxLE2zp\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 16804L)
                .d("URI", "\"_EM_77999_XYZ_\"")
            .and().insertInto("TAG", 16803L)
                .d("GRP", "\"H1W5bfiTKvZ837TH\"")
                .d("NAME", "\"_EM_78000_XYZ_\"")
                .r("MEDIA_FILE_ID", 16804L)
            .and().insertInto("MEDIA_FILE", 16806L)
                .d("URI", "\"JSsdL6FezP94vQR\"")
            .and().insertInto("TAG", 16805L)
                .d("GRP", "\"_EM_78001_XYZ_\"")
                .d("NAME", "\"W2\"")
                .r("MEDIA_FILE_ID", 16802L)
            .and().insertInto("MEDIA_FILE", 16808L)
                .d("URI", "\"_EM_78002_XYZ_\"")
            .and().insertInto("TAG", 16807L)
                .d("GRP", "\"zJ0aEEF9AGX\"")
                .d("NAME", "\"oAV\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 16810L)
                .d("URI", "\"7ADt\"")
            .and().insertInto("TAG", 16809L)
                .d("GRP", "\"5MmI6phI31pjt9\"")
                .d("NAME", "\"ybVm_4nI\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 16813L)
                .d("URI", "\"PV_gbcSIoSb\"")
            .and().insertInto("TAG", 16812L)
                .d("GRP", "\"KnCa9MFljxV1\"")
                .d("NAME", "\"uyq\"")
            .and().insertInto("TAG_DERIVED", 16811L)
                .r("TAG_ID", 16805L)
                .d("ACTIVITIES_COUNT", "-1284299816")
            .and().insertInto("MEDIA_FILE", 16816L)
                .d("URI", "\"8yA4mE\"")
            .and().insertInto("TAG", 16815L)
                .d("GRP", "\"qyYAi2X4WIT5DyE\"")
                .d("NAME", "\"_EM_78003_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 16814L)
                .r("TAG_ID", 16801L)
                .d("ACTIVITIES_COUNT", "601")
            .and().insertInto("MEDIA_FILE", 16819L)
                .d("URI", "\"nM6oPtFWiiR\"")
            .and().insertInto("TAG", 16818L)
                .d("GRP", "\"AKhN7x9\"")
                .d("NAME", "\"MeiqaXvSTyXNGJ\"")
            .and().insertInto("TAG_DERIVED", 16817L)
                .r("TAG_ID", 16818L)
                .d("ACTIVITIES_COUNT", "197")
            .and().insertInto("MEDIA_FILE", 16822L)
                .d("URI", "\"h7UWlmBJGg4b\"")
            .and().insertInto("TAG", 16821L)
                .d("GRP", "\"GE7DwxfqI67no4e\"")
                .d("NAME", "\"LOcRHVqnQHtgv\"")
            .and().insertInto("TAG_DERIVED", 16820L)
                .r("TAG_ID", 16815L)
                .d("ACTIVITIES_COUNT", "300")
            .and().insertInto("MEDIA_FILE", 16825L)
                .d("URI", "\"5Mh\"")
            .and().insertInto("TAG", 16824L)
                .d("GRP", "\"_EM_78004_XYZ_\"")
                .d("NAME", "\"_EM_78005_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 16823L)
                .r("TAG_ID", 16821L)
                .d("ACTIVITIES_COUNT", "-31864")
            .and().insertInto("ACTIVITY", 16836L)
            .and().insertInto("ACTIVITY", 16742L)
            .and().insertInto("USERS", 16743L)
                .d("AUTHORIZATION_LEVEL", "-3594")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"1iK1IlLpVKZw\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 451, " + 
                    " \"activities_count\": 33503 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_60_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_36_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_36_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3794L)
            .and().insertInto("MEDIA_FILE", 3795L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2100-11-16 11:29:13\"")
                .d("COPY_RIGHT", "\"24090\"")
                .d("MIME_TYPE", "\"_EM_22522_XYZ_\"")
                .d("NAME", "\"ZKJ9EZzem9Q\"")
                .d("URI", "\"_EM_22164_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 3819L)
                .d("URI", "\"rrceZKwMySTW\"")
            .and().insertInto("USERS", 3818L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"zcnqLL\"")
            .and().insertInto("ACTIVITY", 3817L)
            .and().insertInto("ACTIVITY", 3816L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3815L)
                .r("ACTIVITY_ID", 3816L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3814L)
                .r("ACTIVITY_PROPERTIES_ID", 3815L)
                .r("MEDIA_FILE_ID", 3795L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 3825L)
                .d("URI", "\"_EM_49731_XYZ_\"")
            .and().insertInto("USERS", 3824L)
                .d("AUTHORIZATION_LEVEL", "531")
                .d("NAME", "\"_EM_49732_XYZ_\"")
            .and().insertInto("ACTIVITY", 3823L)
            .and().insertInto("ACTIVITY", 3822L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3821L)
                .r("ACTIVITY_ID", 3823L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3820L)
                .r("ACTIVITY_PROPERTIES_ID", 3821L)
                .r("MEDIA_FILE_ID", 3819L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 3831L)
                .d("URI", "\"uBJpY\"")
            .and().insertInto("USERS", 3830L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"71915\"")
            .and().insertInto("ACTIVITY", 3829L)
            .and().insertInto("ACTIVITY", 3828L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3827L)
                .r("ACTIVITY_ID", 3829L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3826L)
                .r("ACTIVITY_PROPERTIES_ID", 3815L)
                .r("MEDIA_FILE_ID", 3831L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 3837L)
                .d("URI", "\"_EM_22935_XYZ_\"")
            .and().insertInto("USERS", 3836L)
                .d("AUTHORIZATION_LEVEL", "56")
                .d("NAME", "\"_EM_22523_XYZ_\"")
            .and().insertInto("ACTIVITY", 3835L)
            .and().insertInto("ACTIVITY", 3834L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3833L)
                .r("ACTIVITY_ID", 3828L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3832L)
                .r("ACTIVITY_PROPERTIES_ID", 3833L)
                .r("MEDIA_FILE_ID", 3795L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 3843L)
                .d("URI", "\"_EM_49733_XYZ_\"")
            .and().insertInto("USERS", 3842L)
                .d("AUTHORIZATION_LEVEL", "-261482")
                .d("NAME", "\"_EM_22936_XYZ_\"")
            .and().insertInto("ACTIVITY", 3841L)
            .and().insertInto("ACTIVITY", 3840L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3839L)
                .r("ACTIVITY_ID", 3840L)
            .and().insertInto("USERS", 10087L)
                .d("AUTHORIZATION_LEVEL", "-4193585")
                .d("NAME", "\"lV6F\"")
            .and().insertInto("USER_IDENTITY", 10086L)
                .d("DATE_CREATED", "NULL")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"xyzwhFlrSrA\"")
                .d("USER_ID", "NULL")
            .and().insertInto("USERS", 10089L)
                .d("AUTHORIZATION_LEVEL", "66366")
                .d("NAME", "\"_EM_49734_XYZ_\"")
            .and().insertInto("USER_IDENTITY", 10088L)
                .d("DATE_CREATED", "NULL")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"EkXer9iaLao_E\"")
                .d("USER_ID", "NULL")
            .and().insertInto("USERS", 10091L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"0Q9AEx6o4\"")
            .and().insertInto("USER_IDENTITY", 10090L)
                .d("DATE_CREATED", "NULL")
                .d("TYPE", "\"_EM_49735_XYZ_\"")
                .d("VALUE", "\"XlKA_ocHdq\"")
                .r("USER_ID", 10089L)
            .and().insertInto("USERS", 10093L)
                .d("AUTHORIZATION_LEVEL", "508")
                .d("NAME", "\"_EM_49736_XYZ_\"")
            .and().insertInto("USER_IDENTITY", 10092L)
                .d("DATE_CREATED", "\"2050-08-29 10:12:54\"")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"_EM_49737_XYZ_\"")
                .d("USER_ID", "NULL")
            .and().insertInto("USERS", 10095L)
                .d("AUTHORIZATION_LEVEL", "299")
                .d("NAME", "\"IwLopgL\"")
            .and().insertInto("USER_IDENTITY", 10094L)
                .d("DATE_CREATED", "NULL")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"_EM_49738_XYZ_\"")
                .r("USER_ID", 10093L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/users?attrs=")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/AbstractResource_63_toJson
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("Could not generated JSON from ArrayList object."));
        
    }
    
    
    /**
    * [test_37_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_37_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -1113817533, " + 
                    " \"mime_type\": \"_EM_106454_XYZ_\", " + 
                    " \"uri\": \"_EM_106455_XYZ_\", " + 
                    " \"name\": \"_EM_106456_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/-1113817533")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_295_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_38_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_38_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_5118_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"_EM_5120_XYZ_\", " + 
                    " \"copy_right\": \"_EM_5122_XYZ_\", " + 
                    " \"author\": \"_EM_5123_XYZ_\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_39_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_39_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 26733L)
                .d("AUTHORIZATION_LEVEL", "-15847")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "\"A3Q3h36pm0wS7V\"")
                .d("NAME", "\"_EM_112229_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 26734L)
                .d("KEY", "\"BrUw0Kq4\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2053-02-01 05:02:33\"")
                .d("VALUE", "\"dS\"")
            .and().insertInto("SYSTEM_MESSAGE", 26735L)
                .d("KEY", "\"_EM_112230_XYZ_\"")
                .d("VALID_FROM", "\"1942-10-21 06:07:01\"")
                .d("VALID_TO", "\"1924-05-31 00:00:30\"")
                .d("VALUE", "\"_EM_112231_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 26736L)
                .d("KEY", "\"63nyVCxs\"")
                .d("VALID_FROM", "\"1983-07-08 18:31:35\"")
                .d("VALID_TO", "\"2011-07-07 10:36:53\"")
                .d("VALUE", "\"_EM_112232_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 26737L)
                .d("KEY", "\"gCKyJNALNUM\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"EZvGq0Yjn\"")
            .and().insertInto("SYSTEM_MESSAGE", 15472L)
                .d("KEY", "\"Zk8HPhU6PI\"")
                .d("VALID_FROM", "\"1918-06-15 20:56:15\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_73474_XYZ_\"")
            .and().insertInto("USERS", 15474L)
                .d("AUTHORIZATION_LEVEL", "-16138")
                .d("NAME", "\"kf5ZAWcz4acfDr\"")
            .and().insertInto("USER_IDENTITY", 15473L)
                .d("DATE_CREATED", "\"2029-02-23 23:53:16\"")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"Ax_1hzkhdB3j0\"")
                .d("USER_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -4319811475921027146, " + 
                    " \"key\": \"Zk8HPhU6PI\", " + 
                    " \"value\": \"nm3Vq\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/4?" + 
                    "random=UqAFDkBoDfLd9F6&" + 
                    "featured=_EM_73477_XYZ_&" + 
                    "text=PdOeO0dVZ9&" + 
                    "id=_EM_112228_XYZ_&" + 
                    "attrs=mkk&" + 
                    "participants=_EM_73478_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_108_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_40_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_40_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 16802L)
                .d("URI", "\"Mol\"")
            .and().insertInto("TAG", 16801L)
                .d("GRP", "\"kP8IBi3\"")
                .d("NAME", "\"aeNjjZfBxLE2zp\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 16804L)
                .d("URI", "\"_EM_77999_XYZ_\"")
            .and().insertInto("TAG", 16803L)
                .d("GRP", "\"H1W5bfiTKvZ837TH\"")
                .d("NAME", "\"_EM_78000_XYZ_\"")
                .r("MEDIA_FILE_ID", 16804L)
            .and().insertInto("MEDIA_FILE", 16806L)
                .d("URI", "\"JSsdL6FezP94vQR\"")
            .and().insertInto("TAG", 16805L)
                .d("GRP", "\"_EM_78001_XYZ_\"")
                .d("NAME", "\"W2\"")
                .r("MEDIA_FILE_ID", 16802L)
            .and().insertInto("MEDIA_FILE", 16808L)
                .d("URI", "\"_EM_78002_XYZ_\"")
            .and().insertInto("TAG", 16807L)
                .d("GRP", "\"zJ0aEEF9AGX\"")
                .d("NAME", "\"oAV\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 16810L)
                .d("URI", "\"7ADt\"")
            .and().insertInto("TAG", 16809L)
                .d("GRP", "\"5MmI6phI31pjt9\"")
                .d("NAME", "\"ybVm_4nI\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 16813L)
                .d("URI", "\"PV_gbcSIoSb\"")
            .and().insertInto("TAG", 16812L)
                .d("GRP", "\"KnCa9MFljxV1\"")
                .d("NAME", "\"uyq\"")
            .and().insertInto("TAG_DERIVED", 16811L)
                .r("TAG_ID", 16805L)
                .d("ACTIVITIES_COUNT", "-1284299816")
            .and().insertInto("MEDIA_FILE", 16816L)
                .d("URI", "\"8yA4mE\"")
            .and().insertInto("TAG", 16815L)
                .d("GRP", "\"qyYAi2X4WIT5DyE\"")
                .d("NAME", "\"_EM_78003_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 16814L)
                .r("TAG_ID", 16801L)
                .d("ACTIVITIES_COUNT", "601")
            .and().insertInto("MEDIA_FILE", 16819L)
                .d("URI", "\"nM6oPtFWiiR\"")
            .and().insertInto("TAG", 16818L)
                .d("GRP", "\"AKhN7x9\"")
                .d("NAME", "\"MeiqaXvSTyXNGJ\"")
            .and().insertInto("TAG_DERIVED", 16817L)
                .r("TAG_ID", 16818L)
                .d("ACTIVITIES_COUNT", "197")
            .and().insertInto("MEDIA_FILE", 16822L)
                .d("URI", "\"h7UWlmBJGg4b\"")
            .and().insertInto("TAG", 16821L)
                .d("GRP", "\"GE7DwxfqI67no4e\"")
                .d("NAME", "\"LOcRHVqnQHtgv\"")
            .and().insertInto("TAG_DERIVED", 16820L)
                .r("TAG_ID", 16815L)
                .d("ACTIVITIES_COUNT", "300")
            .and().insertInto("MEDIA_FILE", 16825L)
                .d("URI", "\"5Mh\"")
            .and().insertInto("TAG", 16824L)
                .d("GRP", "\"_EM_78004_XYZ_\"")
                .d("NAME", "\"_EM_78005_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 16823L)
                .r("TAG_ID", 16821L)
                .d("ACTIVITIES_COUNT", "-31864")
            .and().insertInto("ACTIVITY", 16836L)
            .and().insertInto("ACTIVITY", 16742L)
            .and().insertInto("USERS", 16743L)
                .d("AUTHORIZATION_LEVEL", "-3594")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"1iK1IlLpVKZw\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 560, " + 
                    " \"uri\": \"BpGy962mXPG4FD\", " + 
                    " \"name\": \"1iK1IlLpVKZw\", " + 
                    " \"copy_right\": \"_EM_77625_XYZ_\", " + 
                    " \"author\": \"4qNC6rgLjlknIt1\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_137_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_41_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_41_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"media_file\": { " + 
                    " \"id\": 938, " + 
                    " \"mime_type\": \"_EM_3740_XYZ_\", " + 
                    " \"uri\": \"_EM_3741_XYZ_\", " + 
                    " \"copy_right\": \"yugr3yNts6y1\" " + 
                    " }, " + 
                    " \"activities_count\": 899 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/tags/755")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_42_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_42_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"08\", " + 
                    " \"uri\": \"P8sWM7HDUyu0vF\", " + 
                    " \"name\": \"At0trBR620\", " + 
                    " \"copy_right\": \"urovv\", " + 
                    " \"author\": \"3leR1\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("08"))
                .body("'uri'", containsString("P8sWM7HDUyu0vF"))
                .body("'name'", containsString("At0trBR620"))
                .body("'copy_right'", containsString("urovv"))
                .body("'author'", containsString("3leR1"));
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"ek9c\", " + 
                    " \"uri\": \"P8sWM7HDUyu0vF\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?attrs=Cuw9f2LTr3sSCTe9")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    /**
    * [test_43_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_43_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 289, " + 
                    " \"group\": \"bNRWvb\", " + 
                    " \"name\": \"_EM_3799_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"_EM_3801_XYZ_\", " + 
                    " \"name\": \"_EM_3802_XYZ_\", " + 
                    " \"copy_right\": \"_EM_3803_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 290 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/289?EMextraParam123=_EM_3805_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_44_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_44_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1779L)
            .and().insertInto("ACTIVITY", 1780L)
            .and().insertInto("ACTIVITY", 1781L)
            .and().insertInto("ACTIVITY", 1782L)
            .and().insertInto("USERS", 1785L)
                .d("AUTHORIZATION_LEVEL", "2097330")
                .d("NAME", "\"_EM_14924_XYZ_\"")
            .and().insertInto("ACTIVITY", 1784L)
            .and().insertInto("ACTIVITY_RATING", 1783L)
                .r("ACTIVITY_ID", 1782L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "451")
            .and().insertInto("USERS", 1788L)
                .d("AUTHORIZATION_LEVEL", "7800")
                .d("NAME", "\"_EM_14929_XYZ_\"")
            .and().insertInto("ACTIVITY", 1787L)
            .and().insertInto("ACTIVITY_RATING", 1786L)
                .r("ACTIVITY_ID", 1779L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "855")
            .and().insertInto("USERS", 932L)
                .d("AUTHORIZATION_LEVEL", "700")
                .d("NAME", "\"15156\"")
            .and().insertInto("ACTIVITY", 931L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_11265_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=_EM_11264_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/FavouritesResourceV1_58_lambda$put$3
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_45_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_45_with500() throws Exception {
        
        String location_tags = "";
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/3458764513820540928?verify_unused=true")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"5dEQe1H\", " + 
                    " \"name\": \"p1\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("5dEQe1H"))
                .body("'name'", containsString("p1"))
                .body("'activities_count'", numberMatches(0.0));
        location_tags = "/api/v2/tags" + "/" + res_1.extract().body().path("id").toString();
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 735, " + 
                    " \"group\": \"i_JqUa\", " + 
                    " \"name\": \"4tD\" " + 
                    " } ")
                .put(resolveLocation(location_tags, baseUrlOfSut + "/api/v2/tags/0"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("i_JqUa"))
                .body("'name'", containsString("4tD"))
                .body("'activities_count'", numberMatches(0.0));
        
    }
    
    
    /**
    * [test_46_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_46_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 15388L)
            .and().insertInto("ACTIVITY", 15389L)
            .and().insertInto("ACTIVITY", 15390L)
            .and().insertInto("ACTIVITY", 15391L)
            .and().insertInto("ACTIVITY", 15392L)
            .and().insertInto("MEDIA_FILE", 15394L)
                .d("URI", "\"_EM_72803_XYZ_\"")
            .and().insertInto("TAG", 15393L)
                .d("GRP", "\"cOIyZe2eq7o\"")
                .d("NAME", "\"via\"")
                .r("MEDIA_FILE_ID", 15394L)
            .and().insertInto("MEDIA_FILE", 15396L)
                .d("URI", "\"_EM_72804_XYZ_\"")
            .and().insertInto("TAG", 15395L)
                .d("GRP", "\"2IDXI\"")
                .d("NAME", "\"j6qGZ\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 15398L)
                .d("URI", "\"CkA<x1p8vqBOz\"")
            .and().insertInto("TAG", 15397L)
                .d("GRP", "\"_EM_72805_XYZ_\"")
                .d("NAME", "\"zi8pet_IT0UZ\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 15400L)
                .d("URI", "\"USER0_\"")
            .and().insertInto("TAG", 15399L)
                .d("GRP", "\"_EM_72807_XYZ_\"")
                .d("NAME", "\"1U\"")
                .r("MEDIA_FILE_ID", 15394L)
            .and().insertInto("MEDIA_FILE", 15402L)
                .d("URI", "\"hl7kfFn\"")
            .and().insertInto("TAG", 15401L)
                .d("GRP", "\"_EM_72808_XYZ_\"")
                .d("NAME", "\"AOjABT\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("SYSTEM_MESSAGE", 15403L)
                .d("KEY", "\"_EM_72809_XYZ_\"")
                .d("VALID_FROM", "\"1972-05-13 12:22:02\"")
                .d("VALID_TO", "\"1968-09-21 09:09:04\"")
                .d("VALUE", "\"\"")
            .and().insertInto("SYSTEM_MESSAGE", 15404L)
                .d("KEY", "\"_EM_72810_XYZ_\"")
                .d("VALID_FROM", "\"1968-08-05 22:04:06\"")
                .d("VALID_TO", "\"2071-09-21 19:05:46\"")
                .d("VALUE", "\"CREATE SEQUENCE PUBLIC.SYSTEM_SEQUENCE_214B3038_E020_4E59_9410_25C69D254682 START WITH 33 BELONGS_TO_TABLE\"")
            .and().insertInto("SYSTEM_MESSAGE", 15405L)
                .d("KEY", "\"587388\"")
                .d("VALID_FROM", "\"1953-01-24 05:33:40\"")
                .d("VALID_TO", "\"2012-07-25 22:16:37\"")
                .d("VALUE", "\"grgh8_9e_I4C\"")
            .and().insertInto("SYSTEM_MESSAGE", 15406L)
                .d("KEY", "\"G315rj3Ba\"")
                .d("VALID_FROM", "\"2081-04-04 23:59:40\"")
                .d("VALID_TO", "\"2076-09-09 23:28:36\"")
                .d("VALUE", "\"_EM_73547_XYZ_\"")
            .and().insertInto("USERS", 15501L)
                .d("AUTHORIZATION_LEVEL", "357")
                .d("NAME", "\"8rC5d5iX4OkYMY\"")
            .and().insertInto("ACTIVITY", 15500L)
            .and().insertInto("ACTIVITY", 15499L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15498L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-2147482898")
                .d("DATE_CREATED", "\"2067-04-19 01:02:10\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1990-04-17 12:30:01\"")
                .d("DESCRIPTION_INTRODUCTION", "\"Y6eqHBBBQ_\"")
                .d("DESCRIPTION_MAIN", "\"ybjv9\"")
                .d("DESCRIPTION_MATERIAL", "\"3FUM_QkZY\"")
                .d("DESCRIPTION_NOTES", "\"yEF\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "192")
                .d("PARTICIPANTS_MIN", "958")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "700")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 15391L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 15505L)
                .d("AUTHORIZATION_LEVEL", "424")
                .d("NAME", "\"pRC5_DCyhIBGW0_H\"")
            .and().insertInto("ACTIVITY", 15504L)
            .and().insertInto("ACTIVITY", 15503L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15502L)
                .d("AGE_MAX", "-2147483255")
                .d("AGE_MIN", "-2147482985")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"1905-10-21 20:41:41\"")
                .d("DATE_UPDATED", "\"2097-07-19 02:43:04\"")
                .d("DESCRIPTION_INTRODUCTION", "\"iCf3wZ\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "\"0Zfs1U2FPbq\"")
                .d("FEATURED", "NULL")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "301")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "666")
                .r("ACTIVITY_ID", 15504L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 15389L)
            .and().insertInto("USERS", 15509L)
                .d("AUTHORIZATION_LEVEL", "744")
                .d("NAME", "\"CZwhfCOiuSzGdT\"")
            .and().insertInto("ACTIVITY", 15508L)
            .and().insertInto("ACTIVITY", 15507L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15506L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"2000-06-10 20:40:01\"")
                .d("DESCRIPTION_INTRODUCTION", "\"gbeJwfAgdIo\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"IaEIvv494I5\"")
                .d("DESCRIPTION_NOTES", "\"gnRlKSno1\"")
                .d("DESCRIPTION_PREPARE", "\"V9DR4\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "false")
                .d("NAME", "\"PvxKdFJ\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "485")
                .d("TIME_MIN", "286")
                .r("ACTIVITY_ID", 15508L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 15392L)
            .and().insertInto("USERS", 15513L)
                .d("AUTHORIZATION_LEVEL", "445")
                .d("NAME", "\"NEoYuZ63jsh6LsoH\"")
            .and().insertInto("ACTIVITY", 15512L)
            .and().insertInto("ACTIVITY", 15511L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15510L)
                .d("AGE_MAX", "-605")
                .d("AGE_MIN", "-2147483345")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"2055-12-18 04:37:19\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"NGswOlWJSAE9dcz\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"Foy5I3\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "298")
                .d("PARTICIPANTS_MIN", "291")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 15390L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 15499L)
            .and().insertInto("USERS", 15517L)
                .d("AUTHORIZATION_LEVEL", "159")
                .d("NAME", "\"6M\"")
            .and().insertInto("ACTIVITY", 15516L)
            .and().insertInto("ACTIVITY", 15515L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15514L)
                .d("AGE_MAX", "38")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1998-09-30 19:58:00\"")
                .d("DESCRIPTION_INTRODUCTION", "\"_Olrr2\"")
                .d("DESCRIPTION_MAIN", "\"p3Uvsc9\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"dgoTjf_D4oVE\"")
                .d("DESCRIPTION_PREPARE", "\"4II\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "\"f\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "514")
                .d("SOURCE", "\"2gbxpwc8mBAb\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 15391L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 15508L)
            .and().insertInto("MEDIA_FILE", 15519L)
                .d("URI", "\"z6a_RkGthTeOsXx\"")
            .and().insertInto("MEDIA_FILE_KEYWORDS", 15518L)
                .r("MEDIA_FILE_ID", 15400L)
                .d("KEYWORD", "\"8AzimCtE72gpWInR\"")
            .and().insertInto("MEDIA_FILE", 15525L)
                .d("URI", "\"NP8H7XBqhTg9m\"")
            .and().insertInto("USERS", 15524L)
                .d("AUTHORIZATION_LEVEL", "615")
                .d("NAME", "\"5e8hN\"")
            .and().insertInto("ACTIVITY", 15523L)
            .and().insertInto("ACTIVITY", 15522L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15521L)
                .r("ACTIVITY_ID", 15388L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 15520L)
                .r("ACTIVITY_PROPERTIES_ID", 15506L)
                .r("MEDIA_FILE_ID", 15394L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 15531L)
                .d("URI", "\"4fBrW35AHtV\"")
            .and().insertInto("USERS", 15530L)
                .d("AUTHORIZATION_LEVEL", "217")
                .d("NAME", "\"VUO\"")
            .and().insertInto("ACTIVITY", 15529L)
            .and().insertInto("ACTIVITY", 15528L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15527L)
                .r("ACTIVITY_ID", 15512L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 15526L)
                .r("ACTIVITY_PROPERTIES_ID", 15502L)
                .r("MEDIA_FILE_ID", 15396L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 15537L)
                .d("URI", "\"eUD1hjLr_Xee5kU\"")
            .and().insertInto("USERS", 15536L)
                .d("AUTHORIZATION_LEVEL", "659")
                .d("NAME", "\"oU_pl5gOZhXwc\"")
            .and().insertInto("ACTIVITY", 15535L)
            .and().insertInto("ACTIVITY", 15534L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15533L)
                .r("ACTIVITY_ID", 15391L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 15532L)
                .r("ACTIVITY_PROPERTIES_ID", 15514L)
                .r("MEDIA_FILE_ID", 15400L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 15566L)
                .d("AUTHORIZATION_LEVEL", "157")
                .d("NAME", "\"8qit\"")
            .and().insertInto("ACTIVITY", 15565L)
            .and().insertInto("ACTIVITY", 15564L)
            .and().insertInto("ACTIVITY_RELATION", 15563L)
                .r("ACTIVITY_1_ID", 15528L)
                .r("ACTIVITY_2_ID", 15535L)
                .r("OWNER_ID", 15566L)
            .and().insertInto("USERS", 15570L)
                .d("AUTHORIZATION_LEVEL", "550")
                .d("NAME", "\"lvaGQf8mF0CDfw\"")
            .and().insertInto("ACTIVITY", 15569L)
            .and().insertInto("ACTIVITY", 15568L)
            .and().insertInto("ACTIVITY_RELATION", 15567L)
                .r("ACTIVITY_1_ID", 15507L)
                .r("ACTIVITY_2_ID", 15515L)
                .r("OWNER_ID", 15570L)
            .and().insertInto("USERS", 15574L)
                .d("AUTHORIZATION_LEVEL", "873")
                .d("NAME", "\"z\"")
            .and().insertInto("ACTIVITY", 15573L)
            .and().insertInto("ACTIVITY", 15572L)
            .and().insertInto("ACTIVITY_RELATION", 15571L)
                .r("ACTIVITY_1_ID", 15388L)
                .r("ACTIVITY_2_ID", 15508L)
                .r("OWNER_ID", 15570L)
            .and().insertInto("USERS", 15578L)
                .d("AUTHORIZATION_LEVEL", "859")
                .d("NAME", "\"8\"")
            .and().insertInto("ACTIVITY", 15577L)
            .and().insertInto("ACTIVITY", 15576L)
            .and().insertInto("ACTIVITY_RELATION", 15575L)
                .r("ACTIVITY_1_ID", 15388L)
                .r("ACTIVITY_2_ID", 15504L)
                .r("OWNER_ID", 15509L)
            .and().insertInto("USERS", 15582L)
                .d("AUTHORIZATION_LEVEL", "922")
                .d("NAME", "\"ablZ2iS6BvpPNFHo\"")
            .and().insertInto("ACTIVITY", 15581L)
            .and().insertInto("ACTIVITY", 15580L)
            .and().insertInto("ACTIVITY_RELATION", 15579L)
                .r("ACTIVITY_1_ID", 15500L)
                .r("ACTIVITY_2_ID", 15522L)
                .r("OWNER_ID", 15530L)
            .and().insertInto("MEDIA_FILE", 15589L)
                .d("URI", "\"m0fd8\"")
            .and().insertInto("TAG", 15588L)
                .d("GRP", "\"k5gY\"")
                .d("NAME", "\"6RzpAn\"")
            .and().insertInto("USERS", 15587L)
                .d("AUTHORIZATION_LEVEL", "1443122075")
                .d("NAME", "\"3w\"")
            .and().insertInto("ACTIVITY", 15586L)
            .and().insertInto("ACTIVITY", 15585L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15584L)
                .r("ACTIVITY_ID", 15534L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 15583L)
                .r("ACTIVITY_PROPERTIES_ID", 15506L)
                .r("TAG_ID", 15588L)
            .and().insertInto("MEDIA_FILE", 15596L)
                .d("URI", "\"q9qaLzw\"")
            .and().insertInto("TAG", 15595L)
                .d("GRP", "\"1KMn\"")
                .d("NAME", "\"r4HJaYXUEz\"")
            .and().insertInto("USERS", 15594L)
                .d("AUTHORIZATION_LEVEL", "562")
                .d("NAME", "\"Gr2J2\"")
            .and().insertInto("ACTIVITY", 15593L)
            .and().insertInto("ACTIVITY", 15592L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15591L)
                .r("ACTIVITY_ID", 15499L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 15590L)
                .r("ACTIVITY_PROPERTIES_ID", 15527L)
                .r("TAG_ID", 15397L)
            .and().insertInto("MEDIA_FILE", 15603L)
                .d("URI", "\"oUaTPEe\"")
            .and().insertInto("TAG", 15602L)
                .d("GRP", "\"J0F_C\"")
                .d("NAME", "\"sgMypQ\"")
            .and().insertInto("USERS", 15601L)
                .d("AUTHORIZATION_LEVEL", "814")
                .d("NAME", "\"tMs_6vN\"")
            .and().insertInto("ACTIVITY", 15600L)
            .and().insertInto("ACTIVITY", 15599L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15598L)
                .r("ACTIVITY_ID", 15581L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 15597L)
                .r("ACTIVITY_PROPERTIES_ID", 15498L)
                .r("TAG_ID", 15588L)
            .and().insertInto("MEDIA_FILE", 15610L)
                .d("URI", "\"0YtwB_f\"")
            .and().insertInto("TAG", 15609L)
                .d("GRP", "\"csb5L78Pgl9td\"")
                .d("NAME", "\"s95\"")
            .and().insertInto("USERS", 15608L)
                .d("AUTHORIZATION_LEVEL", "279")
                .d("NAME", "\"T7Q2biPb\"")
            .and().insertInto("ACTIVITY", 15607L)
            .and().insertInto("ACTIVITY", 15606L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15605L)
                .r("ACTIVITY_ID", 15535L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 15604L)
                .r("ACTIVITY_PROPERTIES_ID", 15605L)
                .r("TAG_ID", 15393L)
            .and().insertInto("ACTIVITY", 15000L)
            .and().insertInto("SYSTEM_MESSAGE", 15001L)
                .d("KEY", "\"_EM_70905_XYZ_\"")
                .d("VALID_FROM", "\"2010-05-30 17:02:28\"")
                .d("VALID_TO", "\"1967-03-28 05:36:16\"")
                .d("VALUE", "\"_EM_72814_XYZ_\"")
            .and().insertInto("USERS", 15003L)
                .d("AUTHORIZATION_LEVEL", "-261594")
                .d("NAME", "\"_EM_70907_XYZ_\"")
            .and().insertInto("USER_IDENTITY", 15002L)
                .d("DATE_CREATED", "\"1972-12-02 15:21:05\"")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"wp7hbFx4G7AjIW\"")
                .d("USER_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 15005L)
                .d("URI", "\"_EM_70911_XYZ_\"")
            .and().insertInto("TAG", 15004L)
                .d("GRP", "\"_EM_72815_XYZ_\"")
                .d("NAME", "\"_EM_70913_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/tags/4?attrs=_EM_73546_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_54_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_47_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_47_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3528L)
                .d("AUTHOR", "\"1Y7U\"")
                .d("CAPTURE_DATE", "\"1961-06-01 17:54:21\"")
                .d("COPY_RIGHT", "\"_EM_24094_XYZ_\"")
                .d("MIME_TYPE", "\"yuA\"")
                .d("NAME", "\"_EM_21441_XYZ_\"")
                .d("URI", "\"lci0MqG\"")
            .and().insertInto("MEDIA_FILE", 3529L)
                .d("AUTHOR", "\"HA\"")
                .d("CAPTURE_DATE", "\"1956-05-26 15:18:55\"")
                .d("COPY_RIGHT", "\"_EM_24095_XYZ_\"")
                .d("MIME_TYPE", "\"xeq\"")
                .d("NAME", "\"_EM_21442_XYZ_\"")
                .d("URI", "\"_EM_24096_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_16878_XYZ_\", " + 
                    " \"uri\": \"data:text/plain,TXhxWmJZ\", " + 
                    " \"name\": \"_EM_24093_XYZ_\", " + 
                    " \"copy_right\": \"_EM_16881_XYZ_\", " + 
                    " \"author\": \"_EM_16882_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_48_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_48_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3528L)
                .d("AUTHOR", "\"_EM_41401_XYZ_\"")
                .d("CAPTURE_DATE", "\"1961-06-01 17:54:21\"")
                .d("COPY_RIGHT", "\"cWeMwsdd\"")
                .d("MIME_TYPE", "\"_EM_41402_XYZ_\"")
                .d("NAME", "\"_EM_21441_XYZ_\"")
                .d("URI", "\"_EM_41403_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 3529L)
                .d("AUTHOR", "\"_EM_41404_XYZ_\"")
                .d("CAPTURE_DATE", "\"1956-05-26 15:29:55\"")
                .d("COPY_RIGHT", "\"84571\"")
                .d("MIME_TYPE", "\"xeq\"")
                .d("NAME", "NULL")
                .d("URI", "\"OU_Z4\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -32182, " + 
                    " \"mime_type\": \"_EM_41400_XYZ_\", " + 
                    " \"uri\": \"data:;base64,X0VNXzQxMzk3X1hZWl8\u003d\", " + 
                    " \"name\": \"AGE_MIN\", " + 
                    " \"author\": \"_EM_16882_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_49_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_49_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3528L)
                .d("AUTHOR", "\"1Y7U\"")
                .d("CAPTURE_DATE", "\"1961-06-01 17:54:21\"")
                .d("COPY_RIGHT", "\"BeHjMCJ31eTNQt\"")
                .d("MIME_TYPE", "\"yuA\"")
                .d("NAME", "\"_EM_21441_XYZ_\"")
                .d("URI", "\"lci0MqG\"")
            .and().insertInto("MEDIA_FILE", 3529L)
                .d("AUTHOR", "\"HA\"")
                .d("CAPTURE_DATE", "\"1924-01-26 15:18:55\"")
                .d("COPY_RIGHT", "\"T9qdOHVRfw\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"_EM_21442_XYZ_\"")
                .d("URI", "\"_EM_21443_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"_EM_16879_XYZ_\", " + 
                    " \"name\": \"_EM_16880_XYZ_\", " + 
                    " \"copy_right\": \"_EM_16881_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("_EM_16879_XYZ_"))
                .body("'name'", containsString("_EM_16880_XYZ_"))
                .body("'copy_right'", containsString("_EM_16881_XYZ_"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/-32174/file?size=538&EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_268_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_50_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_50_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"WL__13JP\", " + 
                    " \"uri\": \"PILy3Mz\", " + 
                    " \"name\": \"RO8QWSQt\", " + 
                    " \"copy_right\": \"LXc\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("WL__13JP"))
                .body("'uri'", containsString("PILy3Mz"))
                .body("'name'", containsString("RO8QWSQt"))
                .body("'copy_right'", containsString("LXc"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"copy_right\": \"J_lOcggzbgkM1fl\", " + 
                    " \"author\": \"G\" " + 
                    " } ")
                .put(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/-162"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/MediaFile_134_setUri
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/-162")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_51_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_51_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3528L)
                .d("AUTHOR", "\"_EM_41401_XYZ_\"")
                .d("CAPTURE_DATE", "\"1967-05-03 13:54:55\"")
                .d("COPY_RIGHT", "\"cWeMwsddr\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_41403_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 3529L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2000-06-26 11:30:29\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_41442_XYZ_\"")
                .d("NAME", "\"-7\"")
                .d("URI", "\"OU_Z4\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 0, " + 
                    " \"mime_type\": \"_EM_41440_XYZ_\", " + 
                    " \"uri\": \"http://88.91.35.100/sXNX8sa6_OROd1P/4oi2WdssW\", " + 
                    " \"name\": \"63285\", " + 
                    " \"author\": \"TdraKBmHiuETyA\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("_EM_41440_XYZ_"))
                .body("'uri'", containsString("http://88.91.35.100/sXNX8sa6_OROd1P/4oi2WdssW"))
                .body("'name'", containsString("63285"))
                .body("'author'", containsString("TdraKBmHiuETyA"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/0/file?size=538"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_279_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
    }
    
    
    /**
    * [test_52_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_52_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_tags = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"U9NAGIYAdUb_ZRS9\", " + 
                    " \"name\": \"Inb\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("U9NAGIYAdUb_ZRS9"))
                .body("'name'", containsString("Inb"))
                .body("'activities_count'", numberMatches(0.0));
        location_tags = "/api/v2/tags" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"jbF6Oc3\", " + 
                    " \"media_file\": {}, " + 
                    " \"activities_count\": 560 " + 
                    " } ")
                .put(resolveLocation(location_tags, baseUrlOfSut + "/api/v2/tags/1?my_favourites=SpyYG9Gr2Lmlh6T&ratings_count_min=0Pwoh164Ip_&time_1=3Xgq3hczQ71Ga4gn&age_2=&ratings_average_min=Hq9UrMt&id=WHSTN3J&attrs=6bujpSeF5GoI"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_89_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "name=9HnDe6HFfjN&" + 
                    "group=kdwh1pHRiUdEWb6Q&" + 
                    "text=fBKS&" + 
                    "id=1")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    /**
    * [test_53_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_53_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 408L)
            .and().insertInto("ACTIVITY", 409L)
            .and().insertInto("ACTIVITY", 410L)
            .and().insertInto("ACTIVITY", 411L)
            .and().insertInto("USERS", 8521L)
                .d("AUTHORIZATION_LEVEL", "790")
                .d("NAME", "\"3\"")
            .and().insertInto("ACTIVITY", 8520L)
            .and().insertInto("ACTIVITY", 8519L)
            .and().insertInto("ACTIVITY_RELATION", 8518L)
                .r("ACTIVITY_1_ID", 411L)
                .r("ACTIVITY_2_ID", 8520L)
                .d("OWNER_ID", "3")
            .and().insertInto("USERS", 8525L)
                .d("AUTHORIZATION_LEVEL", "769")
                .d("NAME", "\"x3MHljqd6XrnrwZz\"")
            .and().insertInto("ACTIVITY", 8524L)
            .and().insertInto("ACTIVITY", 8523L)
            .and().insertInto("ACTIVITY_RELATION", 8522L)
                .r("ACTIVITY_1_ID", 8523L)
                .r("ACTIVITY_2_ID", 8520L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 8529L)
                .d("AUTHORIZATION_LEVEL", "575")
                .d("NAME", "\"C?Fs69diCT\"")
            .and().insertInto("ACTIVITY", 8528L)
            .and().insertInto("ACTIVITY", 8527L)
            .and().insertInto("ACTIVITY_RELATION", 8526L)
                .r("ACTIVITY_1_ID", 8523L)
                .r("ACTIVITY_2_ID", 410L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 8533L)
                .d("AUTHORIZATION_LEVEL", "29")
                .d("NAME", "\"zOO8\"")
            .and().insertInto("ACTIVITY", 8532L)
            .and().insertInto("ACTIVITY", 8531L)
            .and().insertInto("ACTIVITY_RELATION", 8530L)
                .r("ACTIVITY_1_ID", 8528L)
                .r("ACTIVITY_2_ID", 8531L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 8537L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"J0WvnyQTO2wihZ76\"")
            .and().insertInto("ACTIVITY", 8536L)
            .and().insertInto("ACTIVITY", 8535L)
            .and().insertInto("ACTIVITY_RELATION", 8534L)
                .r("ACTIVITY_1_ID", 408L)
                .r("ACTIVITY_2_ID", 8536L)
                .r("OWNER_ID", 8529L)
            .and().insertInto("USERS", 54933L)
                .d("AUTHORIZATION_LEVEL", "701")
                .d("NAME", "\"tXLIOirCJKp\"")
            .and().insertInto("ACTIVITY", 54932L)
            .and().insertInto("ACTIVITY", 54931L)
            .and().insertInto("ACTIVITY_PROPERTIES", 54930L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-706")
                .d("DATE_CREATED", "\"2038-10-28 05:34:28\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"1WDkgYZ8DCE\"")
                .d("DESCRIPTION_MAIN", "\"FPsXwHC2\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"Ay0AQH6ORf6oJC\"")
                .d("DESCRIPTION_PREPARE", "\"X831QUtkuQ\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "\"9QNpvVBbXGzyv2\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"fVa1p72eZeo\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 8531L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 54937L)
                .d("AUTHORIZATION_LEVEL", "-20226812")
                .d("NAME", "\"rOu\"")
            .and().insertInto("ACTIVITY", 54936L)
            .and().insertInto("ACTIVITY", 54935L)
            .and().insertInto("ACTIVITY_PROPERTIES", 54934L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-2147483444")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"1902-05-05 23:25:35\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"cvyt1lVKI79P9xbt\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"SSZZ0g5Abtp\"")
                .d("DESCRIPTION_PREPARE", "\"WWw6aVAcp9fvKtK\"")
                .d("DESCRIPTION_SAFETY", "\"p8gK_Tb1oYF8a\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"A2e_59eAlK\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "661")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 54932L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 8532L)
            .and().insertInto("USERS", 54941L)
                .d("AUTHORIZATION_LEVEL", "785")
                .d("NAME", "\"aomOD4l\"")
            .and().insertInto("ACTIVITY", 54940L)
            .and().insertInto("ACTIVITY", 54939L)
            .and().insertInto("ACTIVITY_PROPERTIES", 54938L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-2147483270")
                .d("DATE_CREATED", "\"2038-12-07 02:37:09\"")
                .d("DATE_PUBLISHED", "\"1984-03-09 11:55:38\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"\"")
                .d("DESCRIPTION_MAIN", "\"0akrU4x0_5yIWQB\"")
                .d("DESCRIPTION_MATERIAL", "\"FnnJ4dtcwYIKQFfv\"")
                .d("DESCRIPTION_NOTES", "\"OI5TWFC_sy1Qd\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"wOQPt4npYMh6\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"BqrabPlbhEY11S\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "648")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 8536L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 408L)
            .and().insertInto("USERS", 54945L)
                .d("AUTHORIZATION_LEVEL", "206")
                .d("NAME", "\"BXIDqLYuqq3AE\"")
            .and().insertInto("ACTIVITY", 54944L)
            .and().insertInto("ACTIVITY", 54943L)
            .and().insertInto("ACTIVITY_PROPERTIES", 54942L)
                .d("AGE_MAX", "-2147483298")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"1983-07-26 20:24:57\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"Ugv_CiO4\"")
                .d("DESCRIPTION_MAIN", "\"NBqX9RCnwo\"")
                .d("DESCRIPTION_MATERIAL", "\"6tt7mhxxqF8iC\"")
                .d("DESCRIPTION_NOTES", "\"0sg2\"")
                .d("DESCRIPTION_PREPARE", "\"GdfYNAgd_U3L\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"PDAbSQ31X\"")
                .d("TIME_MAX", "872")
                .d("TIME_MIN", "84")
                .r("ACTIVITY_ID", 409L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 8519L)
            .and().insertInto("MEDIA_FILE", 55510L)
                .d("URI", "\"Ew7i3C0h\"")
            .and().insertInto("USERS", 55509L)
                .d("AUTHORIZATION_LEVEL", "191")
                .d("NAME", "\"4dAuFG_JkTFuyeX\"")
            .and().insertInto("ACTIVITY", 55508L)
            .and().insertInto("ACTIVITY", 55507L)
            .and().insertInto("ACTIVITY_PROPERTIES", 55506L)
                .r("ACTIVITY_ID", 409L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 55505L)
                .r("ACTIVITY_PROPERTIES_ID", 54934L)
                .r("MEDIA_FILE_ID", 55510L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 55516L)
                .d("URI", "\"spr45IvUOeO\"")
            .and().insertInto("USERS", 55515L)
                .d("AUTHORIZATION_LEVEL", "995")
                .d("NAME", "\"hf5\"")
            .and().insertInto("ACTIVITY", 55514L)
            .and().insertInto("ACTIVITY", 55513L)
            .and().insertInto("ACTIVITY_PROPERTIES", 55512L)
                .r("ACTIVITY_ID", 54939L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 55511L)
                .r("ACTIVITY_PROPERTIES_ID", 54942L)
                .r("MEDIA_FILE_ID", 55510L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 55522L)
                .d("URI", "\"iU6s4fhz_AG\"")
            .and().insertInto("USERS", 55521L)
                .d("AUTHORIZATION_LEVEL", "364")
                .d("NAME", "\"IMD8kDQan6Xl\"")
            .and().insertInto("ACTIVITY", 55520L)
            .and().insertInto("ACTIVITY", 55519L)
            .and().insertInto("ACTIVITY_PROPERTIES", 55518L)
                .r("ACTIVITY_ID", 8527L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 55517L)
                .r("ACTIVITY_PROPERTIES_ID", 55506L)
                .r("MEDIA_FILE_ID", 55522L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 55529L)
                .d("URI", "\"ACMYF\"")
            .and().insertInto("TAG", 55528L)
                .d("GRP", "\"C2C\"")
                .d("NAME", "\"Tl\"")
            .and().insertInto("USERS", 55527L)
                .d("AUTHORIZATION_LEVEL", "758")
                .d("NAME", "\"qv\"")
            .and().insertInto("ACTIVITY", 55526L)
            .and().insertInto("ACTIVITY", 55525L)
            .and().insertInto("ACTIVITY_PROPERTIES", 55524L)
                .r("ACTIVITY_ID", 55508L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 55523L)
                .r("ACTIVITY_PROPERTIES_ID", 55524L)
                .r("TAG_ID", 55528L)
            .and().insertInto("MEDIA_FILE", 55536L)
                .d("URI", "\"ItFyZuC\"")
            .and().insertInto("TAG", 55535L)
                .d("GRP", "\"yCXmgWsZB8Qp3\"")
                .d("NAME", "\"pIVjWYl0WRur\"")
            .and().insertInto("USERS", 55534L)
                .d("AUTHORIZATION_LEVEL", "596")
                .d("NAME", "\"L0dW\"")
            .and().insertInto("ACTIVITY", 55533L)
            .and().insertInto("ACTIVITY", 55532L)
            .and().insertInto("ACTIVITY_PROPERTIES", 55531L)
                .r("ACTIVITY_ID", 55508L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 55530L)
                .r("ACTIVITY_PROPERTIES_ID", 54930L)
                .r("TAG_ID", 55535L)
            .and().insertInto("MEDIA_FILE", 55543L)
                .d("URI", "\"9ys8I499L\"")
            .and().insertInto("TAG", 55542L)
                .d("GRP", "\"9k6wq9\"")
                .d("NAME", "\"bOXJ6JR42z62v\"")
            .and().insertInto("USERS", 55541L)
                .d("AUTHORIZATION_LEVEL", "224")
                .d("NAME", "\"q7vn7BBiCNy\"")
            .and().insertInto("ACTIVITY", 55540L)
            .and().insertInto("ACTIVITY", 55539L)
            .and().insertInto("ACTIVITY_PROPERTIES", 55538L)
                .r("ACTIVITY_ID", 8523L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 55537L)
                .r("ACTIVITY_PROPERTIES_ID", 55531L)
                .r("TAG_ID", 55528L)
            .and().insertInto("ACTIVITY", 55545L)
            .and().insertInto("ACTIVITY_DERIVED", 55544L)
                .r("ACTIVITY_ID", 8519L)
                .d("FAVOURITES_COUNT", "197")
                .d("RATINGS_AVG", "0.8839933391843547")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("ACTIVITY", 55547L)
            .and().insertInto("ACTIVITY_DERIVED", 55546L)
                .r("ACTIVITY_ID", 410L)
                .d("FAVOURITES_COUNT", "275")
                .d("RATINGS_AVG", "0.6109108702015147")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "398")
            .and().insertInto("ACTIVITY", 55549L)
            .and().insertInto("ACTIVITY_DERIVED", 55548L)
                .r("ACTIVITY_ID", 408L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "0.10486594330579979")
                .d("RATINGS_COUNT", "346")
                .d("RATINGS_SUM", "650648456")
            .and().insertInto("ACTIVITY", 55551L)
            .and().insertInto("ACTIVITY_DERIVED", 55550L)
                .r("ACTIVITY_ID", 8532L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "4972159583573155797")
                .d("RATINGS_SUM", "726")
            .and().insertInto("ACTIVITY", 55553L)
            .and().insertInto("ACTIVITY_DERIVED", 55552L)
                .r("ACTIVITY_ID", 54943L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("USERS", 55751L)
                .d("AUTHORIZATION_LEVEL", "406")
                .d("NAME", "\"cMZQT\"")
            .and().insertInto("ACTIVITY", 55750L)
            .and().insertInto("ACTIVITY_RATING", 55749L)
                .r("ACTIVITY_ID", 54932L)
                .r("USER_ID", 55515L)
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/2")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_104_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_54_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_54_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 128L)
            .and().insertInto("MEDIA_FILE", 6191L)
                .d("URI", "\"3s\"")
            .and().insertInto("TAG", 6190L)
                .d("GRP", "\"C0CJ6_lEid\"")
                .d("NAME", "\"VU\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_categories = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"3bJMdTC\", " + 
                    " \"uri\": \"tS5i\", " + 
                    " \"copy_right\": \"vO\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString(""))
                .body("'name'", containsString(""))
                .body("'media_file'.'mime_type'", containsString("3bJMdTC"))
                .body("'media_file'.'uri'", containsString("tS5i"))
                .body("'media_file'.'copy_right'", containsString("vO"))
                .body("'activities_count'", numberMatches(0.0));
        location_categories = "/api/v1/categories" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"\" " + 
                    " } ")
                .put(resolveLocation(location_categories, baseUrlOfSut + "/api/v1/categories/-2096555?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_83_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/activities/892")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    /**
    * [test_55_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_55_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"\", " + 
                    " \"description_introduction\": \"OJurT\", " + 
                    " \"description_prepare\": \"4h209wgqDbICNRu\", " + 
                    " \"description_notes\": \"03Aqk67V8E\", " + 
                    " \"age_min\": 0, " + 
                    " \"featured\": true, " + 
                    " \"author\": { " + 
                    " \"id\": 229, " + 
                    " \"name\": \"V\", " + 
                    " \"email_address\": \"RgLZTsWlfpwklfhP\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_56_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_56_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 220, " + 
                    " \"description_material\": \"aUS6rtOZLpZCcAKU\", " + 
                    " \"description_prepare\": \"7X27vjEFx5rVt4\", " + 
                    " \"description_main\": \"L\", " + 
                    " \"description_notes\": \"hovUTn\", " + 
                    " \"age_min\": -2147483025, " + 
                    " \"time_min\": 687, " + 
                    " \"time_max\": 777, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.8982703258891533 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_114_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_57_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_57_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 895, " + 
                    " \"name\": \"dElK\", " + 
                    " \"description_material\": \"_EM_3557_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_3558_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_3559_XYZ_\", " + 
                    " \"participants_min\": 454, " + 
                    " \"time_min\": 423, " + 
                    " \"time_max\": 394, " + 
                    " \"source\": \"_EM_3561_XYZ_\", " + 
                    " \"activity\": { " + 
                    " \"id\": 285, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_sum\": 725, " + 
                    " \"ratings_average\": 0.3816325195057426 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_113_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_58_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_58_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3528L)
                .d("AUTHOR", "\"_EM_42067_XYZ_\"")
                .d("CAPTURE_DATE", "\"1961-06-01 17:54:00\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"yuA\"")
                .d("NAME", "\"_EM_21441_XYZ_\"")
                .d("URI", "\"_EM_42068_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 3529L)
                .d("AUTHOR", "\"_EM_24265_XYZ_\"")
                .d("CAPTURE_DATE", "\"1956-05-26 15:18:55\"")
                .d("COPY_RIGHT", "\"84571\"")
                .d("MIME_TYPE", "\"xeq\"")
                .d("NAME", "NULL")
                .d("URI", "\"\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"Ec5kRd\", " + 
                    " \"description_prepare\": \"yfS\", " + 
                    " \"description_notes\": \"ECxwh5sZij9Auk2\", " + 
                    " \"participants_min\": 787, " + 
                    " \"participants_max\": 303, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"7p1wigjTVHdhmdY\", " + 
                    " \"author\": { " + 
                    " \"id\": 963, " + 
                    " \"authorization_level\": 358 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"ratings_count\": 611, " + 
                    " \"ratings_sum\": 216, " + 
                    " \"favourites_count\": 360 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_59_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_59_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -7986210356232656983, " + 
                    " \"description_safety\": \"f6y8inHIkYU\", " + 
                    " \"age_min\": -588, " + 
                    " \"age_max\": -356, " + 
                    " \"participants_min\": 925, " + 
                    " \"participants_max\": 353, " + 
                    " \"time_max\": 82, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 835, " + 
                    " \"author\": \"d84j3Sy\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_211_lambda$initMediaFiles$8
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_60_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_60_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 16285L)
                .d("KEY", "\"_EM_76899_XYZ_\"")
                .d("VALID_FROM", "\"1935-01-30 07:41:19\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"3kMtoiQDewGcDU\"")
            .and().insertInto("SYSTEM_MESSAGE", 16286L)
                .d("KEY", "\"_EM_76900_XYZ_\"")
                .d("VALID_FROM", "\"1912-08-12 02:54:28\"")
                .d("VALID_TO", "\"1904-02-05 23:03:03\"")
                .d("VALUE", "\"_EM_76901_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 16287L)
                .d("KEY", "\"sEVJts\"")
                .d("VALID_FROM", "\"2037-04-23 19:10:37\"")
                .d("VALID_TO", "\"1917-07-16 17:39:29\"")
                .d("VALUE", "\"_EM_76902_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 16288L)
                .d("KEY", "\"UEMU764U3_XYZ_\"")
                .d("VALID_FROM", "\"1921-12-02 04:34:27\"")
                .d("VALID_TO", "\"2032-05-24 10:23:40\"")
                .d("VALUE", "\"_EM_76903_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 16289L)
                .d("KEY", "\"QqU\"")
                .d("VALID_FROM", "\"1940-04-24 09:25:00\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"ZUPR3\"")
            .and().insertInto("ACTIVITY", 16506L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"zsiYyShdv6Xxu3Oj\", " + 
                    " \"copy_right\": \"qUoXIrV7\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_introduction\": \"kxRw4rvbBAH\", " + 
                    " \"description_main\": \"Tav2eGBXhuS_qdfM\", " + 
                    " \"description_safety\": \"Z2ET5y2ZlHBK9W\", " + 
                    " \"description_notes\": \"TVEAsvKSSH\", " + 
                    " \"source\": \"JVMG\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T20:55:07.284Z"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("kxRw4rvbBAH"))
                .body("'properties_revisions'[0].'description_main'", containsString("Tav2eGBXhuS_qdfM"))
                .body("'properties_revisions'[0].'description_safety'", containsString("Z2ET5y2ZlHBK9W"))
                .body("'properties_revisions'[0].'description_notes'", containsString("TVEAsvKSSH"))
                .body("'properties_revisions'[0].'source'", containsString("JVMG"))
                .body("'properties'.'date_created'", containsString("2024-05-30T20:55:07.284Z"))
                .body("'properties'.'description_introduction'", containsString("kxRw4rvbBAH"))
                .body("'properties'.'description_main'", containsString("Tav2eGBXhuS_qdfM"))
                .body("'properties'.'description_safety'", containsString("Z2ET5y2ZlHBK9W"))
                .body("'properties'.'description_notes'", containsString("TVEAsvKSSH"))
                .body("'properties'.'source'", containsString("JVMG"))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_1.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/923/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_112_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_61_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_61_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 400, " + 
                    " \"description_prepare\": \"yhkZi6aTs\", " + 
                    " \"age_max\": -2147483056, " + 
                    " \"time_min\": 524, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"0V9\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 393, " + 
                    " \"mime_type\": \"1_iE8CEWhVF\", " + 
                    " \"uri\": \"h\", " + 
                    " \"name\": \"2PYb3WHvZ5Mdn02E\", " + 
                    " \"author\": \"8TQWxnSiJSHN\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"YsuZguQHrEB\", " + 
                    " \"uri\": \"OsI0ww\", " + 
                    " \"copy_right\": \"cY6eQ\", " + 
                    " \"author\": \"3I\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 212, " + 
                    " \"uri\": \"cSqNN5VxPnPZvC\", " + 
                    " \"name\": \"eq5R\", " + 
                    " \"copy_right\": \"ZsWjBjRP\", " + 
                    " \"author\": \"tQJXegxt0\" " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"sUvFLv8Yt5g\", " + 
                    " \"author\": \"fVCAPF3Fncx9\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 317, " + 
                    " \"mime_type\": \"yPEBGNWZvjxt\", " + 
                    " \"copy_right\": \"GGPz3Po9HfUY46H\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"\", " + 
                    " \"identities\": [] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_38_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_62_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_62_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3528L)
                .d("AUTHOR", "\"1Y7U\"")
                .d("CAPTURE_DATE", "\"1961-06-01 17:29:19\"")
                .d("COPY_RIGHT", "\"BeHjMCJ31eTNQt\"")
                .d("MIME_TYPE", "\"yuA\"")
                .d("NAME", "\"_EM_21441_XYZ_\"")
                .d("URI", "\"_EM_50189_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 3529L)
                .d("AUTHOR", "\"HA\"")
                .d("CAPTURE_DATE", "\"1924-01-26 15:18:55\"")
                .d("COPY_RIGHT", "\"X9qdOHVRfw\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"-7\"")
                .d("URI", "\"_EM_21443_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"mY9a\", " + 
                    " \"description_material\": \"\", " + 
                    " \"description_introduction\": \"lgA\", " + 
                    " \"description_prepare\": \"SCwy8v0ZrX3Gf\", " + 
                    " \"age_min\": -2147483024, " + 
                    " \"participants_max\": 537, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"X0TfwlkyEpG\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("mY9a"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T20:54:43.986Z"))
                .body("'properties_revisions'[0].'description_material'", containsString(""))
                .body("'properties_revisions'[0].'description_introduction'", containsString("lgA"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("SCwy8v0ZrX3Gf"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-2.147483024E9))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(537.0))
                .body("'properties_revisions'[0].'featured'", equalTo(true))
                .body("'properties_revisions'[0].'source'", containsString("X0TfwlkyEpG"))
                .body("'properties'.'name'", containsString("mY9a"))
                .body("'properties'.'date_created'", containsString("2024-05-30T20:54:43.986Z"))
                .body("'properties'.'description_material'", containsString(""))
                .body("'properties'.'description_introduction'", containsString("lgA"))
                .body("'properties'.'description_prepare'", containsString("SCwy8v0ZrX3Gf"))
                .body("'properties'.'age_min'", numberMatches(-2.147483024E9))
                .body("'properties'.'participants_max'", numberMatches(537.0))
                .body("'properties'.'featured'", equalTo(true))
                .body("'properties'.'source'", containsString("X0TfwlkyEpG"))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/-6531088550281031413/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_112_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/-6531088550281031413/rating?featured=Kymp9d&group=&time_2=UQa4S1LH&ages=fik5&id=Gqwtno5T"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_120_deleteRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_63_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_63_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -6441769544724495599, " + 
                    " \"name\": \"vDaqsUKJOjhT\", " + 
                    " \"description_material\": \"0YFN5u\", " + 
                    " \"description_introduction\": \"n3Z7\", " + 
                    " \"description_main\": \"fI6xxGWsLD8sPHB\", " + 
                    " \"description_safety\": \"BvCyQFKfJxe\", " + 
                    " \"description_notes\": \"gZ7xWPI42d\", " + 
                    " \"participants_max\": -2142498604, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"LsRBi9\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"uri\": \"qG8CAazL20Xg6\", " + 
                    " \"author\": \"1w7p3mnvm9WEy\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 540, " + 
                    " \"mime_type\": \"kE8zwOsL\", " + 
                    " \"capture_date\": \"1936-09-03T-1:00:47\", " + 
                    " \"author\": \"z896y43M\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 607, " + 
                    " \"uri\": \"626EyxSb\", " + 
                    " \"name\": \"pJW\", " + 
                    " \"capture_date\": \"1930-01-16T21:35:16\", " + 
                    " \"copy_right\": \"VXjq4R2bvNS5\", " + 
                    " \"author\": \"pCiS9TcFcD9TE\" " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"pwk6_BOrvcFiwm0q\", " + 
                    " \"author\": \"YRAA51b\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"um\", " + 
                    " \"name\": \"RdNCMWKXf\", " + 
                    " \"capture_date\": \"2077-13-23T23:43:60\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "attrs=5dsh_J&" + 
                    "name=vDaqsUKJOjhT&" + 
                    "age_2=OoF&" + 
                    "time_1=nTeIGlfnnMoJZtb&" + 
                    "my_favourites=false&" + 
                    "ratings_count_min=9009540954179116260&" + 
                    "favourites=303&" + 
                    "min_activities_count=aNizfs&" + 
                    "group=MnCDopR&" + 
                    "uri=R8rSdwTLTEROt")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/2")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories?" + 
                    "group=LpJUKM&" + 
                    "attrs=Atjxfhv0&" + 
                    "my_favourites=q&" + 
                    "ratings_count_min=v2AT6mlH")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    /**
    * [test_64_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_64_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1789L)
            .and().insertInto("ACTIVITY", 1790L)
            .and().insertInto("ACTIVITY", 1791L)
            .and().insertInto("USERS", 1794L)
                .d("AUTHORIZATION_LEVEL", "865")
                .d("NAME", "\"_EM_46360_XYZ_\"")
            .and().insertInto("ACTIVITY", 1793L)
            .and().insertInto("ACTIVITY_RATING", 1792L)
                .r("ACTIVITY_ID", 1790L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "505")
            .and().insertInto("USERS", 1797L)
                .d("AUTHORIZATION_LEVEL", "1052")
                .d("NAME", "\"291371\"")
            .and().insertInto("ACTIVITY", 1796L)
            .and().insertInto("ACTIVITY_RATING", 1795L)
                .r("ACTIVITY_ID", 1791L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "-15863")
            .and().insertInto("USERS", 1800L)
                .d("AUTHORIZATION_LEVEL", "-16777371")
                .d("NAME", "\"_UMUU4W3TOPYR_\"")
            .and().insertInto("ACTIVITY", 1799L)
            .and().insertInto("ACTIVITY_RATING", 1798L)
                .r("ACTIVITY_ID", 1796L)
                .r("USER_ID", 1800L)
                .d("FAVOURITE", "true")
                .d("RATING", "583")
            .and().insertInto("USERS", 1803L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_44814_XYZ_\"")
            .and().insertInto("ACTIVITY", 1802L)
            .and().insertInto("ACTIVITY_RATING", 1801L)
                .r("ACTIVITY_ID", 1789L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "155")
            .and().insertInto("USERS", 1806L)
                .d("AUTHORIZATION_LEVEL", "1")
                .d("NAME", "\"HGf\"")
            .and().insertInto("ACTIVITY", 1805L)
            .and().insertInto("ACTIVITY_RATING", 1804L)
                .r("ACTIVITY_ID", 1799L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "4")
            .and().insertInto("SYSTEM_MESSAGE", 41346L)
                .d("KEY", "\"6LHJVv5RhxPrQIv\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2046-12-02 03:00:49\"")
                .d("VALUE", "\"o9YXVoGn\"")
            .and().insertInto("SYSTEM_MESSAGE", 41347L)
                .d("KEY", "\"Pe_JW\"")
                .d("VALID_FROM", "\"1969-04-14 01:27:55\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"J_X\"")
            .and().insertInto("MEDIA_FILE", 45902L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 45901L)
                .d("GRP", "\"x9a71B6Lgx3\"")
                .d("NAME", "\"UpJkkM6eP\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 45904L)
                .d("URI", "\"WncFi\"")
            .and().insertInto("TAG", 45903L)
                .d("GRP", "\"7JPCI874Zuo\"")
                .d("NAME", "\"tki66JZzwMVR7gP\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 381, " + 
                    " \"description_material\": \"SNt6\", " + 
                    " \"description_introduction\": \"MpRQ\", " + 
                    " \"description_prepare\": \"dqQys3Ae\", " + 
                    " \"description_safety\": \"5Q3r0NySR3M\", " + 
                    " \"description_notes\": \"teXFc\", " + 
                    " \"age_min\": -2147483573, " + 
                    " \"age_max\": -27, " + 
                    " \"time_max\": 598, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"name\": \"F_7\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"PuN\", " + 
                    " \"copy_right\": \"dE0gziSRTX3LLo\", " + 
                    " \"author\": \"UIs3SExUxa9EmG69\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 1063672336, " + 
                    " \"authorization_level\": 457, " + 
                    " \"identities\": [ " + 
                    " {} " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_65_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_65_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"zYz3bFNei\", " + 
                    " \"description_material\": \"bJEl6g\", " + 
                    " \"description_introduction\": \"dPnMM8\", " + 
                    " \"description_prepare\": \"OGHk5dw3fh\", " + 
                    " \"description_safety\": \"dSpJdrCYj1kqXRH\", " + 
                    " \"participants_min\": 425, " + 
                    " \"participants_max\": 597, " + 
                    " \"time_min\": 196, " + 
                    " \"time_max\": 506, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"EK\", " + 
                    " \"name\": \"kNItq\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_66_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_66_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 15388L)
            .and().insertInto("ACTIVITY", 15389L)
            .and().insertInto("ACTIVITY", 15390L)
            .and().insertInto("ACTIVITY", 15391L)
            .and().insertInto("ACTIVITY", 15392L)
            .and().insertInto("MEDIA_FILE", 15394L)
                .d("URI", "\"_EM_72803_XYZ_\"")
            .and().insertInto("TAG", 15393L)
                .d("GRP", "\"cOIyZe2eq7o\"")
                .d("NAME", "\"via\"")
                .r("MEDIA_FILE_ID", 15394L)
            .and().insertInto("MEDIA_FILE", 15396L)
                .d("URI", "\"_EM_72804_XYZ_\"")
            .and().insertInto("TAG", 15395L)
                .d("GRP", "\"2IDXI\"")
                .d("NAME", "\"j6qGZ\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 15398L)
                .d("URI", "\"CkA<x1p8vqBOz\"")
            .and().insertInto("TAG", 15397L)
                .d("GRP", "\"_EM_72805_XYZ_\"")
                .d("NAME", "\"zi8pet_IT0UZ\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 15400L)
                .d("URI", "\"USER0_\"")
            .and().insertInto("TAG", 15399L)
                .d("GRP", "\"_EM_72807_XYZ_\"")
                .d("NAME", "\"1U\"")
                .r("MEDIA_FILE_ID", 15394L)
            .and().insertInto("MEDIA_FILE", 15402L)
                .d("URI", "\"hl7kfFn\"")
            .and().insertInto("TAG", 15401L)
                .d("GRP", "\"_EM_72808_XYZ_\"")
                .d("NAME", "\"AOjABT\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("SYSTEM_MESSAGE", 15403L)
                .d("KEY", "\"_EM_72809_XYZ_\"")
                .d("VALID_FROM", "\"1972-05-13 12:22:02\"")
                .d("VALID_TO", "\"1968-09-21 09:09:04\"")
                .d("VALUE", "\"\"")
            .and().insertInto("SYSTEM_MESSAGE", 15404L)
                .d("KEY", "\"_EM_72810_XYZ_\"")
                .d("VALID_FROM", "\"1968-08-05 22:04:06\"")
                .d("VALID_TO", "\"2071-09-21 19:05:46\"")
                .d("VALUE", "\"CREATE SEQUENCE PUBLIC.SYSTEM_SEQUENCE_214B3038_E020_4E59_9410_25C69D254682 START WITH 33 BELONGS_TO_TABLE\"")
            .and().insertInto("SYSTEM_MESSAGE", 15405L)
                .d("KEY", "\"587388\"")
                .d("VALID_FROM", "\"1953-01-24 05:33:40\"")
                .d("VALID_TO", "\"2012-07-25 22:16:37\"")
                .d("VALUE", "\"grgh8_9e_I4C\"")
            .and().insertInto("SYSTEM_MESSAGE", 15406L)
                .d("KEY", "\"G315rj3Ba\"")
                .d("VALID_FROM", "\"2081-04-04 23:59:40\"")
                .d("VALID_TO", "\"2076-09-09 23:28:36\"")
                .d("VALUE", "\"_EM_73547_XYZ_\"")
            .and().insertInto("USERS", 15501L)
                .d("AUTHORIZATION_LEVEL", "357")
                .d("NAME", "\"8rC5d5iX4OkYMY\"")
            .and().insertInto("ACTIVITY", 15500L)
            .and().insertInto("ACTIVITY", 15499L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15498L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-2147482898")
                .d("DATE_CREATED", "\"2067-04-19 01:02:10\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1990-04-17 12:30:01\"")
                .d("DESCRIPTION_INTRODUCTION", "\"Y6eqHBBBQ_\"")
                .d("DESCRIPTION_MAIN", "\"ybjv9\"")
                .d("DESCRIPTION_MATERIAL", "\"3FUM_QkZY\"")
                .d("DESCRIPTION_NOTES", "\"yEF\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "192")
                .d("PARTICIPANTS_MIN", "958")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "700")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 15391L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 15505L)
                .d("AUTHORIZATION_LEVEL", "424")
                .d("NAME", "\"pRC5_DCyhIBGW0_H\"")
            .and().insertInto("ACTIVITY", 15504L)
            .and().insertInto("ACTIVITY", 15503L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15502L)
                .d("AGE_MAX", "-2147483255")
                .d("AGE_MIN", "-2147482985")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"1905-10-21 20:41:41\"")
                .d("DATE_UPDATED", "\"2097-07-19 02:43:04\"")
                .d("DESCRIPTION_INTRODUCTION", "\"iCf3wZ\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "\"0Zfs1U2FPbq\"")
                .d("FEATURED", "NULL")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "301")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "666")
                .r("ACTIVITY_ID", 15504L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 15389L)
            .and().insertInto("USERS", 15509L)
                .d("AUTHORIZATION_LEVEL", "744")
                .d("NAME", "\"CZwhfCOiuSzGdT\"")
            .and().insertInto("ACTIVITY", 15508L)
            .and().insertInto("ACTIVITY", 15507L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15506L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"2000-06-10 20:40:01\"")
                .d("DESCRIPTION_INTRODUCTION", "\"gbeJwfAgdIo\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"IaEIvv494I5\"")
                .d("DESCRIPTION_NOTES", "\"gnRlKSno1\"")
                .d("DESCRIPTION_PREPARE", "\"V9DR4\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "false")
                .d("NAME", "\"PvxKdFJ\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "485")
                .d("TIME_MIN", "286")
                .r("ACTIVITY_ID", 15508L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 15392L)
            .and().insertInto("USERS", 15513L)
                .d("AUTHORIZATION_LEVEL", "445")
                .d("NAME", "\"NEoYuZ63jsh6LsoH\"")
            .and().insertInto("ACTIVITY", 15512L)
            .and().insertInto("ACTIVITY", 15511L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15510L)
                .d("AGE_MAX", "-605")
                .d("AGE_MIN", "-2147483345")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"2055-12-18 04:37:19\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"NGswOlWJSAE9dcz\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"Foy5I3\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "298")
                .d("PARTICIPANTS_MIN", "291")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 15390L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 15499L)
            .and().insertInto("USERS", 15517L)
                .d("AUTHORIZATION_LEVEL", "159")
                .d("NAME", "\"6M\"")
            .and().insertInto("ACTIVITY", 15516L)
            .and().insertInto("ACTIVITY", 15515L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15514L)
                .d("AGE_MAX", "38")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1998-09-30 19:58:00\"")
                .d("DESCRIPTION_INTRODUCTION", "\"_Olrr2\"")
                .d("DESCRIPTION_MAIN", "\"p3Uvsc9\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"dgoTjf_D4oVE\"")
                .d("DESCRIPTION_PREPARE", "\"4II\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "\"f\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "514")
                .d("SOURCE", "\"2gbxpwc8mBAb\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 15391L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 15508L)
            .and().insertInto("MEDIA_FILE", 15519L)
                .d("URI", "\"z6a_RkGthTeOsXx\"")
            .and().insertInto("MEDIA_FILE_KEYWORDS", 15518L)
                .r("MEDIA_FILE_ID", 15400L)
                .d("KEYWORD", "\"8AzimCtE72gpWInR\"")
            .and().insertInto("MEDIA_FILE", 15525L)
                .d("URI", "\"NP8H7XBqhTg9m\"")
            .and().insertInto("USERS", 15524L)
                .d("AUTHORIZATION_LEVEL", "615")
                .d("NAME", "\"5e8hN\"")
            .and().insertInto("ACTIVITY", 15523L)
            .and().insertInto("ACTIVITY", 15522L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15521L)
                .r("ACTIVITY_ID", 15388L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 15520L)
                .r("ACTIVITY_PROPERTIES_ID", 15506L)
                .r("MEDIA_FILE_ID", 15394L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 15531L)
                .d("URI", "\"4fBrW35AHtV\"")
            .and().insertInto("USERS", 15530L)
                .d("AUTHORIZATION_LEVEL", "217")
                .d("NAME", "\"VUO\"")
            .and().insertInto("ACTIVITY", 15529L)
            .and().insertInto("ACTIVITY", 15528L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15527L)
                .r("ACTIVITY_ID", 15512L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 15526L)
                .r("ACTIVITY_PROPERTIES_ID", 15502L)
                .r("MEDIA_FILE_ID", 15396L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 15537L)
                .d("URI", "\"eUD1hjLr_Xee5kU\"")
            .and().insertInto("USERS", 15536L)
                .d("AUTHORIZATION_LEVEL", "659")
                .d("NAME", "\"oU_pl5gOZhXwc\"")
            .and().insertInto("ACTIVITY", 15535L)
            .and().insertInto("ACTIVITY", 15534L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15533L)
                .r("ACTIVITY_ID", 15391L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 15532L)
                .r("ACTIVITY_PROPERTIES_ID", 15514L)
                .r("MEDIA_FILE_ID", 15400L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 15566L)
                .d("AUTHORIZATION_LEVEL", "157")
                .d("NAME", "\"8qit\"")
            .and().insertInto("ACTIVITY", 15565L)
            .and().insertInto("ACTIVITY", 15564L)
            .and().insertInto("ACTIVITY_RELATION", 15563L)
                .r("ACTIVITY_1_ID", 15528L)
                .r("ACTIVITY_2_ID", 15535L)
                .r("OWNER_ID", 15566L)
            .and().insertInto("USERS", 15570L)
                .d("AUTHORIZATION_LEVEL", "550")
                .d("NAME", "\"lvaGQf8mF0CDfw\"")
            .and().insertInto("ACTIVITY", 15569L)
            .and().insertInto("ACTIVITY", 15568L)
            .and().insertInto("ACTIVITY_RELATION", 15567L)
                .r("ACTIVITY_1_ID", 15507L)
                .r("ACTIVITY_2_ID", 15515L)
                .r("OWNER_ID", 15570L)
            .and().insertInto("USERS", 15574L)
                .d("AUTHORIZATION_LEVEL", "873")
                .d("NAME", "\"z\"")
            .and().insertInto("ACTIVITY", 15573L)
            .and().insertInto("ACTIVITY", 15572L)
            .and().insertInto("ACTIVITY_RELATION", 15571L)
                .r("ACTIVITY_1_ID", 15388L)
                .r("ACTIVITY_2_ID", 15508L)
                .r("OWNER_ID", 15570L)
            .and().insertInto("USERS", 15578L)
                .d("AUTHORIZATION_LEVEL", "859")
                .d("NAME", "\"8\"")
            .and().insertInto("ACTIVITY", 15577L)
            .and().insertInto("ACTIVITY", 15576L)
            .and().insertInto("ACTIVITY_RELATION", 15575L)
                .r("ACTIVITY_1_ID", 15388L)
                .r("ACTIVITY_2_ID", 15504L)
                .r("OWNER_ID", 15509L)
            .and().insertInto("USERS", 15582L)
                .d("AUTHORIZATION_LEVEL", "922")
                .d("NAME", "\"ablZ2iS6BvpPNFHo\"")
            .and().insertInto("ACTIVITY", 15581L)
            .and().insertInto("ACTIVITY", 15580L)
            .and().insertInto("ACTIVITY_RELATION", 15579L)
                .r("ACTIVITY_1_ID", 15500L)
                .r("ACTIVITY_2_ID", 15522L)
                .r("OWNER_ID", 15530L)
            .and().insertInto("MEDIA_FILE", 15589L)
                .d("URI", "\"m0fd8\"")
            .and().insertInto("TAG", 15588L)
                .d("GRP", "\"k5gY\"")
                .d("NAME", "\"6RzpAn\"")
            .and().insertInto("USERS", 15587L)
                .d("AUTHORIZATION_LEVEL", "1443122075")
                .d("NAME", "\"3w\"")
            .and().insertInto("ACTIVITY", 15586L)
            .and().insertInto("ACTIVITY", 15585L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15584L)
                .r("ACTIVITY_ID", 15534L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 15583L)
                .r("ACTIVITY_PROPERTIES_ID", 15506L)
                .r("TAG_ID", 15588L)
            .and().insertInto("MEDIA_FILE", 15596L)
                .d("URI", "\"q9qaLzw\"")
            .and().insertInto("TAG", 15595L)
                .d("GRP", "\"1KMn\"")
                .d("NAME", "\"r4HJaYXUEz\"")
            .and().insertInto("USERS", 15594L)
                .d("AUTHORIZATION_LEVEL", "562")
                .d("NAME", "\"Gr2J2\"")
            .and().insertInto("ACTIVITY", 15593L)
            .and().insertInto("ACTIVITY", 15592L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15591L)
                .r("ACTIVITY_ID", 15499L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 15590L)
                .r("ACTIVITY_PROPERTIES_ID", 15527L)
                .r("TAG_ID", 15397L)
            .and().insertInto("MEDIA_FILE", 15603L)
                .d("URI", "\"oUaTPEe\"")
            .and().insertInto("TAG", 15602L)
                .d("GRP", "\"J0F_C\"")
                .d("NAME", "\"sgMypQ\"")
            .and().insertInto("USERS", 15601L)
                .d("AUTHORIZATION_LEVEL", "814")
                .d("NAME", "\"tMs_6vN\"")
            .and().insertInto("ACTIVITY", 15600L)
            .and().insertInto("ACTIVITY", 15599L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15598L)
                .r("ACTIVITY_ID", 15581L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 15597L)
                .r("ACTIVITY_PROPERTIES_ID", 15498L)
                .r("TAG_ID", 15588L)
            .and().insertInto("MEDIA_FILE", 15610L)
                .d("URI", "\"0YtwB_f\"")
            .and().insertInto("TAG", 15609L)
                .d("GRP", "\"csb5L78Pgl9td\"")
                .d("NAME", "\"s95\"")
            .and().insertInto("USERS", 15608L)
                .d("AUTHORIZATION_LEVEL", "279")
                .d("NAME", "\"T7Q2biPb\"")
            .and().insertInto("ACTIVITY", 15607L)
            .and().insertInto("ACTIVITY", 15606L)
            .and().insertInto("ACTIVITY_PROPERTIES", 15605L)
                .r("ACTIVITY_ID", 15535L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 15604L)
                .r("ACTIVITY_PROPERTIES_ID", 15605L)
                .r("TAG_ID", 15393L)
            .and().insertInto("ACTIVITY", 15000L)
            .and().insertInto("SYSTEM_MESSAGE", 15001L)
                .d("KEY", "\"_EM_70905_XYZ_\"")
                .d("VALID_FROM", "\"2010-05-30 17:02:28\"")
                .d("VALID_TO", "\"1967-03-28 05:36:16\"")
                .d("VALUE", "\"_EM_72814_XYZ_\"")
            .and().insertInto("USERS", 15003L)
                .d("AUTHORIZATION_LEVEL", "-261594")
                .d("NAME", "\"_EM_70907_XYZ_\"")
            .and().insertInto("USER_IDENTITY", 15002L)
                .d("DATE_CREATED", "\"1972-12-02 15:21:05\"")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"wp7hbFx4G7AjIW\"")
                .d("USER_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 15005L)
                .d("URI", "\"_EM_70911_XYZ_\"")
            .and().insertInto("TAG", 15004L)
                .d("GRP", "\"_EM_72815_XYZ_\"")
                .d("NAME", "\"_EM_70913_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"1aCGC51rp489qdY\", " + 
                    " \"description_material\": \"S4F\", " + 
                    " \"description_introduction\": \"5TMSfOCD\", " + 
                    " \"description_prepare\": \"\", " + 
                    " \"description_safety\": \"zP1nZNzznEm1p\", " + 
                    " \"description_notes\": \"AIurGTwvRB\", " + 
                    " \"time_min\": 887, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 437, " + 
                    " \"media_file\": { " + 
                    " \"id\": 999, " + 
                    " \"mime_type\": \"aoryyEMfq\", " + 
                    " \"uri\": \"G0CGN86VXVrK2G\", " + 
                    " \"name\": \"RZ3S\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"copy_right\": \"cBCknYX\", " + 
                    " \"author\": \"1mT\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_19_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_67_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_67_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 132L)
                .d("AUTHORIZATION_LEVEL", "4195093")
                .d("NAME", "\"YdaS\"")
            .and().insertInto("ACTIVITY", 131L)
            .and().insertInto("ACTIVITY", 130L)
            .and().insertInto("ACTIVITY_RELATION", 129L)
                .r("ACTIVITY_1_ID", 131L)
                .r("ACTIVITY_2_ID", 130L)
                .d("OWNER_ID", "3")
            .and().insertInto("USERS", 136L)
                .d("AUTHORIZATION_LEVEL", "1180574")
                .d("NAME", "\"ayX\"")
            .and().insertInto("ACTIVITY", 135L)
            .and().insertInto("ACTIVITY", 134L)
            .and().insertInto("ACTIVITY_RELATION", 133L)
                .r("ACTIVITY_1_ID", 135L)
                .r("ACTIVITY_2_ID", 134L)
                .d("OWNER_ID", "2")
            .and().insertInto("USERS", 5937L)
                .d("AUTHORIZATION_LEVEL", "479")
                .d("NAME", "\"542353\"")
            .and().insertInto("ACTIVITY", 5936L)
            .and().insertInto("ACTIVITY", 5935L)
            .and().insertInto("ACTIVITY_PROPERTIES", 5934L)
                .d("AGE_MAX", "-2146434948")
                .d("AGE_MIN", "-1072693198")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"1962-11-07 10:40:11\"")
                .d("DATE_UPDATED", "\"2025-05-24 11:53:48\"")
                .d("DESCRIPTION_INTRODUCTION", "\"_EM_88688_XYZ_\"")
                .d("DESCRIPTION_MAIN", "\"_EM_88689_XYZ_\"")
                .d("DESCRIPTION_MATERIAL", "\"arFk19\"")
                .d("DESCRIPTION_NOTES", "\"_EM_88674_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "\"BF3XleDe\"")
                .d("DESCRIPTION_SAFETY", "\"SGKD\"")
                .d("FEATURED", "true")
                .d("NAME", "\"HY4\"")
                .d("PARTICIPANTS_MAX", "31")
                .d("PARTICIPANTS_MIN", "739")
                .d("SOURCE", "\"hcz3P9XTawq5\"")
                .d("TIME_MAX", "-523320")
                .d("TIME_MIN", "256")
                .r("ACTIVITY_ID", 5935L)
                .r("AUTHOR_ID", 132L)
                .r("PUBLISHING_ACTIVITY_ID", 131L)
            .and().insertInto("USERS", 5941L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"IU\"")
            .and().insertInto("ACTIVITY", 5940L)
            .and().insertInto("ACTIVITY", 5939L)
            .and().insertInto("ACTIVITY_PROPERTIES", 5938L)
                .d("AGE_MAX", "-2147483266")
                .d("AGE_MIN", "-1073741766")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"2004-04-27 19:41:58\"")
                .d("DATE_UPDATED", "\"1991-06-25 23:11:20\"")
                .d("DESCRIPTION_INTRODUCTION", "\"GmrYVgdTXgq5T\"")
                .d("DESCRIPTION_MAIN", "\"_EM_88690_XYZ_\"")
                .d("DESCRIPTION_MATERIAL", "\"TFVVH2Uh\"")
                .d("DESCRIPTION_NOTES", "\"UJTj12dMUb\"")
                .d("DESCRIPTION_PREPARE", "\"NpsPyUUm\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "false")
                .d("NAME", "\"GwLzPPqOxGza6\"")
                .d("PARTICIPANTS_MAX", "1291110781")
                .d("PARTICIPANTS_MIN", "0")
                .d("SOURCE", "\"KV_EyGBp8\"")
                .d("TIME_MAX", "188")
                .d("TIME_MIN", "292")
                .r("ACTIVITY_ID", 5940L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 130L)
            .and().insertInto("ACTIVITY", 5943L)
            .and().insertInto("ACTIVITY_DERIVED", 5942L)
                .r("ACTIVITY_ID", 134L)
                .d("FAVOURITES_COUNT", "556")
                .d("RATINGS_AVG", "0.7557140527783434")
                .d("RATINGS_COUNT", "548")
                .d("RATINGS_SUM", "-1048448")
            .and().insertInto("ACTIVITY", 5945L)
            .and().insertInto("ACTIVITY_DERIVED", 5944L)
                .r("ACTIVITY_ID", 130L)
                .d("FAVOURITES_COUNT", "1048")
                .d("RATINGS_AVG", "0.7680016724872613")
                .d("RATINGS_COUNT", "955")
                .d("RATINGS_SUM", "562")
            .and().insertInto("ACTIVITY", 5947L)
            .and().insertInto("ACTIVITY_DERIVED", 5946L)
                .r("ACTIVITY_ID", 5936L)
                .d("FAVOURITES_COUNT", "0")
                .d("RATINGS_AVG", "0.6")
                .d("RATINGS_COUNT", "-16069")
                .d("RATINGS_SUM", "-1113340")
            .and().insertInto("ACTIVITY", 5949L)
            .and().insertInto("ACTIVITY_DERIVED", 5948L)
                .r("ACTIVITY_ID", 135L)
                .d("FAVOURITES_COUNT", "-423967097")
                .d("RATINGS_AVG", "0.9737621127")
                .d("RATINGS_COUNT", "4651905876344486888")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("MEDIA_FILE", 14845L)
                .d("URI", "\"aU\"")
            .and().insertInto("TAG", 14844L)
                .d("GRP", "\"I\"")
                .d("NAME", "\"_EM_88691_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 14847L)
                .d("URI", "\"wII2te\"")
            .and().insertInto("TAG", 14846L)
                .d("GRP", "\"CkKw\"")
                .d("NAME", "\"_EM_88692_XYZ_\"")
                .r("MEDIA_FILE_ID", 14845L)
            .and().insertInto("MEDIA_FILE", 14849L)
                .d("URI", "\"_EM_88675_XYZ_\"")
            .and().insertInto("TAG", 14848L)
                .d("GRP", "\"_EM_88676_XYZ_\"")
                .d("NAME", "\"_EM_88677_XYZ_\"")
                .r("MEDIA_FILE_ID", 14847L)
            .and().insertInto("MEDIA_FILE", 14851L)
                .d("URI", "\"MHWzV\"")
            .and().insertInto("TAG", 14850L)
                .d("GRP", "\"_EM_70109_XYZ_\"")
                .d("NAME", "\"_EM_70110_XYZ_\"")
                .r("MEDIA_FILE_ID", 14845L)
            .and().insertInto("MEDIA_FILE", 14854L)
                .d("URI", "\"2\"")
            .and().insertInto("TAG", 14853L)
                .d("GRP", "\"_EM_88678_XYZ_\"")
                .d("NAME", "\"qTR7ben8J5F\"")
            .and().insertInto("TAG_DERIVED", 14852L)
                .r("TAG_ID", 14848L)
                .d("ACTIVITIES_COUNT", "-521921")
            .and().insertInto("MEDIA_FILE", 14857L)
                .d("URI", "\"_EM_88679_XYZ_\"")
            .and().insertInto("TAG", 14856L)
                .d("GRP", "\"NgW2u\"")
                .d("NAME", "\"_EM_88693_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 14855L)
                .r("TAG_ID", 14846L)
                .d("ACTIVITIES_COUNT", "531")
            .and().insertInto("MEDIA_FILE", 14860L)
                .d("URI", "\"ln8X\"")
            .and().insertInto("TAG", 14859L)
                .d("GRP", "\"_EM_88694_XYZ_\"")
                .d("NAME", "\"N5rwV0qst9tZs\"")
            .and().insertInto("TAG_DERIVED", 14858L)
                .r("TAG_ID", 14850L)
                .d("ACTIVITIES_COUNT", "1105919523")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 125, " + 
                    " \"description_prepare\": \"xGI8guBn\", " + 
                    " \"age_min\": -749, " + 
                    " \"age_max\": -484, " + 
                    " \"participants_max\": 261, " + 
                    " \"source\": \"\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 768, " + 
                    " \"name\": \"T6qp8T_JK\", " + 
                    " \"activities_count\": 670 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 827, " + 
                    " \"group\": \"9IPNL\", " + 
                    " \"activities_count\": 893 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"k7zSm\", " + 
                    " \"name\": \"\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 803, " + 
                    " \"group\": \"k\" " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"JZmPT\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"aeLRxFZH\", " + 
                    " \"authorization_level\": 358 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_68_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_68_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3120L)
            .and().insertInto("ACTIVITY", 3121L)
            .and().insertInto("ACTIVITY", 3122L)
            .and().insertInto("ACTIVITY", 3123L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_20381_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_20383_XYZ_\", " + 
                    " \"description_main\": \"_EM_20384_XYZ_\", " + 
                    " \"description_safety\": \"_EM_20385_XYZ_\", " + 
                    " \"age_min\": -644, " + 
                    " \"participants_min\": 180, " + 
                    " \"time_max\": 55 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T20:54:41.542Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("_EM_20381_XYZ_"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("_EM_20383_XYZ_"))
                .body("'properties_revisions'[0].'description_main'", containsString("_EM_20384_XYZ_"))
                .body("'properties_revisions'[0].'description_safety'", containsString("_EM_20385_XYZ_"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-644.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(180.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(55.0))
                .body("'properties'.'date_created'", containsString("2024-05-30T20:54:41.542Z"))
                .body("'properties'.'description_material'", containsString("_EM_20381_XYZ_"))
                .body("'properties'.'description_prepare'", containsString("_EM_20383_XYZ_"))
                .body("'properties'.'description_main'", containsString("_EM_20384_XYZ_"))
                .body("'properties'.'description_safety'", containsString("_EM_20385_XYZ_"))
                .body("'properties'.'age_min'", numberMatches(-644.0))
                .body("'properties'.'participants_min'", numberMatches(180.0))
                .body("'properties'.'time_max'", numberMatches(55.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": -2096769 " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/-2096769/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating_78_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/-2096769/rating?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_112_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_69_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_69_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 38109L)
                .d("URI", "\"MqBR9Qg09\"")
            .and().insertInto("TAG", 38108L)
                .d("GRP", "\"dbWsyiE\"")
                .d("NAME", "\"Fe80TWloLZPLVaF\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 850, " + 
                    " \"name\": \"Fv9PXTvjXIf4qo9\", " + 
                    " \"description_material\": \"lIGA958hNJzr8nDi\", " + 
                    " \"description_notes\": \"LChP9gvMWwl\", " + 
                    " \"age_max\": -2147483285, " + 
                    " \"time_min\": 408, " + 
                    " \"tags\": [ " + 
                    " {}, " + 
                    " {}, " + 
                    " { " + 
                    " \"id\": 749, " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"XzW0\", " + 
                    " \"copy_right\": \"kj5gUyIk5\", " + 
                    " \"author\": \"\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 656, " + 
                    " \"group\": \"8MAfmv5iWv3KX41U\", " + 
                    " \"media_file\": { " + 
                    " \"name\": \"b7cktJJy\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 542, " + 
                    " \"ratings_count\": -1529597865, " + 
                    " \"ratings_sum\": 879361960, " + 
                    " \"related\": [ " + 
                    " 661 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_70_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_70_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3120L)
            .and().insertInto("ACTIVITY", 3121L)
            .and().insertInto("ACTIVITY", 3122L)
            .and().insertInto("ACTIVITY", 3123L)
            .and().insertInto("USERS", 20771L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"VNop3KC_akwt6K\"")
            .and().insertInto("ACTIVITY", 20770L)
            .and().insertInto("ACTIVITY_RATING", 20769L)
                .r("ACTIVITY_ID", 20770L)
                .r("USER_ID", 20771L)
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_20381_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_20383_XYZ_\", " + 
                    " \"description_main\": \"_EM_20384_XYZ_\", " + 
                    " \"description_safety\": \"_EM_20385_XYZ_\", " + 
                    " \"age_min\": -644, " + 
                    " \"participants_min\": 180, " + 
                    " \"time_max\": 55 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T20:55:07.458Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("_EM_20381_XYZ_"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("_EM_20383_XYZ_"))
                .body("'properties_revisions'[0].'description_main'", containsString("_EM_20384_XYZ_"))
                .body("'properties_revisions'[0].'description_safety'", containsString("_EM_20385_XYZ_"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-644.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(180.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(55.0))
                .body("'properties'.'date_created'", containsString("2024-05-30T20:55:07.458Z"))
                .body("'properties'.'description_material'", containsString("_EM_20381_XYZ_"))
                .body("'properties'.'description_prepare'", containsString("_EM_20383_XYZ_"))
                .body("'properties'.'description_main'", containsString("_EM_20384_XYZ_"))
                .body("'properties'.'description_safety'", containsString("_EM_20385_XYZ_"))
                .body("'properties'.'age_min'", numberMatches(-644.0))
                .body("'properties'.'participants_min'", numberMatches(180.0))
                .body("'properties'.'time_max'", numberMatches(55.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 0, " + 
                    " \"favourite\": true " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/0/rating"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/0/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_104_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_71_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_71_with500() throws Exception {
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_prepare\": \"_EM_124917_XYZ_\", " + 
                    " \"description_main\": \"gZPJel\", " + 
                    " \"description_notes\": \"uF4kR48R8cKSKQQ\", " + 
                    " \"age_min\": -649, " + 
                    " \"age_max\": -281, " + 
                    " \"participants_min\": 113, " + 
                    " \"participants_max\": 742, " + 
                    " \"time_min\": 943, " + 
                    " \"source\": \"CA\", " + 
                    " \"activity\": { " + 
                    " \"id\": 220, " + 
                    " \"ratings_average\": 0.17298593383017524, " + 
                    " \"related\": [ " + 
                    " 747, " + 
                    " 319 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T20:54:43.507Z"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("_EM_124917_XYZ_"))
                .body("'properties_revisions'[0].'description_main'", containsString("gZPJel"))
                .body("'properties_revisions'[0].'description_notes'", containsString("uF4kR48R8cKSKQQ"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-649.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-281.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(113.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(742.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(943.0))
                .body("'properties_revisions'[0].'source'", containsString("CA"))
                .body("'properties'.'date_created'", containsString("2024-05-30T20:54:43.507Z"))
                .body("'properties'.'description_prepare'", containsString("_EM_124917_XYZ_"))
                .body("'properties'.'description_main'", containsString("gZPJel"))
                .body("'properties'.'description_notes'", containsString("uF4kR48R8cKSKQQ"))
                .body("'properties'.'age_min'", numberMatches(-649.0))
                .body("'properties'.'age_max'", numberMatches(-281.0))
                .body("'properties'.'participants_min'", numberMatches(113.0))
                .body("'properties'.'participants_max'", numberMatches(742.0))
                .body("'properties'.'time_min'", numberMatches(943.0))
                .body("'properties'.'source'", containsString("CA"))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 637 " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/637/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating_78_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_72_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_72_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"fVsE7usrg2O_Bia\", " + 
                    " \"description_material\": \"9hl\", " + 
                    " \"description_introduction\": \"F7omQHIrEqvmeA\", " + 
                    " \"description_main\": \"EPDczX3TdPUYWY\", " + 
                    " \"description_safety\": \"5Ay6PNTUMBOvafzs\", " + 
                    " \"age_min\": -2069909497, " + 
                    " \"age_max\": -320, " + 
                    " \"participants_min\": 743, " + 
                    " \"participants_max\": 247, " + 
                    " \"time_min\": 488, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"4ArZ0leSJARxm\", " + 
                    " \"uri\": \"f7pZkPOvJFZjm_dm\", " + 
                    " \"author\": \"F3xcvH\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"oCn22TIqLE8WG\", " + 
                    " \"authorization_level\": 760 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_sum\": 345, " + 
                    " \"ratings_average\": 0.6589885188742908, " + 
                    " \"related\": [ " + 
                    " 888, " + 
                    " 884, " + 
                    " 233036884 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_211_lambda$initMediaFiles$8
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_73_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_73_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"5AuB\", " + 
                    " \"description_prepare\": \"\", " + 
                    " \"description_main\": \"BVucNt1v8\", " + 
                    " \"description_notes\": \"ivzyL32zZfkb7Ky3\", " + 
                    " \"participants_min\": 93, " + 
                    " \"participants_max\": 329, " + 
                    " \"time_min\": 600, " + 
                    " \"time_max\": 319, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"gNu\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"WtunAslFq9hV\", " + 
                    " \"activities_count\": 801 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [], " + 
                    " \"activity\": { " + 
                    " \"id\": 240, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.9432012224562907, " + 
                    " \"favourites_count\": 167, " + 
                    " \"related\": [ " + 
                    " 650 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_74_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_74_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 319, " + 
                    " \"name\": \"mo\", " + 
                    " \"description_material\": \"43rbi\", " + 
                    " \"description_introduction\": \"aKUh8C7l1n0C\", " + 
                    " \"description_prepare\": \"de80o2NI\", " + 
                    " \"description_notes\": \"43rbi\", " + 
                    " \"age_min\": -2147483045, " + 
                    " \"age_max\": -2147483045, " + 
                    " \"participants_min\": 500, " + 
                    " \"participants_max\": 500, " + 
                    " \"time_min\": -2147483045, " + 
                    " \"time_max\": -292, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"_EM_28944_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 864, " + 
                    " \"name\": \"HEFKG4\", " + 
                    " \"activities_count\": 869 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 163, " + 
                    " \"name\": \"_EM_28956_XYZ_\", " + 
                    " \"activities_count\": 950 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"xGhJj\", " + 
                    " \"activities_count\": 184 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 709, " + 
                    " \"media_file\": { " + 
                    " \"id\": 323, " + 
                    " \"mime_type\": \"_EM_28970_XYZ_\", " + 
                    " \"name\": \"_EM_28972_XYZ_\", " + 
                    " \"copy_right\": \"VZifwko0WCQBCsEm\" " + 
                    " }, " + 
                    " \"activities_count\": -434257235 " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_sum\": 633 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_75_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_75_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 482L)
            .and().insertInto("ACTIVITY", 483L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"ehQZQfa\", " + 
                    " \"description_material\": \"CU02VhxtszHU\", " + 
                    " \"description_introduction\": \"yqfRfJDTUWfc2xe\", " + 
                    " \"description_prepare\": \"y4rXV15zA\", " + 
                    " \"description_main\": \"YvU7J\", " + 
                    " \"participants_max\": 841, " + 
                    " \"time_max\": 735, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("ehQZQfa"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T20:54:40.282Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("CU02VhxtszHU"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("yqfRfJDTUWfc2xe"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("y4rXV15zA"))
                .body("'properties_revisions'[0].'description_main'", containsString("YvU7J"))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(841.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(735.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'tags'.size()", equalTo(0))
                .body("'properties'.'name'", containsString("ehQZQfa"))
                .body("'properties'.'date_created'", containsString("2024-05-30T20:54:40.282Z"))
                .body("'properties'.'description_material'", containsString("CU02VhxtszHU"))
                .body("'properties'.'description_introduction'", containsString("yqfRfJDTUWfc2xe"))
                .body("'properties'.'description_prepare'", containsString("y4rXV15zA"))
                .body("'properties'.'description_main'", containsString("YvU7J"))
                .body("'properties'.'participants_max'", numberMatches(841.0))
                .body("'properties'.'time_max'", numberMatches(735.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'tags'.size()", equalTo(0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/354/rating?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating_78_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/354/rating"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v2/activities/354/rating?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_76_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_76_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1789L)
            .and().insertInto("ACTIVITY", 1790L)
            .and().insertInto("ACTIVITY", 1791L)
            .and().insertInto("USERS", 1794L)
                .d("AUTHORIZATION_LEVEL", "865")
                .d("NAME", "\"_EM_46360_XYZ_\"")
            .and().insertInto("ACTIVITY", 1793L)
            .and().insertInto("ACTIVITY_RATING", 1792L)
                .r("ACTIVITY_ID", 1790L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "505")
            .and().insertInto("USERS", 1797L)
                .d("AUTHORIZATION_LEVEL", "924")
                .d("NAME", "\"291371\"")
            .and().insertInto("ACTIVITY", 1796L)
            .and().insertInto("ACTIVITY_RATING", 1795L)
                .r("ACTIVITY_ID", 1791L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "-15863")
            .and().insertInto("USERS", 1800L)
                .d("AUTHORIZATION_LEVEL", "-16777371")
                .d("NAME", "\"_UMUU4W3TOPYR_\"")
            .and().insertInto("ACTIVITY", 1799L)
            .and().insertInto("ACTIVITY_RATING", 1798L)
                .r("ACTIVITY_ID", 1796L)
                .r("USER_ID", 1800L)
                .d("FAVOURITE", "true")
                .d("RATING", "583")
            .and().insertInto("USERS", 1803L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_44814_XYZ_\"")
            .and().insertInto("ACTIVITY", 1802L)
            .and().insertInto("ACTIVITY_RATING", 1801L)
                .r("ACTIVITY_ID", 1789L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "155")
            .and().insertInto("USERS", 1806L)
                .d("AUTHORIZATION_LEVEL", "1")
                .d("NAME", "\"HGf\"")
            .and().insertInto("ACTIVITY", 1805L)
            .and().insertInto("ACTIVITY_RATING", 1804L)
                .r("ACTIVITY_ID", 1799L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "4")
            .and().insertInto("SYSTEM_MESSAGE", 41346L)
                .d("KEY", "\"6LHJVv5RhxPrQIv\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2046-12-02 03:00:49\"")
                .d("VALUE", "\"o9YXVoGn\"")
            .and().insertInto("SYSTEM_MESSAGE", 41347L)
                .d("KEY", "\"Pe_JW\"")
                .d("VALID_FROM", "\"1969-04-14 01:27:55\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"J_X\"")
            .and().insertInto("MEDIA_FILE", 45902L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 45901L)
                .d("GRP", "\"x9a71B6Lgx3\"")
                .d("NAME", "\"UpJkkM6eP\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 45904L)
                .d("URI", "\"WncFi\"")
            .and().insertInto("TAG", 45903L)
                .d("GRP", "\"7JPCI874Zuo\"")
                .d("NAME", "\"tki66JZzwMVR7gP\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"AmCnodo\", " + 
                    " \"description_material\": \"FEPvIM1vDl2c3Ax\", " + 
                    " \"description_introduction\": \"SzJ6RpQ8t_0A6\", " + 
                    " \"description_main\": \"n_\", " + 
                    " \"description_safety\": \"0\", " + 
                    " \"age_min\": -891, " + 
                    " \"age_max\": -2147483255, " + 
                    " \"participants_min\": 123, " + 
                    " \"participants_max\": 47, " + 
                    " \"time_max\": 917, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"ry4J6F9mOWv\", " + 
                    " \"tags\": [], " + 
                    " \"activity\": { " + 
                    " \"id\": 869, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_sum\": 693, " + 
                    " \"ratings_average\": 0.8520796560313568, " + 
                    " \"related\": [ " + 
                    " 715 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("AmCnodo"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T20:55:07.406Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("FEPvIM1vDl2c3Ax"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("SzJ6RpQ8t_0A6"))
                .body("'properties_revisions'[0].'description_main'", containsString("n_"))
                .body("'properties_revisions'[0].'description_safety'", containsString("0"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-891.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147483255E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(123.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(47.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(917.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'source'", containsString("ry4J6F9mOWv"))
                .body("'properties_revisions'[0].'tags'.size()", equalTo(0))
                .body("'properties'.'name'", containsString("AmCnodo"))
                .body("'properties'.'date_created'", containsString("2024-05-30T20:55:07.406Z"))
                .body("'properties'.'description_material'", containsString("FEPvIM1vDl2c3Ax"))
                .body("'properties'.'description_introduction'", containsString("SzJ6RpQ8t_0A6"))
                .body("'properties'.'description_main'", containsString("n_"))
                .body("'properties'.'description_safety'", containsString("0"))
                .body("'properties'.'age_min'", numberMatches(-891.0))
                .body("'properties'.'age_max'", numberMatches(-2.147483255E9))
                .body("'properties'.'participants_min'", numberMatches(123.0))
                .body("'properties'.'participants_max'", numberMatches(47.0))
                .body("'properties'.'time_max'", numberMatches(917.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'source'", containsString("ry4J6F9mOWv"))
                .body("'properties'.'tags'.size()", equalTo(0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 878 " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/878/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating_78_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/878/rating?attrs=XFRSFMpFvNpIs9&group=96FFmQpiofM"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_120_deleteRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/ping")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    /**
    * [test_77_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_77_with500() throws Exception {
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_notes\": \"d_KvMllAW7lU\", " + 
                    " \"age_min\": -2147483226, " + 
                    " \"participants_min\": 642, " + 
                    " \"participants_max\": 194, " + 
                    " \"time_max\": 65, " + 
                    " \"source\": \"6LKKTDWnZd\", " + 
                    " \"media_files\": [], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 423, " + 
                    " \"ratings_sum\": 269, " + 
                    " \"ratings_average\": 0.9389447400141323, " + 
                    " \"related\": [ " + 
                    " 422, " + 
                    " 920, " + 
                    " 928 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T20:54:40.227Z"))
                .body("'properties_revisions'[0].'description_notes'", containsString("d_KvMllAW7lU"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-2.147483226E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(642.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(194.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(65.0))
                .body("'properties_revisions'[0].'source'", containsString("6LKKTDWnZd"))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(0))
                .body("'properties'.'date_created'", containsString("2024-05-30T20:54:40.227Z"))
                .body("'properties'.'description_notes'", containsString("d_KvMllAW7lU"))
                .body("'properties'.'age_min'", numberMatches(-2.147483226E9))
                .body("'properties'.'participants_min'", numberMatches(642.0))
                .body("'properties'.'participants_max'", numberMatches(194.0))
                .body("'properties'.'time_max'", numberMatches(65.0))
                .body("'properties'.'source'", containsString("6LKKTDWnZd"))
                .body("'properties'.'media_files'.size()", equalTo(0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 210 " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/210/rating?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating_78_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/210/rating?attrs=Yu8NS1n8ZgT&uri=z_iZY6"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    /**
    * [test_78_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_78_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 3677906192428489512, " + 
                    " \"name\": \"LLS3jf\", " + 
                    " \"description_main\": \"aU5KApGaT4XUZR\", " + 
                    " \"description_notes\": \"aU5KApGaT4XUZR\", " + 
                    " \"age_max\": 94, " + 
                    " \"participants_min\": 525109, " + 
                    " \"time_min\": 94, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"_EM_17039_XYZ_\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 384, " + 
                    " \"name\": \"\", " + 
                    " \"activities_count\": 822 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"O3C\", " + 
                    " \"uri\": \"W\", " + 
                    " \"name\": \"vp\", " + 
                    " \"author\": \"pl\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"PgqZ\", " + 
                    " \"authorization_level\": -647993109 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": -6570408905910255414, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.853806086891463, " + 
                    " \"favourites_count\": -8661477197267999165, " + 
                    " \"related\": [ " + 
                    " 366, " + 
                    " 410, " + 
                    " 727, " + 
                    " -7521 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_79_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_79_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 128L)
            .and().insertInto("MEDIA_FILE", 7718L)
                .d("URI", "\"xR_G5RezoD\"")
            .and().insertInto("TAG", 7717L)
                .d("GRP", "\"nOdkpRPsGEdrxK\"")
                .d("NAME", "\"_EM_87177_XYZ_\"")
                .r("MEDIA_FILE_ID", 7718L)
            .and().insertInto("MEDIA_FILE", 7720L)
                .d("URI", "\"_EM_87178_XYZ_\"")
            .and().insertInto("TAG", 7719L)
                .d("GRP", "\"Z5ekP75vyr6d\"")
                .d("NAME", "\"KmKNpr\"")
                .r("MEDIA_FILE_ID", 7720L)
            .and().insertInto("MEDIA_FILE", 7722L)
                .d("URI", "\"3WH6I4d4e_iGPIKoC\"")
            .and().insertInto("TAG", 7721L)
                .d("GRP", "\"_EM_48101_XYZ_\"")
                .d("NAME", "\"_EM_48102_XYZ_\"")
                .r("MEDIA_FILE_ID", 7718L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_categories = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 992, " + 
                    " \"value\": \"_EM_52470_XYZ_\", " + 
                    " \"valid_to\": \"1904-06-32T21:35:29\", " + 
                    " \"valid_from\": \"1904-06-32T21:35:29\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 992, " + 
                    " \"key\": \"u8ycoVK2ZA\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"3bJMdTC\", " + 
                    " \"uri\": \"tS5i\", " + 
                    " \"copy_right\": \"vO\" " + 
                    " }, " + 
                    " \"activities_count\": 986 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString(""))
                .body("'name'", containsString(""))
                .body("'media_file'.'mime_type'", containsString("3bJMdTC"))
                .body("'media_file'.'uri'", containsString("tS5i"))
                .body("'media_file'.'copy_right'", containsString("vO"))
                .body("'activities_count'", numberMatches(986.0));
        location_categories = "/api/v1/categories" + "/" + res_2.extract().body().path("id").toString();
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 598, " + 
                    " \"group\": \"ROvQuLBammvfJ\", " + 
                    " \"name\": \"\" " + 
                    " } ")
                .put(resolveLocation(location_categories, baseUrlOfSut + "/api/v1/categories/0"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("ROvQuLBammvfJ"))
                .body("'name'", containsString(""))
                .body("'media_file'.'mime_type'", containsString("3bJMdTC"))
                .body("'media_file'.'uri'", containsString("tS5i"))
                .body("'media_file'.'copy_right'", containsString("vO"))
                .body("'activities_count'", numberMatches(0.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/200/rating?attrs=9CamkJaFK38kL5")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"IQwhrMty_u2k2s\", " + 
                    " \"description_prepare\": \"\", " + 
                    " \"description_main\": \"ABm\", " + 
                    " \"description_notes\": \"bqZy0\", " + 
                    " \"participants_min\": 1781726003, " + 
                    " \"time_min\": 333, " + 
                    " \"time_max\": 172, " + 
                    " \"featured\": false, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": -1728522902 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T20:54:41.194Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("IQwhrMty_u2k2s"))
                .body("'properties_revisions'[0].'description_prepare'", containsString(""))
                .body("'properties_revisions'[0].'description_main'", containsString("ABm"))
                .body("'properties_revisions'[0].'description_notes'", containsString("bqZy0"))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(1.781726003E9))
                .body("'properties_revisions'[0].'time_min'", numberMatches(333.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(172.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties'.'date_created'", containsString("2024-05-30T20:54:41.194Z"))
                .body("'properties'.'description_material'", containsString("IQwhrMty_u2k2s"))
                .body("'properties'.'description_prepare'", containsString(""))
                .body("'properties'.'description_main'", containsString("ABm"))
                .body("'properties'.'description_notes'", containsString("bqZy0"))
                .body("'properties'.'participants_min'", numberMatches(1.781726003E9))
                .body("'properties'.'time_min'", numberMatches(333.0))
                .body("'properties'.'time_max'", numberMatches(172.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0));
        
        
        ValidatableResponse res_6 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 767, " + 
                    " \"date_published\": \"1915-08-25T16:18:05\", " + 
                    " \"description_introduction\": \"q4GgoWJO\", " + 
                    " \"description_prepare\": \"dugbYKc_Gdi\", " + 
                    " \"age_min\": -890, " + 
                    " \"age_max\": -2147483104, " + 
                    " \"participants_max\": 748, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " {}, " + 
                    " { " + 
                    " \"id\": -1468304264037436883, " + 
                    " \"group\": \"yxINjge\", " + 
                    " \"media_file\": { " + 
                    " \"capture_date\": \"2046-03-02T08:05:54\", " + 
                    " \"copy_right\": \"NNqdlgCJCCVn5n1\", " + 
                    " \"author\": \"UgFHRwUIkXB2\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 556, " + 
                    " \"group\": \"SGS\", " + 
                    " \"name\": \"_b\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"z\", " + 
                    " \"copy_right\": \"N7q\" " + 
                    " }, " + 
                    " \"activities_count\": 217 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 657, " + 
                    " \"group\": \"imQMyOac5tztxK\", " + 
                    " \"name\": \"rVjHXP\" " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 2054138568, " + 
                    " \"mime_type\": \"R\", " + 
                    " \"name\": \"ZYkP4LOmS\", " + 
                    " \"capture_date\": \"1923-12-12T06:60:19\", " + 
                    " \"copy_right\": \"rHR\" " + 
                    " }, " + 
                    " { " + 
                    " \"uri\": \"LMH2ypvNpyMyI0LL\", " + 
                    " \"name\": \"Pup\", " + 
                    " \"capture_date\": \"2048-05-06T03:30:28\", " + 
                    " \"author\": \"EtETyk7K1\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"Pf\", " + 
                    " \"authorization_level\": 71 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.18904920642345602, " + 
                    " \"favourites_count\": 674 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_6.extract().statusCode()));
    }
    
    
    /**
    * [test_80_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_80_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 482L)
            .and().insertInto("ACTIVITY", 483L)
            .and().insertInto("USERS", 16974L)
                .d("AUTHORIZATION_LEVEL", "143")
                .d("NAME", "\"_EM_79143_XYZ_\"")
            .and().insertInto("ACTIVITY", 16973L)
            .and().insertInto("ACTIVITY_RATING", 16972L)
                .r("ACTIVITY_ID", 482L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "857")
            .and().insertInto("USERS", 16977L)
                .d("AUTHORIZATION_LEVEL", "-2096765")
                .d("NAME", "\"9\"")
            .and().insertInto("ACTIVITY", 16976L)
            .and().insertInto("ACTIVITY_RATING", 16975L)
                .r("ACTIVITY_ID", 16976L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "152")
            .and().insertInto("USERS", 16980L)
                .d("AUTHORIZATION_LEVEL", "-1173")
                .d("NAME", "\"jQrhVollrde\"")
            .and().insertInto("ACTIVITY", 16979L)
            .and().insertInto("ACTIVITY_RATING", 16978L)
                .r("ACTIVITY_ID", 16973L)
                .r("USER_ID", 16977L)
                .d("FAVOURITE", "true")
                .d("RATING", "777")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"ehQZQfa\", " + 
                    " \"description_material\": \"CU02VhxtszHU\", " + 
                    " \"description_introduction\": \"yqfRfJDTUWfc2xe\", " + 
                    " \"description_prepare\": \"y4rXV15zA\", " + 
                    " \"description_main\": \"YvU7J\", " + 
                    " \"participants_max\": 841, " + 
                    " \"time_max\": 735, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("ehQZQfa"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T20:54:40.873Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("CU02VhxtszHU"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("yqfRfJDTUWfc2xe"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("y4rXV15zA"))
                .body("'properties_revisions'[0].'description_main'", containsString("YvU7J"))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(841.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(735.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'tags'.size()", equalTo(0))
                .body("'properties'.'name'", containsString("ehQZQfa"))
                .body("'properties'.'date_created'", containsString("2024-05-30T20:54:40.873Z"))
                .body("'properties'.'description_material'", containsString("CU02VhxtszHU"))
                .body("'properties'.'description_introduction'", containsString("yqfRfJDTUWfc2xe"))
                .body("'properties'.'description_prepare'", containsString("y4rXV15zA"))
                .body("'properties'.'description_main'", containsString("YvU7J"))
                .body("'properties'.'participants_max'", numberMatches(841.0))
                .body("'properties'.'time_max'", numberMatches(735.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'tags'.size()", equalTo(0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": -523934, " + 
                    " \"favourite\": true " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/-523934/rating"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/-523934/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/AbstractResource_63_toJson
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("Could not generated JSON from ActivityRating object."));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/-523934/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_81_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_81_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 15688L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"Tn9hWNVRrQich\"")
                .d("MIME_TYPE", "\"0cd3GD5OIc\"")
                .d("NAME", "\"JF2U4\"")
                .d("URI", "\"_EM_73890_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 15689L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "\"2008-11-24 21:21:30\"")
                .d("COPY_RIGHT", "\"jsw9jJzR\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"TIyb0VDlGTQ2\"")
                .d("URI", "\"Bhjf1XnooUYRJ\"")
            .and().insertInto("MEDIA_FILE", 15690L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2075-10-01 11:34:06\"")
                .d("COPY_RIGHT", "\"vBEQmT5Aug0\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"m4UHwB6V7K5D1\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 41, " + 
                    " \"description_material\": \"BTuSpAQyk\", " + 
                    " \"description_introduction\": \"_EM_53484_XYZ_\", " + 
                    " \"description_prepare\": \"cnsnCAuk\", " + 
                    " \"description_main\": \"IScEdwlpoGBpSzt\", " + 
                    " \"description_safety\": \"AeH9wTmF07fccEL\", " + 
                    " \"description_notes\": \"Q\", " + 
                    " \"age_max\": -2147483548, " + 
                    " \"participants_max\": 2455, " + 
                    " \"time_max\": 520, " + 
                    " \"source\": \"Xmx3Ul6O\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"S9MGlDa8wRBhT\", " + 
                    " \"name\": \"\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 223, " + 
                    " \"mime_type\": \"WBjb5\", " + 
                    " \"uri\": \"EXJUIW\", " + 
                    " \"name\": \"_UdoQhD4ILS\", " + 
                    " \"author\": \"Qcw\" " + 
                    " }, " + 
                    " \"activities_count\": 941 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 571, " + 
                    " \"mime_type\": \"5EIuQb\", " + 
                    " \"uri\": \"pp\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"uOwuaanOl7xNjb\", " + 
                    " \"uri\": \"1Do7V9nrleAk\", " + 
                    " \"name\": \"MNzPako\", " + 
                    " \"copy_right\": \"fhKE\", " + 
                    " \"author\": \"UX\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"rHg\", " + 
                    " \"name\": \"fSbrVN1jPX8IqWG\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"\", " + 
                    " \"authorization_level\": 553 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 282, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 22, " + 
                    " \"ratings_sum\": 732, " + 
                    " \"ratings_average\": 0.8736574120994245, " + 
                    " \"favourites_count\": 672, " + 
                    " \"related\": [ " + 
                    " 317, " + 
                    " 486, " + 
                    " 232, " + 
                    " 16, " + 
                    " 432 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_82_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_82_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 9756L)
                .d("URI", "\"_EM_47786_XYZ_\"")
            .and().insertInto("TAG", 9755L)
                .d("GRP", "\"mI3WHm8\"")
                .d("NAME", "\"_EM_73948_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 9758L)
                .d("URI", "\"qy\"")
            .and().insertInto("TAG", 9757L)
                .d("GRP", "\"_EM_73949_XYZ_\"")
                .d("NAME", "\"4D\"")
                .r("MEDIA_FILE_ID", 9758L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 131261, " + 
                    " \"name\": \"mo\", " + 
                    " \"description_material\": \"H0g_KKAmlbwV\", " + 
                    " \"description_introduction\": \"_KUh8C7l1n0C\", " + 
                    " \"description_safety\": \"_EM_28943_XYZ_\", " + 
                    " \"description_notes\": \"H0g_KKAmlbwV\", " + 
                    " \"age_min\": -2143249068, " + 
                    " \"age_max\": -2143249068, " + 
                    " \"participants_min\": 8654836, " + 
                    " \"participants_max\": 8654836, " + 
                    " \"time_min\": -2143249068, " + 
                    " \"time_max\": -308, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"_EM_73946_XYZ_\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 4835178698993212355, " + 
                    " \"group\": \"eNKiY7VAI4Unlh1F\", " + 
                    " \"name\": \"_EM_28945_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 4611686018427387904, " + 
                    " \"mime_type\": \"_EM_28946_XYZ_\", " + 
                    " \"name\": \"_EM_28948_XYZ_\", " + 
                    " \"copy_right\": \"_EM_28949_XYZ_\", " + 
                    " \"author\": \"kAg\" " + 
                    " }, " + 
                    " \"activities_count\": 209 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -3402891343679084544, " + 
                    " \"name\": \"H\u003dFKG4\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"RhpcBu9tOn0dxgZ\", " + 
                    " \"uri\": \"_EM_28951_XYZ_\", " + 
                    " \"name\": \"_EM_28952_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 869 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 163, " + 
                    " \"name\": \"_EM_28956_XYZ_\", " + 
                    " \"activities_count\": 950 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"xGhJj\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"_EM_28963_XYZ_\", " + 
                    " \"uri\": \"_EM_28964_XYZ_\", " + 
                    " \"name\": \"_EM_28965_XYZ_\", " + 
                    " \"copy_right\": \"_EM_28966_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": -65352 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 709, " + 
                    " \"media_file\": { " + 
                    " \"id\": 323, " + 
                    " \"mime_type\": \"_EM_28970_XYZ_\", " + 
                    " \"name\": \"_EM_28972_XYZ_\", " + 
                    " \"copy_right\": \"VZifwko0WCQBCsEm\" " + 
                    " }, " + 
                    " \"activities_count\": -434257235 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 218068016, " + 
                    " \"mime_type\": \"_EM_28974_XYZ_\", " + 
                    " \"name\": \"_EM_73947_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 405, " + 
                    " \"name\": \"_EM_61965_XYZ_\", " + 
                    " \"authorization_level\": 397 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"ratings_count\": -523520, " + 
                    " \"ratings_sum\": -523655, " + 
                    " \"favourites_count\": 649, " + 
                    " \"related\": [] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_83_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_83_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 21216L)
                .d("AUTHOR", "\"INTO\"")
                .d("CAPTURE_DATE", "\"1985-07-22 23:57:58\"")
                .d("COPY_RIGHT", "\"I2g1fYiqq55\"")
                .d("MIME_TYPE", "\"_EM_111196_XYZ_\"")
                .d("NAME", "NULL")
                .d("URI", "\"yWNmuUUU^B\"")
            .and().insertInto("MEDIA_FILE", 21217L)
                .d("AUTHOR", "\"904726\"")
                .d("CAPTURE_DATE", "\"2004-05-20 09:13:49\"")
                .d("COPY_RIGHT", "\"UORsMzL\"")
                .d("MIME_TYPE", "\"884623\"")
                .d("NAME", "\"EvV9W2BUxu\"")
                .d("URI", "\"zp0ULWKpPL\"")
            .and().insertInto("MEDIA_FILE", 21218L)
                .d("AUTHOR", "\"NbyF8lLrgou\"")
                .d("CAPTURE_DATE", "\"2013-05-14 03:47:21\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_110581_XYZ_\"")
                .d("NAME", "NULL")
                .d("URI", "\"S9MGlDa8wRBhT\"")
            .and().insertInto("MEDIA_FILE", 21219L)
                .d("AUTHOR", "\"lWQRl__9yG\"")
                .d("CAPTURE_DATE", "\"2004-06-17 11:23:41\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"ACTIVITY_PROPERTIES\"")
                .d("NAME", "\"_EM_110810_XYZ_\"")
                .d("URI", "\"DchhvEE3Dq03q\"")
            .and().insertInto("MEDIA_FILE", 21846L)
                .d("URI", "\"UUywU_iUU\"")
            .and().insertInto("TAG", 21845L)
                .d("GRP", "\"bTIY\"")
                .d("NAME", "\"9pymM\"")
                .r("MEDIA_FILE_ID", 21216L)
            .and().insertInto("MEDIA_FILE", 21848L)
                .d("URI", "\"Bhjf1XnooUYRJ\"")
            .and().insertInto("TAG", 21847L)
                .d("GRP", "\"3mi\"")
                .d("NAME", "\"_EM_110582_XYZ_\"")
                .r("MEDIA_FILE_ID", 21217L)
            .and().insertInto("MEDIA_FILE", 21850L)
                .d("URI", "\"1138484\"")
            .and().insertInto("TAG", 21849L)
                .d("GRP", "\"901945\"")
                .d("NAME", "\"i9nme6EF\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 21852L)
                .d("URI", "\"91spU_U\"")
            .and().insertInto("TAG", 21851L)
                .d("GRP", "\"VJqlPY\"")
                .d("NAME", "\"_EM_110583_XYZ_\"")
                .r("MEDIA_FILE_ID", 21216L)
            .and().insertInto("MEDIA_FILE", 21854L)
                .d("URI", "\"yt\"")
            .and().insertInto("TAG", 21853L)
                .d("GRP", "\"q820S6RRygWfVMh\"")
                .d("NAME", "\"EP?Xkdg\"")
                .r("MEDIA_FILE_ID", 21216L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 8233, " + 
                    " \"name\": \"_EM_110562_XYZ_\", " + 
                    " \"description_material\": \"BTuSpAQyk\", " + 
                    " \"description_introduction\": \"`q_WhPd_w\", " + 
                    " \"description_prepare\": \"cnsnCAuk\", " + 
                    " \"description_main\": \"_EM_110808_XYZ_\", " + 
                    " \"description_safety\": \"jHaqJQEj\", " + 
                    " \"description_notes\": \"CBwYI4C7nPTIQbpO\", " + 
                    " \"age_min\": -699, " + 
                    " \"age_max\": -1937637150, " + 
                    " \"participants_min\": -31937, " + 
                    " \"participants_max\": 264632, " + 
                    " \"time_max\": -523768, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"Xmx3Ul6O\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 284, " + 
                    " \"group\": \"_EM_110578_XYZ_\", " + 
                    " \"name\": \"_EM_110579_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"8jqeOGy63MM1\", " + 
                    " \"uri\": \"bGI6rWIc\", " + 
                    " \"name\": \"fsS7yG6rQ5\", " + 
                    " \"copy_right\": \"_EM_110580_XYZ_\", " + 
                    " \"author\": \"3Ea\" " + 
                    " }, " + 
                    " \"activities_count\": 0 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"uOwuaanOl7xNjb\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"rHg\", " + 
                    " \"name\": \"fSbrVN1jPX8IqWG\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"MQe\", " + 
                    " \"authorization_level\": -8662 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 2048, " + 
                    " \"ratings_count\": 22, " + 
                    " \"ratings_sum\": 732, " + 
                    " \"ratings_average\": 1.899423818937125, " + 
                    " \"favourites_count\": 672, " + 
                    " \"related\": [ " + 
                    " 317, " + 
                    " 232, " + 
                    " 16, " + 
                    " 432 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_84_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_84_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 15688L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"Tn9hWNVRrQich\"")
                .d("MIME_TYPE", "\"0cd3GD5OIc\"")
                .d("NAME", "\"_EM_96017_XYZ_\"")
                .d("URI", "\"_EM_73890_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 15689L)
                .d("AUTHOR", "\"E\"")
                .d("CAPTURE_DATE", "\"2040-11-16 21:21:30\"")
                .d("COPY_RIGHT", "\"jsw9jJzR\"")
                .d("MIME_TYPE", "\"\"")
                .d("NAME", "\"TIyb0VDlGTO2\"")
                .d("URI", "\"Bhjf1XnooUYRJ\"")
            .and().insertInto("MEDIA_FILE", 15690L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2075-10-01 11:34:06\"")
                .d("COPY_RIGHT", "\"vBEQmT5Aug0\"")
                .d("MIME_TYPE", "\"gxMdLUOCaswKrr\"")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_96018_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 21445L)
                .d("URI", "\"xUUrQjUV^<IeWl\"")
            .and().insertInto("TAG", 21444L)
                .d("GRP", "\"QIM\"")
                .d("NAME", "\"4ZT\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 21447L)
                .d("URI", "\"_EM_96019_XYZ_\"")
            .and().insertInto("TAG", 21446L)
                .d("GRP", "\"pTPUFEYLaN\"")
                .d("NAME", "\"LFnsGIjKdbg\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 21449L)
                .d("URI", "\"9l0vBtM3eWY\"")
            .and().insertInto("TAG", 21448L)
                .d("GRP", "\"MBpMV2\"")
                .d("NAME", "\"Mkbp3gU8LZYQo1\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 41, " + 
                    " \"description_material\": \"BTuSpAQyk\", " + 
                    " \"description_introduction\": \"_EM_53484_XYZ_\", " + 
                    " \"description_prepare\": \"cnsnCAuk\", " + 
                    " \"description_main\": \"_EM_96015_XYZ_\", " + 
                    " \"description_safety\": \"AeH9wTmF07fccEL\", " + 
                    " \"description_notes\": \"_EM_96016_XYZ_\", " + 
                    " \"age_min\": -699, " + 
                    " \"age_max\": -2147483548, " + 
                    " \"participants_max\": 2455, " + 
                    " \"time_min\": -1233486200, " + 
                    " \"time_max\": 520, " + 
                    " \"source\": \"Xmx3Ul6\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 42, " + 
                    " \"group\": \"S9MGlDa8wRBhT\", " + 
                    " \"name\": \"\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 1048799, " + 
                    " \"mime_type\": \"WBjb5\", " + 
                    " \"uri\": \"EXJUIW\", " + 
                    " \"name\": \"_UdoQhD4ILS\", " + 
                    " \"author\": \"Qcw\" " + 
                    " }, " + 
                    " \"activities_count\": -523347 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 571, " + 
                    " \"mime_type\": \"5EIuQb\", " + 
                    " \"uri\": \"pp\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"uOwuaanOl7xNjb\", " + 
                    " \"uri\": \"1Do7V9nrleAk\", " + 
                    " \"name\": \"MNzPako\", " + 
                    " \"copy_right\": \"fhKE\", " + 
                    " \"author\": \"UX\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"rHg\", " + 
                    " \"name\": \"fSbrVN1jPX8IqWG\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"\", " + 
                    " \"authorization_level\": 553 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 282, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 22, " + 
                    " \"ratings_sum\": 732, " + 
                    " \"ratings_average\": 0.8736574120994245, " + 
                    " \"favourites_count\": 672, " + 
                    " \"related\": [ " + 
                    " 317, " + 
                    " 486, " + 
                    " 232, " + 
                    " 16, " + 
                    " 432 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_38_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_85_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_85_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_41953_XYZ_")
                .get(baseUrlOfSut + "/api/v1/system/roles?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_109_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"\", " + 
                    " \"uri\": \"SUHUZ1kDB5\", " + 
                    " \"copy_right\": \"v5n71nqroWDVwRz\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_41958_XYZ_")
                .get(baseUrlOfSut + "/api/v1/users?" + 
                    "name=8q5&" + 
                    "attrs=_EM_41957_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_4 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_introduction\": \"iEKWfE\", " + 
                    " \"description_prepare\": \"_EM_41960_XYZ_\", " + 
                    " \"description_notes\": \"dQ\", " + 
                    " \"age_min\": -2147483254, " + 
                    " \"age_max\": -585, " + 
                    " \"participants_max\": 463, " + 
                    " \"time_min\": 888, " + 
                    " \"time_max\": 56, " + 
                    " \"featured\": false, " + 
                    " \"activity\": { " + 
                    " \"id\": 674, " + 
                    " \"ratings_sum\": 5292105278584120085, " + 
                    " \"ratings_average\": 0.9163166716292802 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T20:54:40.118Z"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("iEKWfE"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("_EM_41960_XYZ_"))
                .body("'properties_revisions'[0].'description_notes'", containsString("dQ"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-2.147483254E9))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-585.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(463.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(888.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(56.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties'.'date_created'", containsString("2024-05-30T20:54:40.118Z"))
                .body("'properties'.'description_introduction'", containsString("iEKWfE"))
                .body("'properties'.'description_prepare'", containsString("_EM_41960_XYZ_"))
                .body("'properties'.'description_notes'", containsString("dQ"))
                .body("'properties'.'age_min'", numberMatches(-2.147483254E9))
                .body("'properties'.'age_max'", numberMatches(-585.0))
                .body("'properties'.'participants_max'", numberMatches(463.0))
                .body("'properties'.'time_min'", numberMatches(888.0))
                .body("'properties'.'time_max'", numberMatches(56.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_4.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/755"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities/646")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        ValidatableResponse res_7 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 611, " + 
                    " \"key\": \"_EM_41985_XYZ_\", " + 
                    " \"value\": \"_EM_41986_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_7.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_41989_XYZ_")
                .get(baseUrlOfSut + "/api/v1/system/ping")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    /**
    * [test_86_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_86_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 21216L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"I2g1fYiqq55\"")
                .d("MIME_TYPE", "\"x\"")
                .d("NAME", "\"_EM_96214_XYZ_\"")
                .d("URI", "\"yWNmuUTRZB\"")
            .and().insertInto("MEDIA_FILE", 21217L)
                .d("AUTHOR", "\"mbczfTCs7\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"SRGeLcB6kFx9Z\"")
                .d("MIME_TYPE", "\"_EM_95028_XYZ_C\"")
                .d("NAME", "\"EvV9W2BU\"")
                .d("URI", "\"iW6RzaS\"")
            .and().insertInto("MEDIA_FILE", 21218L)
                .d("AUTHOR", "\"6QMZPRqxtTwwUs\"")
                .d("CAPTURE_DATE", "\"2013-05-14 03:47:21\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"DzpI5YjfxMm\"")
                .d("NAME", "\"_EM_95029_XYZ_\"")
                .d("URI", "\"nBxwMTIb4J2Jv\"")
            .and().insertInto("MEDIA_FILE", 21219L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_95030_XYZ_\"")
                .d("NAME", "\"_EM_96215_XYZ_\"")
                .d("URI", "\"DchhvEE3Dq03q\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 41, " + 
                    " \"name\": \"vWswS2tYhr\", " + 
                    " \"description_material\": \"BTuSpAQyk\", " + 
                    " \"description_introduction\": \"_EM_53484_XYZ_\", " + 
                    " \"description_prepare\": \"cnsnCAuk\", " + 
                    " \"description_safety\": \"AeH9wTmF07fccEL\", " + 
                    " \"description_notes\": \"Q\", " + 
                    " \"age_max\": -2147483548, " + 
                    " \"participants_min\": 704, " + 
                    " \"participants_max\": 2487, " + 
                    " \"time_max\": -523768, " + 
                    " \"source\": \"Xmx3Ul6O\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"aBYLrWnFp\", " + 
                    " \"name\": \"CY8ZmPtdbDXuw0V\", " + 
                    " \"activities_count\": 539 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": -32197, " + 
                    " \"mime_type\": \"5EIuQb\", " + 
                    " \"uri\": \"pp\", " + 
                    " \"author\": \"IKXFlmrXbE\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"uOwuaanOl7xNjb\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"rHg\", " + 
                    " \"name\": \"fSbrVN1jPX8IqWG\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"\", " + 
                    " \"authorization_level\": -15319 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 282, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_sum\": 732, " + 
                    " \"ratings_average\": 1.899423818937125, " + 
                    " \"related\": [ " + 
                    " 317, " + 
                    " 486, " + 
                    " 232, " + 
                    " 16, " + 
                    " 432 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_19_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_87_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_87_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=pWr6&" + 
                    "name=1iK1IlLpVKZw&" + 
                    "text=8trGI_N&" + 
                    "featured=true&" + 
                    "categories=QyvErzRuI90&" + 
                    "participants=pU0eVP4ZC8a&" + 
                    "durations=_EM_77566_XYZ_&" + 
                    "id=0&" + 
                    "my_favourites=false&" + 
                    "ratings_count_min=-4388222700053953785&" + 
                    "ratings_average_min=0.17083747439437302&" + 
                    "random=31&" + 
                    "favourites=809")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_77_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 451, " + 
                    " \"group\": \"J0G7xx\", " + 
                    " \"name\": \"3Gbwp\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags?group=ly09mMF6dpHk9UOD")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_61_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/profile?" + 
                    "group=_EM_77996_XYZ_&" + 
                    "name=1iK1IlLpVKZw&" + 
                    "attrs=pWr6&" + 
                    "min_activities_count=CkR")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'role_permissions'.size()", equalTo(18))
                .body("'role_permissions'", hasItems("activity_create", "activity_edit", "activity_edit_own", "auth_profile_edit", "auth_role_assignown", "category_create", "category_edit", "comment_create", "comment_edit", "comment_edit_own", "mediaitem_create", "mediaitem_edit", "mediaitem_edit_own", "rating_set_own", "reference_create", "reference_edit", "reference_edit_own", "system_message_read"))
                .body("'name'", containsString("INTEGRATION TEST MODERATOR"))
                .body("'role'", containsString("moderator"));
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 451, " + 
                    " \"activities_count\": 33503 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_60_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories?" + 
                    "min_activities_count=33503&" + 
                    "attrs=pWr6")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_5 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_77575_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_77577_XYZ_\", " + 
                    " \"description_notes\": \"3Gbwp\", " + 
                    " \"time_max\": 288, " + 
                    " \"source\": \"_EM_77579_XYZ_\", " + 
                    " \"tags\": [], " + 
                    " \"media_files\": [], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"related\": [ " + 
                    " 281, " + 
                    " -5168772833060128477, " + 
                    " 409, " + 
                    " 581, " + 
                    " 97 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T20:55:07.342Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("_EM_77575_XYZ_"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("_EM_77577_XYZ_"))
                .body("'properties_revisions'[0].'description_notes'", containsString("3Gbwp"))
                .body("'properties_revisions'[0].'time_max'", numberMatches(288.0))
                .body("'properties_revisions'[0].'source'", containsString("_EM_77579_XYZ_"))
                .body("'properties_revisions'[0].'tags'.size()", equalTo(0))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(0))
                .body("'properties'.'date_created'", containsString("2024-05-30T20:55:07.342Z"))
                .body("'properties'.'description_material'", containsString("_EM_77575_XYZ_"))
                .body("'properties'.'description_prepare'", containsString("_EM_77577_XYZ_"))
                .body("'properties'.'description_notes'", containsString("3Gbwp"))
                .body("'properties'.'time_max'", numberMatches(288.0))
                .body("'properties'.'source'", containsString("_EM_77579_XYZ_"))
                .body("'properties'.'tags'.size()", equalTo(0))
                .body("'properties'.'media_files'.size()", equalTo(0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_5.extract().body().path("id").toString();
        
        
        ValidatableResponse res_6 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/0?my_favourites=_EM_77997_XYZ_&featured=_EM_77998_XYZ_&min_activities_count=aoIjMMGKHc4iA55&favourites=owTa9XpprmQIzot&name=_0x&text=WrDXhdI__qzcBK7&uri=uWrow1&attrs=2&group=i"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityProperties_369_isContentEqual
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_6.extract().statusCode()));
        
        ValidatableResponse res_7 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 560, " + 
                    " \"uri\": \"BpGy962mXPG4FD\", " + 
                    " \"name\": \"1iK1IlLpVKZw\", " + 
                    " \"copy_right\": \"_EM_77625_XYZ_\", " + 
                    " \"author\": \"4qNC6rgLjlknIt1\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_137_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_7.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?" + 
                    "uri=BpGy962mXPG4FD&" + 
                    "attrs=pWr6&" + 
                    "name=1iK1IlLpVKZw&" + 
                    "text=8trGI_N&" + 
                    "my_favourites=BpGy962mXPG4FD&" + 
                    "random=31&" + 
                    "featured=true&" + 
                    "time_1=_EM_77626_XYZ_&" + 
                    "min_activities_count=33503&" + 
                    "favourites=BpGy962mXPG4FD&" + 
                    "age_2=mXX4&" + 
                    "categories=QyvErzRuI90&" + 
                    "id=0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_9 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .patch(baseUrlOfSut + "/api/v2/activities/631?" + 
                    "my_favourites=wsNrW6CNotB6rOz7&" + 
                    "time_1=CssArR_&" + 
                    "ratings_average_min=&" + 
                    "text=Df3dZzWa1ma&" + 
                    "time_2=UvYZREpWOv&" + 
                    "attrs=U")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_9.extract().statusCode()));
    }


}
