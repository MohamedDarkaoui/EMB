import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2024-06-01T21:19:15.005+02:00[Europe/Paris]
 * <br>
 * The generated test suite contains 100 tests
 * <br>
 * Covered targets: 1554
 * <br>
 * Used time: 2h 0m 11s
 * <br>
 * Needed budget for current results: 98%
 * <br>
 * This file contains test cases that are likely to indicate faults.
 */
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.se.devscout.scoutapi.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("MEDIA_FILE","ACTIVITY_PROPERTIES_MEDIA_FILE","MEDIA_FILE_KEYWORDS","TAG","ACTIVITY_PROPERTIES_TAG","TAG_DERIVED","USERS","ACTIVITY_PROPERTIES","ACTIVITY_RATING","ACTIVITY_RELATION","USER_IDENTITY","ACTIVITY","ACTIVITY_DERIVED","SYSTEM_MESSAGE"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * [test_0_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_0_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "attrs=_EM_1792_XYZ_&" + 
                    "name=_EM_1793_XYZ_&" + 
                    "text=_EM_1794_XYZ_&" + 
                    "age_1=_EM_1796_XYZ_&" + 
                    "participants=_EM_1798_XYZ_&" + 
                    "time_1=_EM_1799_XYZ_&" + 
                    "time_2=_EM_1800_XYZ_&" + 
                    "my_favourites=false&" + 
                    "ratings_average_min=0.5736932341881326")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
    }
    
    
    /**
    * [test_1_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_1_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=_EM_1768_XYZ_&" + 
                    "text=_EM_1770_XYZ_&" + 
                    "featured=false&" + 
                    "categories=_EM_1771_XYZ_&" + 
                    "participants=_EM_1773_XYZ_&" + 
                    "durations=RsHD2jHD&" + 
                    "my_favourites=true&" + 
                    "ratings_count_min=972&" + 
                    "random=668")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_77_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
    }
    
    
    /**
    * [test_2_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_2_with500() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/336/file?EMextraParam123=_EM_5_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_3_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_3_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/5866408168840275873?attrs=_EM_1716_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_4_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_4_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/568?EMextraParam123=_EM_3438_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_5_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_5_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1715_XYZ_")
                .delete(baseUrlOfSut + "/api/v2/tags/103?EMextraParam123=_EM_1714_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_6_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_6_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1720_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/users/384")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_7_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_7_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/173")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_8_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_8_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/categories/241")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_9_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_9_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1933_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=_EM_1932_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_10_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_10_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1696_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 995, " + 
                    " \"date_created\": \"1967-12-01T22:34:32\", " + 
                    " \"date_updated\": \"2034-06-24T10:56:12\", " + 
                    " \"description_material\": \"_EM_1656_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_1658_XYZ_\", " + 
                    " \"description_main\": \"_EM_1659_XYZ_\", " + 
                    " \"description_safety\": \"_EM_1660_XYZ_\", " + 
                    " \"age_max\": -2147482861, " + 
                    " \"participants_max\": 465, " + 
                    " \"time_min\": 261, " + 
                    " \"featured\": false, " + 
                    " \"author\": { " + 
                    " \"email_address\": \"_EM_1692_XYZ_\", " + 
                    " \"authorization_level\": 667 " + 
                    " } " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v2/activities/995")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_11_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_11_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .patch(baseUrlOfSut + "/api/v1/activities/767")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_12_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_12_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1846_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_1814_XYZ_\", " + 
                    " \"date_published\": \"2087-07-05T23:05:31\", " + 
                    " \"date_created\": \"1939-13-30T09:32:14\", " + 
                    " \"description_introduction\": \"_EM_1816_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_1817_XYZ_\", " + 
                    " \"description_main\": \"_EM_1818_XYZ_\", " + 
                    " \"description_notes\": \"_EM_1820_XYZ_\", " + 
                    " \"age_min\": -658, " + 
                    " \"participants_min\": 285, " + 
                    " \"time_max\": 591, " + 
                    " \"tags\": [ " + 
                    " {}, " + 
                    " { " + 
                    " \"id\": 914, " + 
                    " \"name\": \"_EM_1829_XYZ_\", " + 
                    " \"activities_count\": 469 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"_EM_1842_XYZ_\", " + 
                    " \"email_address\": \"_EM_1843_XYZ_\", " + 
                    " \"authorization_level\": 77 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 780, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.1932633073515312 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_13_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_13_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_14_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_14_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_15_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_15_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"authorization_level\": 46 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_16_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_16_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1923_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=_EM_1922_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_17_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_17_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/categories?EMextraParam123=_EM_1930_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_18_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_18_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v2/activities/574?EMextraParam123=_EM_2045_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_19_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_19_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_2053_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/media_files/592?EMextraParam123=_EM_2052_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_20_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_20_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_2057_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"_EM_2054_XYZ_\", " + 
                    " \"valid_to\": \"1945-05-12T18:59:10\", " + 
                    " \"valid_from\": \"1940-10-02T10:23:60\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/392?EMextraParam123=_EM_2056_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_21_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_21_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v2/tags/5245066193562311794?EMextraParam123=_EM_2064_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_22_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_22_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/users/842")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_23_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_23_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/activities/186")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_24_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_24_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_2121_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/categories/893")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_25_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_25_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 113 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_26_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_26_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 64226L)
                .d("URI", "\"ixRuU\"")
            .and().insertInto("TAG", 64225L)
                .d("GRP", "\"m\"")
                .d("NAME", "\"xke7wY\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 64228L)
                .d("URI", "\"1J\"")
            .and().insertInto("TAG", 64227L)
                .d("GRP", "\"PhjGyEIgHovz9x2\"")
                .d("NAME", "\"_ZqgcO2Wr\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 64230L)
                .d("URI", "\"XM\"")
            .and().insertInto("TAG", 64229L)
                .d("GRP", "\"pZTVgrnr\"")
                .d("NAME", "\"CMtCv8tbE3Re45\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 64232L)
                .d("URI", "\"8FXZqdi\"")
            .and().insertInto("TAG", 64231L)
                .d("GRP", "\"TGvuyuwQ2D\"")
                .d("NAME", "\"wB7F1\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 64234L)
                .d("URI", "\"4O1N\"")
            .and().insertInto("TAG", 64233L)
                .d("GRP", "\"4DvpCM3Z\"")
                .d("NAME", "\"tGN02OTlOLg_o\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/4/file?" + 
                    "name=c&" + 
                    "group=pqbDHKKT06&" + 
                    "uri=&" + 
                    "min_activities_count=mjXeRXW_mRz5L&" + 
                    "valid=WtI7TdrHfrHuFt")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_268_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_27_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_27_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_5113_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_33_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_28_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_28_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_5126_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_29_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_29_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/users/243")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_30_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_30_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/users/113?EMextraParam123=_EM_4982_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_48_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_31_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_31_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/698849193")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_41_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_32_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_32_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/tags/170?EMextraParam123=_EM_3452_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_33_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_33_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 2993L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_19892_XYZ_\"")
                .d("NAME", "NULL")
                .d("URI", "\"RasmcG\"")
            .and().insertInto("MEDIA_FILE", 2994L)
                .d("AUTHOR", "\"_EM_19893_XYZ_\"")
                .d("CAPTURE_DATE", "\"1984-02-27 00:08:06\"")
                .d("COPY_RIGHT", "\"8p2mrCH\"")
                .d("MIME_TYPE", "\"WaHL81txI0mbJ\"")
                .d("NAME", "\"\"")
                .d("URI", "\"7zZuLwMsVRJVU\"")
            .and().insertInto("MEDIA_FILE", 3000L)
                .d("URI", "\"g2ZHpUJ4h\"")
            .and().insertInto("USERS", 2999L)
                .d("AUTHORIZATION_LEVEL", "130")
                .d("NAME", "\"_EM_19894_XYZ_\"")
            .and().insertInto("ACTIVITY", 2998L)
            .and().insertInto("ACTIVITY", 2997L)
            .and().insertInto("ACTIVITY_PROPERTIES", 2996L)
                .r("ACTIVITY_ID", 2998L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 2995L)
                .r("ACTIVITY_PROPERTIES_ID", 2996L)
                .r("MEDIA_FILE_ID", 3000L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 3006L)
                .d("URI", "\"vJSPYxr3\"")
            .and().insertInto("USERS", 3005L)
                .d("AUTHORIZATION_LEVEL", "748")
                .d("NAME", "\"_EM_19895_XYZ_\"")
            .and().insertInto("ACTIVITY", 3004L)
            .and().insertInto("ACTIVITY", 3003L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3002L)
                .r("ACTIVITY_ID", 3004L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3001L)
                .r("ACTIVITY_PROPERTIES_ID", 3002L)
                .r("MEDIA_FILE_ID", 3000L)
                .d("FEATURED", "false")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v1/media_files/182")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_34_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_34_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/categories/152")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_35_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_35_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 803L)
            .and().insertInto("USERS", 2230L)
                .d("AUTHORIZATION_LEVEL", "-16776428")
                .d("NAME", "\"_EM_132948_XYZ_\"")
            .and().insertInto("ACTIVITY", 2229L)
            .and().insertInto("ACTIVITY_RATING", 2228L)
                .r("ACTIVITY_ID", 803L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "8192")
            .and().insertInto("USERS", 2233L)
                .d("AUTHORIZATION_LEVEL", "33553646")
                .d("NAME", "\"zBu0x\"")
            .and().insertInto("ACTIVITY", 2232L)
            .and().insertInto("ACTIVITY_RATING", 2231L)
                .r("ACTIVITY_ID", 2229L)
                .r("USER_ID", 2233L)
                .d("FAVOURITE", "false")
                .d("RATING", "2596")
            .and().insertInto("USERS", 42946L)
                .d("AUTHORIZATION_LEVEL", "353")
                .d("NAME", "\"5Zw4Vu\"")
            .and().insertInto("USER_IDENTITY", 42945L)
                .d("DATE_CREATED", "\"1913-11-14 03:20:45\"")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"fIAWL\"")
                .r("USER_ID", 2230L)
            .and().insertInto("USERS", 42948L)
                .d("AUTHORIZATION_LEVEL", "254")
                .d("NAME", "\"kOJoM0eA\"")
            .and().insertInto("USER_IDENTITY", 42947L)
                .d("DATE_CREATED", "\"1984-09-26 00:55:17\"")
                .d("TYPE", "\"F\"")
                .d("VALUE", "\"GMS5\"")
                .d("USER_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/FavouritesResourceV1_66_put
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_36_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_36_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/895/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_37_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_37_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1645_XYZ_")
                .delete(baseUrlOfSut + "/api/v2/activities/133/rating?EMextraParam123=_EM_1644_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_38_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_38_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1650_XYZ_")
                .get(baseUrlOfSut + "/api/v1/activities/753/rating?EMextraParam123=_EM_1649_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_39_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_39_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1652_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/activities/97/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_40_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_40_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 5303L)
            .and().insertInto("MEDIA_FILE", 11002L)
                .d("URI", "\"_EM_52992_XYZ_\"")
            .and().insertInto("TAG", 11001L)
                .d("GRP", "\"BBE3v4\"")
                .d("NAME", "\"Ey\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 11004L)
                .d("URI", "\"_EM_52993_XYZ_\"")
            .and().insertInto("TAG", 11003L)
                .d("GRP", "\"WNUOiZ\"")
                .d("NAME", "\"GQQlqkZoPD\"")
                .r("MEDIA_FILE_ID", 11004L)
            .and().insertInto("MEDIA_FILE", 11006L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 11005L)
                .d("GRP", "\"zgqta6Y2F05\"")
                .d("NAME", "\"cdMz\"")
                .r("MEDIA_FILE_ID", 11006L)
            .and().insertInto("MEDIA_FILE", 11008L)
                .d("URI", "\"bRj9F24vaZ\"")
            .and().insertInto("TAG", 11007L)
                .d("GRP", "\"Z\"")
                .d("NAME", "\"_EM_52994_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 11010L)
                .d("URI", "\"_EM_52995_XYZ_\"")
            .and().insertInto("TAG", 11009L)
                .d("GRP", "\"_EM_52996_XYZ_\"")
                .d("NAME", "\"Af\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_41_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_41_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3763L)
            .and().insertInto("USERS", 54356L)
                .d("AUTHORIZATION_LEVEL", "83")
                .d("NAME", "\"xu8uXrjQMx9H\"")
            .and().insertInto("ACTIVITY", 54355L)
            .and().insertInto("ACTIVITY", 54354L)
            .and().insertInto("ACTIVITY_RELATION", 54353L)
                .r("ACTIVITY_1_ID", 3763L)
                .r("ACTIVITY_2_ID", 54354L)
                .d("OWNER_ID", "3")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_42_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_42_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 954 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages?EMextraParam123=_EM_29144_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_78_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_43_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_43_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_71281_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_40_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_44_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_44_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3433_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .patch(baseUrlOfSut + "/api/v2/activities/532?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_45_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_45_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/6?" + 
                    "attrs=_PJOnorHdsXxRHb&" + 
                    "group=IEi8")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_46_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_46_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3504_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .patch(baseUrlOfSut + "/api/v1/activities/703")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_47_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_47_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3506_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/activities/573")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_48_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_48_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -5048909401158623006, " + 
                    " \"email_address\": \"_EM_51790_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_62_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_49_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_49_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 60L)
                .d("AUTHOR", "\"HjxYK3QIHPUxLHsR\"")
                .d("CAPTURE_DATE", "\"1907-05-16 20:45:57\"")
                .d("COPY_RIGHT", "\"qx5CwVHHkoA\"")
                .d("MIME_TYPE", "\"__ix9FmufDn\"")
                .d("NAME", "\"_EM_6644_XYZ_\"")
                .d("URI", "\"a\"")
            .and().insertInto("MEDIA_FILE", 61L)
                .d("AUTHOR", "\"_EM_6645_XYZ_\"")
                .d("CAPTURE_DATE", "\"2038-07-23 22:15:24\"")
                .d("COPY_RIGHT", "\"jH73YrIh26CoRL\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"MEKb0\"")
                .d("URI", "\"1\"")
            .and().insertInto("MEDIA_FILE", 62L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2015-08-21 03:51:24\"")
                .d("COPY_RIGHT", "\"A1dx\"")
                .d("MIME_TYPE", "\"_EM_6646_XYZ_\"")
                .d("NAME", "\"KYiY\"")
                .d("URI", "\"JegNOr0tF4S\"")
            .and().insertInto("MEDIA_FILE", 63L)
                .d("AUTHOR", "\"_EM_6647_XYZ_\"")
                .d("CAPTURE_DATE", "\"2046-09-13 22:53:32\"")
                .d("COPY_RIGHT", "\"2uV\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_6648_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/-16777080?verify_unused=true")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_50_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_50_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3654_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 696, " + 
                    " \"group\": \"_EM_3646_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_60_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_51_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_51_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"Nztr2_8XcIln1q\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/4")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_100_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_52_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_52_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 28L)
            .and().insertInto("ACTIVITY", 29L)
            .and().insertInto("ACTIVITY", 30L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"IulyGnPesT\", " + 
                    " \"name\": \"VCV\", " + 
                    " \"author\": \"h2clN9gzf5xMx\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_109_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_53_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_53_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 2062L)
                .d("KEY", "\"_EM_16539_XYZ_\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"316T9\"")
            .and().insertInto("SYSTEM_MESSAGE", 2063L)
                .d("KEY", "\"_EM_16540_XYZ_\"")
                .d("VALID_FROM", "\"1976-01-01 21:11:28\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_16541_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 2064L)
                .d("KEY", "\"KiLF9avd7f8v2bp0\"")
                .d("VALID_FROM", "\"2088-04-25 01:37:00\"")
                .d("VALID_TO", "\"1913-06-24 20:43:22\"")
                .d("VALUE", "\"sN\"")
            .and().insertInto("SYSTEM_MESSAGE", 2065L)
                .d("KEY", "\"5df\"")
                .d("VALID_FROM", "\"1932-11-18 13:01:08\"")
                .d("VALID_TO", "\"1963-11-08 15:44:07\"")
                .d("VALUE", "\"_EM_16542_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 1983L)
                .d("KEY", "\"4\"")
                .d("VALID_FROM", "\"1989-08-31 05:04:33\"")
                .d("VALID_TO", "\"2041-03-01 07:24:25\"")
                .d("VALUE", "\"8935732\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_16036_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"_EM_16033_XYZ_\", " + 
                    " \"value\": \"_EM_16034_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/1983")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_102_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_54_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_54_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1767L)
            .and().insertInto("ACTIVITY", 1768L)
            .and().insertInto("ACTIVITY", 1769L)
            .and().insertInto("ACTIVITY", 1770L)
            .and().insertInto("USERS", 38898L)
                .d("AUTHORIZATION_LEVEL", "119")
                .d("NAME", "\"5oLVTCzOoASb26\"")
            .and().insertInto("ACTIVITY", 38897L)
            .and().insertInto("ACTIVITY_RATING", 38896L)
                .r("ACTIVITY_ID", 1769L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 38901L)
                .d("AUTHORIZATION_LEVEL", "66284")
                .d("NAME", "\"7bZ\"")
            .and().insertInto("ACTIVITY", 38900L)
            .and().insertInto("ACTIVITY_RATING", 38899L)
                .r("ACTIVITY_ID", 1767L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "175")
            .and().insertInto("USERS", 38904L)
                .d("AUTHORIZATION_LEVEL", "795")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 38903L)
            .and().insertInto("ACTIVITY_RATING", 38902L)
                .r("ACTIVITY_ID", 38903L)
                .r("USER_ID", 38898L)
                .d("FAVOURITE", "true")
                .d("RATING", "0")
            .and().insertInto("MEDIA_FILE", 39009L)
                .d("AUTHOR", "\"U8pGisntCH3kEUY\"")
                .d("CAPTURE_DATE", "\"1922-01-31 05:42:03\"")
                .d("COPY_RIGHT", "\"ZN7d39ndfsoKf\"")
                .d("MIME_TYPE", "\"3Pl\"")
                .d("NAME", "\"g\"")
                .d("URI", "\"_dltu8DiV\"")
            .and().insertInto("MEDIA_FILE", 39010L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"aOzlrf\"")
                .d("URI", "\"bdia\"")
            .and().insertInto("MEDIA_FILE", 39011L)
                .d("AUTHOR", "\"4DYARmfhY4DyV\"")
                .d("CAPTURE_DATE", "\"2028-03-06 18:54:25\"")
                .d("COPY_RIGHT", "\"q0QP5D1\"")
                .d("MIME_TYPE", "\"4YBp\"")
                .d("NAME", "\"UwywDM[r\"")
                .d("URI", "\"_EM_124312_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 39012L)
                .d("AUTHOR", "\"a\"")
                .d("CAPTURE_DATE", "\"1989-06-05 11:07:23\"")
                .d("COPY_RIGHT", "\"UAE\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"bwkVGu\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": -1388038375, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities/-845875969041090791/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_55_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_55_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1813_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 694, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities/694/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_56_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_56_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 866L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "\"2087-01-19 19:36:23\"")
                .d("COPY_RIGHT", "\"_EM_10811_XYZ_\"")
                .d("MIME_TYPE", "\"N6W\"")
                .d("NAME", "NULL")
                .d("URI", "\"yN4oLgxt\"")
            .and().insertInto("MEDIA_FILE", 867L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2001-08-07 20:51:23\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"wErCttZSLHW\"")
                .d("NAME", "\"S9cXQo\"")
                .d("URI", "\"sKSI4D5jR0UDj\"")
            .and().insertInto("MEDIA_FILE", 868L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2042-06-19 15:14:10\"")
                .d("COPY_RIGHT", "\"96l\"")
                .d("MIME_TYPE", "\"i0qKG9gbBy\"")
                .d("NAME", "\"Lt8Mu7EC\"")
                .d("URI", "\"B\"")
            .and().insertInto("MEDIA_FILE", 869L)
                .d("AUTHOR", "\"ZkcNuVLvC\"")
                .d("CAPTURE_DATE", "\"2039-09-04 11:55:31\"")
                .d("COPY_RIGHT", "\"Y\"")
                .d("MIME_TYPE", "\"_EM_10812_XYZ_\"")
                .d("NAME", "NULL")
                .d("URI", "\"0Nt2NuqX_Ru5Z\"")
            .and().insertInto("MEDIA_FILE", 870L)
                .d("AUTHOR", "\"50KbLKn17eHD8\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"S_m5Txu8\"")
                .d("MIME_TYPE", "\"_EM_10813_XYZ_\"")
                .d("NAME", "\"D6\"")
                .d("URI", "\"_EM_10814_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 944, " + 
                    " \"uri\": \"_EM_3776_XYZ_\", " + 
                    " \"copy_right\": \"_EM_3778_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/944")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_295_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_57_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_57_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 392L)
                .d("URI", "\"LPAVSXy8fUJz\"")
            .and().insertInto("TAG", 391L)
                .d("GRP", "\"_EM_8436_XYZ_\"")
                .d("NAME", "\"_EM_8437_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 390L)
                .r("TAG_ID", 391L)
                .d("ACTIVITIES_COUNT", "788")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"_EM_8435_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"name\": \"_EM_4760_XYZ_\", " + 
                    " \"copy_right\": \"_EM_4761_XYZ_\", " + 
                    " \"author\": \"_EM_4762_XYZ_\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_58_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_58_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 4865L)
            .and().insertInto("ACTIVITY", 4866L)
            .and().insertInto("ACTIVITY", 4867L)
            .and().insertInto("ACTIVITY", 4868L)
            .and().insertInto("USERS", 4871L)
                .d("AUTHORIZATION_LEVEL", "-33553572")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 4870L)
            .and().insertInto("ACTIVITY_RATING", 4869L)
                .r("ACTIVITY_ID", 4867L)
                .r("USER_ID", 4871L)
                .d("FAVOURITE", "true")
                .d("RATING", "538")
            .and().insertInto("MEDIA_FILE", 5975L)
                .d("URI", "\"_EM_47691_XYZ_\"")
            .and().insertInto("TAG", 5974L)
                .d("GRP", "\"CsIwokrQJJ8QEMK\"")
                .d("NAME", "\"A2fqW\"")
            .and().insertInto("TAG_DERIVED", 5973L)
                .r("TAG_ID", 5974L)
                .d("ACTIVITIES_COUNT", "-7941")
            .and().insertInto("MEDIA_FILE", 5978L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 5977L)
                .d("GRP", "\"_EM_47692_XYZ_\"")
                .d("NAME", "\"gJp2N\"")
            .and().insertInto("TAG_DERIVED", 5976L)
                .r("TAG_ID", 5977L)
                .d("ACTIVITIES_COUNT", "-361165290")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_28556_XYZ_")
                .get(baseUrlOfSut + "/api/v1/system/ping?EMextraParam123=_EM_28555_XYZ_")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/87/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " -1821969066208549408, " + 
                    " -1114989644, " + 
                    " 955, " + 
                    " 62, " + 
                    " 580 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=42")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
        
        
        ValidatableResponse res_3 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users?" + 
                    "name=_EM_47690_XYZ_&" + 
                    "attrs=_EM_28562_XYZ_&" + 
                    "EMextraParam123=_EM_28563_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities/722/rating?EMextraParam123=_EM_28565_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "group=_EM_28567_XYZ_&" + 
                    "min_activities_count=-1048522&" + 
                    "attrs=_EM_33153_XYZ_&" + 
                    "EMextraParam123=_EM_28570_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_7 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 672, " + 
                    " \"name\": \"MeRLR8JG7i2VM5s\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 533, " + 
                    " \"mime_type\": \"Z\", " + 
                    " \"copy_right\": \"_XWIsO\", " + 
                    " \"author\": \"57Nwa\" " + 
                    " }, " + 
                    " \"activities_count\": 617 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/2")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_7.extract().statusCode()));
        
        ValidatableResponse res_8 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 613, " + 
                    " \"mime_type\": \"dsV3CZx\", " + 
                    " \"uri\": \"_EM_47688_XYZ_\", " + 
                    " \"capture_date\": \"1936-07-27T10:20:47\", " + 
                    " \"copy_right\": \"c7\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/-130459")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_8.extract().statusCode()));
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/896?EMextraParam123=_EM_28578_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
        
    }
    
    
    /**
    * [test_59_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_59_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_5159_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_5154_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"_EM_5155_XYZ_\", " + 
                    " \"copy_right\": \"_EM_5156_XYZ_\", " + 
                    " \"author\": \"_EM_5157_XYZ_\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_60_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_60_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 884, " + 
                    " \"uri\": \"_EM_10760_XYZ_\", " + 
                    " \"copy_right\": \"_EM_10762_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_137_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_61_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_61_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 2234L)
            .and().insertInto("ACTIVITY", 2235L)
            .and().insertInto("ACTIVITY", 2236L)
            .and().insertInto("USERS", 2239L)
                .d("AUTHORIZATION_LEVEL", "131354")
                .d("NAME", "\"_EM_17551_XYZ_\"")
            .and().insertInto("ACTIVITY", 2238L)
            .and().insertInto("ACTIVITY_RATING", 2237L)
                .r("ACTIVITY_ID", 2238L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 2242L)
                .d("AUTHORIZATION_LEVEL", "364")
                .d("NAME", "\"0oT0djk4eQ\"")
            .and().insertInto("ACTIVITY", 2241L)
            .and().insertInto("ACTIVITY_RATING", 2240L)
                .r("ACTIVITY_ID", 2241L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "977")
            .and().insertInto("MEDIA_FILE", 2302L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2071-01-12 06:52:27\"")
                .d("COPY_RIGHT", "\"VkWYvA0wCT\"")
                .d("MIME_TYPE", "\"SMPDH9Y\"")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_17552_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 2303L)
                .d("AUTHOR", "\"pJWU2OObjr2zht7\"")
                .d("CAPTURE_DATE", "\"2099-08-14 13:38:33\"")
                .d("COPY_RIGHT", "\"DA\"")
                .d("MIME_TYPE", "\"InXfLgvNEJx\"")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_17553_XYZ_\"")
            .and().insertInto("USERS", 745L)
                .d("AUTHORIZATION_LEVEL", "33")
                .d("NAME", "\"_EM_9982_XYZ_\"")
            .and().insertInto("ACTIVITY", 744L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 5504867388631305033, " + 
                    " \"media_file\": { " + 
                    " \"id\": 976, " + 
                    " \"mime_type\": \"ACPzuY\", " + 
                    " \"uri\": \"dREP9\" " + 
                    " }, " + 
                    " \"activities_count\": 102 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_61_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_62_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_62_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"media_file\": { " + 
                    " \"id\": 938, " + 
                    " \"mime_type\": \"\", " + 
                    " \"uri\": \"_EM_3787_XYZ_\", " + 
                    " \"copy_right\": \"_EM_3789_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 899 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/tags/755")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_63_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_63_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 64226L)
                .d("URI", "\"ixRuU\"")
            .and().insertInto("TAG", 64225L)
                .d("GRP", "\"m\"")
                .d("NAME", "\"xke7wY\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 64228L)
                .d("URI", "\"1J\"")
            .and().insertInto("TAG", 64227L)
                .d("GRP", "\"PhjGyEIgHovz9x2\"")
                .d("NAME", "\"_ZqgcO2Wr\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 64230L)
                .d("URI", "\"XM\"")
            .and().insertInto("TAG", 64229L)
                .d("GRP", "\"pZTVgrnr\"")
                .d("NAME", "\"CMtCv8tbE3Re45\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 64232L)
                .d("URI", "\"8FXZqdi\"")
            .and().insertInto("TAG", 64231L)
                .d("GRP", "\"TGvuyuwQ2D\"")
                .d("NAME", "\"wB7F1\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 64234L)
                .d("URI", "\"4O1N\"")
            .and().insertInto("TAG", 64233L)
                .d("GRP", "\"4DvpCM3Z\"")
                .d("NAME", "\"tGN02OTlOLg_o\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_system_messages = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"\", " + 
                    " \"value\": \"U\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'key'", containsString(""))
                .body("'value'", containsString("U"));
        location_system_messages = "/api/v1/system_messages" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 821, " + 
                    " \"key\": \"RZaCloq\" " + 
                    " } ")
                .put(resolveLocation(location_system_messages, baseUrlOfSut + "/api/v1/system_messages/821?ages="))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_108_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    /**
    * [test_64_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_64_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 289, " + 
                    " \"group\": \"_EM_3841_XYZ_\", " + 
                    " \"name\": \"_EM_3842_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"_EM_3844_XYZ_\", " + 
                    " \"name\": \"KuR\", " + 
                    " \"copy_right\": \"_EM_3845_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 290 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/289?EMextraParam123=_EM_3847_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_65_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_65_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 3522L)
                .d("AUTHORIZATION_LEVEL", "5044")
                .d("NAME", "\"_EM_42977_XYZ_\"")
            .and().insertInto("ACTIVITY", 3521L)
            .and().insertInto("ACTIVITY", 3520L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3519L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-1073741774")
                .d("DATE_CREATED", "\"2051-07-03 07:26:29\"")
                .d("DATE_PUBLISHED", "\"2055-09-22 10:18:23\"")
                .d("DATE_UPDATED", "\"2059-09-19 09:11:53\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"qwsGvj3Qqx3q_oG\"")
                .d("DESCRIPTION_NOTES", "\"t5nqh\"")
                .d("DESCRIPTION_PREPARE", "\"_EM_22637_XYZ_\"")
                .d("DESCRIPTION_SAFETY", "\"BuMEa5mhZKoDi0z\"")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "142")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"_EM_22639_XYZ_\"")
                .d("TIME_MAX", "2097407")
                .d("TIME_MIN", "453")
                .r("ACTIVITY_ID", 3520L)
                .d("AUTHOR_ID", "2")
                .r("PUBLISHING_ACTIVITY_ID", 3521L)
            .and().insertInto("USERS", 3526L)
                .d("AUTHORIZATION_LEVEL", "909")
                .d("NAME", "\"DQR\"")
            .and().insertInto("ACTIVITY", 3525L)
            .and().insertInto("ACTIVITY", 3524L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3523L)
                .d("AGE_MAX", "100")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"1906-06-15 11:40:45\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1935-01-15 02:49:03\"")
                .d("DESCRIPTION_INTRODUCTION", "\"_EM_42978_XYZ_\"")
                .d("DESCRIPTION_MAIN", "\"bpQK6oKiYHqds\"")
                .d("DESCRIPTION_MATERIAL", "\"lQkLbPRCH9At\"")
                .d("DESCRIPTION_NOTES", "\"_EM_42979_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "\"TtYcNU\"")
                .d("DESCRIPTION_SAFETY", "\"ARlY\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"EUUucUUUzsUcU\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"CoY6A212HBLQ33i\"")
                .d("TIME_MAX", "713")
                .d("TIME_MIN", "212")
                .r("ACTIVITY_ID", 3521L)
                .d("AUTHOR_ID", "2")
                .r("PUBLISHING_ACTIVITY_ID", 3524L)
            .and().insertInto("USERS", 3530L)
                .d("AUTHORIZATION_LEVEL", "8450")
                .d("NAME", "\"ApVK5_D\"")
            .and().insertInto("ACTIVITY", 3529L)
            .and().insertInto("ACTIVITY", 3528L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3527L)
                .d("AGE_MAX", "97")
                .d("AGE_MIN", "-716")
                .d("DATE_CREATED", "\"2100-10-26 11:37:09\"")
                .d("DATE_PUBLISHED", "\"2087-02-25 11:19:44\"")
                .d("DATE_UPDATED", "\"1911-06-13 11:29:18\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"iwH44rg\"")
                .d("DESCRIPTION_MATERIAL", "\"Gc\"")
                .d("DESCRIPTION_NOTES", "\"_EM_42980_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"di\"")
                .d("FEATURED", "false")
                .d("NAME", "\"WoAN\"")
                .d("PARTICIPANTS_MAX", "0")
                .d("PARTICIPANTS_MIN", "563")
                .d("SOURCE", "\"zKbxDS\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "904")
                .r("ACTIVITY_ID", 3525L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 3525L)
            .and().insertInto("USERS", 3534L)
                .d("AUTHORIZATION_LEVEL", "641")
                .d("NAME", "\"_EM_22641_XYZ_\"")
            .and().insertInto("ACTIVITY", 3533L)
            .and().insertInto("ACTIVITY", 3532L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3531L)
                .d("AGE_MAX", "-25")
                .d("AGE_MIN", "-2147482822")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"2000-07-11 11:26:29\"")
                .d("DATE_UPDATED", "\"2000-07-09 11:19:40\"")
                .d("DESCRIPTION_INTRODUCTION", "\"WFxRKP0\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"oD0py87I\"")
                .d("DESCRIPTION_NOTES", "\"bT\"")
                .d("DESCRIPTION_PREPARE", "\"_EM_22642_XYZ_\"")
                .d("DESCRIPTION_SAFETY", "\"I_ne3eA04InrNw\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"_EM_22643_XYZ_\"")
                .d("PARTICIPANTS_MAX", "268435662")
                .d("PARTICIPANTS_MIN", "278")
                .d("SOURCE", "\"_EM_22644_XYZ_\"")
                .d("TIME_MAX", "785")
                .d("TIME_MIN", "44")
                .r("ACTIVITY_ID", 3528L)
                .d("AUTHOR_ID", "2")
                .r("PUBLISHING_ACTIVITY_ID", 3528L)
            .and().insertInto("USERS", 3538L)
                .d("AUTHORIZATION_LEVEL", "902")
                .d("NAME", "\"bQtvTS8HddbZfao\"")
            .and().insertInto("ACTIVITY", 3537L)
            .and().insertInto("ACTIVITY", 3536L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3535L)
                .d("AGE_MAX", "-1073741774")
                .d("AGE_MIN", "-1073741774")
                .d("DATE_CREATED", "\"2018-08-05 05:47:14\"")
                .d("DATE_PUBLISHED", "\"1991-07-28 15:03:25\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"UFNR\"")
                .d("DESCRIPTION_MAIN", "\"0E6q8kNO\"")
                .d("DESCRIPTION_MATERIAL", "\"_EM_42981_XYZ_\"")
                .d("DESCRIPTION_NOTES", "\"\"")
                .d("DESCRIPTION_PREPARE", "\"lQ8D8B07ywy4wb\"")
                .d("DESCRIPTION_SAFETY", "\"_EM_22645_XYZ_\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"_EM_42982_XYZ_\"")
                .d("PARTICIPANTS_MAX", "999")
                .d("PARTICIPANTS_MIN", "550")
                .d("SOURCE", "\"8Nf_y_zjqfm\"")
                .d("TIME_MAX", "-16116")
                .d("TIME_MIN", "194")
                .r("ACTIVITY_ID", 3529L)
                .r("AUTHOR_ID", 3526L)
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 3540L)
            .and().insertInto("ACTIVITY_DERIVED", 3539L)
                .r("ACTIVITY_ID", 3520L)
                .d("FAVOURITES_COUNT", "18")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "800")
                .d("RATINGS_SUM", "0")
            .and().insertInto("ACTIVITY", 3542L)
            .and().insertInto("ACTIVITY_DERIVED", 3541L)
                .r("ACTIVITY_ID", 3524L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "0.9535840704557587")
                .d("RATINGS_COUNT", "905")
                .d("RATINGS_SUM", "995")
            .and().insertInto("ACTIVITY", 2263L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -2401338335348773671, " + 
                    " \"name\": \"alf6SRZjDyqnqb\", " + 
                    " \"description_material\": \"lvVgFR0B\", " + 
                    " \"description_prepare\": \"9WnEa8\", " + 
                    " \"description_notes\": \"atWLmUCMXj\", " + 
                    " \"age_min\": -2147483565, " + 
                    " \"age_max\": -472, " + 
                    " \"participants_max\": 361, " + 
                    " \"time_max\": 815, " + 
                    " \"source\": \"KVYQ4WfI7v\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/activities/-2401338335349035815?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_66_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_66_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 4865L)
            .and().insertInto("ACTIVITY", 4866L)
            .and().insertInto("ACTIVITY", 4867L)
            .and().insertInto("ACTIVITY", 4868L)
            .and().insertInto("USERS", 4871L)
                .d("AUTHORIZATION_LEVEL", "-33553572")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 4870L)
            .and().insertInto("ACTIVITY_RATING", 4869L)
                .r("ACTIVITY_ID", 4867L)
                .r("USER_ID", 4871L)
                .d("FAVOURITE", "true")
                .d("RATING", "538")
            .and().insertInto("MEDIA_FILE", 5975L)
                .d("URI", "\"_EM_47691_XYZ_\"")
            .and().insertInto("TAG", 5974L)
                .d("GRP", "\"CsIwokrQJJ8QEMK\"")
                .d("NAME", "\"A2fqW\"")
            .and().insertInto("TAG_DERIVED", 5973L)
                .r("TAG_ID", 5974L)
                .d("ACTIVITIES_COUNT", "-7941")
            .and().insertInto("MEDIA_FILE", 5978L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 5977L)
                .d("GRP", "\"_EM_47692_XYZ_\"")
                .d("NAME", "\"gJp2N\"")
            .and().insertInto("TAG_DERIVED", 5976L)
                .r("TAG_ID", 5977L)
                .d("ACTIVITIES_COUNT", "-361165290")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 672, " + 
                    " \"name\": \"MeRLR8JG7i2VM5s\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 533, " + 
                    " \"mime_type\": \"Z\", " + 
                    " \"copy_right\": \"_XWIsO\", " + 
                    " \"author\": \"57Nwa\" " + 
                    " }, " + 
                    " \"activities_count\": 617 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/2")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_83_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_67_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_67_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 29067L)
                .d("AUTHOR", "\"bRS\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"qY1ZHFu05_w83X\"")
            .and().insertInto("MEDIA_FILE", 29068L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"FPWSfa28ADuNCSF\"")
                .d("MIME_TYPE", "\"62B\"")
                .d("NAME", "\"Lg\"")
                .d("URI", "\"Wdp\"")
            .and().insertInto("MEDIA_FILE", 29069L)
                .d("AUTHOR", "\"rxtO7pJ0rIa018\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"iq3AGIv7ijti\"")
                .d("MIME_TYPE", "\"Mkwav5NXzNhx\"")
                .d("NAME", "NULL")
                .d("URI", "\"xnys\"")
            .and().insertInto("MEDIA_FILE", 29070L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2088-09-29 00:26:18\"")
                .d("COPY_RIGHT", "\"JYNMZ81\"")
                .d("MIME_TYPE", "\"MdsArjRmNXUy5L\"")
                .d("NAME", "NULL")
                .d("URI", "\"j\"")
            .and().insertInto("MEDIA_FILE", 29071L)
                .d("AUTHOR", "\"fw_6GkdiUDwt\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"oTUO7dcYGio\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"j_Br8n63Cm\", " + 
                    " \"uri\": \"54agqVocFglJoc\", " + 
                    " \"author\": \"S\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("j_Br8n63Cm"))
                .body("'uri'", containsString("54agqVocFglJoc"))
                .body("'author'", containsString("S"));
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"54agqVocFglJoc\", " + 
                    " \"name\": \"\", " + 
                    " \"copy_right\": \"GxF764ZG4iyjIu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?attrs=Qg8m1hr7e3Vf")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/687/file?" + 
                    "size=-2017746444&" + 
                    "name=&" + 
                    "group=ruIW1gZpKudA&" + 
                    "uri=54agqVocFglJoc")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_68_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_68_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 803L)
            .and().insertInto("USERS", 2230L)
                .d("AUTHORIZATION_LEVEL", "-16776428")
                .d("NAME", "\"_EM_132948_XYZ_\"")
            .and().insertInto("ACTIVITY", 2229L)
            .and().insertInto("ACTIVITY_RATING", 2228L)
                .r("ACTIVITY_ID", 803L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "8192")
            .and().insertInto("USERS", 2233L)
                .d("AUTHORIZATION_LEVEL", "33553646")
                .d("NAME", "\"zBu0\"")
            .and().insertInto("ACTIVITY", 2232L)
            .and().insertInto("ACTIVITY_RATING", 2231L)
                .r("ACTIVITY_ID", 2229L)
                .r("USER_ID", 2233L)
                .d("FAVOURITE", "false")
                .d("RATING", "2596")
            .and().insertInto("USERS", 42946L)
                .d("AUTHORIZATION_LEVEL", "353")
                .d("NAME", "\"5Zw4Vu\"")
            .and().insertInto("USER_IDENTITY", 42945L)
                .d("DATE_CREATED", "\"1913-11-14 03:20:45\"")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"fIAWL\"")
                .r("USER_ID", 2230L)
            .and().insertInto("USERS", 42948L)
                .d("AUTHORIZATION_LEVEL", "254")
                .d("NAME", "\"kOJoM0eA\"")
            .and().insertInto("USER_IDENTITY", 42947L)
                .d("DATE_CREATED", "\"1984-09-26 00:55:17\"")
                .d("TYPE", "\"F\"")
                .d("VALUE", "\"GMS5\"")
                .d("USER_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(baseUrlOfSut + "/api/v1/users/4")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_122_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    /**
    * [test_69_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_69_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3010L)
                .d("AUTHOR", "\"RATINGS_3_1_4_\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"_EM_59035_XYZ_\"")
                .d("MIME_TYPE", "\"ENN<Kaa\"")
                .d("NAME", "\"_QLgyc38QdFkgal\"")
                .d("URI", "\"_EM_59390_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 3011L)
                .d("AUTHOR", "\"SK6\"")
                .d("CAPTURE_DATE", "\"1959-11-01 18:21:07\"")
                .d("COPY_RIGHT", "\"_EM_19899_XYZ_\"")
                .d("MIME_TYPE", "\"_EM_59391_XYZ_\"")
                .d("NAME", "\"_EM_59071_XYZ_\"")
                .d("URI", "\"\u0082\"")
            .and().insertInto("MEDIA_FILE", 3012L)
                .d("AUTHOR", "\"v2MT\"")
                .d("CAPTURE_DATE", "\"1953-11-09 06:35:14\"")
                .d("COPY_RIGHT", "\"_EM_59392_XYZ_\"")
                .d("MIME_TYPE", "\"%6I%\"")
                .d("NAME", "\"_EM_59072_XYZ_\"")
                .d("URI", "\"9280606\"")
            .and().insertInto("MEDIA_FILE", 3013L)
                .d("AUTHOR", "\"ykqF83qH8\"")
                .d("CAPTURE_DATE", "\"2013-07-06 04:53:20\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_59393_XYZ_\"")
                .d("NAME", "\"_EM_59038_XYZ_\"")
                .d("URI", "\"8949066\"")
            .and().insertInto("MEDIA_FILE", 3014L)
                .d("AUTHOR", "\"_EM_19903_XYZ_\"")
                .d("CAPTURE_DATE", "\"2000-03-16 10:29:20\"")
                .d("COPY_RIGHT", "\"_EM_59394_XYZ_\"")
                .d("MIME_TYPE", "\"_EM_59395_XYZ_\"")
                .d("NAME", "\"_EM_19904_XYZ_\"")
                .d("URI", "\"gOOiivHYado6O\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -4611686018427650048, " + 
                    " \"mime_type\": \"3M8JCN\", " + 
                    " \"uri\": \"data:,X0VNXzU5Mzg5X1hZWl8\u003d\", " + 
                    " \"name\": \"PUBLIC\", " + 
                    " \"copy_right\": \"8913292\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_70_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_70_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 25589L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"Y\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_120587_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 25595L)
                .d("URI", "\"jNvpkEQlIU7\"")
            .and().insertInto("USERS", 25594L)
                .d("AUTHORIZATION_LEVEL", "190")
                .d("NAME", "\"aLCNMDbTnwC5kVN\"")
            .and().insertInto("ACTIVITY", 25593L)
            .and().insertInto("ACTIVITY", 25592L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25591L)
                .r("ACTIVITY_ID", 25593L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 25590L)
                .r("ACTIVITY_PROPERTIES_ID", 25591L)
                .r("MEDIA_FILE_ID", 25595L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 25601L)
                .d("URI", "\"UW\"")
            .and().insertInto("USERS", 25600L)
                .d("AUTHORIZATION_LEVEL", "837")
                .d("NAME", "\"mIE\"")
            .and().insertInto("ACTIVITY", 25599L)
            .and().insertInto("ACTIVITY", 25598L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25597L)
                .r("ACTIVITY_ID", 25599L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 25596L)
                .r("ACTIVITY_PROPERTIES_ID", 25591L)
                .r("MEDIA_FILE_ID", 25589L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 25607L)
                .d("URI", "\"AR__K\"")
            .and().insertInto("USERS", 25606L)
                .d("AUTHORIZATION_LEVEL", "828")
                .d("NAME", "\"_EM_120588_XYZ_\"")
            .and().insertInto("ACTIVITY", 25605L)
            .and().insertInto("ACTIVITY", 25604L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25603L)
                .r("ACTIVITY_ID", 25593L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 25602L)
                .r("ACTIVITY_PROPERTIES_ID", 25603L)
                .r("MEDIA_FILE_ID", 25601L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 33764L)
                .d("URI", "\"Q\"")
            .and().insertInto("TAG", 33763L)
                .d("GRP", "\"KVXVaJjEaiV\"")
                .d("NAME", "\"_EM_120581_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 33766L)
                .d("URI", "\"7\"")
            .and().insertInto("TAG", 33765L)
                .d("GRP", "\"BZHNGHQmX9\"")
                .d("NAME", "\"PKyfwH3dc0ApYr_a\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 33768L)
                .d("URI", "\"IkUaYULp4B\"")
            .and().insertInto("TAG", 33767L)
                .d("GRP", "\"Ascc1UN\"")
                .d("NAME", "\"_EM_120582_XYZ_f\"")
                .r("MEDIA_FILE_ID", 25589L)
            .and().insertInto("MEDIA_FILE", 33770L)
                .d("URI", "\"9A1GTgJd2Osmi\"")
            .and().insertInto("TAG", 33769L)
                .d("GRP", "\"_EM_120583_XYZ_\"")
                .d("NAME", "\"W9Ua\"")
                .r("MEDIA_FILE_ID", 25601L)
            .and().insertInto("MEDIA_FILE", 33772L)
                .d("URI", "\"ge\"")
            .and().insertInto("TAG", 33771L)
                .d("GRP", "\"r0LM\"")
                .d("NAME", "\"val\"")
                .r("MEDIA_FILE_ID", 25589L)
            .and().insertInto("USERS", 36313L)
                .d("AUTHORIZATION_LEVEL", "611")
                .d("NAME", "\"_EM_120589_XYZ_\"")
            .and().insertInto("ACTIVITY", 36312L)
            .and().insertInto("ACTIVITY_RATING", 36311L)
                .r("ACTIVITY_ID", 36312L)
                .r("USER_ID", 36313L)
                .d("FAVOURITE", "false")
                .d("RATING", "328")
            .and().insertInto("USERS", 36316L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_120590_XYZ_\"")
            .and().insertInto("ACTIVITY", 36315L)
            .and().insertInto("ACTIVITY_RATING", 36314L)
                .r("ACTIVITY_ID", 25598L)
                .r("USER_ID", 36313L)
                .d("FAVOURITE", "true")
                .d("RATING", "0")
            .and().insertInto("USERS", 36319L)
                .d("AUTHORIZATION_LEVEL", "555")
                .d("NAME", "\"9bKdEq6L\"")
            .and().insertInto("ACTIVITY", 36318L)
            .and().insertInto("ACTIVITY_RATING", 36317L)
                .r("ACTIVITY_ID", 36312L)
                .r("USER_ID", 25594L)
                .d("FAVOURITE", "false")
                .d("RATING", "851")
            .and().insertInto("USERS", 36322L)
                .d("AUTHORIZATION_LEVEL", "996")
                .d("NAME", "\"_EM_120591_XYZ_\"")
            .and().insertInto("ACTIVITY", 36321L)
            .and().insertInto("ACTIVITY_RATING", 36320L)
                .r("ACTIVITY_ID", 36315L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 36325L)
                .d("AUTHORIZATION_LEVEL", "489")
                .d("NAME", "\"yF3oP\"")
            .and().insertInto("ACTIVITY", 36324L)
            .and().insertInto("ACTIVITY_RATING", 36323L)
                .r("ACTIVITY_ID", 25604L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "998")
            .and().insertInto("MEDIA_FILE", 36343L)
                .d("URI", "\"SlJJR48HeYr\"")
            .and().insertInto("TAG", 36342L)
                .d("GRP", "\"YvBFnpGA6m8n_8\"")
                .d("NAME", "\"bn\"")
            .and().insertInto("TAG_DERIVED", 36341L)
                .r("TAG_ID", 33771L)
                .d("ACTIVITIES_COUNT", "959")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/FavouritesResourceV1_58_lambda$put$3
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_71_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_71_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3010L)
                .d("AUTHOR", "\"_EM_19898_XYZ_\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"_EM_59035_XYZ_\"")
                .d("MIME_TYPE", "\"ENN4Kaa\"")
                .d("NAME", "\"_QLgyc38QdFkgal\"")
                .d("URI", "\"UUKBUzuN\"")
            .and().insertInto("MEDIA_FILE", 3011L)
                .d("AUTHOR", "\"SK6\"")
                .d("CAPTURE_DATE", "\"1963-11-01 18:21:07\"")
                .d("COPY_RIGHT", "\"_EM_19899_XYZ_\"")
                .d("MIME_TYPE", "\"0D0no8KmTCEJ3U\"")
                .d("NAME", "\"_EM_59071_XYZ_\"")
                .d("URI", "\"z\"")
            .and().insertInto("MEDIA_FILE", 3012L)
                .d("AUTHOR", "\"_EM_59036_XYZ_\"")
                .d("CAPTURE_DATE", "\"1953-11-09 06:35:14\"")
                .d("COPY_RIGHT", "\"\"")
                .d("MIME_TYPE", "\"_EM_59037_XYZ_\"")
                .d("NAME", "\"_EM_59072_XYZ_\"")
                .d("URI", "\"9280606\"")
            .and().insertInto("MEDIA_FILE", 3013L)
                .d("AUTHOR", "\"_EM_59073_XYZ_\"")
                .d("CAPTURE_DATE", "\"2013-07-06 06:53:19\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"743w4uvnc\"")
                .d("NAME", "\"_EM_59038_XYZ_\"")
                .d("URI", "\"8949066\"")
            .and().insertInto("MEDIA_FILE", 3014L)
                .d("AUTHOR", "\"_EM_19903_XYZ_\"")
                .d("CAPTURE_DATE", "\"2000-03-16 10:29:20\"")
                .d("COPY_RIGHT", "\"DpMVzM\"")
                .d("MIME_TYPE", "\"_EM_59039_XYZ_\"")
                .d("NAME", "\"_EM_19904_XYZ_\"")
                .d("URI", "\"gOOiivHYado6O\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -1048248, " + 
                    " \"mime_type\": \"_EM_11992_XYZ_\", " + 
                    " \"uri\": \"data:;base64,ODg2RUxFNXo\u003d\", " + 
                    " \"name\": \"PUBLIC\", " + 
                    " \"copy_right\": \"8913292\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_72_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_72_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_tags = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"_EM_79541_XYZ_\", " + 
                    " \"name\": \"_EM_79542_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"eNOhizn\", " + 
                    " \"name\": \"_EM_79544_XYZ_\", " + 
                    " \"copy_right\": \"Njetkj881\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("_EM_79541_XYZ_"))
                .body("'name'", containsString("_EM_79542_XYZ_"))
                .body("'media_file'.'uri'", containsString("eNOhizn"))
                .body("'media_file'.'name'", containsString("_EM_79544_XYZ_"))
                .body("'media_file'.'copy_right'", containsString("Njetkj881"))
                .body("'activities_count'", numberMatches(0.0));
        location_tags = "/api/v2/tags" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 171, " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"p9_2\" " + 
                    " } " + 
                    " } ")
                .put(resolveLocation(location_tags, baseUrlOfSut + "/api/v2/tags/171"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_89_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    /**
    * [test_73_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_73_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3010L)
                .d("AUTHOR", "\"_EM_19898_XYZ_\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"XxW3Dgt9MgGo\"")
                .d("MIME_TYPE", "\"ENN4Kaa\"")
                .d("NAME", "\"_QLgyc38QdFkgal\"")
                .d("URI", "\"poKCEzuN\"")
            .and().insertInto("MEDIA_FILE", 3011L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"_EM_19899_XYZ_\"")
                .d("MIME_TYPE", "\"0D0no8KmTCEJ3U\"")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_19900_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 3012L)
                .d("AUTHOR", "\"topwz\"")
                .d("CAPTURE_DATE", "\"1953-11-09 06:35:14\"")
                .d("COPY_RIGHT", "\"\"")
                .d("MIME_TYPE", "\"VFEhuPqn\"")
                .d("NAME", "\"YcZDFEinX7\"")
                .d("URI", "\"_EM_19901_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 3013L)
                .d("AUTHOR", "\"Iq16ZKM95YDC\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"\"")
                .d("URI", "\"_EM_19902_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 3014L)
                .d("AUTHOR", "\"_EM_19903_XYZ_\"")
                .d("CAPTURE_DATE", "\"2100-01-19 18:20:20\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"ChyZ1dKfD9EqT7\"")
                .d("NAME", "\"_EM_19904_XYZ_\"")
                .d("URI", "\"_EM_19905_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_11992_XYZ_\", " + 
                    " \"uri\": \"https://gQGrov_9qJZMnR37:914/hPrnWXWvLVdI/2PN\", " + 
                    " \"name\": \"PUBLIC\", " + 
                    " \"copy_right\": \"8913292\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("_EM_11992_XYZ_"))
                .body("'uri'", containsString("https://gQGrov_9qJZMnR37:914/hPrnWXWvLVdI/2PN"))
                .body("'name'", containsString("PUBLIC"))
                .body("'copy_right'", containsString("8913292"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/328/file?size=129&EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_279_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
    }
    
    
    /**
    * [test_74_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_74_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 5303L)
            .and().insertInto("MEDIA_FILE", 11002L)
                .d("URI", "\"_EM_52992_XYZ_\"")
            .and().insertInto("TAG", 11001L)
                .d("GRP", "\"BBE3v4\"")
                .d("NAME", "\"Ey\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 11004L)
                .d("URI", "\"_EM_52993_XYZ_\"")
            .and().insertInto("TAG", 11003L)
                .d("GRP", "\"WNUOiZ\"")
                .d("NAME", "\"GQQlqkZoPD\"")
                .r("MEDIA_FILE_ID", 11004L)
            .and().insertInto("MEDIA_FILE", 11006L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 11005L)
                .d("GRP", "\"zgqta6Y2F05\"")
                .d("NAME", "\"cdMz\"")
                .r("MEDIA_FILE_ID", 11006L)
            .and().insertInto("MEDIA_FILE", 11008L)
                .d("URI", "\"bRj9F24vaZ\"")
            .and().insertInto("TAG", 11007L)
                .d("GRP", "\"Z\"")
                .d("NAME", "\"_EM_52994_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 11010L)
                .d("URI", "\"_EM_52995_XYZ_\"")
            .and().insertInto("TAG", 11009L)
                .d("GRP", "\"_EM_52996_XYZ_\"")
                .d("NAME", "\"Af\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_tags = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"y\", " + 
                    " \"name\": \"u59f8e_zII\", " + 
                    " \"activities_count\": 890 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("y"))
                .body("'name'", containsString("u59f8e_zII"))
                .body("'activities_count'", numberMatches(890.0));
        location_tags = "/api/v2/tags" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_tags, baseUrlOfSut + "/api/v2/tags/-523546?EMextraParam123=42"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=_EM_52990_XYZ_&" + 
                    "name=s5Xwiz016esQ&" + 
                    "featured=false&" + 
                    "categories=d4&" + 
                    "ages=0ssY0gm487y6MSp&" + 
                    "participants=&" + 
                    "durations=OxlGI&" + 
                    "id=_EM_52991_XYZ_&" + 
                    "ratings_count_min=1258675&" + 
                    "ratings_average_min=1258675.69223951&" + 
                    "random=-1781662128")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/activities/-223/rating?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_75_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_75_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 15545L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"sYV7T\", " + 
                    " \"description_introduction\": \"_EM_66759_XYZ_\", " + 
                    " \"description_main\": \"_EM_66761_XYZ_\", " + 
                    " \"description_notes\": \"_EM_66762_XYZ_\", " + 
                    " \"age_max\": -2147483363, " + 
                    " \"participants_min\": 285, " + 
                    " \"participants_max\": 51, " + 
                    " \"time_max\": 522, " + 
                    " \"featured\": false, " + 
                    " \"author\": { " + 
                    " \"id\": 600, " + 
                    " \"email_address\": \"_EM_66798_XYZ_\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_76_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_76_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 29392L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"0hjJyVQNcxPH2Q\"")
                .d("MIME_TYPE", "\"_EM_109622_XYZ_\"")
                .d("NAME", "\"\"")
                .d("URI", "\"_EM_109623_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 29393L)
                .d("AUTHOR", "\"IXjMxctG9MM\"")
                .d("CAPTURE_DATE", "\"1915-02-07 02:52:50\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_109624_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 29394L)
                .d("AUTHOR", "\"f43XiUjqPz\"")
                .d("CAPTURE_DATE", "\"2030-04-02 13:26:59\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_109625_XYZ_\"")
                .d("NAME", "\"W_RvkTP\"")
                .d("URI", "\"i3ctZ.HTFbq\"")
            .and().insertInto("MEDIA_FILE", 29395L)
                .d("AUTHOR", "\"Nu3Vw2lQ6K4l\"")
                .d("CAPTURE_DATE", "\"2063-10-23 09:00:12\"")
                .d("COPY_RIGHT", "\"1AuhYs\"")
                .d("MIME_TYPE", "\"_EM_109626_XYZ_\"")
                .d("NAME", "\"UjejBzpwelXluO\"")
                .d("URI", "\"6jJJoQ9eic\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_tags = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_109_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?" + 
                    "uri=KPM8CAHR3cZbJ7&" + 
                    "name=gZB_BwnWLq&" + 
                    "group=jCC&" + 
                    "valid=KcDM_P")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"_EM_79541_XYZ_\", " + 
                    " \"name\": \"_EM_79542_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"eNOhizn\", " + 
                    " \"name\": \"_EM_79544_XYZ_\", " + 
                    " \"copy_right\": \"Njetkj881\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("_EM_79541_XYZ_"))
                .body("'name'", containsString("_EM_79542_XYZ_"))
                .body("'media_file'.'uri'", containsString("eNOhizn"))
                .body("'media_file'.'name'", containsString("_EM_79544_XYZ_"))
                .body("'media_file'.'copy_right'", containsString("Njetkj881"))
                .body("'activities_count'", numberMatches(0.0));
        location_tags = "/api/v2/tags" + "/" + res_2.extract().body().path("id").toString();
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 171, " + 
                    " \"group\": \"_EM_79545_XYZ_\", " + 
                    " \"name\": \"_EM_79546_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"p9_2\" " + 
                    " }, " + 
                    " \"activities_count\": 887 " + 
                    " } ")
                .put(resolveLocation(location_tags, baseUrlOfSut + "/api/v2/tags/171"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("_EM_79545_XYZ_"))
                .body("'name'", containsString("_EM_79546_XYZ_"))
                .body("'media_file'.'uri'", containsString("eNOhizn"))
                .body("'media_file'.'name'", containsString("_EM_79544_XYZ_"))
                .body("'media_file'.'copy_right'", containsString("Njetkj881"))
                .body("'activities_count'", numberMatches(0.0));
        
    }
    
    
    /**
    * [test_77_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_77_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 895, " + 
                    " \"name\": \"dElK\", " + 
                    " \"description_material\": \"_EM_3604_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_3605_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_3606_XYZ_\", " + 
                    " \"participants_min\": 454, " + 
                    " \"time_min\": 423, " + 
                    " \"time_max\": 394, " + 
                    " \"source\": \"_EM_3608_XYZ_\", " + 
                    " \"activity\": { " + 
                    " \"id\": 285, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_sum\": 725, " + 
                    " \"ratings_average\": 0.3816325195057426 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_113_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_78_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_78_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 7009L)
            .and().insertInto("ACTIVITY", 7010L)
            .and().insertInto("ACTIVITY", 7011L)
            .and().insertInto("ACTIVITY", 7012L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"q5s\", " + 
                    " \"description_material\": \"28gI\", " + 
                    " \"description_introduction\": \"jjQ7biV4H8r495\", " + 
                    " \"description_prepare\": \"\", " + 
                    " \"description_main\": \"VYA0_\", " + 
                    " \"description_notes\": \"BHf1\", " + 
                    " \"age_max\": -86, " + 
                    " \"participants_min\": 560, " + 
                    " \"participants_max\": 13, " + 
                    " \"source\": \"mj8ZwhSXggJgsw\", " + 
                    " \"media_files\": [ " + 
                    " {} " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 733 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 351, " + 
                    " \"ratings_sum\": 493, " + 
                    " \"ratings_average\": 0.3432582228974772 " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/activities/2")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_79_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_79_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1767L)
            .and().insertInto("ACTIVITY", 1768L)
            .and().insertInto("ACTIVITY", 1769L)
            .and().insertInto("ACTIVITY", 1770L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"oQZ4rUwwZ3VxuYBJ\", " + 
                    " \"description_material\": \"74zaPzKbLs\", " + 
                    " \"description_prepare\": \"Lp_w0oSB_e0n\", " + 
                    " \"description_main\": \"TGNDgF9uqteHQ1\", " + 
                    " \"description_notes\": \"fhmGvxaxyNsR\", " + 
                    " \"age_min\": -198, " + 
                    " \"participants_min\": 454, " + 
                    " \"time_min\": 321, " + 
                    " \"source\": \"NWjgPKxa32UHB\", " + 
                    " \"author\": { " + 
                    " \"id\": 588, " + 
                    " \"name\": \"ZYP65UXQgrFPk\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"value\": \"\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.3741127836143263, " + 
                    " \"favourites_count\": 174, " + 
                    " \"related\": [ " + 
                    " -1863500386 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_80_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_80_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1767L)
            .and().insertInto("ACTIVITY", 1768L)
            .and().insertInto("ACTIVITY", 1769L)
            .and().insertInto("ACTIVITY", 1770L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 690, " + 
                    " \"description_material\": \"5rgIkh\", " + 
                    " \"description_safety\": \"hLVoYKnWg9EL\", " + 
                    " \"description_notes\": \"dqviKTlMKiYtOK\", " + 
                    " \"participants_max\": 160, " + 
                    " \"time_min\": 219, " + 
                    " \"source\": \"DM\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 584611829570054216, " + 
                    " \"name\": \"S07at57YCe7pD\", " + 
                    " \"author\": \"Ipprn5B5\" " + 
                    " }, " + 
                    " { " + 
                    " \"uri\": \"4Sc\", " + 
                    " \"name\": \"EtjDP1w\", " + 
                    " \"copy_right\": \"JvKvPEH\", " + 
                    " \"author\": \"VVXvHM6eCstj9Y\" " + 
                    " }, " + 
                    " { " + 
                    " \"copy_right\": \"WOGmyGNZYiRoY\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 651, " + 
                    " \"mime_type\": \"\", " + 
                    " \"name\": \"m8\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_38_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_81_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_81_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3219L)
            .and().insertInto("ACTIVITY", 3220L)
            .and().insertInto("ACTIVITY", 3221L)
            .and().insertInto("ACTIVITY", 3222L)
            .and().insertInto("ACTIVITY", 3223L)
            .and().insertInto("USERS", 4188L)
                .d("AUTHORIZATION_LEVEL", "-4194080")
                .d("NAME", "\"_EM_50226_XYZ_\"")
            .and().insertInto("ACTIVITY", 4187L)
            .and().insertInto("ACTIVITY", 4186L)
            .and().insertInto("ACTIVITY_RELATION", 4185L)
                .r("ACTIVITY_1_ID", 4186L)
                .r("ACTIVITY_2_ID", 3220L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 4192L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"y\"")
            .and().insertInto("ACTIVITY", 4191L)
            .and().insertInto("ACTIVITY", 4190L)
            .and().insertInto("ACTIVITY_RELATION", 4189L)
                .r("ACTIVITY_1_ID", 3219L)
                .r("ACTIVITY_2_ID", 4187L)
                .d("OWNER_ID", "1")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"0TDrc_AnoM9Y\", " + 
                    " \"description_notes\": \"eRr9b\", " + 
                    " \"age_max\": -520, " + 
                    " \"participants_min\": 273, " + 
                    " \"time_min\": 168, " + 
                    " \"media_files\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("0TDrc_AnoM9Y"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T21:19:09.231Z"))
                .body("'properties_revisions'[0].'description_notes'", containsString("eRr9b"))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-520.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(273.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(168.0))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'name'", containsString("0TDrc_AnoM9Y"))
                .body("'properties'.'date_created'", containsString("2024-06-01T21:19:09.231Z"))
                .body("'properties'.'description_notes'", containsString("eRr9b"))
                .body("'properties'.'age_max'", numberMatches(-520.0))
                .body("'properties'.'participants_min'", numberMatches(273.0))
                .body("'properties'.'time_min'", numberMatches(168.0))
                .body("'properties'.'media_files'.size()", equalTo(0));
        location_activities = "/api/v2/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .patch(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/595?group=kQSBLOZsiJUtV"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityProperties_369_isContentEqual
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .patch(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/595?group=kQSBLOZsiJUtV"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityProperties_369_isContentEqual
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    /**
    * [test_82_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_82_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"Fp_i7bLwpXbi0X\", " + 
                    " \"description_material\": \"iIG_R01\", " + 
                    " \"description_introduction\": \"qToRBbs\", " + 
                    " \"description_prepare\": \"2pta\", " + 
                    " \"description_notes\": \"Lk1XHYhlgtZor\", " + 
                    " \"age_max\": -2147482882, " + 
                    " \"participants_min\": 515, " + 
                    " \"time_max\": 552, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"JzrvYt6IcqcX\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 1619530899609375063, " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"XuwoW\", " + 
                    " \"uri\": \"581XaE\", " + 
                    " \"name\": \"GS\" " + 
                    " }, " + 
                    " \"activities_count\": 454 " + 
                    " }, " + 
                    " {}, " + 
                    " { " + 
                    " \"group\": \"YQJSz6f\", " + 
                    " \"name\": \"5KlDGOi\", " + 
                    " \"media_file\": { " + 
                    " \"author\": \"Ku\" " + 
                    " } " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_83_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_83_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"t\", " + 
                    " \"description_prepare\": \"_EM_42370_XYZ_\", " + 
                    " \"description_safety\": \"wqOMT8gHHQPvr8E4\", " + 
                    " \"description_notes\": \"71jLYlEjda7M2hj\", " + 
                    " \"participants_max\": 186, " + 
                    " \"time_min\": 311, " + 
                    " \"time_max\": 219, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 8410100771836808833, " + 
                    " \"activities_count\": -1748237167 " + 
                    " }, " + 
                    " {} " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"_EM_42389_XYZ_\", " + 
                    " \"identities\": [] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=_EM_42390_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_84_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_84_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 22809L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_89277_XYZ_\", " + 
                    " \"description_introduction\": \"FGFWWOQEwCuR\", " + 
                    " \"description_prepare\": \"_EM_89279_XYZ_\", " + 
                    " \"description_main\": \"_EM_89280_XYZ_\", " + 
                    " \"description_safety\": \"\", " + 
                    " \"age_min\": -469, " + 
                    " \"participants_min\": 829, " + 
                    " \"time_min\": 1000, " + 
                    " \"featured\": false, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"name\": \"oZ9Osdmuc\", " + 
                    " \"copy_right\": \"_EM_89302_XYZ_\", " + 
                    " \"author\": \"Y\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 88, " + 
                    " \"authorization_level\": 277 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"ratings_count\": 182 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_85_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_85_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 7009L)
            .and().insertInto("ACTIVITY", 7010L)
            .and().insertInto("ACTIVITY", 7011L)
            .and().insertInto("ACTIVITY", 7012L)
            .and().insertInto("MEDIA_FILE", 55484L)
                .d("URI", "\"pvBy_1DC\"")
            .and().insertInto("TAG", 55483L)
                .d("GRP", "\"ItJyK\"")
                .d("NAME", "\"DcOpTMRE9zJh6lP\"")
            .and().insertInto("USERS", 55482L)
                .d("AUTHORIZATION_LEVEL", "212")
                .d("NAME", "\"fpN8OMkdjx9be\"")
            .and().insertInto("ACTIVITY", 55481L)
            .and().insertInto("ACTIVITY", 55480L)
            .and().insertInto("ACTIVITY_PROPERTIES", 55479L)
                .r("ACTIVITY_ID", 55481L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 55478L)
                .r("ACTIVITY_PROPERTIES_ID", 55479L)
                .r("TAG_ID", 55483L)
            .and().insertInto("MEDIA_FILE", 55491L)
                .d("URI", "\"Y_VA_g3iuy4DLs\"")
            .and().insertInto("TAG", 55490L)
                .d("GRP", "\"j\"")
                .d("NAME", "\"oWawpGXV\"")
            .and().insertInto("USERS", 55489L)
                .d("AUTHORIZATION_LEVEL", "633")
                .d("NAME", "\"tT\"")
            .and().insertInto("ACTIVITY", 55488L)
            .and().insertInto("ACTIVITY", 55487L)
            .and().insertInto("ACTIVITY_PROPERTIES", 55486L)
                .r("ACTIVITY_ID", 55481L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"\", " + 
                    " \"description_main\": \"05MfaQ0o1nVQhOAY\", " + 
                    " \"description_notes\": \"03cyoZO\", " + 
                    " \"age_min\": -2147482836, " + 
                    " \"age_max\": -364, " + 
                    " \"participants_max\": 911, " + 
                    " \"time_min\": 594378097, " + 
                    " \"time_max\": 401, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"uri\": \"CXHw3wAM\", " + 
                    " \"name\": \"8EkrYS0zaW9u\", " + 
                    " \"author\": \"CyrJA9DG\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 601, " + 
                    " \"name\": \"IojPmMVsWDL\", " + 
                    " \"copy_right\": \"b\" " + 
                    " }, " + 
                    " { " + 
                    " \"uri\": \"h\", " + 
                    " \"name\": \"PRuNh6zn_NpVPc\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_38_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_86_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_86_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1767L)
            .and().insertInto("ACTIVITY", 1768L)
            .and().insertInto("ACTIVITY", 1769L)
            .and().insertInto("ACTIVITY", 1770L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_introduction\": \"zpbhrZH8XWXQx_\", " + 
                    " \"description_prepare\": \"NQBa\", " + 
                    " \"description_safety\": \"0QgBEzrhcGU\", " + 
                    " \"age_max\": -279310993, " + 
                    " \"participants_min\": 985, " + 
                    " \"time_max\": 126, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"rsh4HWLat\", " + 
                    " \"activity\": { " + 
                    " \"id\": 673, " + 
                    " \"ratings_average\": 0.8682364358780242, " + 
                    " \"related\": [ " + 
                    " 340, " + 
                    " 277051794, " + 
                    " 91, " + 
                    " 157 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T21:19:09.4Z"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("zpbhrZH8XWXQx_"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("NQBa"))
                .body("'properties_revisions'[0].'description_safety'", containsString("0QgBEzrhcGU"))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.79310993E8))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(985.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(126.0))
                .body("'properties_revisions'[0].'featured'", equalTo(true))
                .body("'properties_revisions'[0].'source'", containsString("rsh4HWLat"))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'date_created'", containsString("2024-06-01T21:19:09.4Z"))
                .body("'properties'.'description_introduction'", containsString("zpbhrZH8XWXQx_"))
                .body("'properties'.'description_prepare'", containsString("NQBa"))
                .body("'properties'.'description_safety'", containsString("0QgBEzrhcGU"))
                .body("'properties'.'age_max'", numberMatches(-2.79310993E8))
                .body("'properties'.'participants_min'", numberMatches(985.0))
                .body("'properties'.'time_max'", numberMatches(126.0))
                .body("'properties'.'featured'", equalTo(true))
                .body("'properties'.'source'", containsString("rsh4HWLat"));
        location_activities = "/api/v2/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/177/rating?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_112_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/177/rating?group=E8w5A_7RkZy&random=yHCamOQdOOb&name=R3h"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_120_deleteRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_87_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_87_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"VXg87\", " + 
                    " \"description_prepare\": \"I8\", " + 
                    " \"description_safety\": \"XA82S6UFyo0xXI8\", " + 
                    " \"age_max\": -536, " + 
                    " \"participants_min\": 1916719847, " + 
                    " \"time_max\": -2147483375, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 543, " + 
                    " \"group\": \"_EM_3072_XYZ_\", " + 
                    " \"activities_count\": 45 " + 
                    " }, " + 
                    " { " + 
                    " \"activities_count\": 995 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [], " + 
                    " \"author\": { " + 
                    " \"name\": \"_EM_3086_XYZ_\", " + 
                    " \"email_address\": \"_EM_3087_XYZ_\", " + 
                    " \"authorization_level\": 955 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 951, " + 
                    " \"ratings_sum\": 337, " + 
                    " \"favourites_count\": 122, " + 
                    " \"related\": [ " + 
                    " 76 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_88_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_88_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 276, " + 
                    " \"description_main\": \"_EM_64363_XYZ_\", " + 
                    " \"description_notes\": \"_EM_64364_XYZ_\", " + 
                    " \"age_min\": 26, " + 
                    " \"age_max\": -338, " + 
                    " \"participants_min\": 931, " + 
                    " \"time_min\": 858, " + 
                    " \"time_max\": 253, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"_EM_64365_XYZ_\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"_EM_64387_XYZ_\", " + 
                    " \"uri\": \"_EM_64388_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"_EM_64391_XYZ_\", " + 
                    " \"authorization_level\": 727 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_89_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_89_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 33646L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2047-08-25 06:11:10\"")
                .d("COPY_RIGHT", "\"EIgL8kMzfX\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"KOd7_4U60hwQdbqQ\"")
                .d("URI", "\"ZqafiTd4_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"cdF\", " + 
                    " \"description_material\": \"bwdNJn\", " + 
                    " \"description_prepare\": \"4Gn1mLX77om\", " + 
                    " \"description_safety\": \"_EM_117139_XYZ_\", " + 
                    " \"description_notes\": \"bre\", " + 
                    " \"age_max\": -2147483158, " + 
                    " \"participants_max\": 678, " + 
                    " \"time_min\": 562, " + 
                    " \"time_max\": 627, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"uri\": \"j\", " + 
                    " \"author\": \"0uGcreQBo1cgXw\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 7382821104859687652, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 862, " + 
                    " \"ratings_sum\": 835, " + 
                    " \"ratings_average\": 0.36893442226161544, " + 
                    " \"favourites_count\": 300, " + 
                    " \"related\": [ " + 
                    " 506, " + 
                    " 8698211160054504612 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_211_lambda$initMediaFiles$8
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_90_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_90_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 2370L)
            .and().insertInto("ACTIVITY", 2371L)
            .and().insertInto("ACTIVITY", 2372L)
            .and().insertInto("ACTIVITY", 2373L)
            .and().insertInto("ACTIVITY", 2374L)
            .and().insertInto("USERS", 2377L)
                .d("AUTHORIZATION_LEVEL", "522")
                .d("NAME", "\"FDI5iwH_t\"")
            .and().insertInto("ACTIVITY", 2376L)
            .and().insertInto("ACTIVITY_RATING", 2375L)
                .r("ACTIVITY_ID", 2376L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 2380L)
                .d("AUTHORIZATION_LEVEL", "572")
                .d("NAME", "\"cNPrvH\"")
            .and().insertInto("ACTIVITY", 2379L)
            .and().insertInto("ACTIVITY_RATING", 2378L)
                .r("ACTIVITY_ID", 2370L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "65911")
            .and().insertInto("USERS", 2383L)
                .d("AUTHORIZATION_LEVEL", "436")
                .d("NAME", "\"_EM_17768_XYZ_\"")
            .and().insertInto("ACTIVITY", 2382L)
            .and().insertInto("ACTIVITY_RATING", 2381L)
                .r("ACTIVITY_ID", 2373L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "460")
            .and().insertInto("SYSTEM_MESSAGE", 68118L)
                .d("KEY", "\"hsqYpYgIko5_4MIU\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1988-04-08 21:43:12\"")
                .d("VALUE", "\"WRNe8ES\"")
            .and().insertInto("SYSTEM_MESSAGE", 68119L)
                .d("KEY", "\"vaFCtd4uxP\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2060-09-01 19:47:23\"")
                .d("VALUE", "\"G4vAWr0K3\"")
            .and().insertInto("SYSTEM_MESSAGE", 68120L)
                .d("KEY", "\"\"")
                .d("VALID_FROM", "\"2064-05-29 09:11:57\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"uybls6\"")
            .and().insertInto("SYSTEM_MESSAGE", 68121L)
                .d("KEY", "\"z1j6rBQZtf6Gj\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"HsBoEia_b6_nD\"")
            .and().insertInto("MEDIA_FILE", 68122L)
                .d("AUTHOR", "\"362oiOBqWypJYKP\"")
                .d("CAPTURE_DATE", "\"1924-10-06 00:51:49\"")
                .d("COPY_RIGHT", "\"o2\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"rf88tdKyqq87Dl\"")
                .d("URI", "\"3RukGERmzxi\"")
            .and().insertInto("MEDIA_FILE", 68123L)
                .d("AUTHOR", "\"0lYyLrbJ\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"SnMMT\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"3wgmKFz6XJH4Zg\"")
                .d("URI", "\"apMJh9X80jrJ4C1_\"")
            .and().insertInto("MEDIA_FILE", 68124L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1965-07-29 18:23:44\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"fqi6_xF_SsNd\"")
                .d("URI", "\"m\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 393, " + 
                    " \"name\": \"8\", " + 
                    " \"description_material\": \"Io4RrxNL\", " + 
                    " \"description_notes\": \"D40HVOKTrtrc2\", " + 
                    " \"age_min\": -595, " + 
                    " \"age_max\": -2147483294, " + 
                    " \"participants_min\": 955, " + 
                    " \"participants_max\": 394, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"0\", " + 
                    " \"uri\": \"cDZesKyX\", " + 
                    " \"copy_right\": \"XnA\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 708, " + 
                    " \"email_address\": \"jV2HuWl\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_91_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_91_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 25589L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"Y\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_120587_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 25595L)
                .d("URI", "\"jNvpkEQlIU7\"")
            .and().insertInto("USERS", 25594L)
                .d("AUTHORIZATION_LEVEL", "190")
                .d("NAME", "\"aLCNMDbTnwC5kVN\"")
            .and().insertInto("ACTIVITY", 25593L)
            .and().insertInto("ACTIVITY", 25592L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25591L)
                .r("ACTIVITY_ID", 25593L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 25590L)
                .r("ACTIVITY_PROPERTIES_ID", 25591L)
                .r("MEDIA_FILE_ID", 25595L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 25601L)
                .d("URI", "\"UW\"")
            .and().insertInto("USERS", 25600L)
                .d("AUTHORIZATION_LEVEL", "837")
                .d("NAME", "\"mIE\"")
            .and().insertInto("ACTIVITY", 25599L)
            .and().insertInto("ACTIVITY", 25598L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25597L)
                .r("ACTIVITY_ID", 25599L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 25596L)
                .r("ACTIVITY_PROPERTIES_ID", 25591L)
                .r("MEDIA_FILE_ID", 25589L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 25607L)
                .d("URI", "\"AR__K\"")
            .and().insertInto("USERS", 25606L)
                .d("AUTHORIZATION_LEVEL", "828")
                .d("NAME", "\"_EM_120588_XYZ_\"")
            .and().insertInto("ACTIVITY", 25605L)
            .and().insertInto("ACTIVITY", 25604L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25603L)
                .r("ACTIVITY_ID", 25593L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 25602L)
                .r("ACTIVITY_PROPERTIES_ID", 25603L)
                .r("MEDIA_FILE_ID", 25601L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 33764L)
                .d("URI", "\"Q\"")
            .and().insertInto("TAG", 33763L)
                .d("GRP", "\"KVXVaJjEaiV\"")
                .d("NAME", "\"_EM_120581_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 33766L)
                .d("URI", "\"7\"")
            .and().insertInto("TAG", 33765L)
                .d("GRP", "\"BZHNGHQmX9\"")
                .d("NAME", "\"PKyfwH3dc0ApYr_a\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 33768L)
                .d("URI", "\"IkUaYULp4B\"")
            .and().insertInto("TAG", 33767L)
                .d("GRP", "\"Ascc1UN\"")
                .d("NAME", "\"_EM_120582_XYZ_f\"")
                .r("MEDIA_FILE_ID", 25589L)
            .and().insertInto("MEDIA_FILE", 33770L)
                .d("URI", "\"9A1GTgJd2Osmi\"")
            .and().insertInto("TAG", 33769L)
                .d("GRP", "\"_EM_120583_XYZ_\"")
                .d("NAME", "\"W9Ua\"")
                .r("MEDIA_FILE_ID", 25601L)
            .and().insertInto("MEDIA_FILE", 33772L)
                .d("URI", "\"ge\"")
            .and().insertInto("TAG", 33771L)
                .d("GRP", "\"r0LM\"")
                .d("NAME", "\"val\"")
                .r("MEDIA_FILE_ID", 25589L)
            .and().insertInto("USERS", 36313L)
                .d("AUTHORIZATION_LEVEL", "611")
                .d("NAME", "\"_EM_120589_XYZ_\"")
            .and().insertInto("ACTIVITY", 36312L)
            .and().insertInto("ACTIVITY_RATING", 36311L)
                .r("ACTIVITY_ID", 36312L)
                .r("USER_ID", 36313L)
                .d("FAVOURITE", "false")
                .d("RATING", "328")
            .and().insertInto("USERS", 36316L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_120590_XYZ_\"")
            .and().insertInto("ACTIVITY", 36315L)
            .and().insertInto("ACTIVITY_RATING", 36314L)
                .r("ACTIVITY_ID", 25598L)
                .r("USER_ID", 36313L)
                .d("FAVOURITE", "true")
                .d("RATING", "0")
            .and().insertInto("USERS", 36319L)
                .d("AUTHORIZATION_LEVEL", "555")
                .d("NAME", "\"9bKdEq6L\"")
            .and().insertInto("ACTIVITY", 36318L)
            .and().insertInto("ACTIVITY_RATING", 36317L)
                .r("ACTIVITY_ID", 36312L)
                .r("USER_ID", 25594L)
                .d("FAVOURITE", "false")
                .d("RATING", "851")
            .and().insertInto("USERS", 36322L)
                .d("AUTHORIZATION_LEVEL", "996")
                .d("NAME", "\"_EM_120591_XYZ_\"")
            .and().insertInto("ACTIVITY", 36321L)
            .and().insertInto("ACTIVITY_RATING", 36320L)
                .r("ACTIVITY_ID", 36315L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 36325L)
                .d("AUTHORIZATION_LEVEL", "489")
                .d("NAME", "\"yF3oP\"")
            .and().insertInto("ACTIVITY", 36324L)
            .and().insertInto("ACTIVITY_RATING", 36323L)
                .r("ACTIVITY_ID", 25604L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "998")
            .and().insertInto("MEDIA_FILE", 36343L)
                .d("URI", "\"SlJJR48HeYr\"")
            .and().insertInto("TAG", 36342L)
                .d("GRP", "\"YvBFnpGA6m8n_8\"")
                .d("NAME", "\"bn\"")
            .and().insertInto("TAG_DERIVED", 36341L)
                .r("TAG_ID", 33771L)
                .d("ACTIVITIES_COUNT", "959")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"epn_UCm1yjOkib0L\", " + 
                    " \"description_main\": \"epn_UCm1yjOkib0L\", " + 
                    " \"description_safety\": \"epn_UCm1yjOkib0L\", " + 
                    " \"description_notes\": \"epn_UCm1yjOkib0L\", " + 
                    " \"age_max\": -8196, " + 
                    " \"participants_min\": 1912117871, " + 
                    " \"time_min\": -8196, " + 
                    " \"time_max\": -2146959052, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"SeWsUz\", " + 
                    " \"tags\": [], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": -4611686018427387392, " + 
                    " \"uri\": \"YsGZRzrl0OBTg1\", " + 
                    " \"name\": \"vG5RbIbb\", " + 
                    " \"author\": \"_EM_120586_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"Cec\", " + 
                    " \"authorization_level\": 1073746012 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"favourites_count\": -6302184460865179679 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_114_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_92_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_92_with500() throws Exception {
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_introduction\": \"wFO\", " + 
                    " \"description_prepare\": \"qsYlzC\", " + 
                    " \"description_main\": \"tQ5i1H3Q9Y\", " + 
                    " \"description_safety\": \"w8VIVlXWCDGYO\", " + 
                    " \"description_notes\": \"E\", " + 
                    " \"age_min\": -2147482842, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"Ki_e\", " + 
                    " \"activity\": { " + 
                    " \"ratings_count\": 156, " + 
                    " \"ratings_average\": 0.9229732731497056, " + 
                    " \"favourites_count\": 40 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T21:19:08.559Z"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("wFO"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("qsYlzC"))
                .body("'properties_revisions'[0].'description_main'", containsString("tQ5i1H3Q9Y"))
                .body("'properties_revisions'[0].'description_safety'", containsString("w8VIVlXWCDGYO"))
                .body("'properties_revisions'[0].'description_notes'", containsString("E"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-2.147482842E9))
                .body("'properties_revisions'[0].'featured'", equalTo(true))
                .body("'properties_revisions'[0].'source'", containsString("Ki_e"))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'date_created'", containsString("2024-06-01T21:19:08.559Z"))
                .body("'properties'.'description_introduction'", containsString("wFO"))
                .body("'properties'.'description_prepare'", containsString("qsYlzC"))
                .body("'properties'.'description_main'", containsString("tQ5i1H3Q9Y"))
                .body("'properties'.'description_safety'", containsString("w8VIVlXWCDGYO"))
                .body("'properties'.'description_notes'", containsString("E"))
                .body("'properties'.'age_min'", numberMatches(-2.147482842E9))
                .body("'properties'.'featured'", equalTo(true))
                .body("'properties'.'source'", containsString("Ki_e"));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/134/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_112_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/134/rating?min_activities_count=kqSTMe2hj4e&name=6W437I&attrs=zNO_wLD1s&uri=J&valid=Ovqc4zno&participants=xj273JRMnQ"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_120_deleteRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/374?" + 
                    "attrs=jOUdt9pMAYIiiJu&" + 
                    "group=3")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_93_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_93_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 9286L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"ALVJXd98oyTFNRS\"")
                .d("MIME_TYPE", "\"_EM_76215_XYZ_\"")
                .d("NAME", "\"Gdq\"")
                .d("URI", "\"_EM_76103_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 9287L)
                .d("AUTHOR", "\"_EM_76216_XYZ_\"")
                .d("CAPTURE_DATE", "\"1908-07-17 11:48:43\"")
                .d("COPY_RIGHT", "\"Cm5VbFT7aqNz\"")
                .d("MIME_TYPE", "\"_EM_76217_XYZ_\"")
                .d("NAME", "\"WeCUdc\"")
                .d("URI", "\"w\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 809, " + 
                    " \"description_prepare\": \"o4QQU0R8TxqG\", " + 
                    " \"description_notes\": \"N99xPVBZ\", " + 
                    " \"age_min\": -720, " + 
                    " \"participants_max\": 588, " + 
                    " \"time_max\": 570, " + 
                    " \"source\": \"1wstFsZ\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"name\": \"RbtlNm1WI\", " + 
                    " \"media_file\": {}, " + 
                    " \"activities_count\": 903 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"authorization_level\": 476 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 182, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 509, " + 
                    " \"ratings_average\": 0.10058441222302594 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?" + 
                    "time_1=dbr3QACA&" + 
                    "age_1=Xialq5&" + 
                    "favourites=R&" + 
                    "group=YAFAq1Bnnv2Fq")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_94_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_94_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 31629L)
                .d("URI", "\"W\"")
            .and().insertInto("TAG", 31628L)
                .d("GRP", "\"_EM_119968_XYZ_\"")
                .d("NAME", "\"NS\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -64558, " + 
                    " \"name\": \"Pkf_lkfgG\", " + 
                    " \"description_material\": \"w2mI\", " + 
                    " \"description_introduction\": \"_EM_114794_XYZ_\", " + 
                    " \"description_prepare\": \"7HhVl9rC2WB\", " + 
                    " \"description_main\": \"BibHNrGEZikdER\", " + 
                    " \"description_safety\": \"fOYiMnS1IWcIag\", " + 
                    " \"participants_min\": -1207996918, " + 
                    " \"participants_max\": 17370, " + 
                    " \"time_min\": 678, " + 
                    " \"time_max\": 33623, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"_EM_119675_XYZ_\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"cIW\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"ZceGTS8sw9\", " + 
                    " \"uri\": \"HNdP\" " + 
                    " }, " + 
                    " \"activities_count\": 169 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 280 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 1952581359181965963, " + 
                    " \"name\": \"DgCIKXT\", " + 
                    " \"activities_count\": 79990846 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 977, " + 
                    " \"group\": \"mV_GRk\", " + 
                    " \"name\": \"gii52Ccft\", " + 
                    " \"activities_count\": 528 " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"5KPlvR9OkRbT\" " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"uri\": \"zptqEz0GQ4LC\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"ratings_sum\": 306, " + 
                    " \"ratings_average\": 0.7847049576702368, " + 
                    " \"related\": [ " + 
                    " 246, " + 
                    " 916, " + 
                    " 484, " + 
                    " 128 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_95_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_95_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 31629L)
                .d("URI", "\"W\"")
            .and().insertInto("TAG", 31628L)
                .d("GRP", "\"Vwc6irHLvdo3MgID\"")
                .d("NAME", "\"NS\"")
                .r("MEDIA_FILE_ID", 31629L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -64590, " + 
                    " \"name\": \"Pkf_lkfeG\", " + 
                    " \"description_material\": \"_EM_122803_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_114794_XYZ_\", " + 
                    " \"description_prepare\": \"7HhVl9rC2WB\", " + 
                    " \"description_main\": \"BibHNrGEZikdER\", " + 
                    " \"description_safety\": \"i8MhtfDCS\", " + 
                    " \"participants_min\": -8114, " + 
                    " \"participants_max\": -38, " + 
                    " \"time_min\": 678, " + 
                    " \"time_max\": 599, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"_EM_119675_XYZ_\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": -3225133452011422498, " + 
                    " \"group\": \"_IW\", " + 
                    " \"name\": \"5nXXU4\", " + 
                    " \"activities_count\": 169 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 280 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 1952581359181965963, " + 
                    " \"name\": \"DgCIKXT\", " + 
                    " \"activities_count\": 79990846 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 985, " + 
                    " \"group\": \"mV_GRk\", " + 
                    " \"activities_count\": 528 " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"5KPlvR9OkRbT\" " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"uri\": \"{ptqEz0GQ4LC\", " + 
                    " \"name\": \"\", " + 
                    " \"author\": \"BVBvUggP\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"ratings_sum\": 306, " + 
                    " \"ratings_average\": 0.7847049576702368, " + 
                    " \"related\": [ " + 
                    " 246, " + 
                    " 916, " + 
                    " 484, " + 
                    " 128 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_96_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_96_with500() throws Exception {
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"Aq9h6uNC0Q1emi0l\", " + 
                    " \"description_material\": \"E49s\", " + 
                    " \"description_main\": \"JY6WDo\", " + 
                    " \"description_safety\": \"_PAmH\", " + 
                    " \"description_notes\": \"OSiYGNS\", " + 
                    " \"age_min\": -35, " + 
                    " \"age_max\": -2147483475, " + 
                    " \"participants_min\": 198, " + 
                    " \"participants_max\": 705, " + 
                    " \"featured\": true, " + 
                    " \"media_files\": [], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 741, " + 
                    " \"ratings_sum\": -2597300321935675406, " + 
                    " \"ratings_average\": 0.4597470925047735, " + 
                    " \"favourites_count\": 316 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("Aq9h6uNC0Q1emi0l"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T21:19:05.827Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("E49s"))
                .body("'properties_revisions'[0].'description_main'", containsString("JY6WDo"))
                .body("'properties_revisions'[0].'description_safety'", containsString("_PAmH"))
                .body("'properties_revisions'[0].'description_notes'", containsString("OSiYGNS"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-35.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147483475E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(198.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(705.0))
                .body("'properties_revisions'[0].'featured'", equalTo(true))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'name'", containsString("Aq9h6uNC0Q1emi0l"))
                .body("'properties'.'date_created'", containsString("2024-06-01T21:19:05.827Z"))
                .body("'properties'.'description_material'", containsString("E49s"))
                .body("'properties'.'description_main'", containsString("JY6WDo"))
                .body("'properties'.'description_safety'", containsString("_PAmH"))
                .body("'properties'.'description_notes'", containsString("OSiYGNS"))
                .body("'properties'.'age_min'", numberMatches(-35.0))
                .body("'properties'.'age_max'", numberMatches(-2.147483475E9))
                .body("'properties'.'participants_min'", numberMatches(198.0))
                .body("'properties'.'participants_max'", numberMatches(705.0))
                .body("'properties'.'featured'", equalTo(true))
                .body("'properties'.'media_files'.size()", equalTo(0));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 707896035, " + 
                    " \"favourite\": true " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/-6491254403273481501/rating"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/-6491254403273481501/rating?random=MzOo3vRokNDbuYY8"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_104_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/ping")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    /**
    * [test_97_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_97_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 64226L)
                .d("URI", "\"ixRuU\"")
            .and().insertInto("TAG", 64225L)
                .d("GRP", "\"m\"")
                .d("NAME", "\"xke7wY\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 64228L)
                .d("URI", "\"1J\"")
            .and().insertInto("TAG", 64227L)
                .d("GRP", "\"PhjGyEIgHovz9x2\"")
                .d("NAME", "\"_ZqgcO2Wr\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 64230L)
                .d("URI", "\"XM\"")
            .and().insertInto("TAG", 64229L)
                .d("GRP", "\"pZTVgrnr\"")
                .d("NAME", "\"CMtCv8tbE3Re45\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 64232L)
                .d("URI", "\"8FXZqdi\"")
            .and().insertInto("TAG", 64231L)
                .d("GRP", "\"TGvuyuwQ2D\"")
                .d("NAME", "\"wB7F1\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 64234L)
                .d("URI", "\"4O1N\"")
            .and().insertInto("TAG", 64233L)
                .d("GRP", "\"4DvpCM3Z\"")
                .d("NAME", "\"tGN02OTlOLg_o\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 798, " + 
                    " \"description_material\": \"7BhjAj\", " + 
                    " \"description_introduction\": \"Wp0\", " + 
                    " \"description_safety\": \"fB9_2O3\", " + 
                    " \"description_notes\": \"R\", " + 
                    " \"participants_min\": 649, " + 
                    " \"participants_max\": 319, " + 
                    " \"time_min\": 202, " + 
                    " \"time_max\": 530, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"L_9\", " + 
                    " \"activities_count\": 53 " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"Z\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 4019754916819010958, " + 
                    " \"mime_type\": \"y31Q2MzyZ8deY1z\", " + 
                    " \"uri\": \"yaus\", " + 
                    " \"name\": \"aTcDzVBM7b\", " + 
                    " \"author\": \"KfwE\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"activities_count\": 99 " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"7iidSRd0YwwjfY3\", " + 
                    " \"copy_right\": \"28u\", " + 
                    " \"author\": \"pGm11CothOF1d\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"j7L\", " + 
                    " \"uri\": \"s9vFwpqjJwW\", " + 
                    " \"copy_right\": \"yZXXh\", " + 
                    " \"author\": \"Ei11pc7ZIIN_Dh\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"OGStGjyihzrF0yp\", " + 
                    " \"authorization_level\": 485, " + 
                    " \"identities\": [] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"ratings_sum\": 973, " + 
                    " \"related\": [] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_98_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_98_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 25318L)
                .d("URI", "\"9808380\"")
            .and().insertInto("TAG", 25317L)
                .d("GRP", "\"JO_qj_w/obdkS\"")
                .d("NAME", "\"1ZBEon1wrX9wZygz\"")
                .r("MEDIA_FILE_ID", 25318L)
            .and().insertInto("MEDIA_FILE", 25320L)
                .d("URI", "\"6B\"")
            .and().insertInto("TAG", 25319L)
                .d("GRP", "\"QLRZo_\"")
                .d("NAME", "\"9805210\"")
                .r("MEDIA_FILE_ID", 25320L)
            .and().insertInto("MEDIA_FILE", 25322L)
                .d("URI", "\"S5dYdVx3RHRi\"")
            .and().insertInto("TAG", 25321L)
                .d("GRP", "\"_EM_117691_XYZ_\"")
                .d("NAME", "\"_EM_117692_XYZ_\"")
                .r("MEDIA_FILE_ID", 25318L)
            .and().insertInto("SYSTEM_MESSAGE", 33985L)
                .d("KEY", "\"2vxA1u3T\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2071-01-27 22:11:28\"")
                .d("VALUE", "\"YoFEbWXXcz9JO1\"")
            .and().insertInto("SYSTEM_MESSAGE", 33986L)
                .d("KEY", "\"\"")
                .d("VALID_FROM", "\"1942-09-28 16:21:49\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"Y6fNXHF\"")
            .and().insertInto("SYSTEM_MESSAGE", 33987L)
                .d("KEY", "\"9\"")
                .d("VALID_FROM", "\"1955-11-03 15:46:10\"")
                .d("VALID_TO", "\"1904-11-28 03:32:00\"")
                .d("VALUE", "\"Po8kiiwNTmo_oA4\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 181, " + 
                    " \"key\": \"AuaCC_Z\", " + 
                    " \"valid_to\": \"1920-04-15T07:36:15\", " + 
                    " \"valid_from\": \"1962-07-30T07:40:08\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=AuaCC_Z&" + 
                    "valid=now_and_future&" + 
                    "attrs=&" + 
                    "random=&" + 
                    "favourites=ieKYEGnQ&" + 
                    "participants=pIETWtT&" + 
                    "name=o7zt0Nv4X&" + 
                    "group=_EM_117689_XYZ_&" + 
                    "ages=_EM_117690_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_published\": \"1920-10-27T00:51:-1\", " + 
                    " \"date_created\": \"2052-03-30T06:57:02\", " + 
                    " \"date_updated\": \"2057-06-21T21:52:06\", " + 
                    " \"description_introduction\": \"sb6\", " + 
                    " \"description_prepare\": \"_EM_117504_XYZ_\", " + 
                    " \"description_main\": \"_EM_51360_XYZ_\", " + 
                    " \"description_safety\": \"_EM_51361_XYZ_d\", " + 
                    " \"description_notes\": \"_EM_117505_XYZ_\", " + 
                    " \"age_min\": 887742, " + 
                    " \"age_max\": -2147483340, " + 
                    " \"participants_min\": 0, " + 
                    " \"participants_max\": -1073741400, " + 
                    " \"time_min\": 0, " + 
                    " \"time_max\": 408, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"SeWuUz\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 985, " + 
                    " \"name\": \"9hMNVoXYEgN0q4\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 885, " + 
                    " \"name\": \"1_yqTgg\" " + 
                    " }, " + 
                    " \"activities_count\": 1285 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [], " + 
                    " \"author\": { " + 
                    " \"name\": \"Cec\", " + 
                    " \"email_address\": \"5M\", " + 
                    " \"authorization_level\": 193, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"date_created\": \"1917-07-07T05:41:47\", " + 
                    " \"value\": \"3H1rxHfulj8gefZ\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 802, " + 
                    " \"date_created\": \"2054-01-07T16:13:01\" " + 
                    " } " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=&" + 
                    "name=o7zt0Nv4X&" + 
                    "text=X&" + 
                    "featured=false&" + 
                    "categories=3n&" + 
                    "ages=_EM_117690_XYZ_&" + 
                    "durations=_EM_117506_XYZ_&" + 
                    "my_favourites=false&" + 
                    "ratings_average_min=887742.0&" + 
                    "random=307&" + 
                    "favourites=1")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_77_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
        
        ValidatableResponse res_4 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"8onRTBbR7waI\", " + 
                    " \"description_introduction\": \"SqtLjw\", " + 
                    " \"description_prepare\": \"SrT0Be2rd\", " + 
                    " \"age_min\": -524, " + 
                    " \"age_max\": -824, " + 
                    " \"participants_min\": 48, " + 
                    " \"time_min\": 217, " + 
                    " \"time_max\": 974, " + 
                    " \"activity\": { " + 
                    " \"id\": -466006230, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 561, " + 
                    " \"ratings_sum\": 712 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T21:19:09.141Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("8onRTBbR7waI"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("SqtLjw"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("SrT0Be2rd"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-524.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-824.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(48.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(217.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(974.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'date_created'", containsString("2024-06-01T21:19:09.141Z"))
                .body("'properties'.'description_material'", containsString("8onRTBbR7waI"))
                .body("'properties'.'description_introduction'", containsString("SqtLjw"))
                .body("'properties'.'description_prepare'", containsString("SrT0Be2rd"))
                .body("'properties'.'age_min'", numberMatches(-524.0))
                .body("'properties'.'age_max'", numberMatches(-824.0))
                .body("'properties'.'participants_min'", numberMatches(48.0))
                .body("'properties'.'time_min'", numberMatches(217.0))
                .body("'properties'.'time_max'", numberMatches(974.0));
        location_activities = "/api/v2/activities" + "/" + res_4.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/567/rating?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating_78_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/567/rating?min_activities_count=&attrs=1EXHKWi65Vx4Rui&group=vmwEym4O&durations=&categories=1tR&id="))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_120_deleteRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_99_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_99_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 14975L)
                .d("URI", "\"_EM_88780_XYZ_\"")
            .and().insertInto("TAG", 14974L)
                .d("GRP", "\"dBdWTBaiVdP1FXT\"")
                .d("NAME", "\"Un4cA2nI\"")
            .and().insertInto("TAG_DERIVED", 14973L)
                .r("TAG_ID", 14974L)
                .d("ACTIVITIES_COUNT", "943")
            .and().insertInto("MEDIA_FILE", 14978L)
                .d("URI", "\"_EM_88781_XYZ_\"")
            .and().insertInto("TAG", 14977L)
                .d("GRP", "\"C04WjWY1\"")
                .d("NAME", "\"RXytBW\"")
            .and().insertInto("TAG_DERIVED", 14976L)
                .r("TAG_ID", 14977L)
                .d("ACTIVITIES_COUNT", "0")
            .and().insertInto("MEDIA_FILE", 14981L)
                .d("URI", "\"ZEXp0\"")
            .and().insertInto("TAG", 14980L)
                .d("GRP", "\"qyNIF6\"")
                .d("NAME", "\"LwEp\"")
            .and().insertInto("TAG_DERIVED", 14979L)
                .r("TAG_ID", 14980L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("USERS", 15062L)
                .d("AUTHORIZATION_LEVEL", "649")
                .d("NAME", "\"_EM_88782_XYZ_\"")
            .and().insertInto("ACTIVITY", 15061L)
            .and().insertInto("ACTIVITY_RATING", 15060L)
                .r("ACTIVITY_ID", 15061L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "511")
            .and().insertInto("USERS", 15065L)
                .d("AUTHORIZATION_LEVEL", "17137")
                .d("NAME", "\"IajDywV\"")
            .and().insertInto("ACTIVITY", 15064L)
            .and().insertInto("ACTIVITY_RATING", 15063L)
                .r("ACTIVITY_ID", 15064L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("MEDIA_FILE", 9782L)
                .d("URI", "\"3uYEw89Z4IH2ibb\"")
            .and().insertInto("TAG", 9781L)
                .d("GRP", "\"_EM_46928_XYZ_\"")
                .d("NAME", "\"aYx\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/FavouritesResourceV1_58_lambda$put$3
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "group=&" + 
                    "min_activities_count=190")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'group'", containsString("dBdWTBaiVdP1FXT"))
                .body("[0].'name'", containsString("Un4cA2nI"))
                .body("[0].'media_file'", nullValue())
                .body("[0].'activities_count'", numberMatches(943.0));
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"akDMoiYeyWi\", " + 
                    " \"description_prepare\": \"\", " + 
                    " \"description_main\": \"U8Ic\", " + 
                    " \"description_safety\": \"ZHzjG6FxXnXnn2q\", " + 
                    " \"description_notes\": \"ZUBLhMk\", " + 
                    " \"age_min\": -379, " + 
                    " \"age_max\": -2147482742, " + 
                    " \"participants_min\": 48, " + 
                    " \"time_max\": 829, " + 
                    " \"source\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T21:19:08.826Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("akDMoiYeyWi"))
                .body("'properties_revisions'[0].'description_prepare'", containsString(""))
                .body("'properties_revisions'[0].'description_main'", containsString("U8Ic"))
                .body("'properties_revisions'[0].'description_safety'", containsString("ZHzjG6FxXnXnn2q"))
                .body("'properties_revisions'[0].'description_notes'", containsString("ZUBLhMk"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-379.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147482742E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(48.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(829.0))
                .body("'properties_revisions'[0].'source'", containsString(""))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'date_created'", containsString("2024-06-01T21:19:08.826Z"))
                .body("'properties'.'description_material'", containsString("akDMoiYeyWi"))
                .body("'properties'.'description_prepare'", containsString(""))
                .body("'properties'.'description_main'", containsString("U8Ic"))
                .body("'properties'.'description_safety'", containsString("ZHzjG6FxXnXnn2q"))
                .body("'properties'.'description_notes'", containsString("ZUBLhMk"))
                .body("'properties'.'age_min'", numberMatches(-379.0))
                .body("'properties'.'age_max'", numberMatches(-2.147482742E9))
                .body("'properties'.'participants_min'", numberMatches(48.0))
                .body("'properties'.'time_max'", numberMatches(829.0))
                .body("'properties'.'source'", containsString(""));
        location_activities = "/api/v2/activities" + "/" + res_3.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"favourite\": true " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/609/rating?EMextraParam123=42"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/609/rating?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_104_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }


}
