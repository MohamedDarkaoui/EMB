import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2024-06-01T21:19:15.196+02:00[Europe/Paris]
 * <br>
 * The generated test suite contains 50 tests
 * <br>
 * Covered targets: 1603
 * <br>
 * Used time: 2h 0m 12s
 * <br>
 * Needed budget for current results: 98%
 * <br>
 * This file contains test cases that represent successful calls.
 */
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.embedded.se.devscout.scoutapi.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("ACTIVITY","ACTIVITY_DERIVED","ACTIVITY_PROPERTIES","ACTIVITY_PROPERTIES_MEDIA_FILE","ACTIVITY_PROPERTIES_TAG","ACTIVITY_RATING","ACTIVITY_RELATION","USERS","USER_IDENTITY","MEDIA_FILE","MEDIA_FILE_KEYWORDS","TAG","TAG_DERIVED","SYSTEM_MESSAGE"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test(timeout = 60000)
    public void test_0() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .get(baseUrlOfSut + "/api/swagger.json")
                .then()
                .statusCode(200);
        
        expectationHandler.expect(ems)
            /*
             Note: No supported codes appear to be defined. https://swagger.io/docs/specification/describing-responses/.
             This is somewhat unexpected, so the code below is likely to lead to a failed expectation
            */
            .that(sco, Arrays.asList().contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/453")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_2() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages/9183576740986407268?EMextraParam123=_EM_48_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_3() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_117_XYZ_")
                .get(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=_EM_116_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_4() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_53_XYZ_")
                .get(baseUrlOfSut + "/api/v1/system/roles?EMextraParam123=_EM_52_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_5() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_58_XYZ_")
                .get(baseUrlOfSut + "/api/v2/tags/426?attrs=_EM_56_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_6() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/166?" + 
                    "attrs=rW99X7aD&" + 
                    "EMextraParam123=_EM_12_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_7() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_103_XYZ_")
                .get(baseUrlOfSut + "/api/v1/categories/2421925443404354783?" + 
                    "attrs=_EM_101_XYZ_&" + 
                    "EMextraParam123=_EM_102_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_8() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities/2061390569?attrs=_EM_68_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_9() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/media_files?uri=Y6wn_nFWOOI")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_10() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "valid=now&" + 
                    "attrs=_EM_119_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_11() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 25318L)
                .d("URI", "\"9808380\"")
            .and().insertInto("TAG", 25317L)
                .d("GRP", "\"JO_qj_w/obdkS\"")
                .d("NAME", "\"1ZBEon1wrX9wZygz\"")
                .r("MEDIA_FILE_ID", 25318L)
            .and().insertInto("MEDIA_FILE", 25320L)
                .d("URI", "\"6B\"")
            .and().insertInto("TAG", 25319L)
                .d("GRP", "\"QLRZo_\"")
                .d("NAME", "\"9805210\"")
                .r("MEDIA_FILE_ID", 25320L)
            .and().insertInto("MEDIA_FILE", 25322L)
                .d("URI", "\"S5dYdVx3RHRi\"")
            .and().insertInto("TAG", 25321L)
                .d("GRP", "\"_EM_117691_XYZ_\"")
                .d("NAME", "\"_EM_117692_XYZ_\"")
                .r("MEDIA_FILE_ID", 25318L)
            .and().insertInto("SYSTEM_MESSAGE", 33985L)
                .d("KEY", "\"2vxA1u3T\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2071-01-27 22:11:28\"")
                .d("VALUE", "\"YoFEbWXXcz9JO1\"")
            .and().insertInto("SYSTEM_MESSAGE", 33986L)
                .d("KEY", "\"\"")
                .d("VALID_FROM", "\"1942-09-28 16:21:49\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"Y6fNXHF\"")
            .and().insertInto("SYSTEM_MESSAGE", 33987L)
                .d("KEY", "\"9\"")
                .d("VALID_FROM", "\"1955-11-03 15:46:10\"")
                .d("VALID_TO", "\"1904-11-28 03:32:00\"")
                .d("VALUE", "\"Po8kiiwNTmo_oA4\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=AuaCC_Z&" + 
                    "valid=now_and_future&" + 
                    "attrs=&" + 
                    "random=&" + 
                    "favourites=ieKYEGnQ&" + 
                    "participants=pIETWtT&" + 
                    "name=o7zt0Nv4X&" + 
                    "group=_EM_117689_XYZ_&" + 
                    "ages=_EM_117690_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_12() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 929L)
                .d("KEY", "\"sUKc0\"")
                .d("VALID_FROM", "\"2093-01-29 18:56:03\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"u7pBAfDkNL\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_11085_XYZ_")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=sUKc0&" + 
                    "attrs=_EM_11083_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("'[0]'.isEmpty()", is(true));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_13() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 6846L)
                .d("AUTHORIZATION_LEVEL", "253")
                .d("DATE_CREATED", "\"1929-05-24 22:18:20\"")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"\"")
            .and().insertInto("USERS", 6847L)
                .d("AUTHORIZATION_LEVEL", "94")
                .d("DATE_CREATED", "\"1952-11-29 12:09:04\"")
                .d("EMAIL_ADDRESS", "\"cp0s\"")
                .d("NAME", "\"_EM_109410_XYZ_\"")
            .and().insertInto("USERS", 6848L)
                .d("AUTHORIZATION_LEVEL", "988")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"ONr\"")
            .and().insertInto("USERS", 6849L)
                .d("AUTHORIZATION_LEVEL", "-65170")
                .d("DATE_CREATED", "\"1960-02-08 01:40:56\"")
                .d("EMAIL_ADDRESS", "\"s_vN2w2LDvri8f\"")
                .d("NAME", "\"_EM_38310_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 6851L)
                .d("URI", "\"P5sksUhigkQ\"")
            .and().insertInto("TAG", 6850L)
                .d("GRP", "\"_EM_38311_XYZ_\"")
                .d("NAME", "\"_EM_109411_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 6853L)
                .d("URI", "\"H36R1XeZ9okNC\"")
            .and().insertInto("TAG", 6852L)
                .d("GRP", "\"CZpQ\"")
                .d("NAME", "\"tcuUU7z6QheEwP\"")
                .r("MEDIA_FILE_ID", 6851L)
            .and().insertInto("ACTIVITY", 6854L)
            .and().insertInto("ACTIVITY", 6855L)
            .and().insertInto("USERS", 6858L)
                .d("AUTHORIZATION_LEVEL", "726")
                .d("NAME", "\"LzuOOT6B69\"")
            .and().insertInto("ACTIVITY", 6857L)
            .and().insertInto("ACTIVITY_RATING", 6856L)
                .r("ACTIVITY_ID", 6854L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "856")
            .and().insertInto("USERS", 6861L)
                .d("AUTHORIZATION_LEVEL", "747")
                .d("NAME", "\"_EM_38312_XYZ_\"")
            .and().insertInto("ACTIVITY", 6860L)
            .and().insertInto("ACTIVITY_RATING", 6859L)
                .r("ACTIVITY_ID", 6860L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 6864L)
                .d("AUTHORIZATION_LEVEL", "327")
                .d("NAME", "\"_EM_109412_XYZ_\"")
            .and().insertInto("ACTIVITY", 6863L)
            .and().insertInto("ACTIVITY_RATING", 6862L)
                .r("ACTIVITY_ID", 6863L)
                .r("USER_ID", 6848L)
                .d("FAVOURITE", "false")
                .d("RATING", "59")
            .and().insertInto("SYSTEM_MESSAGE", 6929L)
                .d("KEY", "\"_EM_109413_XYZ_\"")
                .d("VALID_FROM", "\"2032-02-13 11:59:47\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"lE_vOqpbgEdmwx\"")
            .and().insertInto("SYSTEM_MESSAGE", 6930L)
                .d("KEY", "\"_EM_38315_XYZ_\"")
                .d("VALID_FROM", "\"1900-01-22 19:54:39\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"6ZH4_vzchpSEpLj\"")
            .and().insertInto("SYSTEM_MESSAGE", 6931L)
                .d("KEY", "\"WuqA6U\"")
                .d("VALID_FROM", "\"1910-02-11 10:07:15\"")
                .d("VALID_TO", "\"2014-05-06 15:39:08\"")
                .d("VALUE", "\"lz47O33XUAg0LM\"")
            .and().insertInto("SYSTEM_MESSAGE", 6932L)
                .d("KEY", "\"hc\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1963-06-19 17:20:44\"")
                .d("VALUE", "\"_EM_38316_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 6933L)
                .d("KEY", "\"IPUiP=\"")
                .d("VALID_FROM", "\"2060-10-05 07:47:41\"")
                .d("VALID_TO", "\"2044-10-29 08:55:08\"")
                .d("VALUE", "\"\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?valid=now_and_future")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(3))
                .body("[0].'key'", containsString("_EM_109413_XYZ_"))
                .body("[0].'value'", containsString("lE_vOqpbgEdmwx"))
                .body("[0].'valid_to'", nullValue())
                .body("[0].'valid_from'", numberMatches(1.960282787E12))
                .body("[1].'key'", containsString("_EM_38315_XYZ_"))
                .body("[1].'value'", containsString("6ZH4_vzchpSEpLj"))
                .body("[1].'valid_to'", nullValue())
                .body("[1].'valid_from'", numberMatches(-2.207103282E12))
                .body("[2].'key'", containsString("IPUiP="))
                .body("[2].'value'", containsString(""))
                .body("[2].'valid_to'", numberMatches(2.361336908E12))
                .body("[2].'valid_from'", numberMatches(2.864180861E12));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_14() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories?" + 
                    "name=_EM_142_XYZ_&" + 
                    "attrs=_EM_143_XYZ_&" + 
                    "EMextraParam123=_EM_144_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_15() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 14975L)
                .d("URI", "\"_EM_88780_XYZ_\"")
            .and().insertInto("TAG", 14974L)
                .d("GRP", "\"dBdWTBaiVdP1FXT\"")
                .d("NAME", "\"Un4cA2nI\"")
            .and().insertInto("TAG_DERIVED", 14973L)
                .r("TAG_ID", 14974L)
                .d("ACTIVITIES_COUNT", "943")
            .and().insertInto("MEDIA_FILE", 14978L)
                .d("URI", "\"_EM_88781_XYZ_\"")
            .and().insertInto("TAG", 14977L)
                .d("GRP", "\"C04WjWY1\"")
                .d("NAME", "\"RXytBW\"")
            .and().insertInto("TAG_DERIVED", 14976L)
                .r("TAG_ID", 14977L)
                .d("ACTIVITIES_COUNT", "0")
            .and().insertInto("MEDIA_FILE", 14981L)
                .d("URI", "\"ZEXp0\"")
            .and().insertInto("TAG", 14980L)
                .d("GRP", "\"qyNIF6\"")
                .d("NAME", "\"LwEp\"")
            .and().insertInto("TAG_DERIVED", 14979L)
                .r("TAG_ID", 14980L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("USERS", 15062L)
                .d("AUTHORIZATION_LEVEL", "649")
                .d("NAME", "\"_EM_88782_XYZ_\"")
            .and().insertInto("ACTIVITY", 15061L)
            .and().insertInto("ACTIVITY_RATING", 15060L)
                .r("ACTIVITY_ID", 15061L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "511")
            .and().insertInto("USERS", 15065L)
                .d("AUTHORIZATION_LEVEL", "17137")
                .d("NAME", "\"IajDywV\"")
            .and().insertInto("ACTIVITY", 15064L)
            .and().insertInto("ACTIVITY_RATING", 15063L)
                .r("ACTIVITY_ID", 15064L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("MEDIA_FILE", 9782L)
                .d("URI", "\"3uYEw89Z4IH2ibb\"")
            .and().insertInto("TAG", 9781L)
                .d("GRP", "\"_EM_46928_XYZ_\"")
                .d("NAME", "\"aYx\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "group=&" + 
                    "min_activities_count=190")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'group'", containsString("dBdWTBaiVdP1FXT"))
                .body("[0].'name'", containsString("Un4cA2nI"))
                .body("[0].'media_file'", nullValue())
                .body("[0].'activities_count'", numberMatches(943.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_16() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "categories=&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_17() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 4517L)
                .d("KEY", "\"A_\"")
                .d("VALID_FROM", "\"2016-01-01 07:42:50\"")
                .d("VALID_TO", "\"1954-12-19 05:22:06\"")
                .d("VALUE", "\"H\"")
            .and().insertInto("SYSTEM_MESSAGE", 4518L)
                .d("KEY", "\"bjcjh\"")
                .d("VALID_FROM", "\"2077-07-29 11:47:25\"")
                .d("VALID_TO", "\"2060-10-12 09:31:47\"")
                .d("VALUE", "\"fabjdv_UR\"")
            .and().insertInto("SYSTEM_MESSAGE", 4519L)
                .d("KEY", "\"dwQnxs_wkKvOqi\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"aPHdCzV5\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"63tJr7CZED55\", " + 
                    " \"value\": \"Q6gx\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'key'", containsString("63tJr7CZED55"))
                .body("'value'", containsString("Q6gx"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_18() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 4865L)
            .and().insertInto("ACTIVITY", 4866L)
            .and().insertInto("ACTIVITY", 4867L)
            .and().insertInto("ACTIVITY", 4868L)
            .and().insertInto("USERS", 4871L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_UMU33154]XYZ_\"")
            .and().insertInto("ACTIVITY", 4870L)
            .and().insertInto("ACTIVITY_RATING", 4869L)
                .r("ACTIVITY_ID", 4868L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "0")
            .and().insertInto("MEDIA_FILE", 5975L)
                .d("URI", "\"bPf1Zs\"")
            .and().insertInto("TAG", 5974L)
                .d("GRP", "\"_EM_34528_XYZ_\"")
                .d("NAME", "\"46\"")
            .and().insertInto("TAG_DERIVED", 5973L)
                .r("TAG_ID", 5974L)
                .d("ACTIVITIES_COUNT", "251")
            .and().insertInto("MEDIA_FILE", 5978L)
                .d("URI", "\"%c7%\"")
            .and().insertInto("TAG", 5977L)
                .d("GRP", "\"8987270\"")
                .d("NAME", "\"uEq_LKG\"")
            .and().insertInto("TAG_DERIVED", 5976L)
                .r("TAG_ID", 5977L)
                .d("ACTIVITIES_COUNT", "0")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users?" + 
                    "name=CnUWU&" + 
                    "attrs=_EM_28562_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_19() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/8502570893177264458?" + 
                    "attrs=_EM_4979_XYZ_&" + 
                    "EMextraParam123=_EM_4980_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_20() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(3))
                .body("[0].'name'", containsString("INTEGRATION TEST MODERATOR"))
                .body("[0].'email_address'", nullValue())
                .body("[0].'authorization_level'", numberMatches(10.0))
                .body("[0].'identities'.size()", equalTo(1))
                .body("[0].'identities'[0].'date_created'", numberMatches(9.811548E11))
                .body("[0].'identities'[0].'type'", containsString("API"))
                .body("[0].'identities'[0].'value'", containsString("moderator"))
                .body("[1].'name'", containsString("INTEGRATION TEST ADMINISTRATOR"))
                .body("[1].'email_address'", nullValue())
                .body("[1].'authorization_level'", numberMatches(20.0))
                .body("[1].'identities'.size()", equalTo(1))
                .body("[1].'identities'[0].'date_created'", numberMatches(9.811548E11))
                .body("[1].'identities'[0].'type'", containsString("API"))
                .body("[1].'identities'[0].'value'", containsString("administrator"))
                .body("[2].'name'", containsString("INTEGRATION TEST USER"))
                .body("[2].'email_address'", nullValue())
                .body("[2].'authorization_level'", numberMatches(0.0))
                .body("[2].'identities'.size()", equalTo(1))
                .body("[2].'identities'[0].'date_created'", numberMatches(9.811548E11))
                .body("[2].'identities'[0].'type'", containsString("API"))
                .body("[2].'identities'[0].'value'", containsString("user"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_21() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 4517L)
                .d("KEY", "\"A_\"")
                .d("VALID_FROM", "\"2016-01-01 07:42:50\"")
                .d("VALID_TO", "\"1954-12-19 05:22:06\"")
                .d("VALUE", "\"H\"")
            .and().insertInto("SYSTEM_MESSAGE", 4518L)
                .d("KEY", "\"bjcjh\"")
                .d("VALID_FROM", "\"2077-07-29 11:47:25\"")
                .d("VALID_TO", "\"2060-10-12 09:31:47\"")
                .d("VALUE", "\"fabjdv_UR\"")
            .and().insertInto("SYSTEM_MESSAGE", 4519L)
                .d("KEY", "\"dwQnxs_wkKvOqi\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"aPHdCzV5\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_system_messages = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"63tJr7CZED55\", " + 
                    " \"value\": \"Q6gx\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'key'", containsString("63tJr7CZED55"))
                .body("'value'", containsString("Q6gx"));
        location_system_messages = "/api/v1/system_messages" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_system_messages, baseUrlOfSut + "/api/v1/system_messages/436?EMextraParam123=42"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_22() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1722_XYZ_")
                .get(baseUrlOfSut + "/api/v1/users/profile?EMextraParam123=_EM_1721_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'role_permissions'.size()", equalTo(9))
                .body("'role_permissions'", hasItems("activity_create", "activity_edit_own", "auth_profile_edit", "comment_create", "comment_edit_own", "mediaitem_edit_own", "rating_set_own", "reference_edit_own", "system_message_read"))
                .body("'name'", containsString("INTEGRATION TEST USER"))
                .body("'role'", containsString("user"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_23() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"_EM_64939_XYZ_\", " + 
                    " \"name\": \"_EM_64940_XYZ_\", " + 
                    " \"activities_count\": 30 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("_EM_64939_XYZ_"))
                .body("'name'", containsString("_EM_64940_XYZ_"))
                .body("'activities_count'", numberMatches(30.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_24() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 4517L)
                .d("KEY", "\"AU\"")
                .d("VALID_FROM", "\"2000-01-02 07:42:50\"")
                .d("VALID_TO", "\"1954-06-16 05:38:29\"")
                .d("VALUE", "\"_EM_101841_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 4518L)
                .d("KEY", "\"bjcjl\"")
                .d("VALID_FROM", "\"2000-07-29 11:47:25\"")
                .d("VALID_TO", "\"2060-12-11 09:31:47\"")
                .d("VALUE", "\"fabjdv_UR\"")
            .and().insertInto("SYSTEM_MESSAGE", 4519L)
                .d("KEY", "\"dwQnxs_wkKvOqim\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1942-05-29 18:27:40\"")
                .d("VALUE", "\"_EM_102195_XYZ_\"")
            .and().insertInto("USERS", 26476L)
                .d("AUTHORIZATION_LEVEL", "1218")
                .d("NAME", "\"I9Rb\"")
            .and().insertInto("ACTIVITY", 26475L)
            .and().insertInto("ACTIVITY_RATING", 26474L)
                .r("ACTIVITY_ID", 26475L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "151")
            .and().insertInto("USERS", 26479L)
                .d("AUTHORIZATION_LEVEL", "531")
                .d("NAME", "\"LRmksAT\"")
            .and().insertInto("ACTIVITY", 26478L)
            .and().insertInto("ACTIVITY_RATING", 26477L)
                .r("ACTIVITY_ID", 26478L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "801")
            .and().insertInto("USERS", 26482L)
                .d("AUTHORIZATION_LEVEL", "17281")
                .d("NAME", "\"_EM_101842_XYZ_\"")
            .and().insertInto("ACTIVITY", 26481L)
            .and().insertInto("ACTIVITY_RATING", 26480L)
                .r("ACTIVITY_ID", 26481L)
                .r("USER_ID", 26476L)
                .d("FAVOURITE", "false")
                .d("RATING", "137")
            .and().insertInto("USERS", 26485L)
                .d("AUTHORIZATION_LEVEL", "312")
                .d("NAME", "\"e\"")
            .and().insertInto("ACTIVITY", 26484L)
            .and().insertInto("ACTIVITY_RATING", 26483L)
                .r("ACTIVITY_ID", 26481L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "-1406293455")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 967, " + 
                    " \"key\": \"CEd\", " + 
                    " \"value\": \"y0Gy\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/1")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'key'", containsString("CEd"))
                .body("'value'", containsString("y0Gy"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_25() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3010L)
                .d("AUTHOR", "\"_EM_19898_XYZ_\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"XxW3Dgt9MgGo\"")
                .d("MIME_TYPE", "\"ENN4Kaa\"")
                .d("NAME", "\"_QLgyc38QdFkgal\"")
                .d("URI", "\"poKCEzuN\"")
            .and().insertInto("MEDIA_FILE", 3011L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"_EM_19899_XYZ_\"")
                .d("MIME_TYPE", "\"0D0no8KmTCEJ3U\"")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_19900_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 3012L)
                .d("AUTHOR", "\"topwz\"")
                .d("CAPTURE_DATE", "\"1953-11-09 06:35:14\"")
                .d("COPY_RIGHT", "\"\"")
                .d("MIME_TYPE", "\"VFEhuPqn\"")
                .d("NAME", "\"YcZDFEinX7\"")
                .d("URI", "\"_EM_19901_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 3013L)
                .d("AUTHOR", "\"Iq16ZKM95YDC\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"\"")
                .d("URI", "\"_EM_19902_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 3014L)
                .d("AUTHOR", "\"_EM_19903_XYZ_\"")
                .d("CAPTURE_DATE", "\"2100-01-19 18:20:20\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"ChyZ1dKfD9EqT7\"")
                .d("NAME", "\"_EM_19904_XYZ_\"")
                .d("URI", "\"_EM_19905_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_11992_XYZ_\", " + 
                    " \"uri\": \"https://gQGrov_9qJZMnR37:914/hPrnWXWvLVdI/2PN\", " + 
                    " \"name\": \"PUBLIC\", " + 
                    " \"copy_right\": \"8913292\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("_EM_11992_XYZ_"))
                .body("'uri'", containsString("https://gQGrov_9qJZMnR37:914/hPrnWXWvLVdI/2PN"))
                .body("'name'", containsString("PUBLIC"))
                .body("'copy_right'", containsString("8913292"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_26() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 9286L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"ALVJXd98oyTFNRS\"")
                .d("MIME_TYPE", "\"_EM_76215_XYZ_\"")
                .d("NAME", "\"Gdq\"")
                .d("URI", "\"_EM_76103_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 9287L)
                .d("AUTHOR", "\"_EM_76216_XYZ_\"")
                .d("CAPTURE_DATE", "\"1908-07-17 11:48:43\"")
                .d("COPY_RIGHT", "\"Cm5VbFT7aqNz\"")
                .d("MIME_TYPE", "\"_EM_76217_XYZ_\"")
                .d("NAME", "\"WeCUdc\"")
                .d("URI", "\"w\"")
            .and().insertInto("MEDIA_FILE", 863L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2023-11-16 15:57:38\"")
                .d("COPY_RIGHT", "\"_EM_10748_XYZ_\"")
                .d("MIME_TYPE", "\"tR7UzlPcJn\"")
                .d("NAME", "\"Wj2uqUK8q\"")
                .d("URI", "\"4cW\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"24\", " + 
                    " \"name\": \"_EM_76101_XYZ_\", " + 
                    " \"copy_right\": \"_EM_10753_XYZ_\", " + 
                    " \"author\": \"Jl\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/2")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("24"))
                .body("'name'", containsString("_EM_76101_XYZ_"))
                .body("'capture_date'", containsString("1908-07-17T11:48:43.0Z"))
                .body("'copy_right'", containsString("Cm5VbFT7aqNz"))
                .body("'author'", containsString("_EM_76216_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_27() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3763L)
            .and().insertInto("USERS", 54356L)
                .d("AUTHORIZATION_LEVEL", "83")
                .d("NAME", "\"xu8uXrjQMx9H\"")
            .and().insertInto("ACTIVITY", 54355L)
            .and().insertInto("ACTIVITY", 54354L)
            .and().insertInto("ACTIVITY_RELATION", 54353L)
                .r("ACTIVITY_1_ID", 3763L)
                .r("ACTIVITY_2_ID", 54354L)
                .d("OWNER_ID", "3")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "attrs=1ldRQTayfpL&" + 
                    "ratings_count_min=747&" + 
                    "favourites=859&" + 
                    "group=5ZnVdl&" + 
                    "valid=ecnVjpKNWxq2ZRP")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_28() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 29392L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"0hjJyVQNcxPH2Q\"")
                .d("MIME_TYPE", "\"_EM_109622_XYZ_\"")
                .d("NAME", "\"\"")
                .d("URI", "\"_EM_109623_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 29393L)
                .d("AUTHOR", "\"IXjMxctG9MM\"")
                .d("CAPTURE_DATE", "\"1915-02-07 02:52:50\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_109624_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 29394L)
                .d("AUTHOR", "\"f43XiUjqPz\"")
                .d("CAPTURE_DATE", "\"2030-04-02 13:26:59\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_109625_XYZ_\"")
                .d("NAME", "\"W_RvkTP\"")
                .d("URI", "\"i3ctZ.HTFbq\"")
            .and().insertInto("MEDIA_FILE", 29395L)
                .d("AUTHOR", "\"Nu3Vw2lQ6K4l\"")
                .d("CAPTURE_DATE", "\"2063-10-23 09:00:12\"")
                .d("COPY_RIGHT", "\"1AuhYs\"")
                .d("MIME_TYPE", "\"_EM_109626_XYZ_\"")
                .d("NAME", "\"UjejBzpwelXluO\"")
                .d("URI", "\"6jJJoQ9eic\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"_EM_79541_XYZ_\", " + 
                    " \"name\": \"_EM_79542_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"eNOhizn\", " + 
                    " \"name\": \"_EM_79544_XYZ_\", " + 
                    " \"copy_right\": \"Njetkj881\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("_EM_79541_XYZ_"))
                .body("'name'", containsString("_EM_79542_XYZ_"))
                .body("'media_file'.'uri'", containsString("eNOhizn"))
                .body("'media_file'.'name'", containsString("_EM_79544_XYZ_"))
                .body("'media_file'.'copy_right'", containsString("Njetkj881"))
                .body("'activities_count'", numberMatches(0.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_29() throws Exception {
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_19163_XYZ_\", " + 
                    " \"uri\": \"_EM_19164_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("_EM_19163_XYZ_"))
                .body("'uri'", containsString("_EM_19164_XYZ_"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/182"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_30() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 609L)
                .d("URI", "\"_EM_9436_XYZ_\"")
            .and().insertInto("TAG", 608L)
                .d("GRP", "\"_EM_9437_XYZ_\"")
                .d("NAME", "\"zzQGoxri5u\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 611L)
                .d("URI", "\"7jdheLxTmwy\"")
            .and().insertInto("TAG", 610L)
                .d("GRP", "\"iejvGn\"")
                .d("NAME", "\"y9qoaj\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 613L)
                .d("URI", "\"BId2PKBI\"")
            .and().insertInto("TAG", 612L)
                .d("GRP", "\"_EM_9438_XYZ_\"")
                .d("NAME", "\"_EM_9439_XYZ_\"")
                .r("MEDIA_FILE_ID", 609L)
            .and().insertInto("MEDIA_FILE", 615L)
                .d("URI", "\"_EM_9440_XYZ_\"")
            .and().insertInto("TAG", 614L)
                .d("GRP", "\"2UymU\"")
                .d("NAME", "\"yHpoXgU_i\"")
                .r("MEDIA_FILE_ID", 613L)
            .and().insertInto("MEDIA_FILE", 617L)
                .d("URI", "\"mhhd1ntxOONJCl\"")
            .and().insertInto("TAG", 616L)
                .d("GRP", "\"_EM_9441_XYZ_\"")
                .d("NAME", "\"_EM_9442_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_categories = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"8905473\", " + 
                    " \"name\": \"_EM_4624_XYZ_\", " + 
                    " \"activities_count\": 1389 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("8905473"))
                .body("'name'", containsString("_EM_4624_XYZ_"))
                .body("'activities_count'", numberMatches(1389.0));
        location_categories = "/api/v1/categories" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_categories, baseUrlOfSut + "/api/v1/categories/193?EMextraParam123=42"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_31() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 1048L)
                .d("AUTHORIZATION_LEVEL", "588")
                .d("NAME", "\"4\"")
            .and().insertInto("ACTIVITY", 1047L)
            .and().insertInto("ACTIVITY", 1046L)
            .and().insertInto("ACTIVITY_RELATION", 1045L)
                .r("ACTIVITY_1_ID", 1046L)
                .r("ACTIVITY_2_ID", 1047L)
                .r("OWNER_ID", 1048L)
            .and().insertInto("USERS", 1052L)
                .d("AUTHORIZATION_LEVEL", "-33554119")
                .d("NAME", "\"_EM_31407_XYZ_\"")
            .and().insertInto("ACTIVITY", 1051L)
            .and().insertInto("ACTIVITY", 1050L)
            .and().insertInto("ACTIVITY_RELATION", 1049L)
                .r("ACTIVITY_1_ID", 1046L)
                .r("ACTIVITY_2_ID", 1046L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 1056L)
                .d("AUTHORIZATION_LEVEL", "-1030989870")
                .d("NAME", "\"_EM_31408_XYZ_\"")
            .and().insertInto("ACTIVITY", 1055L)
            .and().insertInto("ACTIVITY", 1054L)
            .and().insertInto("ACTIVITY_RELATION", 1053L)
                .r("ACTIVITY_1_ID", 1050L)
                .r("ACTIVITY_2_ID", 1054L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 1060L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"rUlTYhHqI\"")
            .and().insertInto("ACTIVITY", 1059L)
            .and().insertInto("ACTIVITY", 1058L)
            .and().insertInto("ACTIVITY_RELATION", 1057L)
                .r("ACTIVITY_1_ID", 1054L)
                .r("ACTIVITY_2_ID", 1051L)
                .d("OWNER_ID", "2")
            .and().insertInto("USERS", 1064L)
                .d("AUTHORIZATION_LEVEL", "-261745")
                .d("NAME", "\"_EM_25319_XYZ_\"")
            .and().insertInto("ACTIVITY", 1063L)
            .and().insertInto("ACTIVITY", 1062L)
            .and().insertInto("ACTIVITY_RELATION", 1061L)
                .r("ACTIVITY_1_ID", 1055L)
                .r("ACTIVITY_2_ID", 1046L)
                .r("OWNER_ID", 1064L)
            .and().insertInto("USERS", 4218L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"00wYWP2Hp1uA2ysA\"")
            .and().insertInto("ACTIVITY", 4217L)
            .and().insertInto("ACTIVITY_RATING", 4216L)
                .r("ACTIVITY_ID", 1050L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 4221L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"vuE8PdQ\"")
            .and().insertInto("ACTIVITY", 4220L)
            .and().insertInto("ACTIVITY_RATING", 4219L)
                .r("ACTIVITY_ID", 4220L)
                .r("USER_ID", 1060L)
                .d("FAVOURITE", "false")
                .d("RATING", "35")
            .and().insertInto("USERS", 4224L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_31409_XYZ_\"")
            .and().insertInto("ACTIVITY", 4223L)
            .and().insertInto("ACTIVITY_RATING", 4222L)
                .r("ACTIVITY_ID", 1046L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "834")
            .and().insertInto("USERS", 4227L)
                .d("AUTHORIZATION_LEVEL", "-1047672")
                .d("NAME", "\"_EM_31410_XYZ_\"")
            .and().insertInto("ACTIVITY", 4226L)
            .and().insertInto("ACTIVITY_RATING", 4225L)
                .r("ACTIVITY_ID", 4217L)
                .r("USER_ID", 1056L)
                .d("FAVOURITE", "true")
                .d("RATING", "144")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0]", numberMatches(2.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_32() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 4865L)
            .and().insertInto("ACTIVITY", 4866L)
            .and().insertInto("ACTIVITY", 4867L)
            .and().insertInto("ACTIVITY", 4868L)
            .and().insertInto("USERS", 4871L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_UMU33154]XYZ_\"")
            .and().insertInto("ACTIVITY", 4870L)
            .and().insertInto("ACTIVITY_RATING", 4869L)
                .r("ACTIVITY_ID", 4868L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "0")
            .and().insertInto("MEDIA_FILE", 5975L)
                .d("URI", "\"bPf1Zs\"")
            .and().insertInto("TAG", 5974L)
                .d("GRP", "\"_EM_34528_XYZ_\"")
                .d("NAME", "\"46\"")
            .and().insertInto("TAG_DERIVED", 5973L)
                .r("TAG_ID", 5974L)
                .d("ACTIVITIES_COUNT", "251")
            .and().insertInto("MEDIA_FILE", 5978L)
                .d("URI", "\"%c7%\"")
            .and().insertInto("TAG", 5977L)
                .d("GRP", "\"8987270\"")
                .d("NAME", "\"uEq_LKG\"")
            .and().insertInto("TAG_DERIVED", 5976L)
                .r("TAG_ID", 5977L)
                .d("ACTIVITIES_COUNT", "0")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/1/rating")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_33() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 5724L)
            .and().insertInto("ACTIVITY", 5725L)
            .and().insertInto("ACTIVITY", 5726L)
            .and().insertInto("ACTIVITY", 5727L)
            .and().insertInto("ACTIVITY", 5728L)
            .and().insertInto("ACTIVITY", 167L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities/6/rating?" + 
                    "attrs=3rzIjWRXsYu&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_34() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 3522L)
                .d("AUTHORIZATION_LEVEL", "5044")
                .d("NAME", "\"_EM_42977_XYZ_\"")
            .and().insertInto("ACTIVITY", 3521L)
            .and().insertInto("ACTIVITY", 3520L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3519L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-1073741774")
                .d("DATE_CREATED", "\"2051-07-03 07:26:29\"")
                .d("DATE_PUBLISHED", "\"2055-09-22 10:18:23\"")
                .d("DATE_UPDATED", "\"2059-09-19 09:11:53\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"qwsGvj3Qqx3q_oG\"")
                .d("DESCRIPTION_NOTES", "\"t5nqh\"")
                .d("DESCRIPTION_PREPARE", "\"_EM_22637_XYZ_\"")
                .d("DESCRIPTION_SAFETY", "\"BuMEa5mhZKoDi0z\"")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "142")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"_EM_22639_XYZ_\"")
                .d("TIME_MAX", "2097407")
                .d("TIME_MIN", "453")
                .r("ACTIVITY_ID", 3520L)
                .d("AUTHOR_ID", "2")
                .r("PUBLISHING_ACTIVITY_ID", 3521L)
            .and().insertInto("USERS", 3526L)
                .d("AUTHORIZATION_LEVEL", "909")
                .d("NAME", "\"DQR\"")
            .and().insertInto("ACTIVITY", 3525L)
            .and().insertInto("ACTIVITY", 3524L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3523L)
                .d("AGE_MAX", "100")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"1906-06-15 11:40:45\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1935-01-15 02:49:03\"")
                .d("DESCRIPTION_INTRODUCTION", "\"_EM_42978_XYZ_\"")
                .d("DESCRIPTION_MAIN", "\"bpQK6oKiYHqds\"")
                .d("DESCRIPTION_MATERIAL", "\"lQkLbPRCH9At\"")
                .d("DESCRIPTION_NOTES", "\"_EM_42979_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "\"TtYcNU\"")
                .d("DESCRIPTION_SAFETY", "\"ARlY\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"EUUucUUUzsUcU\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"CoY6A212HBLQ33i\"")
                .d("TIME_MAX", "713")
                .d("TIME_MIN", "212")
                .r("ACTIVITY_ID", 3521L)
                .d("AUTHOR_ID", "2")
                .r("PUBLISHING_ACTIVITY_ID", 3524L)
            .and().insertInto("USERS", 3530L)
                .d("AUTHORIZATION_LEVEL", "8450")
                .d("NAME", "\"ApVK5_D\"")
            .and().insertInto("ACTIVITY", 3529L)
            .and().insertInto("ACTIVITY", 3528L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3527L)
                .d("AGE_MAX", "97")
                .d("AGE_MIN", "-716")
                .d("DATE_CREATED", "\"2100-10-26 11:37:09\"")
                .d("DATE_PUBLISHED", "\"2087-02-25 11:19:44\"")
                .d("DATE_UPDATED", "\"1911-06-13 11:29:18\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"iwH44rg\"")
                .d("DESCRIPTION_MATERIAL", "\"Gc\"")
                .d("DESCRIPTION_NOTES", "\"_EM_42980_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"di\"")
                .d("FEATURED", "false")
                .d("NAME", "\"WoAN\"")
                .d("PARTICIPANTS_MAX", "0")
                .d("PARTICIPANTS_MIN", "563")
                .d("SOURCE", "\"zKbxDS\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "904")
                .r("ACTIVITY_ID", 3525L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 3525L)
            .and().insertInto("USERS", 3534L)
                .d("AUTHORIZATION_LEVEL", "641")
                .d("NAME", "\"_EM_22641_XYZ_\"")
            .and().insertInto("ACTIVITY", 3533L)
            .and().insertInto("ACTIVITY", 3532L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3531L)
                .d("AGE_MAX", "-25")
                .d("AGE_MIN", "-2147482822")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"2000-07-11 11:26:29\"")
                .d("DATE_UPDATED", "\"2000-07-09 11:19:40\"")
                .d("DESCRIPTION_INTRODUCTION", "\"WFxRKP0\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"oD0py87I\"")
                .d("DESCRIPTION_NOTES", "\"bT\"")
                .d("DESCRIPTION_PREPARE", "\"_EM_22642_XYZ_\"")
                .d("DESCRIPTION_SAFETY", "\"I_ne3eA04InrNw\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"_EM_22643_XYZ_\"")
                .d("PARTICIPANTS_MAX", "268435662")
                .d("PARTICIPANTS_MIN", "278")
                .d("SOURCE", "\"_EM_22644_XYZ_\"")
                .d("TIME_MAX", "785")
                .d("TIME_MIN", "44")
                .r("ACTIVITY_ID", 3528L)
                .d("AUTHOR_ID", "2")
                .r("PUBLISHING_ACTIVITY_ID", 3528L)
            .and().insertInto("USERS", 3538L)
                .d("AUTHORIZATION_LEVEL", "902")
                .d("NAME", "\"bQtvTS8HddbZfao\"")
            .and().insertInto("ACTIVITY", 3537L)
            .and().insertInto("ACTIVITY", 3536L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3535L)
                .d("AGE_MAX", "-1073741774")
                .d("AGE_MIN", "-1073741774")
                .d("DATE_CREATED", "\"2018-08-05 05:47:14\"")
                .d("DATE_PUBLISHED", "\"1991-07-28 15:03:25\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"UFNR\"")
                .d("DESCRIPTION_MAIN", "\"0E6q8kNO\"")
                .d("DESCRIPTION_MATERIAL", "\"_EM_42981_XYZ_\"")
                .d("DESCRIPTION_NOTES", "\"\"")
                .d("DESCRIPTION_PREPARE", "\"lQ8D8B07ywy4wb\"")
                .d("DESCRIPTION_SAFETY", "\"_EM_22645_XYZ_\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"_EM_42982_XYZ_\"")
                .d("PARTICIPANTS_MAX", "999")
                .d("PARTICIPANTS_MIN", "550")
                .d("SOURCE", "\"8Nf_y_zjqfm\"")
                .d("TIME_MAX", "-16116")
                .d("TIME_MIN", "194")
                .r("ACTIVITY_ID", 3529L)
                .r("AUTHOR_ID", 3526L)
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 3540L)
            .and().insertInto("ACTIVITY_DERIVED", 3539L)
                .r("ACTIVITY_ID", 3520L)
                .d("FAVOURITES_COUNT", "18")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "800")
                .d("RATINGS_SUM", "0")
            .and().insertInto("ACTIVITY", 3542L)
            .and().insertInto("ACTIVITY_DERIVED", 3541L)
                .r("ACTIVITY_ID", 3524L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "0.9535840704557587")
                .d("RATINGS_COUNT", "905")
                .d("RATINGS_SUM", "995")
            .and().insertInto("ACTIVITY", 2263L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_17364_XYZ_")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "text=JKn4xvWJ&" + 
                    "featured=false&" + 
                    "id=2263&" + 
                    "ratings_average_min=0.10061530738497138&" + 
                    "random=892&" + 
                    "favourites=366")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_35() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3763L)
            .and().insertInto("USERS", 54794L)
                .d("AUTHORIZATION_LEVEL", "174")
                .d("NAME", "\"2pxR0Icw\"")
            .and().insertInto("ACTIVITY", 54793L)
            .and().insertInto("ACTIVITY", 54792L)
            .and().insertInto("ACTIVITY_RELATION", 54791L)
                .r("ACTIVITY_1_ID", 54793L)
                .r("ACTIVITY_2_ID", 54792L)
                .d("OWNER_ID", "3")
            .and().insertInto("USERS", 54798L)
                .d("AUTHORIZATION_LEVEL", "37")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 54797L)
            .and().insertInto("ACTIVITY", 54796L)
            .and().insertInto("ACTIVITY_RELATION", 54795L)
                .r("ACTIVITY_1_ID", 54797L)
                .r("ACTIVITY_2_ID", 54796L)
                .r("OWNER_ID", 54798L)
            .and().insertInto("USERS", 54802L)
                .d("AUTHORIZATION_LEVEL", "71")
                .d("NAME", "\"0nLaRI9Izh\"")
            .and().insertInto("ACTIVITY", 54801L)
            .and().insertInto("ACTIVITY", 54800L)
            .and().insertInto("ACTIVITY_RELATION", 54799L)
                .r("ACTIVITY_1_ID", 3763L)
                .r("ACTIVITY_2_ID", 3763L)
                .d("OWNER_ID", "3")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "name=uRTQIaa17Xosh&" + 
                    "featured=false&" + 
                    "ages=1&" + 
                    "ratings_count_min=814&" + 
                    "ratings_average_min=0.08140502097329616&" + 
                    "min_activities_count=weKwfE7iR9CiRwf_&" + 
                    "group=brYIdHp6qtcdZ&" + 
                    "uri=_zS9RT8FZSv&" + 
                    "time_1=Qizn3aXf&" + 
                    "age_2=aYNhgSQ&" + 
                    "age_1=_ZY5t")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_36() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "name=nquqnz6&" + 
                    "text=R40&" + 
                    "featured=false&" + 
                    "participants=7&" + 
                    "favourites=11&" + 
                    "min_activities_count=wgcZFXV8vAHiQ8LU&" + 
                    "group=OUE_j&" + 
                    "uri=2mth9dUdxZ8PLtlm&" + 
                    "time_1=xPz0d7&" + 
                    "age_2=kCu&" + 
                    "age_1=K8vQVWxWXABo")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_37() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 25318L)
                .d("URI", "\"9808380\"")
            .and().insertInto("TAG", 25317L)
                .d("GRP", "\"JO_qj_w/obdkS\"")
                .d("NAME", "\"1ZBEon1wrX9wZygz\"")
                .r("MEDIA_FILE_ID", 25318L)
            .and().insertInto("MEDIA_FILE", 25320L)
                .d("URI", "\"6B\"")
            .and().insertInto("TAG", 25319L)
                .d("GRP", "\"QLRZo_\"")
                .d("NAME", "\"9805210\"")
                .r("MEDIA_FILE_ID", 25320L)
            .and().insertInto("MEDIA_FILE", 25322L)
                .d("URI", "\"S5dYdVx3RHRi\"")
            .and().insertInto("TAG", 25321L)
                .d("GRP", "\"_EM_117691_XYZ_\"")
                .d("NAME", "\"_EM_117692_XYZ_\"")
                .r("MEDIA_FILE_ID", 25318L)
            .and().insertInto("SYSTEM_MESSAGE", 33985L)
                .d("KEY", "\"2vxA1u3T\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2071-01-27 22:11:28\"")
                .d("VALUE", "\"YoFEbWXXcz9JO1\"")
            .and().insertInto("SYSTEM_MESSAGE", 33986L)
                .d("KEY", "\"\"")
                .d("VALID_FROM", "\"1942-09-28 16:21:49\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"Y6fNXHF\"")
            .and().insertInto("SYSTEM_MESSAGE", 33987L)
                .d("KEY", "\"9\"")
                .d("VALID_FROM", "\"1955-11-03 15:46:10\"")
                .d("VALID_TO", "\"1904-11-28 03:32:00\"")
                .d("VALUE", "\"Po8kiiwNTmo_oA4\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"8onRTBbR7waI\", " + 
                    " \"description_introduction\": \"SqtLjw\", " + 
                    " \"description_prepare\": \"SrT0Be2rd\", " + 
                    " \"age_min\": -524, " + 
                    " \"age_max\": -824, " + 
                    " \"participants_min\": 48, " + 
                    " \"time_min\": 217, " + 
                    " \"time_max\": 974, " + 
                    " \"activity\": { " + 
                    " \"id\": -466006230, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 561, " + 
                    " \"ratings_sum\": 712 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T21:19:14.137Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("8onRTBbR7waI"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("SqtLjw"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("SrT0Be2rd"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-524.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-824.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(48.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(217.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(974.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'date_created'", containsString("2024-06-01T21:19:14.137Z"))
                .body("'properties'.'description_material'", containsString("8onRTBbR7waI"))
                .body("'properties'.'description_introduction'", containsString("SqtLjw"))
                .body("'properties'.'description_prepare'", containsString("SrT0Be2rd"))
                .body("'properties'.'age_min'", numberMatches(-524.0))
                .body("'properties'.'age_max'", numberMatches(-824.0))
                .body("'properties'.'participants_min'", numberMatches(48.0))
                .body("'properties'.'time_min'", numberMatches(217.0))
                .body("'properties'.'time_max'", numberMatches(974.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_38() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3219L)
            .and().insertInto("ACTIVITY", 3220L)
            .and().insertInto("ACTIVITY", 3221L)
            .and().insertInto("ACTIVITY", 3222L)
            .and().insertInto("ACTIVITY", 3223L)
            .and().insertInto("USERS", 4188L)
                .d("AUTHORIZATION_LEVEL", "-4194080")
                .d("NAME", "\"_EM_50226_XYZ_\"")
            .and().insertInto("ACTIVITY", 4187L)
            .and().insertInto("ACTIVITY", 4186L)
            .and().insertInto("ACTIVITY_RELATION", 4185L)
                .r("ACTIVITY_1_ID", 4186L)
                .r("ACTIVITY_2_ID", 3220L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 4192L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"y\"")
            .and().insertInto("ACTIVITY", 4191L)
            .and().insertInto("ACTIVITY", 4190L)
            .and().insertInto("ACTIVITY_RELATION", 4189L)
                .r("ACTIVITY_1_ID", 3219L)
                .r("ACTIVITY_2_ID", 4187L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 61910L)
                .d("AUTHORIZATION_LEVEL", "952")
                .d("NAME", "\"IWlAklK9yqW\"")
            .and().insertInto("ACTIVITY", 61909L)
            .and().insertInto("ACTIVITY_RATING", 61908L)
                .r("ACTIVITY_ID", 4190L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "247")
            .and().insertInto("USERS", 61913L)
                .d("AUTHORIZATION_LEVEL", "398")
                .d("NAME", "\"JrMrVswlctnKjpm_\"")
            .and().insertInto("ACTIVITY", 61912L)
            .and().insertInto("ACTIVITY_RATING", 61911L)
                .r("ACTIVITY_ID", 4191L)
                .r("USER_ID", 61913L)
                .d("FAVOURITE", "true")
                .d("RATING", "813")
            .and().insertInto("USERS", 61916L)
                .d("AUTHORIZATION_LEVEL", "940")
                .d("NAME", "\"l2736RF3kc0Hv\"")
            .and().insertInto("ACTIVITY", 61915L)
            .and().insertInto("ACTIVITY_RATING", 61914L)
                .r("ACTIVITY_ID", 4186L)
                .r("USER_ID", 4192L)
                .d("FAVOURITE", "false")
                .d("RATING", "761")
            .and().insertInto("SYSTEM_MESSAGE", 61923L)
                .d("KEY", "\"g23\"")
                .d("VALID_FROM", "\"2008-02-05 22:43:54\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"Kd9Qm1WFL\"")
            .and().insertInto("SYSTEM_MESSAGE", 61924L)
                .d("KEY", "\"gv7\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"enk\"")
            .and().insertInto("SYSTEM_MESSAGE", 61925L)
                .d("KEY", "\"sfHh\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"rJn_QrL\"")
            .and().insertInto("SYSTEM_MESSAGE", 61926L)
                .d("KEY", "\"p\"")
                .d("VALID_FROM", "\"2072-07-19 16:28:43\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"YM89nV695r\"")
            .and().insertInto("SYSTEM_MESSAGE", 61927L)
                .d("KEY", "\"pNfYj3Bf66sL9qO\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1970-02-25 12:55:09\"")
                .d("VALUE", "\"y5pNS\"")
            .and().insertInto("MEDIA_FILE", 62047L)
                .d("URI", "\"blcJ\"")
            .and().insertInto("TAG", 62046L)
                .d("GRP", "\"S6ioNBrxU2PPbEUR\"")
                .d("NAME", "\"5FmBBNnOAxb8A\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 62049L)
                .d("URI", "\"w2u4YFY_JReg_pK\"")
            .and().insertInto("TAG", 62048L)
                .d("GRP", "\"NQ5\"")
                .d("NAME", "\"QD4am2jTUd\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 62051L)
                .d("URI", "\"3Ipr6ZMDM\"")
            .and().insertInto("TAG", 62050L)
                .d("GRP", "\"rSxD5_rYE58\"")
                .d("NAME", "\"awZp\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 62053L)
                .d("URI", "\"LMOUZ9aSrNdNa9\"")
            .and().insertInto("TAG", 62052L)
                .d("GRP", "\"\"")
                .d("NAME", "\"H5wH2h\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"Aq9h6uNC0Q1emi0l\", " + 
                    " \"description_material\": \"E49s\", " + 
                    " \"description_main\": \"JY6WDo\", " + 
                    " \"description_safety\": \"_PAmH\", " + 
                    " \"description_notes\": \"OSiYGNS\", " + 
                    " \"age_min\": -35, " + 
                    " \"age_max\": -2147483475, " + 
                    " \"participants_min\": 198, " + 
                    " \"participants_max\": 705, " + 
                    " \"featured\": true, " + 
                    " \"media_files\": [], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 741, " + 
                    " \"ratings_sum\": -2597300321935675406, " + 
                    " \"ratings_average\": 0.4597470925047735, " + 
                    " \"favourites_count\": 316 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("Aq9h6uNC0Q1emi0l"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T21:19:10.587Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("E49s"))
                .body("'properties_revisions'[0].'description_main'", containsString("JY6WDo"))
                .body("'properties_revisions'[0].'description_safety'", containsString("_PAmH"))
                .body("'properties_revisions'[0].'description_notes'", containsString("OSiYGNS"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-35.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147483475E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(198.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(705.0))
                .body("'properties_revisions'[0].'featured'", equalTo(true))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'name'", containsString("Aq9h6uNC0Q1emi0l"))
                .body("'properties'.'date_created'", containsString("2024-06-01T21:19:10.587Z"))
                .body("'properties'.'description_material'", containsString("E49s"))
                .body("'properties'.'description_main'", containsString("JY6WDo"))
                .body("'properties'.'description_safety'", containsString("_PAmH"))
                .body("'properties'.'description_notes'", containsString("OSiYGNS"))
                .body("'properties'.'age_min'", numberMatches(-35.0))
                .body("'properties'.'age_max'", numberMatches(-2.147483475E9))
                .body("'properties'.'participants_min'", numberMatches(198.0))
                .body("'properties'.'participants_max'", numberMatches(705.0))
                .body("'properties'.'featured'", equalTo(true))
                .body("'properties'.'media_files'.size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_39() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 21278L)
                .d("AUTHORIZATION_LEVEL", "174")
                .d("NAME", "\"_EM_86151_XYZ_\"")
            .and().insertInto("ACTIVITY", 21277L)
            .and().insertInto("ACTIVITY", 21276L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21275L)
                .d("AGE_MAX", "-215")
                .d("AGE_MIN", "-2147483601")
                .d("DATE_CREATED", "\"1914-09-05 19:56:12\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"IcVtNSWT59GRGWk\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"549Omu\"")
                .d("DESCRIPTION_NOTES", "\"wbc2FWgvnxM8EGr\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "\"\"")
                .d("PARTICIPANTS_MAX", "8834")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"Li\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "489")
                .r("ACTIVITY_ID", 21276L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 21282L)
                .d("AUTHORIZATION_LEVEL", "561")
                .d("NAME", "\"oy6BqcZM\"")
            .and().insertInto("ACTIVITY", 21281L)
            .and().insertInto("ACTIVITY", 21280L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21279L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-2147483638")
                .d("DATE_CREATED", "\"2000-05-16 11:47:04\"")
                .d("DATE_PUBLISHED", "\"2089-07-23 18:20:10\"")
                .d("DATE_UPDATED", "\"2087-04-21 02:51:33\"")
                .d("DESCRIPTION_INTRODUCTION", "\"urMxD0VBq4kY\"")
                .d("DESCRIPTION_MAIN", "\"tH_yjLyf\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "319")
                .d("PARTICIPANTS_MIN", "796")
                .d("SOURCE", "\"KyeI98USXAaHJ\"")
                .d("TIME_MAX", "4221")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 21277L)
                .d("AUTHOR_ID", "2")
                .r("PUBLISHING_ACTIVITY_ID", 21276L)
            .and().insertInto("USERS", 21286L)
                .d("AUTHORIZATION_LEVEL", "519")
                .d("NAME", "\"HdPbTbUsNsmZ\"")
            .and().insertInto("ACTIVITY", 21285L)
            .and().insertInto("ACTIVITY", 21284L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21283L)
                .d("AGE_MAX", "-247")
                .d("AGE_MIN", "-134")
                .d("DATE_CREATED", "\"1967-11-11 17:57:37\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"BFCNpONn\"")
                .d("DESCRIPTION_MAIN", "\"O6EaHtzIW_m\"")
                .d("DESCRIPTION_MATERIAL", "\"3mNCcQ\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"6z\"")
                .d("DESCRIPTION_SAFETY", "\"qCqytaE2rkDDa\"")
                .d("FEATURED", "NULL")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "885")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"GptslKdIu\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "408")
                .r("ACTIVITY_ID", 21285L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 21280L)
            .and().insertInto("USERS", 21290L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_86152_XYZ_\"")
            .and().insertInto("ACTIVITY", 21289L)
            .and().insertInto("ACTIVITY", 21288L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21287L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-4951")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1977-09-11 08:35:56\"")
                .d("DESCRIPTION_INTRODUCTION", "\"U\"")
                .d("DESCRIPTION_MAIN", "\"vf1\"")
                .d("DESCRIPTION_MATERIAL", "\"_EM_86153_XYZ_\"")
                .d("DESCRIPTION_NOTES", "\"NrETT\"")
                .d("DESCRIPTION_PREPARE", "\"7UqPrsHUV7I\"")
                .d("DESCRIPTION_SAFETY", "\"N7iUpaB9_\"")
                .d("FEATURED", "false")
                .d("NAME", "\"SAVt\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "480")
                .d("SOURCE", "\"\"")
                .d("TIME_MAX", "655")
                .d("TIME_MIN", "432")
                .r("ACTIVITY_ID", 21289L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 21277L)
            .and().insertInto("USERS", 21516L)
                .d("AUTHORIZATION_LEVEL", "508")
                .d("NAME", "\"gfHJNUNhS\"")
            .and().insertInto("ACTIVITY", 21515L)
            .and().insertInto("ACTIVITY", 21514L)
            .and().insertInto("ACTIVITY_RELATION", 21513L)
                .r("ACTIVITY_1_ID", 21281L)
                .r("ACTIVITY_2_ID", 21285L)
                .d("OWNER_ID", "3")
            .and().insertInto("MEDIA_FILE", 21522L)
                .d("URI", "\"L\"")
            .and().insertInto("USERS", 21521L)
                .d("AUTHORIZATION_LEVEL", "573")
                .d("NAME", "\"KjM24l96ZR06\"")
            .and().insertInto("ACTIVITY", 21520L)
            .and().insertInto("ACTIVITY", 21519L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21518L)
                .r("ACTIVITY_ID", 21285L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 21517L)
                .r("ACTIVITY_PROPERTIES_ID", 21283L)
                .r("MEDIA_FILE_ID", 21522L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 21528L)
                .d("URI", "\"_EM_86154_XYZ_\"")
            .and().insertInto("USERS", 21527L)
                .d("AUTHORIZATION_LEVEL", "408")
                .d("NAME", "\"|\"")
            .and().insertInto("ACTIVITY", 21526L)
            .and().insertInto("ACTIVITY", 21525L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21524L)
                .r("ACTIVITY_ID", 21289L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 21523L)
                .r("ACTIVITY_PROPERTIES_ID", 21524L)
                .r("MEDIA_FILE_ID", 21522L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 21534L)
                .d("URI", "\"D9_VSrqxn0tK\"")
            .and().insertInto("USERS", 21533L)
                .d("AUTHORIZATION_LEVEL", "501")
                .d("NAME", "\"u\"")
            .and().insertInto("ACTIVITY", 21532L)
            .and().insertInto("ACTIVITY", 21531L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21530L)
                .r("ACTIVITY_ID", 21526L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 21529L)
                .r("ACTIVITY_PROPERTIES_ID", 21287L)
                .r("MEDIA_FILE_ID", 21522L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 21540L)
                .d("URI", "\"Ix\"")
            .and().insertInto("USERS", 21539L)
                .d("AUTHORIZATION_LEVEL", "796")
                .d("NAME", "\"fY0n\"")
            .and().insertInto("ACTIVITY", 21538L)
            .and().insertInto("ACTIVITY", 21537L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21536L)
                .r("ACTIVITY_ID", 21281L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 21535L)
                .r("ACTIVITY_PROPERTIES_ID", 21275L)
                .r("MEDIA_FILE_ID", 21522L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 21547L)
                .d("URI", "\"a\"")
            .and().insertInto("TAG", 21546L)
                .d("GRP", "\"nQk5qWLru5m_bM\"")
                .d("NAME", "\"BCquKcj1lF4qvgw\"")
            .and().insertInto("USERS", 21545L)
                .d("AUTHORIZATION_LEVEL", "672")
                .d("NAME", "\"i\"")
            .and().insertInto("ACTIVITY", 21544L)
            .and().insertInto("ACTIVITY", 21543L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21542L)
                .r("ACTIVITY_ID", 21285L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 21541L)
                .r("ACTIVITY_PROPERTIES_ID", 21275L)
                .r("TAG_ID", 21546L)
            .and().insertInto("MEDIA_FILE", 21554L)
                .d("URI", "\"_EM_86155_XYZ_\"")
            .and().insertInto("TAG", 21553L)
                .d("GRP", "\"_EM_86156_XYZ_\"")
                .d("NAME", "\"WMF5BSyihU\"")
            .and().insertInto("USERS", 21552L)
                .d("AUTHORIZATION_LEVEL", "827")
                .d("NAME", "\"3QxBtmR\"")
            .and().insertInto("ACTIVITY", 21551L)
            .and().insertInto("ACTIVITY", 21550L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21549L)
                .r("ACTIVITY_ID", 21551L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 21548L)
                .r("ACTIVITY_PROPERTIES_ID", 21275L)
                .r("TAG_ID", 21553L)
            .and().insertInto("MEDIA_FILE", 21561L)
                .d("URI", "\"S3GA2Zq\"")
            .and().insertInto("TAG", 21560L)
                .d("GRP", "\"_EM_86157_XYZ_\"")
                .d("NAME", "\"9T7RZp5\"")
            .and().insertInto("USERS", 21559L)
                .d("AUTHORIZATION_LEVEL", "254")
                .d("NAME", "\"Ww4hGLkB8j\"")
            .and().insertInto("ACTIVITY", 21558L)
            .and().insertInto("ACTIVITY", 21557L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21556L)
                .r("ACTIVITY_ID", 21557L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 21555L)
                .r("ACTIVITY_PROPERTIES_ID", 21518L)
                .r("TAG_ID", 21546L)
            .and().insertInto("MEDIA_FILE", 21568L)
                .d("URI", "\"sD6qWVpBzNK6HB\"")
            .and().insertInto("TAG", 21567L)
                .d("GRP", "\"v\"")
                .d("NAME", "\"yIArsOiPZ09\"")
            .and().insertInto("USERS", 21566L)
                .d("AUTHORIZATION_LEVEL", "-1047887")
                .d("NAME", "\"ShitzTwN1\"")
            .and().insertInto("ACTIVITY", 21565L)
            .and().insertInto("ACTIVITY", 21564L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21563L)
                .r("ACTIVITY_ID", 21531L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 21562L)
                .r("ACTIVITY_PROPERTIES_ID", 21556L)
                .r("TAG_ID", 21553L)
            .and().insertInto("ACTIVITY", 21570L)
            .and().insertInto("ACTIVITY_DERIVED", 21569L)
                .r("ACTIVITY_ID", 21520L)
                .d("FAVOURITES_COUNT", "69")
                .d("RATINGS_AVG", "0.6105350468912866")
                .d("RATINGS_COUNT", "4755")
                .d("RATINGS_SUM", "300")
            .and().insertInto("ACTIVITY", 21572L)
            .and().insertInto("ACTIVITY_DERIVED", 21571L)
                .r("ACTIVITY_ID", 21285L)
                .d("FAVOURITES_COUNT", "148")
                .d("RATINGS_AVG", "0.5352726021914964")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "340")
            .and().insertInto("ACTIVITY", 21574L)
            .and().insertInto("ACTIVITY_DERIVED", 21573L)
                .r("ACTIVITY_ID", 21531L)
                .d("FAVOURITES_COUNT", "58")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "939")
                .d("RATINGS_SUM", "983")
            .and().insertInto("ACTIVITY", 21576L)
            .and().insertInto("ACTIVITY_DERIVED", 21575L)
                .r("ACTIVITY_ID", 21280L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "0.17965980700116124")
                .d("RATINGS_COUNT", "655")
                .d("RATINGS_SUM", "217")
            .and().insertInto("ACTIVITY", 21578L)
            .and().insertInto("ACTIVITY_DERIVED", 21577L)
                .r("ACTIVITY_ID", 21514L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "894.1834160887549")
                .d("RATINGS_COUNT", "262445")
                .d("RATINGS_SUM", "252")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "name=Mhz&" + 
                    "text=H&" + 
                    "ratings_average_min=0.0&" + 
                    "random=727")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'properties_revisions'.size()", equalTo(0))
                .body("[0].'ratings_count'", numberMatches(655.0))
                .body("[0].'ratings_sum'", numberMatches(217.0))
                .body("[0].'ratings_average'", numberMatches(0.33129770992366414))
                .body("[0].'favourites_count'", numberMatches(0.0))
                .body("[0].'properties'.'name'", nullValue())
                .body("[0].'properties'.'date_published'", nullValue())
                .body("[0].'properties'.'date_created'", numberMatches(-6.7503743E10))
                .body("[0].'properties'.'date_updated'", nullValue())
                .body("[0].'properties'.'description_material'", containsString("3mNCcQ"))
                .body("[0].'properties'.'description_introduction'", containsString("BFCNpONn"))
                .body("[0].'properties'.'description_prepare'", containsString("6z"))
                .body("[0].'properties'.'description_main'", containsString("O6EaHtzIW_m"))
                .body("[0].'properties'.'description_safety'", containsString("qCqytaE2rkDDa"))
                .body("[0].'properties'.'description_notes'", nullValue())
                .body("[0].'properties'.'age_min'", numberMatches(-134.0))
                .body("[0].'properties'.'age_max'", numberMatches(-247.0))
                .body("[0].'properties'.'participants_min'", nullValue())
                .body("[0].'properties'.'participants_max'", numberMatches(885.0))
                .body("[0].'properties'.'time_min'", numberMatches(408.0))
                .body("[0].'properties'.'time_max'", nullValue())
                .body("[0].'properties'.'featured'", nullValue())
                .body("[0].'properties'.'source'", containsString("GptslKdIu"))
                .body("[0].'properties'.'tags'.size()", equalTo(0))
                .body("[0].'properties'.'media_files'.size()", equalTo(1))
                .body("[0].'properties'.'media_files'[0].'mime_type'", nullValue())
                .body("[0].'properties'.'media_files'[0].'uri'", containsString("L"))
                .body("[0].'properties'.'media_files'[0].'name'", nullValue())
                .body("[0].'properties'.'media_files'[0].'capture_date'", nullValue())
                .body("[0].'properties'.'media_files'[0].'copy_right'", nullValue())
                .body("[0].'properties'.'media_files'[0].'author'", nullValue())
                .body("[0].'properties'.'author'", nullValue())
                .body("[0].'related'.size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_40() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 21278L)
                .d("AUTHORIZATION_LEVEL", "174")
                .d("NAME", "\"No8SLJf4aafi_e\"")
            .and().insertInto("ACTIVITY", 21277L)
            .and().insertInto("ACTIVITY", 21276L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21275L)
                .d("AGE_MAX", "-215")
                .d("AGE_MIN", "-2147483089")
                .d("DATE_CREATED", "\"1914-09-05 03:56:12\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "\"\"")
                .d("PARTICIPANTS_MAX", "642")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"Li\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "489")
                .r("ACTIVITY_ID", 21276L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 21282L)
                .d("AUTHORIZATION_LEVEL", "561")
                .d("NAME", "\"oy6BqcZM\"")
            .and().insertInto("ACTIVITY", 21281L)
            .and().insertInto("ACTIVITY", 21280L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21279L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-2147483638")
                .d("DATE_CREATED", "\"2015-05-04 18:47:04\"")
                .d("DATE_PUBLISHED", "\"2089-07-25 02:20:26\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"urMxD0VBq4kY\"")
                .d("DESCRIPTION_MAIN", "\"tH_yjLyf\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "false")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "319")
                .d("PARTICIPANTS_MIN", "540")
                .d("SOURCE", "\"KyeI98USXAaHJ\"")
                .d("TIME_MAX", "125")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 21277L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 21276L)
            .and().insertInto("USERS", 21286L)
                .d("AUTHORIZATION_LEVEL", "519")
                .d("NAME", "\"HdPbTbUsNsmZ\"")
            .and().insertInto("ACTIVITY", 21285L)
            .and().insertInto("ACTIVITY", 21284L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21283L)
                .d("AGE_MAX", "-247")
                .d("AGE_MIN", "-118")
                .d("DATE_CREATED", "\"1967-11-11 17:57:37\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"BFCNpONn\"")
                .d("DESCRIPTION_MAIN", "\"O6EaHtzIW_m\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"qCqytaE2rkDHa\"")
                .d("FEATURED", "NULL")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "885")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"GptslKdIu\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 21281L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 21281L)
            .and().insertInto("USERS", 21290L)
                .d("AUTHORIZATION_LEVEL", "508")
                .d("NAME", "\"wJvhZz\"")
            .and().insertInto("ACTIVITY", 21289L)
            .and().insertInto("ACTIVITY", 21288L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21287L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-855")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1977-09-11 08:35:56\"")
                .d("DESCRIPTION_INTRODUCTION", "\"\"")
                .d("DESCRIPTION_MAIN", "\"vf1\"")
                .d("DESCRIPTION_MATERIAL", "\"nAUX\"")
                .d("DESCRIPTION_NOTES", "\"NrETT\"")
                .d("DESCRIPTION_PREPARE", "\"7UqPrsHUV7I\"")
                .d("DESCRIPTION_SAFETY", "\"N7iUpaB9_\"")
                .d("FEATURED", "false")
                .d("NAME", "\"SAVt\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "472")
                .d("SOURCE", "\"\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "432")
                .r("ACTIVITY_ID", 21280L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 21277L)
            .and().insertInto("USERS", 21516L)
                .d("AUTHORIZATION_LEVEL", "508")
                .d("NAME", "\"gfHJNUNhS\"")
            .and().insertInto("ACTIVITY", 21515L)
            .and().insertInto("ACTIVITY", 21514L)
            .and().insertInto("ACTIVITY_RELATION", 21513L)
                .r("ACTIVITY_1_ID", 21281L)
                .r("ACTIVITY_2_ID", 21285L)
                .d("OWNER_ID", "3")
            .and().insertInto("MEDIA_FILE", 21522L)
                .d("URI", "\"L\"")
            .and().insertInto("USERS", 21521L)
                .d("AUTHORIZATION_LEVEL", "573")
                .d("NAME", "\"KjM24l96ZR06\"")
            .and().insertInto("ACTIVITY", 21520L)
            .and().insertInto("ACTIVITY", 21519L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21518L)
                .r("ACTIVITY_ID", 21285L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 21517L)
                .r("ACTIVITY_PROPERTIES_ID", 21287L)
                .r("MEDIA_FILE_ID", 21522L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 21528L)
                .d("URI", "\"ullpfrNkn9U\"")
            .and().insertInto("USERS", 21527L)
                .d("AUTHORIZATION_LEVEL", "408")
                .d("NAME", "\"x\"")
            .and().insertInto("ACTIVITY", 21526L)
            .and().insertInto("ACTIVITY", 21525L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21524L)
                .r("ACTIVITY_ID", 21281L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 21523L)
                .r("ACTIVITY_PROPERTIES_ID", 21518L)
                .r("MEDIA_FILE_ID", 21522L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 21534L)
                .d("URI", "\"D9_VSrqxn0tK\"")
            .and().insertInto("USERS", 21533L)
                .d("AUTHORIZATION_LEVEL", "501")
                .d("NAME", "\"u\"")
            .and().insertInto("ACTIVITY", 21532L)
            .and().insertInto("ACTIVITY", 21531L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21530L)
                .r("ACTIVITY_ID", 21526L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 21529L)
                .r("ACTIVITY_PROPERTIES_ID", 21287L)
                .r("MEDIA_FILE_ID", 21528L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 21540L)
                .d("URI", "\"Ix\"")
            .and().insertInto("USERS", 21539L)
                .d("AUTHORIZATION_LEVEL", "796")
                .d("NAME", "\"fY0n\"")
            .and().insertInto("ACTIVITY", 21538L)
            .and().insertInto("ACTIVITY", 21537L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21536L)
                .r("ACTIVITY_ID", 21281L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 21535L)
                .r("ACTIVITY_PROPERTIES_ID", 21275L)
                .r("MEDIA_FILE_ID", 21522L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 21547L)
                .d("URI", "\"a\"")
            .and().insertInto("TAG", 21546L)
                .d("GRP", "\"nQk5qWLru5m_bM\"")
                .d("NAME", "\"BCquKcj1lF4qvgw\"")
            .and().insertInto("USERS", 21545L)
                .d("AUTHORIZATION_LEVEL", "672")
                .d("NAME", "\"i\"")
            .and().insertInto("ACTIVITY", 21544L)
            .and().insertInto("ACTIVITY", 21543L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21542L)
                .r("ACTIVITY_ID", 21285L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 21541L)
                .r("ACTIVITY_PROPERTIES_ID", 21530L)
                .r("TAG_ID", 21546L)
            .and().insertInto("MEDIA_FILE", 21554L)
                .d("URI", "\"EJDHRi\"")
            .and().insertInto("TAG", 21553L)
                .d("GRP", "\"wz\"")
                .d("NAME", "\"WMF5BSyihU\"")
            .and().insertInto("USERS", 21552L)
                .d("AUTHORIZATION_LEVEL", "827")
                .d("NAME", "\"3QxBtmR\"")
            .and().insertInto("ACTIVITY", 21551L)
            .and().insertInto("ACTIVITY", 21550L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21549L)
                .r("ACTIVITY_ID", 21551L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 21548L)
                .r("ACTIVITY_PROPERTIES_ID", 21275L)
                .r("TAG_ID", 21553L)
            .and().insertInto("MEDIA_FILE", 21561L)
                .d("URI", "\"S3GA2Zq\"")
            .and().insertInto("TAG", 21560L)
                .d("GRP", "\"b\"")
                .d("NAME", "\"9T7RZp5\"")
            .and().insertInto("USERS", 21559L)
                .d("AUTHORIZATION_LEVEL", "766")
                .d("NAME", "\"Ww4hGLkB8j\"")
            .and().insertInto("ACTIVITY", 21558L)
            .and().insertInto("ACTIVITY", 21557L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21556L)
                .r("ACTIVITY_ID", 21557L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 21555L)
                .r("ACTIVITY_PROPERTIES_ID", 21518L)
                .r("TAG_ID", 21546L)
            .and().insertInto("MEDIA_FILE", 21568L)
                .d("URI", "\"sD6qWVpBzNK6HB\"")
            .and().insertInto("TAG", 21567L)
                .d("GRP", "\"v\"")
                .d("NAME", "\"yIArsOiPZ09\"")
            .and().insertInto("USERS", 21566L)
                .d("AUTHORIZATION_LEVEL", "689")
                .d("NAME", "\"ShitzTwN1\"")
            .and().insertInto("ACTIVITY", 21565L)
            .and().insertInto("ACTIVITY", 21564L)
            .and().insertInto("ACTIVITY_PROPERTIES", 21563L)
                .r("ACTIVITY_ID", 21531L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 21562L)
                .r("ACTIVITY_PROPERTIES_ID", 21556L)
                .r("TAG_ID", 21567L)
            .and().insertInto("ACTIVITY", 21570L)
            .and().insertInto("ACTIVITY_DERIVED", 21569L)
                .r("ACTIVITY_ID", 21532L)
                .d("FAVOURITES_COUNT", "69")
                .d("RATINGS_AVG", "0.6105350468912866")
                .d("RATINGS_COUNT", "659")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("ACTIVITY", 21572L)
            .and().insertInto("ACTIVITY_DERIVED", 21571L)
                .r("ACTIVITY_ID", 21285L)
                .d("FAVOURITES_COUNT", "148")
                .d("RATINGS_AVG", "0.8449201650366682")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "340")
            .and().insertInto("ACTIVITY", 21574L)
            .and().insertInto("ACTIVITY_DERIVED", 21573L)
                .r("ACTIVITY_ID", 21531L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "983")
            .and().insertInto("ACTIVITY", 21576L)
            .and().insertInto("ACTIVITY_DERIVED", 21575L)
                .r("ACTIVITY_ID", 21537L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "0.17965980700116124")
                .d("RATINGS_COUNT", "655")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("ACTIVITY", 21578L)
            .and().insertInto("ACTIVITY_DERIVED", 21577L)
                .r("ACTIVITY_ID", 21564L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "0.7317621462304865")
                .d("RATINGS_COUNT", "301")
                .d("RATINGS_SUM", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "text=H&" + 
                    "random=727")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(3))
                .body("[0].'properties_revisions'.size()", equalTo(3))
                .body("[0].'properties_revisions'[0].'name'", nullValue())
                .body("[0].'properties_revisions'[0].'date_published'", nullValue())
                .body("[0].'properties_revisions'[0].'date_created'", numberMatches(-6.7503743E10))
                .body("[0].'properties_revisions'[0].'date_updated'", nullValue())
                .body("[0].'properties_revisions'[0].'description_material'", nullValue())
                .body("[0].'properties_revisions'[0].'description_introduction'", containsString("BFCNpONn"))
                .body("[0].'properties_revisions'[0].'description_prepare'", nullValue())
                .body("[0].'properties_revisions'[0].'description_main'", containsString("O6EaHtzIW_m"))
                .body("[0].'properties_revisions'[0].'description_safety'", containsString("qCqytaE2rkDHa"))
                .body("[0].'properties_revisions'[0].'description_notes'", nullValue())
                .body("[0].'properties_revisions'[0].'age_min'", numberMatches(-118.0))
                .body("[0].'properties_revisions'[0].'age_max'", numberMatches(-247.0))
                .body("[0].'properties_revisions'[0].'participants_min'", nullValue())
                .body("[0].'properties_revisions'[0].'participants_max'", numberMatches(885.0))
                .body("[0].'properties_revisions'[0].'time_min'", nullValue())
                .body("[0].'properties_revisions'[0].'time_max'", nullValue())
                .body("[0].'properties_revisions'[0].'featured'", nullValue())
                .body("[0].'properties_revisions'[0].'source'", containsString("GptslKdIu"))
                .body("[0].'properties_revisions'[0].'tags'.size()", equalTo(0))
                .body("[0].'properties_revisions'[0].'media_files'.size()", equalTo(0))
                .body("[0].'properties_revisions'[0].'author'", nullValue())
                .body("[0].'properties_revisions'[1].'name'", nullValue())
                .body("[0].'properties_revisions'[1].'date_published'", nullValue())
                .body("[0].'properties_revisions'[1].'date_created'", nullValue())
                .body("[0].'properties_revisions'[1].'date_updated'", nullValue())
                .body("[0].'properties_revisions'[1].'description_material'", nullValue())
                .body("[0].'properties_revisions'[1].'description_introduction'", nullValue())
                .body("[0].'properties_revisions'[1].'description_prepare'", nullValue())
                .body("[0].'properties_revisions'[1].'description_main'", nullValue())
                .body("[0].'properties_revisions'[1].'description_safety'", nullValue())
                .body("[0].'properties_revisions'[1].'description_notes'", nullValue())
                .body("[0].'properties_revisions'[1].'age_min'", nullValue())
                .body("[0].'properties_revisions'[1].'age_max'", nullValue())
                .body("[0].'properties_revisions'[1].'participants_min'", nullValue())
                .body("[0].'properties_revisions'[1].'participants_max'", nullValue())
                .body("[0].'properties_revisions'[1].'time_min'", nullValue())
                .body("[0].'properties_revisions'[1].'time_max'", nullValue())
                .body("[0].'properties_revisions'[1].'featured'", nullValue())
                .body("[0].'properties_revisions'[1].'source'", nullValue())
                .body("[0].'properties_revisions'[1].'tags'.size()", equalTo(0))
                .body("[0].'properties_revisions'[1].'media_files'.size()", equalTo(0))
                .body("[0].'properties_revisions'[1].'author'", nullValue())
                .body("[0].'properties_revisions'[2].'name'", nullValue())
                .body("[0].'properties_revisions'[2].'date_published'", nullValue())
                .body("[0].'properties_revisions'[2].'date_created'", nullValue())
                .body("[0].'properties_revisions'[2].'date_updated'", nullValue())
                .body("[0].'properties_revisions'[2].'description_material'", nullValue())
                .body("[0].'properties_revisions'[2].'description_introduction'", nullValue())
                .body("[0].'properties_revisions'[2].'description_prepare'", nullValue())
                .body("[0].'properties_revisions'[2].'description_main'", nullValue())
                .body("[0].'properties_revisions'[2].'description_safety'", nullValue())
                .body("[0].'properties_revisions'[2].'description_notes'", nullValue())
                .body("[0].'properties_revisions'[2].'age_min'", nullValue())
                .body("[0].'properties_revisions'[2].'age_max'", nullValue())
                .body("[0].'properties_revisions'[2].'participants_min'", nullValue())
                .body("[0].'properties_revisions'[2].'participants_max'", nullValue())
                .body("[0].'properties_revisions'[2].'time_min'", nullValue())
                .body("[0].'properties_revisions'[2].'time_max'", nullValue())
                .body("[0].'properties_revisions'[2].'featured'", nullValue())
                .body("[0].'properties_revisions'[2].'source'", nullValue())
                .body("[0].'properties_revisions'[2].'tags'.size()", equalTo(0))
                .body("[0].'properties_revisions'[2].'media_files'.size()", equalTo(0))
                .body("[0].'properties_revisions'[2].'author'", nullValue())
                .body("[0].'ratings_count'", numberMatches(0.0))
                .body("[0].'ratings_sum'", numberMatches(0.0))
                .body("[0].'ratings_average'", numberMatches(-1.0))
                .body("[0].'favourites_count'", numberMatches(0.0))
                .body("[0].'properties'.'name'", nullValue())
                .body("[0].'properties'.'date_published'", nullValue())
                .body("[0].'properties'.'date_created'", numberMatches(-6.7503743E10))
                .body("[0].'properties'.'date_updated'", nullValue())
                .body("[0].'properties'.'description_material'", nullValue())
                .body("[0].'properties'.'description_introduction'", containsString("BFCNpONn"))
                .body("[0].'properties'.'description_prepare'", nullValue())
                .body("[0].'properties'.'description_main'", containsString("O6EaHtzIW_m"))
                .body("[0].'properties'.'description_safety'", containsString("qCqytaE2rkDHa"))
                .body("[0].'properties'.'description_notes'", nullValue())
                .body("[0].'properties'.'age_min'", numberMatches(-118.0))
                .body("[0].'properties'.'age_max'", numberMatches(-247.0))
                .body("[0].'properties'.'participants_min'", nullValue())
                .body("[0].'properties'.'participants_max'", numberMatches(885.0))
                .body("[0].'properties'.'time_min'", nullValue())
                .body("[0].'properties'.'time_max'", nullValue())
                .body("[0].'properties'.'featured'", nullValue())
                .body("[0].'properties'.'source'", containsString("GptslKdIu"))
                .body("[0].'properties'.'tags'.size()", equalTo(0))
                .body("[0].'properties'.'media_files'.size()", equalTo(0))
                .body("[0].'properties'.'author'", nullValue())
                .body("[0].'related'.size()", equalTo(1))
                .body("[0].'related'[0]", numberMatches(5.0))
                .body("[1].'properties_revisions'.size()", equalTo(1))
                .body("[1].'properties_revisions'[0].'name'", nullValue())
                .body("[1].'properties_revisions'[0].'date_published'", numberMatches(3.773089226E12))
                .body("[1].'properties_revisions'[0].'date_created'", numberMatches(1.430758024E12))
                .body("[1].'properties_revisions'[0].'date_updated'", nullValue())
                .body("[1].'properties_revisions'[0].'description_material'", nullValue())
                .body("[1].'properties_revisions'[0].'description_introduction'", containsString("urMxD0VBq4kY"))
                .body("[1].'properties_revisions'[0].'description_prepare'", nullValue())
                .body("[1].'properties_revisions'[0].'description_main'", containsString("tH_yjLyf"))
                .body("[1].'properties_revisions'[0].'description_safety'", nullValue())
                .body("[1].'properties_revisions'[0].'description_notes'", nullValue())
                .body("[1].'properties_revisions'[0].'age_min'", numberMatches(-2.147483638E9))
                .body("[1].'properties_revisions'[0].'age_max'", nullValue())
                .body("[1].'properties_revisions'[0].'participants_min'", numberMatches(540.0))
                .body("[1].'properties_revisions'[0].'participants_max'", numberMatches(319.0))
                .body("[1].'properties_revisions'[0].'time_min'", nullValue())
                .body("[1].'properties_revisions'[0].'time_max'", numberMatches(125.0))
                .body("[1].'properties_revisions'[0].'featured'", equalTo(false))
                .body("[1].'properties_revisions'[0].'source'", containsString("KyeI98USXAaHJ"))
                .body("[1].'properties_revisions'[0].'tags'.size()", equalTo(0))
                .body("[1].'properties_revisions'[0].'media_files'.size()", equalTo(0))
                .body("[1].'properties_revisions'[0].'author'", nullValue())
                .body("[1].'ratings_count'", numberMatches(0.0))
                .body("[1].'ratings_sum'", numberMatches(0.0))
                .body("[1].'ratings_average'", numberMatches(-1.0))
                .body("[1].'favourites_count'", numberMatches(0.0))
                .body("[1].'properties'.'name'", containsString("SAVt"))
                .body("[1].'properties'.'date_published'", nullValue())
                .body("[1].'properties'.'date_created'", nullValue())
                .body("[1].'properties'.'date_updated'", numberMatches(2.42807756E11))
                .body("[1].'properties'.'description_material'", containsString("nAUX"))
                .body("[1].'properties'.'description_introduction'", containsString(""))
                .body("[1].'properties'.'description_prepare'", containsString("7UqPrsHUV7I"))
                .body("[1].'properties'.'description_main'", containsString("vf1"))
                .body("[1].'properties'.'description_safety'", containsString("N7iUpaB9_"))
                .body("[1].'properties'.'description_notes'", containsString("NrETT"))
                .body("[1].'properties'.'age_min'", numberMatches(-855.0))
                .body("[1].'properties'.'age_max'", nullValue())
                .body("[1].'properties'.'participants_min'", numberMatches(472.0))
                .body("[1].'properties'.'participants_max'", nullValue())
                .body("[1].'properties'.'time_min'", numberMatches(432.0))
                .body("[1].'properties'.'time_max'", nullValue())
                .body("[1].'properties'.'featured'", equalTo(false))
                .body("[1].'properties'.'source'", containsString(""))
                .body("[1].'properties'.'tags'.size()", equalTo(0))
                .body("[1].'properties'.'media_files'.size()", equalTo(2))
                .body("[1].'properties'.'media_files'[0].'mime_type'", nullValue())
                .body("[1].'properties'.'media_files'[0].'uri'", containsString("L"))
                .body("[1].'properties'.'media_files'[0].'name'", nullValue())
                .body("[1].'properties'.'media_files'[0].'capture_date'", nullValue())
                .body("[1].'properties'.'media_files'[0].'copy_right'", nullValue())
                .body("[1].'properties'.'media_files'[0].'author'", nullValue())
                .body("[1].'properties'.'media_files'[1].'mime_type'", nullValue())
                .body("[1].'properties'.'media_files'[1].'uri'", containsString("ullpfrNkn9U"))
                .body("[1].'properties'.'media_files'[1].'name'", nullValue())
                .body("[1].'properties'.'media_files'[1].'capture_date'", nullValue())
                .body("[1].'properties'.'media_files'[1].'copy_right'", nullValue())
                .body("[1].'properties'.'media_files'[1].'author'", nullValue())
                .body("[1].'properties'.'author'", nullValue())
                .body("[1].'related'.size()", equalTo(0))
                .body("[2].'properties_revisions'.size()", equalTo(1))
                .body("[2].'properties_revisions'[0].'name'", containsString(""))
                .body("[2].'properties_revisions'[0].'date_published'", nullValue())
                .body("[2].'properties_revisions'[0].'date_created'", numberMatches(-1.745870628E12))
                .body("[2].'properties_revisions'[0].'date_updated'", nullValue())
                .body("[2].'properties_revisions'[0].'description_material'", nullValue())
                .body("[2].'properties_revisions'[0].'description_introduction'", nullValue())
                .body("[2].'properties_revisions'[0].'description_prepare'", nullValue())
                .body("[2].'properties_revisions'[0].'description_main'", nullValue())
                .body("[2].'properties_revisions'[0].'description_safety'", nullValue())
                .body("[2].'properties_revisions'[0].'description_notes'", nullValue())
                .body("[2].'properties_revisions'[0].'age_min'", numberMatches(-2.147483089E9))
                .body("[2].'properties_revisions'[0].'age_max'", numberMatches(-215.0))
                .body("[2].'properties_revisions'[0].'participants_min'", nullValue())
                .body("[2].'properties_revisions'[0].'participants_max'", numberMatches(642.0))
                .body("[2].'properties_revisions'[0].'time_min'", numberMatches(489.0))
                .body("[2].'properties_revisions'[0].'time_max'", nullValue())
                .body("[2].'properties_revisions'[0].'featured'", nullValue())
                .body("[2].'properties_revisions'[0].'source'", containsString("Li"))
                .body("[2].'properties_revisions'[0].'tags'.size()", equalTo(1))
                .body("[2].'properties_revisions'[0].'tags'[0].'group'", containsString("wz"))
                .body("[2].'properties_revisions'[0].'tags'[0].'name'", containsString("WMF5BSyihU"))
                .body("[2].'properties_revisions'[0].'tags'[0].'media_file'", nullValue())
                .body("[2].'properties_revisions'[0].'tags'[0].'activities_count'", numberMatches(0.0))
                .body("[2].'properties_revisions'[0].'media_files'.size()", equalTo(1))
                .body("[2].'properties_revisions'[0].'media_files'[0].'mime_type'", nullValue())
                .body("[2].'properties_revisions'[0].'media_files'[0].'uri'", containsString("L"))
                .body("[2].'properties_revisions'[0].'media_files'[0].'name'", nullValue())
                .body("[2].'properties_revisions'[0].'media_files'[0].'capture_date'", nullValue())
                .body("[2].'properties_revisions'[0].'media_files'[0].'copy_right'", nullValue())
                .body("[2].'properties_revisions'[0].'media_files'[0].'author'", nullValue())
                .body("[2].'properties_revisions'[0].'author'", nullValue())
                .body("[2].'ratings_count'", numberMatches(0.0))
                .body("[2].'ratings_sum'", numberMatches(0.0))
                .body("[2].'ratings_average'", numberMatches(-1.0))
                .body("[2].'favourites_count'", numberMatches(0.0))
                .body("[2].'properties'.'name'", nullValue())
                .body("[2].'properties'.'date_published'", numberMatches(3.773089226E12))
                .body("[2].'properties'.'date_created'", numberMatches(1.430758024E12))
                .body("[2].'properties'.'date_updated'", nullValue())
                .body("[2].'properties'.'description_material'", nullValue())
                .body("[2].'properties'.'description_introduction'", containsString("urMxD0VBq4kY"))
                .body("[2].'properties'.'description_prepare'", nullValue())
                .body("[2].'properties'.'description_main'", containsString("tH_yjLyf"))
                .body("[2].'properties'.'description_safety'", nullValue())
                .body("[2].'properties'.'description_notes'", nullValue())
                .body("[2].'properties'.'age_min'", numberMatches(-2.147483638E9))
                .body("[2].'properties'.'age_max'", nullValue())
                .body("[2].'properties'.'participants_min'", numberMatches(540.0))
                .body("[2].'properties'.'participants_max'", numberMatches(319.0))
                .body("[2].'properties'.'time_min'", nullValue())
                .body("[2].'properties'.'time_max'", numberMatches(125.0))
                .body("[2].'properties'.'featured'", equalTo(false))
                .body("[2].'properties'.'source'", containsString("KyeI98USXAaHJ"))
                .body("[2].'properties'.'tags'.size()", equalTo(0))
                .body("[2].'properties'.'media_files'.size()", equalTo(0))
                .body("[2].'properties'.'author'", nullValue())
                .body("[2].'related'.size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_41() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 14975L)
                .d("URI", "\"9648571\"")
            .and().insertInto("TAG", 14974L)
                .d("GRP", "\"dBdWTBaiVdP1FXT\"")
                .d("NAME", "\"Un4cA2nI\"")
            .and().insertInto("TAG_DERIVED", 14973L)
                .r("TAG_ID", 14974L)
                .d("ACTIVITIES_COUNT", "935")
            .and().insertInto("MEDIA_FILE", 14978L)
                .d("URI", "\"_EM_88781_XYZ_\"")
            .and().insertInto("TAG", 14977L)
                .d("GRP", "\"C04WjWY1\"")
                .d("NAME", "\"RXytBW\"")
            .and().insertInto("TAG_DERIVED", 14976L)
                .r("TAG_ID", 14977L)
                .d("ACTIVITIES_COUNT", "0")
            .and().insertInto("MEDIA_FILE", 14981L)
                .d("URI", "\"ZEXp0\"")
            .and().insertInto("TAG", 14980L)
                .d("GRP", "\"qyNIF6\"")
                .d("NAME", "\"TwEp\"")
            .and().insertInto("TAG_DERIVED", 14979L)
                .r("TAG_ID", 14980L)
                .d("ACTIVITIES_COUNT", "550")
            .and().insertInto("USERS", 15062L)
                .d("AUTHORIZATION_LEVEL", "649")
                .d("NAME", "\"_EM_88782_XYZ_\"")
            .and().insertInto("ACTIVITY", 15061L)
            .and().insertInto("ACTIVITY_RATING", 15060L)
                .r("ACTIVITY_ID", 15061L)
                .r("USER_ID", 15062L)
                .d("FAVOURITE", "false")
                .d("RATING", "0")
            .and().insertInto("USERS", 15065L)
                .d("AUTHORIZATION_LEVEL", "17137")
                .d("NAME", "\"_EM_88791_XYZ_\"")
            .and().insertInto("ACTIVITY", 15064L)
            .and().insertInto("ACTIVITY_RATING", 15063L)
                .r("ACTIVITY_ID", 15064L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("MEDIA_FILE", 9782L)
                .d("URI", "\"3uYEw89Z4IH2ibb\"")
            .and().insertInto("TAG", 9781L)
                .d("GRP", "\"_B4WG\"")
                .d("NAME", "\"aYx\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 607 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "group=&" + 
                    "name=aYx&" + 
                    "min_activities_count=2238")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"akDMoiYeyWi\", " + 
                    " \"description_prepare\": \"\", " + 
                    " \"description_main\": \"U8Ic\", " + 
                    " \"description_safety\": \"ZHzjG6FxXnXnn2q\", " + 
                    " \"description_notes\": \"ZUBLhMk\", " + 
                    " \"age_min\": -379, " + 
                    " \"age_max\": -2147482742, " + 
                    " \"participants_min\": 48, " + 
                    " \"time_max\": 829, " + 
                    " \"source\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-06-01T21:19:08.915Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("akDMoiYeyWi"))
                .body("'properties_revisions'[0].'description_prepare'", containsString(""))
                .body("'properties_revisions'[0].'description_main'", containsString("U8Ic"))
                .body("'properties_revisions'[0].'description_safety'", containsString("ZHzjG6FxXnXnn2q"))
                .body("'properties_revisions'[0].'description_notes'", containsString("ZUBLhMk"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-379.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147482742E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(48.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(829.0))
                .body("'properties_revisions'[0].'source'", containsString(""))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'properties'.'date_created'", containsString("2024-06-01T21:19:08.915Z"))
                .body("'properties'.'description_material'", containsString("akDMoiYeyWi"))
                .body("'properties'.'description_prepare'", containsString(""))
                .body("'properties'.'description_main'", containsString("U8Ic"))
                .body("'properties'.'description_safety'", containsString("ZHzjG6FxXnXnn2q"))
                .body("'properties'.'description_notes'", containsString("ZUBLhMk"))
                .body("'properties'.'age_min'", numberMatches(-379.0))
                .body("'properties'.'age_max'", numberMatches(-2.147482742E9))
                .body("'properties'.'participants_min'", numberMatches(48.0))
                .body("'properties'.'time_max'", numberMatches(829.0))
                .body("'properties'.'source'", containsString(""));
        location_activities = "/api/v2/activities" + "/" + res_3.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"favourite\": true " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/609/rating"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 609, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/609/rating"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_42() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/ping?EMextraParam123=_EM_54_XYZ_")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_43() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 6846L)
                .d("AUTHORIZATION_LEVEL", "253")
                .d("DATE_CREATED", "\"1929-05-24 22:18:20\"")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"\"")
            .and().insertInto("USERS", 6847L)
                .d("AUTHORIZATION_LEVEL", "94")
                .d("DATE_CREATED", "\"1952-11-29 12:09:04\"")
                .d("EMAIL_ADDRESS", "\"cp0s\"")
                .d("NAME", "\"_EM_109410_XYZ_\"")
            .and().insertInto("USERS", 6848L)
                .d("AUTHORIZATION_LEVEL", "988")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"ONr\"")
            .and().insertInto("USERS", 6849L)
                .d("AUTHORIZATION_LEVEL", "-65170")
                .d("DATE_CREATED", "\"1960-02-08 01:40:56\"")
                .d("EMAIL_ADDRESS", "\"s_vN2w2LDvri8f\"")
                .d("NAME", "\"_EM_38310_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 6851L)
                .d("URI", "\"P5sksUhigkQ\"")
            .and().insertInto("TAG", 6850L)
                .d("GRP", "\"_EM_38311_XYZ_\"")
                .d("NAME", "\"_EM_109411_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 6853L)
                .d("URI", "\"H36R1XeZ9okNC\"")
            .and().insertInto("TAG", 6852L)
                .d("GRP", "\"CZpQ\"")
                .d("NAME", "\"tcuUU7z6QheEwP\"")
                .r("MEDIA_FILE_ID", 6851L)
            .and().insertInto("ACTIVITY", 6854L)
            .and().insertInto("ACTIVITY", 6855L)
            .and().insertInto("USERS", 6858L)
                .d("AUTHORIZATION_LEVEL", "726")
                .d("NAME", "\"LzuOOT6B69\"")
            .and().insertInto("ACTIVITY", 6857L)
            .and().insertInto("ACTIVITY_RATING", 6856L)
                .r("ACTIVITY_ID", 6854L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "856")
            .and().insertInto("USERS", 6861L)
                .d("AUTHORIZATION_LEVEL", "747")
                .d("NAME", "\"_EM_38312_XYZ_\"")
            .and().insertInto("ACTIVITY", 6860L)
            .and().insertInto("ACTIVITY_RATING", 6859L)
                .r("ACTIVITY_ID", 6860L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 6864L)
                .d("AUTHORIZATION_LEVEL", "327")
                .d("NAME", "\"_EM_109412_XYZ_\"")
            .and().insertInto("ACTIVITY", 6863L)
            .and().insertInto("ACTIVITY_RATING", 6862L)
                .r("ACTIVITY_ID", 6863L)
                .r("USER_ID", 6848L)
                .d("FAVOURITE", "false")
                .d("RATING", "59")
            .and().insertInto("SYSTEM_MESSAGE", 6929L)
                .d("KEY", "\"_EM_109413_XYZ_\"")
                .d("VALID_FROM", "\"2032-02-13 11:59:47\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"lE_vOqpbgEdmwx\"")
            .and().insertInto("SYSTEM_MESSAGE", 6930L)
                .d("KEY", "\"_EM_38315_XYZ_\"")
                .d("VALID_FROM", "\"1900-01-22 19:54:39\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"6ZH4_vzchpSEpLj\"")
            .and().insertInto("SYSTEM_MESSAGE", 6931L)
                .d("KEY", "\"WuqA6U\"")
                .d("VALID_FROM", "\"1910-02-11 10:07:15\"")
                .d("VALID_TO", "\"2014-05-06 15:39:08\"")
                .d("VALUE", "\"lz47O33XUAg0LM\"")
            .and().insertInto("SYSTEM_MESSAGE", 6932L)
                .d("KEY", "\"hc\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1963-06-19 17:20:44\"")
                .d("VALUE", "\"_EM_38316_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 6933L)
                .d("KEY", "\"IPUiP=\"")
                .d("VALID_FROM", "\"2060-10-05 07:47:41\"")
                .d("VALID_TO", "\"2044-10-29 08:55:08\"")
                .d("VALUE", "\"\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/users/4")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_44() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 7009L)
            .and().insertInto("ACTIVITY", 7010L)
            .and().insertInto("ACTIVITY", 7011L)
            .and().insertInto("ACTIVITY", 7012L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/3?" + 
                    "random=8&" + 
                    "name=YarlzzexrAdafoIm&" + 
                    "attrs=VMLc6E2")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_45() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 677, " + 
                    " 663, " + 
                    " 21, " + 
                    " 2, " + 
                    " 4742127951458380487 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_46() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 2234L)
            .and().insertInto("ACTIVITY", 2235L)
            .and().insertInto("ACTIVITY", 2236L)
            .and().insertInto("USERS", 2239L)
                .d("AUTHORIZATION_LEVEL", "131354")
                .d("NAME", "\"_EM_17551_XYZ_\"")
            .and().insertInto("ACTIVITY", 2238L)
            .and().insertInto("ACTIVITY_RATING", 2237L)
                .r("ACTIVITY_ID", 2238L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 2242L)
                .d("AUTHORIZATION_LEVEL", "364")
                .d("NAME", "\"0oT0djk4eQ\"")
            .and().insertInto("ACTIVITY", 2241L)
            .and().insertInto("ACTIVITY_RATING", 2240L)
                .r("ACTIVITY_ID", 2241L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "977")
            .and().insertInto("MEDIA_FILE", 2302L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2071-01-12 06:52:27\"")
                .d("COPY_RIGHT", "\"VkWYvA0wCT\"")
                .d("MIME_TYPE", "\"SMPDH9Y\"")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_17552_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 2303L)
                .d("AUTHOR", "\"pJWU2OObjr2zht7\"")
                .d("CAPTURE_DATE", "\"2099-08-14 13:38:33\"")
                .d("COPY_RIGHT", "\"DA\"")
                .d("MIME_TYPE", "\"InXfLgvNEJx\"")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_17553_XYZ_\"")
            .and().insertInto("USERS", 745L)
                .d("AUTHORIZATION_LEVEL", "33")
                .d("NAME", "\"_EM_9982_XYZ_\"")
            .and().insertInto("ACTIVITY", 744L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 2130310895, " + 
                    " 33, " + 
                    " 905, " + 
                    " -8993363840212167120, " + 
                    " -189367780 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_47() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 5303L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": -2147483648, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities/1/rating?EMextraParam123=42")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_48() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 2234L)
            .and().insertInto("ACTIVITY", 2235L)
            .and().insertInto("ACTIVITY", 2236L)
            .and().insertInto("USERS", 2239L)
                .d("AUTHORIZATION_LEVEL", "131354")
                .d("NAME", "\"_EM_17551_XYZ_\"")
            .and().insertInto("ACTIVITY", 2238L)
            .and().insertInto("ACTIVITY_RATING", 2237L)
                .r("ACTIVITY_ID", 2235L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "423")
            .and().insertInto("USERS", 2242L)
                .d("AUTHORIZATION_LEVEL", "364")
                .d("NAME", "\"_EM_41316_XYZ_\"")
            .and().insertInto("ACTIVITY", 2241L)
            .and().insertInto("ACTIVITY_RATING", 2240L)
                .r("ACTIVITY_ID", 2235L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "1489")
            .and().insertInto("MEDIA_FILE", 2302L)
                .d("AUTHOR", "\"aACnlq4\"")
                .d("CAPTURE_DATE", "\"2071-01-12 06:52:27\"")
                .d("COPY_RIGHT", "\"VkWYvA0wCT\"")
                .d("MIME_TYPE", "\"SMPDH9Y\"")
                .d("NAME", "\"btGjsVCaKj4\"")
                .d("URI", "\"_EM_17552_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 2303L)
                .d("AUTHOR", "\"pJWU2OObjr2zht7\"")
                .d("CAPTURE_DATE", "\"2099-08-14 15:38:33\"")
                .d("COPY_RIGHT", "\"DA\"")
                .d("MIME_TYPE", "\"InXfLgvNEJx\"")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_41317_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 663, " + 
                    " 21, " + 
                    " 2, " + 
                    " 4742127951458380487 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=42")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_49() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 1048L)
                .d("AUTHORIZATION_LEVEL", "588")
                .d("NAME", "\"4\"")
            .and().insertInto("ACTIVITY", 1047L)
            .and().insertInto("ACTIVITY", 1046L)
            .and().insertInto("ACTIVITY_RELATION", 1045L)
                .r("ACTIVITY_1_ID", 1046L)
                .r("ACTIVITY_2_ID", 1047L)
                .r("OWNER_ID", 1048L)
            .and().insertInto("USERS", 1052L)
                .d("AUTHORIZATION_LEVEL", "-33554119")
                .d("NAME", "\"_EM_31407_XYZ_\"")
            .and().insertInto("ACTIVITY", 1051L)
            .and().insertInto("ACTIVITY", 1050L)
            .and().insertInto("ACTIVITY_RELATION", 1049L)
                .r("ACTIVITY_1_ID", 1046L)
                .r("ACTIVITY_2_ID", 1046L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 1056L)
                .d("AUTHORIZATION_LEVEL", "-1030989870")
                .d("NAME", "\"_EM_31408_XYZ_\"")
            .and().insertInto("ACTIVITY", 1055L)
            .and().insertInto("ACTIVITY", 1054L)
            .and().insertInto("ACTIVITY_RELATION", 1053L)
                .r("ACTIVITY_1_ID", 1050L)
                .r("ACTIVITY_2_ID", 1054L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 1060L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"rUlTYhHqI\"")
            .and().insertInto("ACTIVITY", 1059L)
            .and().insertInto("ACTIVITY", 1058L)
            .and().insertInto("ACTIVITY_RELATION", 1057L)
                .r("ACTIVITY_1_ID", 1054L)
                .r("ACTIVITY_2_ID", 1051L)
                .d("OWNER_ID", "2")
            .and().insertInto("USERS", 1064L)
                .d("AUTHORIZATION_LEVEL", "-261745")
                .d("NAME", "\"_EM_25319_XYZ_\"")
            .and().insertInto("ACTIVITY", 1063L)
            .and().insertInto("ACTIVITY", 1062L)
            .and().insertInto("ACTIVITY_RELATION", 1061L)
                .r("ACTIVITY_1_ID", 1055L)
                .r("ACTIVITY_2_ID", 1046L)
                .r("OWNER_ID", 1064L)
            .and().insertInto("USERS", 4218L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"00wYWP2Hp1uA2ysA\"")
            .and().insertInto("ACTIVITY", 4217L)
            .and().insertInto("ACTIVITY_RATING", 4216L)
                .r("ACTIVITY_ID", 1050L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 4221L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"vuE8PdQ\"")
            .and().insertInto("ACTIVITY", 4220L)
            .and().insertInto("ACTIVITY_RATING", 4219L)
                .r("ACTIVITY_ID", 4220L)
                .r("USER_ID", 1060L)
                .d("FAVOURITE", "false")
                .d("RATING", "35")
            .and().insertInto("USERS", 4224L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_31409_XYZ_\"")
            .and().insertInto("ACTIVITY", 4223L)
            .and().insertInto("ACTIVITY_RATING", 4222L)
                .r("ACTIVITY_ID", 1046L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "834")
            .and().insertInto("USERS", 4227L)
                .d("AUTHORIZATION_LEVEL", "-1047672")
                .d("NAME", "\"_EM_31410_XYZ_\"")
            .and().insertInto("ACTIVITY", 4226L)
            .and().insertInto("ACTIVITY_RATING", 4225L)
                .r("ACTIVITY_ID", 4217L)
                .r("USER_ID", 1056L)
                .d("FAVOURITE", "true")
                .d("RATING", "144")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 135, " + 
                    " 583, " + 
                    " 139, " + 
                    " 218, " + 
                    " 921 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=42")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }


}
