import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2024-05-29T07:34:47.294+02:00[Europe/Paris]
 * <br>
 * The generated test suite contains 87 tests
 * <br>
 * Covered targets: 1688
 * <br>
 * Used time: 2h 0m 17s
 * <br>
 * Needed budget for current results: 99%
 * <br>
 * This file contains test cases that are likely to indicate faults.
 */
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.se.devscout.scoutapi.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("MEDIA_FILE","ACTIVITY_PROPERTIES_MEDIA_FILE","MEDIA_FILE_KEYWORDS","TAG","ACTIVITY_PROPERTIES_TAG","TAG_DERIVED","USERS","ACTIVITY_PROPERTIES","ACTIVITY_RATING","ACTIVITY_RELATION","USER_IDENTITY","ACTIVITY","ACTIVITY_DERIVED","SYSTEM_MESSAGE"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * [test_0_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_0_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "attrs=_EM_8308_XYZ_&" + 
                    "featured=true&" + 
                    "age_1=_EM_8311_XYZ_&" + 
                    "age_2=_EM_8312_XYZ_&" + 
                    "time_1=_EM_8314_XYZ_&" + 
                    "id=_EM_8316_XYZ_&" + 
                    "my_favourites=false&" + 
                    "ratings_count_min=769&" + 
                    "random=716&" + 
                    "favourites=200")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
    }
    
    
    /**
    * [test_1_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_1_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=&" + 
                    "name=_EM_1772_XYZ_&" + 
                    "featured=true&" + 
                    "categories=_EM_1774_XYZ_&" + 
                    "participants=_EM_1776_XYZ_&" + 
                    "durations=_EM_1777_XYZ_&" + 
                    "my_favourites=false&" + 
                    "favourites=577")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_77_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
    }
    
    
    /**
    * [test_2_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_2_with500() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/336/file?EMextraParam123=_EM_4_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_3_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_3_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 14763L)
                .d("URI", "\"zUPv6jc16\"")
            .and().insertInto("TAG", 14762L)
                .d("GRP", "\"AMdlHZShLV\"")
                .d("NAME", "\"gF3\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 14765L)
                .d("URI", "\"apBW4TK4l\"")
            .and().insertInto("TAG", 14764L)
                .d("GRP", "\"GFbzoWGWvqcwXz\"")
                .d("NAME", "\"D2uMz1EZ0HO9348b\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 14767L)
                .d("URI", "\"N2O9lfeMjSehrJk\"")
            .and().insertInto("TAG", 14766L)
                .d("GRP", "\"\"")
                .d("NAME", "\"NqNLyQQs3lnm\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 14769L)
                .d("URI", "\"y86O\"")
            .and().insertInto("TAG", 14768L)
                .d("GRP", "\"t87tUhL\"")
                .d("NAME", "\"svq\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 14771L)
                .d("URI", "\"nmpzPuCBgyyr\"")
            .and().insertInto("TAG", 14770L)
                .d("GRP", "\"4_R\"")
                .d("NAME", "\"2vRrp\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "attrs=oy&" + 
                    "name=&" + 
                    "text=&" + 
                    "ratings_average_min=0.5310730653459547&" + 
                    "random=531")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_68_lambda$all$2
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_4_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_4_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/system_messages?EMextraParam123=_EM_5103_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_33_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_5_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_5_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_5294_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/users/-1913373753520913176?EMextraParam123=_EM_5293_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_6_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_6_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_7_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_7_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/users/179718303")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_48_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_8_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_8_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/971")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_41_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_9_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_9_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/tags/200?EMextraParam123=_EM_3320_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_10_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_10_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3309_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/media_files/354?EMextraParam123=_EM_3308_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_11_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_11_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/categories/952")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_12_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_12_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/FavouritesResourceV1_66_put
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_13_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_13_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/601/rating?attrs=_EM_1654_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_14_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_14_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1658_XYZ_")
                .delete(baseUrlOfSut + "/api/v2/activities/924/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_15_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_15_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1662_XYZ_")
                .get(baseUrlOfSut + "/api/v1/activities/-4868903960176618252/rating?" + 
                    "attrs=_EM_1661_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_16_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_16_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1663_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/activities/1859170043073658120/rating?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_17_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_17_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_18_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_18_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1863_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_19_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_19_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .patch(baseUrlOfSut + "/api/v2/activities/393?EMextraParam123=_EM_3303_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_20_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_20_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3305_XYZ_")
                .delete(baseUrlOfSut + "/api/v2/activities/44")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_21_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_21_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -6611159771054032969 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/-6611159771054032969")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_100_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_22_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_22_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v2/activities/588")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_23_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_23_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/activities/863")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_24_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_24_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3369_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/activities/9")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_25_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_25_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 529, " + 
                    " \"email_address\": \"XaMOWcN\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_62_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_26_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_26_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 3790L)
                .d("KEY", "\"_EM_21510_XYZ_\"")
                .d("VALID_FROM", "\"1964-08-18 21:53:26\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_21511_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_21514_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"value\": \"K3Yuj4y\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/3790?EMextraParam123=_EM_21513_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_102_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_27_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_27_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/259?" + 
                    "verify_unused=true&" + 
                    "EMextraParam123=_EM_4946_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_28_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_28_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"SvX\", " + 
                    " \"email_address\": \"fXiqnZNT\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_40_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_29_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_29_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -6114565971430234855, " + 
                    " \"key\": \"9\", " + 
                    " \"value\": \"GRj\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_78_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_30_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_30_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3473_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -754824311, " + 
                    " \"name\": \"_EM_3471_XYZ_\", " + 
                    " \"copy_right\": \"8DL0l\", " + 
                    " \"author\": \"iDdnq\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_109_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_31_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_31_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 18223L)
                .d("URI", "\"_EM_117895_XYZ_\"")
            .and().insertInto("TAG", 18222L)
                .d("GRP", "\"K97Mlb0tRma\"")
                .d("NAME", "\"LyRk9hntekW\"")
            .and().insertInto("TAG_DERIVED", 18221L)
                .r("TAG_ID", 18222L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 18226L)
                .d("URI", "\"_EM_117896_XYZ_\"")
            .and().insertInto("TAG", 18225L)
                .d("GRP", "\"Z65DYUZ907a8Zof\"")
                .d("NAME", "\"_EM_117897_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 18224L)
                .r("TAG_ID", 18225L)
                .d("ACTIVITIES_COUNT", "548")
            .and().insertInto("MEDIA_FILE", 18229L)
                .d("URI", "\"_EM_117898_XYZ_\"")
            .and().insertInto("TAG", 18228L)
                .d("GRP", "\"7wQWzUJTkJM\"")
                .d("NAME", "\"B7G8C1l-u\"")
            .and().insertInto("TAG_DERIVED", 18227L)
                .r("TAG_ID", 18228L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 18232L)
                .d("URI", "\"1T6\"")
            .and().insertInto("TAG", 18231L)
                .d("GRP", "\"0OqvpF\"")
                .d("NAME", "\"aVzzJa3slVn\"")
            .and().insertInto("TAG_DERIVED", 18230L)
                .r("TAG_ID", 18231L)
                .d("ACTIVITIES_COUNT", "109")
            .and().insertInto("MEDIA_FILE", 18235L)
                .d("URI", "\"_EM_117919_XYZ_\"")
            .and().insertInto("TAG", 18234L)
                .d("GRP", "\"b\"")
                .d("NAME", "\"kYACbjyd_5p7d6M\"")
            .and().insertInto("USERS", 18241L)
                .d("AUTHORIZATION_LEVEL", "549")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 18240L)
            .and().insertInto("ACTIVITY_RATING", 18239L)
                .r("ACTIVITY_ID", 18240L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "562")
            .and().insertInto("USERS", 18244L)
                .d("AUTHORIZATION_LEVEL", "648")
                .d("NAME", "\"Ixs3DnDrRmzyj\"")
            .and().insertInto("ACTIVITY", 18243L)
            .and().insertInto("ACTIVITY_RATING", 18242L)
                .r("ACTIVITY_ID", 18243L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "491")
            .and().insertInto("USERS", 18247L)
                .d("AUTHORIZATION_LEVEL", "577")
                .d("NAME", "\"urwyEtBet6Z7p\"")
            .and().insertInto("ACTIVITY", 18246L)
            .and().insertInto("ACTIVITY_RATING", 18245L)
                .r("ACTIVITY_ID", 18240L)
                .r("USER_ID", 18241L)
                .d("FAVOURITE", "true")
                .d("RATING", "0")
            .and().insertInto("USERS", 18250L)
                .d("AUTHORIZATION_LEVEL", "1361304006")
                .d("NAME", "\"SVu1yK7quss\"")
            .and().insertInto("ACTIVITY", 18249L)
            .and().insertInto("ACTIVITY_RATING", 18248L)
                .r("ACTIVITY_ID", 18249L)
                .r("USER_ID", 18247L)
                .d("FAVOURITE", "false")
                .d("RATING", "472")
            .and().insertInto("USERS", 18253L)
                .d("AUTHORIZATION_LEVEL", "1910271979")
                .d("NAME", "\"5AVoJ72mjOfBy\"")
            .and().insertInto("ACTIVITY", 18252L)
            .and().insertInto("ACTIVITY_RATING", 18251L)
                .r("ACTIVITY_ID", 18252L)
                .r("USER_ID", 18247L)
                .d("FAVOURITE", "true")
                .d("RATING", "2384")
            .and().insertInto("SYSTEM_MESSAGE", 18254L)
                .d("KEY", "\"KdOu_pwpnAPNlTjw\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1947-09-07 04:39:15\"")
                .d("VALUE", "\"Aop7Zb\"")
            .and().insertInto("SYSTEM_MESSAGE", 18255L)
                .d("KEY", "\"_EM_117899_XYZ_\"")
                .d("VALID_FROM", "\"1994-06-16 00:17:13\"")
                .d("VALID_TO", "\"2063-08-26 16:21:33\"")
                .d("VALUE", "\"2ysSgNzQcuHr5\"")
            .and().insertInto("MEDIA_FILE", 18109L)
                .d("URI", "\"CONSTANTS\"")
            .and().insertInto("TAG", 18108L)
                .d("GRP", "\"_EM_69596UXYV_\"")
                .d("NAME", "\"tvlMO6CG\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("ACTIVITY", 18110L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 512, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities/512/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_32_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_32_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 4282L)
                .d("KEY", "\"_EM_67332_XYZ_\"")
                .d("VALID_FROM", "\"1963-05-28 17:14:21\"")
                .d("VALID_TO", "\"1991-01-21 09:02:24\"")
                .d("VALUE", "\"QKYT\"")
            .and().insertInto("SYSTEM_MESSAGE", 4283L)
                .d("KEY", "\"_EM_61726_XYZ_\"")
                .d("VALID_FROM", "\"2061-05-09 11:41:29\"")
                .d("VALID_TO", "\"2046-02-26 14:11:17\"")
                .d("VALUE", "\"_EM_67333_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 4284L)
                .d("KEY", "\"UZO9vY7qZUWA5PK\"")
                .d("VALID_FROM", "\"1900-09-02 14:03:04\"")
                .d("VALID_TO", "\"2018-06-18 14:54:39\"")
                .d("VALUE", "\"A.GQTUQ17J9Cox\"")
            .and().insertInto("SYSTEM_MESSAGE", 4285L)
                .d("KEY", "\"xHRH4x6PAKQK5PkI\"")
                .d("VALID_FROM", "\"1924-09-04 08:18:13\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"\"")
            .and().insertInto("SYSTEM_MESSAGE", 4286L)
                .d("KEY", "\"_EM_61727_XYZ_\"")
                .d("VALID_FROM", "\"2063-05-10 05:16:16\"")
                .d("VALID_TO", "\"1951-12-04 01:51:29\"")
                .d("VALUE", "\"wCwq3Y\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 878, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities/886/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_33_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_33_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 20257L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"_EM_91344_XYZ_\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"\"")
                .d("URI", "\"2Xo\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"3cv0u36qThNP\", " + 
                    " \"uri\": \"rJ3EWuG\", " + 
                    " \"author\": \"K\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/486?attrs=In0EvM9NRQkx")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_295_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_34_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_34_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 2985L)
                .d("KEY", "\"_EM_120986_XYZ_\"")
                .d("VALID_FROM", "\"2095-10-16 02:46:25\"")
                .d("VALID_TO", "\"2067-02-04 13:29:00\"")
                .d("VALUE", "\"5978153\"")
            .and().insertInto("SYSTEM_MESSAGE", 2986L)
                .d("KEY", "\"E\"")
                .d("VALID_FROM", "\"1924-08-27 12:38:59\"")
                .d("VALID_TO", "\"2026-05-18 19:29:29\"")
                .d("VALUE", "\"BUUfDUsKUUdimU\"")
            .and().insertInto("MEDIA_FILE", 27823L)
                .d("URI", "\"ZtKrsVlFf9\"")
            .and().insertInto("USERS", 27822L)
                .d("AUTHORIZATION_LEVEL", "323")
                .d("NAME", "\"1904-05-08 13:19:50\"")
            .and().insertInto("ACTIVITY", 27821L)
            .and().insertInto("ACTIVITY", 27820L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27819L)
                .r("ACTIVITY_ID", 27820L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 27818L)
                .r("ACTIVITY_PROPERTIES_ID", 27819L)
                .r("MEDIA_FILE_ID", 27823L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 27829L)
                .d("URI", "\"_EM_120602_XYZ_\"")
            .and().insertInto("USERS", 27828L)
                .d("AUTHORIZATION_LEVEL", "8826")
                .d("NAME", "\"TZMeNTb8dfV\"")
            .and().insertInto("ACTIVITY", 27827L)
            .and().insertInto("ACTIVITY", 27826L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27825L)
                .r("ACTIVITY_ID", 27820L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 27824L)
                .r("ACTIVITY_PROPERTIES_ID", 27825L)
                .r("MEDIA_FILE_ID", 27823L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 27831L)
                .d("URI", "\"O25l8dy\"")
            .and().insertInto("TAG", 27830L)
                .d("GRP", "\"rDy2xZUKiaUdUUyZ\"")
                .d("NAME", "\"UqM3IAE1m__z\"")
                .r("MEDIA_FILE_ID", 27829L)
            .and().insertInto("MEDIA_FILE", 27838L)
                .d("URI", "\"_EM_120590_XYZ_\"")
            .and().insertInto("TAG", 27837L)
                .d("GRP", "\"\"")
                .d("NAME", "\"UF_cwzv2Q8Qb_xG\"")
            .and().insertInto("USERS", 27836L)
                .d("AUTHORIZATION_LEVEL", "-64958")
                .d("NAME", "\"p\"")
            .and().insertInto("ACTIVITY", 27835L)
            .and().insertInto("ACTIVITY", 27834L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27833L)
                .r("ACTIVITY_ID", 27834L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 27832L)
                .r("ACTIVITY_PROPERTIES_ID", 27819L)
                .r("TAG_ID", 27837L)
            .and().insertInto("MEDIA_FILE", 27845L)
                .d("URI", "\"CONSTANTS\"")
            .and().insertInto("TAG", 27844L)
                .d("GRP", "\"FAVOURITE\"")
                .d("NAME", "\"_EM_120987_XYZ_\"")
            .and().insertInto("USERS", 27843L)
                .d("AUTHORIZATION_LEVEL", "-31991")
                .d("NAME", "\"5997572\"")
            .and().insertInto("ACTIVITY", 27842L)
            .and().insertInto("ACTIVITY", 27841L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27840L)
                .r("ACTIVITY_ID", 27827L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 27839L)
                .r("ACTIVITY_PROPERTIES_ID", 27819L)
                .r("TAG_ID", 27830L)
            .and().insertInto("MEDIA_FILE", 27852L)
                .d("URI", "\"hF2\"")
            .and().insertInto("TAG", 27851L)
                .d("GRP", "\"LuFNnvShmm5Mv\"")
                .d("NAME", "\"2r63abc\"")
            .and().insertInto("USERS", 27850L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"dMTzIaqqCG9\"")
            .and().insertInto("ACTIVITY", 27849L)
            .and().insertInto("ACTIVITY", 27848L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27847L)
                .r("ACTIVITY_ID", 27826L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 27846L)
                .r("ACTIVITY_PROPERTIES_ID", 27840L)
                .r("TAG_ID", 27837L)
            .and().insertInto("MEDIA_FILE", 27859L)
                .d("URI", "\"_EM_120988_XYZ_\"")
            .and().insertInto("TAG", 27858L)
                .d("GRP", "\"f3\"")
                .d("NAME", "\"_EM_120741_XYZ_\"")
            .and().insertInto("USERS", 27857L)
                .d("AUTHORIZATION_LEVEL", "936")
                .d("NAME", "\"cGJphRb01xm\"")
            .and().insertInto("ACTIVITY", 27856L)
            .and().insertInto("ACTIVITY", 27855L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27854L)
                .r("ACTIVITY_ID", 27826L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 27853L)
                .r("ACTIVITY_PROPERTIES_ID", 27840L)
                .r("TAG_ID", 27844L)
            .and().insertInto("MEDIA_FILE", 27866L)
                .d("URI", "\"GfXQn\\Ke5J\"")
            .and().insertInto("TAG", 27865L)
                .d("GRP", "\"mLqiBP\"")
                .d("NAME", "\"GzQa5nh\"")
            .and().insertInto("USERS", 27864L)
                .d("AUTHORIZATION_LEVEL", "1397")
                .d("NAME", "\"_EM_120593_XYZ_\"")
            .and().insertInto("ACTIVITY", 27863L)
            .and().insertInto("ACTIVITY", 27862L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27861L)
                .r("ACTIVITY_ID", 27842L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 27860L)
                .r("ACTIVITY_PROPERTIES_ID", 27861L)
                .r("TAG_ID", 27851L)
            .and().insertInto("MEDIA_FILE", 55586L)
                .d("URI", "\"9Si\"")
            .and().insertInto("TAG", 55585L)
                .d("GRP", "\"S\"")
                .d("NAME", "\"GS_zjJthlkrGWJ5\"")
            .and().insertInto("TAG_DERIVED", 55584L)
                .r("TAG_ID", 27844L)
                .d("ACTIVITIES_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 958, " + 
                    " \"group\": \"vi_j\", " + 
                    " \"name\": \"Qw_FVmhG\", " + 
                    " \"activities_count\": 141 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_60_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_35_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_35_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"c2mj0vY4\", " + 
                    " \"name\": \"DWDhG6\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 372, " + 
                    " \"mime_type\": \"9\", " + 
                    " \"uri\": \"JuFYZZHQV\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_36_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_36_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 25043L)
                .d("URI", "\"_EM_115363_XYZ_\"")
            .and().insertInto("TAG", 25042L)
                .d("GRP", "\"T1dQVGINM0d\"")
                .d("NAME", "\"5877994\"")
            .and().insertInto("TAG_DERIVED", 25041L)
                .r("TAG_ID", 25042L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 25046L)
                .d("URI", "\"Mc6hXF3K0Xv\"")
            .and().insertInto("TAG", 25045L)
                .d("GRP", "\"_EM_117120_XYZ_\"")
                .d("NAME", "\"_EM_115365_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 25044L)
                .r("TAG_ID", 25045L)
                .d("ACTIVITIES_COUNT", "-7414618760831237002")
            .and().insertInto("USERS", 25054L)
                .d("AUTHORIZATION_LEVEL", "-1836")
                .d("NAME", "\"_EM_117121_XYZ_\"")
            .and().insertInto("ACTIVITY", 25053L)
            .and().insertInto("ACTIVITY", 25052L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25051L)
                .d("AGE_MAX", "22")
                .d("AGE_MIN", "-697")
                .d("DATE_CREATED", "\"2024-02-27 01:01:49\"")
                .d("DATE_PUBLISHED", "\"1933-07-11 09:24:24\"")
                .d("DATE_UPDATED", "\"2002-03-03 23:09:54\"")
                .d("DESCRIPTION_INTRODUCTION", "\"jq\"")
                .d("DESCRIPTION_MAIN", "\"UOdglAK\"")
                .d("DESCRIPTION_MATERIAL", "\"_EM_117122_XYZ_\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"qylUmac\"")
                .d("DESCRIPTION_SAFETY", "\"7muoZ00mY`\"")
                .d("FEATURED", "true")
                .d("NAME", "\"43bHm\"")
                .d("PARTICIPANTS_MAX", "55")
                .d("PARTICIPANTS_MIN", "251")
                .d("SOURCE", "\"q\"")
                .d("TIME_MAX", "738")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 25053L)
                .d("AUTHOR_ID", "1")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 25058L)
                .d("AUTHORIZATION_LEVEL", "32817")
                .d("NAME", "\"TxGkdRUN1JLTw\"")
            .and().insertInto("ACTIVITY", 25057L)
            .and().insertInto("ACTIVITY", 25056L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25055L)
                .d("AGE_MAX", "-2147483190")
                .d("AGE_MIN", "-6")
                .d("DATE_CREATED", "\"1946-03-22 14:17:52\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1981-08-20 15:53:04\"")
                .d("DESCRIPTION_INTRODUCTION", "\"5879554\"")
                .d("DESCRIPTION_MAIN", "\"ol0SUOdUUf63h\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"GK75SGm7hIG9sT\"")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "\"cwOf8g5\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"_EM_117123_XYZ_\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"_EM_117124_XYZ_\"")
                .d("TIME_MAX", "942")
                .d("TIME_MIN", "796")
                .r("ACTIVITY_ID", 25056L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 25056L)
            .and().insertInto("USERS", 25062L)
                .d("AUTHORIZATION_LEVEL", "745")
                .d("NAME", "\"MOsPHuqaJVlBw3x\"")
            .and().insertInto("ACTIVITY", 25061L)
            .and().insertInto("ACTIVITY", 25060L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25059L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-434")
                .d("DATE_CREATED", "\"2033-04-02 10:07:37\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1927-12-25 04:02:53\"")
                .d("DESCRIPTION_INTRODUCTION", "\"_EM_115367_XYZ_\"")
                .d("DESCRIPTION_MAIN", "\"4UF\"")
                .d("DESCRIPTION_MATERIAL", "\"1qJoY2jL8N\"")
                .d("DESCRIPTION_NOTES", "\"jm\"")
                .d("DESCRIPTION_PREPARE", "\"lB7meEnM\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "true")
                .d("NAME", "\"_EM_117125_XYZ_\"")
                .d("PARTICIPANTS_MAX", "0")
                .d("PARTICIPANTS_MIN", "558")
                .d("SOURCE", "\"0bUlB\"")
                .d("TIME_MAX", "1048715")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 25061L)
                .r("AUTHOR_ID", 25054L)
                .r("PUBLISHING_ACTIVITY_ID", 25060L)
            .and().insertInto("USERS", 25066L)
                .d("AUTHORIZATION_LEVEL", "-2106234178")
                .d("NAME", "\"YSkFfD\"")
            .and().insertInto("ACTIVITY", 25065L)
            .and().insertInto("ACTIVITY", 25064L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25063L)
                .d("AGE_MAX", "-2147482838")
                .d("AGE_MIN", "-2147483039")
                .d("DATE_CREATED", "\"2035-10-24 21:37:04\"")
                .d("DATE_PUBLISHED", "\"2005-03-14 11:29:29\"")
                .d("DATE_UPDATED", "\"1928-10-11 14:40:10\"")
                .d("DESCRIPTION_INTRODUCTION", "\"_EM_117126_XYZ_\"")
                .d("DESCRIPTION_MAIN", "\"_EM_117127_XYZ_\"")
                .d("DESCRIPTION_MATERIAL", "\"Z4eVlNG\"")
                .d("DESCRIPTION_NOTES", "\"2O6y_gGXsbAyrYJL\"")
                .d("DESCRIPTION_PREPARE", "\"XZ59GS9kvRbhuC\"")
                .d("DESCRIPTION_SAFETY", "\"iaVZUGxfX_w\"")
                .d("FEATURED", "true")
                .d("NAME", "\"\"")
                .d("PARTICIPANTS_MAX", "316")
                .d("PARTICIPANTS_MIN", "588")
                .d("SOURCE", "\"APdBFidfhivA\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "524410")
                .r("ACTIVITY_ID", 25052L)
                .r("AUTHOR_ID", 25054L)
                .r("PUBLISHING_ACTIVITY_ID", 25064L)
            .and().insertInto("USERS", 25070L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_117128_XYZ_\"")
            .and().insertInto("ACTIVITY", 25069L)
            .and().insertInto("ACTIVITY", 25068L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25067L)
                .d("AGE_MAX", "-1118")
                .d("AGE_MIN", "-2147483277")
                .d("DATE_CREATED", "\"2029-07-18 11:19:43\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1901-12-19 12:08:52\"")
                .d("DESCRIPTION_INTRODUCTION", "\"PPPTwnpP\"")
                .d("DESCRIPTION_MAIN", "\"NdsSoW7Dy\"")
                .d("DESCRIPTION_MATERIAL", "\"dp\"")
                .d("DESCRIPTION_NOTES", "\"mFz9rFPW9zV\"")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "\"u62qcPIFnLTy\"")
                .d("PARTICIPANTS_MAX", "-470444271")
                .d("PARTICIPANTS_MIN", "736")
                .d("SOURCE", "\"rcPqx8\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "473")
                .r("ACTIVITY_ID", 25057L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 25053L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"Ga\", " + 
                    " \"media_file\": {}, " + 
                    " \"activities_count\": -261208 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/tags/65560")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_37_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_37_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 784, " + 
                    " \"uri\": \"_EM_5095_XYZ_\", " + 
                    " \"name\": \"_EM_5096_XYZ_\", " + 
                    " \"copy_right\": \"_EM_5097_XYZ_\", " + 
                    " \"author\": \"_EM_5098_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=_EM_5099_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_137_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_38_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_38_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"AliNqBLkfhxMaq_Y\", " + 
                    " \"media_file\": { " + 
                    " \"id\": -475206540, " + 
                    " \"uri\": \"XY\", " + 
                    " \"copy_right\": \"1b9CtiVInvLqH\", " + 
                    " \"author\": \"yWNHk9GKqyNtpsIw\" " + 
                    " }, " + 
                    " \"activities_count\": 594 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_39_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_39_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 2748L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 2747L)
                .d("GRP", "\"3yGPuYmBkkmtX4p\"")
                .d("NAME", "\"K9nf0NOtJCa\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 2750L)
                .d("URI", "\"btulHVmwYAAK\"")
            .and().insertInto("TAG", 2749L)
                .d("GRP", "\"kRfRu1uwKFbM8\"")
                .d("NAME", "\"GFm_yXyoaejR7S\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 2752L)
                .d("URI", "\"1eDwCXjzl\"")
            .and().insertInto("TAG", 2751L)
                .d("GRP", "\"5rDp7HscTM\"")
                .d("NAME", "\"RbePq6\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 2754L)
                .d("URI", "\"qfD2t309fp_OJ5n\"")
            .and().insertInto("TAG", 2753L)
                .d("GRP", "\"QqUJ\"")
                .d("NAME", "\"\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"media_file\": { " + 
                    " \"id\": 804, " + 
                    " \"uri\": \"JMPmLhZ0C_8Nbsl\", " + 
                    " \"name\": \"rhnQVyMRrpcvg\", " + 
                    " \"copy_right\": \"S89MvD2HKGV7AIX\", " + 
                    " \"author\": \"ORx8lmO\" " + 
                    " }, " + 
                    " \"activities_count\": -8869874633638082215 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/514")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_40_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_40_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 459L)
            .and().insertInto("ACTIVITY", 460L)
            .and().insertInto("ACTIVITY", 461L)
            .and().insertInto("ACTIVITY", 462L)
            .and().insertInto("ACTIVITY", 463L)
            .and().insertInto("MEDIA_FILE", 11664L)
                .d("URI", "\"j\"")
            .and().insertInto("TAG", 11663L)
                .d("GRP", "\"_EM_47986_XYZ_\"")
                .d("NAME", "\"apOV\"")
            .and().insertInto("USERS", 11662L)
                .d("AUTHORIZATION_LEVEL", "665")
                .d("NAME", "\"UUUUPWU9Z`UZf\"")
            .and().insertInto("ACTIVITY", 11661L)
            .and().insertInto("ACTIVITY", 11660L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11659L)
                .r("ACTIVITY_ID", 462L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11658L)
                .r("ACTIVITY_PROPERTIES_ID", 11659L)
                .r("TAG_ID", 11663L)
            .and().insertInto("MEDIA_FILE", 11671L)
                .d("URI", "\"d\"")
            .and().insertInto("TAG", 11670L)
                .d("GRP", "\"_EM_47987_XYZ_\"")
                .d("NAME", "\"X44RKTe8ZuzKt\"")
            .and().insertInto("USERS", 11669L)
                .d("AUTHORIZATION_LEVEL", "286")
                .d("NAME", "\"_EM_47988_XYZ_\"")
            .and().insertInto("ACTIVITY", 11668L)
            .and().insertInto("ACTIVITY", 11667L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11666L)
                .r("ACTIVITY_ID", 11660L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11665L)
                .r("ACTIVITY_PROPERTIES_ID", 11666L)
                .r("TAG_ID", 11663L)
            .and().insertInto("MEDIA_FILE", 11678L)
                .d("URI", "\"_EM_47989_XYZ_\"")
            .and().insertInto("TAG", 11677L)
                .d("GRP", "\"ljC4_ltomW\"")
                .d("NAME", "\"\"")
            .and().insertInto("USERS", 11676L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"rUP0\"")
            .and().insertInto("ACTIVITY", 11675L)
            .and().insertInto("ACTIVITY", 11674L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11673L)
                .r("ACTIVITY_ID", 462L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11672L)
                .r("ACTIVITY_PROPERTIES_ID", 11673L)
                .r("TAG_ID", 11663L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 761, " + 
                    " \"group\": \"vy6E1c015Jp9_1v7\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 7792568423328113598, " + 
                    " \"mime_type\": \"tY2XEbPNZ\", " + 
                    " \"uri\": \"baEO3Fxn8X4\", " + 
                    " \"name\": \"8W0ecyddoOM\", " + 
                    " \"copy_right\": \"_EM_47985_XYZ_\", " + 
                    " \"author\": \"FeDhrX3oC8zZC\" " + 
                    " }, " + 
                    " \"activities_count\": 371 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_61_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_41_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_41_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 44051L)
                .d("AUTHORIZATION_LEVEL", "224")
                .d("NAME", "\"g4HE9aHAv5AFNsC\"")
            .and().insertInto("ACTIVITY", 44050L)
            .and().insertInto("ACTIVITY", 44049L)
            .and().insertInto("ACTIVITY_RELATION", 44048L)
                .r("ACTIVITY_1_ID", 44050L)
                .r("ACTIVITY_2_ID", 44050L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 47691L)
                .d("AUTHORIZATION_LEVEL", "2")
                .d("NAME", "\"Z\"")
            .and().insertInto("ACTIVITY", 47690L)
            .and().insertInto("ACTIVITY_RATING", 47689L)
                .r("ACTIVITY_ID", 47690L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 47694L)
                .d("AUTHORIZATION_LEVEL", "720")
                .d("NAME", "\"_dYjBT0m3gRw7Iw\"")
            .and().insertInto("ACTIVITY", 47693L)
            .and().insertInto("ACTIVITY_RATING", 47692L)
                .r("ACTIVITY_ID", 47690L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/FavouritesResourceV1_58_lambda$put$3
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_42_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_42_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/2/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_120_deleteRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_43_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_43_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 4846L)
                .d("URI", "\"3pZQ\"")
            .and().insertInto("TAG", 4845L)
                .d("GRP", "\"z8HM\"")
                .d("NAME", "\"_94EP47IC\"")
            .and().insertInto("TAG_DERIVED", 4844L)
                .r("TAG_ID", 4845L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 4849L)
                .d("URI", "\"_EM_117890_XYZ_\"")
            .and().insertInto("TAG", 4848L)
                .d("GRP", "\"wKGl0gwvdEB\"")
                .d("NAME", "\"l9Oei\"")
            .and().insertInto("TAG_DERIVED", 4847L)
                .r("TAG_ID", 4848L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 4852L)
                .d("URI", "\"XS2FO\"")
            .and().insertInto("TAG", 4851L)
                .d("GRP", "\"58FY\"")
                .d("NAME", "\"iMO7phhRCx7tE\"")
            .and().insertInto("TAG_DERIVED", 4850L)
                .r("TAG_ID", 4851L)
                .d("ACTIVITIES_COUNT", "65")
            .and().insertInto("MEDIA_FILE", 4855L)
                .d("URI", "\"ULJLG03IB\"")
            .and().insertInto("TAG", 4854L)
                .d("GRP", "\"ejzi8FnJsCY\"")
                .d("NAME", "\"iKM\"")
            .and().insertInto("TAG_DERIVED", 4853L)
                .r("TAG_ID", 4854L)
                .d("ACTIVITIES_COUNT", "152")
            .and().insertInto("ACTIVITY", 21143L)
            .and().insertInto("ACTIVITY", 21144L)
            .and().insertInto("ACTIVITY", 21145L)
            .and().insertInto("ACTIVITY", 21146L)
            .and().insertInto("ACTIVITY", 21147L)
            .and().insertInto("MEDIA_FILE", 2913L)
                .d("URI", "\"4678820\"")
            .and().insertInto("TAG", 2912L)
                .d("GRP", "\"_EM_18222_XYZ_\"")
                .d("NAME", "\"hvtAJH1Laha\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/1/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_120_deleteRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_44_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_44_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 8661L)
            .and().insertInto("ACTIVITY", 8662L)
            .and().insertInto("ACTIVITY", 8663L)
            .and().insertInto("ACTIVITY", 8664L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/activities/3/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_112_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_45_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_45_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_24849_XYZ_\", " + 
                    " \"uri\": \"data:text/plain,X0VNXzExMTk2NV9YWVpf\", " + 
                    " \"name\": \"bJ14t0dbUCJ3KKpX\", " + 
                    " \"copy_right\": \"muG_ZMuBBKLC52\", " + 
                    " \"author\": \"4708511\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_46_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_46_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_24849_XYZ_\", " + 
                    " \"uri\": \"data:text/plain;base64,Sm1xNnlYS0F3RDNwN2Ry\", " + 
                    " \"name\": \"_EM_24851_XYZ_\", " + 
                    " \"author\": \"_EM_24852_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_47_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_47_with500() throws Exception {
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_23664_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_42576_XYZ_\", " + 
                    " \"uri\": \"\", " + 
                    " \"copy_right\": \"_EM_42578_XYZ_\", " + 
                    " \"author\": \"_EM_42579_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("_EM_42576_XYZ_"))
                .body("'uri'", containsString(""))
                .body("'copy_right'", containsString("_EM_42578_XYZ_"))
                .body("'author'", containsString("_EM_42579_XYZ_"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_23664_XYZ_")
                .get(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/128/file?featured=b6hfhVlUqol3Yh&favourites=&age_2=_EM_42581_XYZ_&age_1=_EM_42582_XYZ_&id=_EM_42583_XYZ_"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_268_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_48_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_48_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"EiG0SzUVct2Xj\", " + 
                    " \"uri\": \"hW\", " + 
                    " \"name\": \"c_\", " + 
                    " \"author\": \"b_0Pur3vW\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=_EM_23663_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("EiG0SzUVct2Xj"))
                .body("'uri'", containsString("hW"))
                .body("'name'", containsString("c_"))
                .body("'author'", containsString("b_0Pur3vW"));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?" + 
                    "attrs=&" + 
                    "categories=1TaA7RU&" + 
                    "random=hyQ0iU&" + 
                    "featured=KlbnzAy8vZLEvTtr&" + 
                    "ratings_count_min=EXFCIJ49y&" + 
                    "ages=DUOn0KGAIIiRhD")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'mime_type'", containsString("EiG0SzUVct2Xj"))
                .body("[0].'uri'", containsString("hW"))
                .body("[0].'name'", containsString("c_"))
                .body("[0].'capture_date'", nullValue())
                .body("[0].'copy_right'", nullValue())
                .body("[0].'author'", containsString("b_0Pur3vW"));
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_23664_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"EiG0SzUVct2Xj\", " + 
                    " \"uri\": \"hW\", " + 
                    " \"copy_right\": \"KbJ\", " + 
                    " \"author\": \"b_0Pur3vW\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    /**
    * [test_49_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_49_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 2748L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 2747L)
                .d("GRP", "\"3yGPuYmBkkmtX4p\"")
                .d("NAME", "\"K9nf0NOtJCa\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 2750L)
                .d("URI", "\"btulHVmwYAAK\"")
            .and().insertInto("TAG", 2749L)
                .d("GRP", "\"kRfRu1uwKFbM8\"")
                .d("NAME", "\"GFm_yXyoaejR7S\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 2752L)
                .d("URI", "\"1eDwCXjzl\"")
            .and().insertInto("TAG", 2751L)
                .d("GRP", "\"5rDp7HscTM\"")
                .d("NAME", "\"RbePq6\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 2754L)
                .d("URI", "\"qfD2t309fp_OJ5n\"")
            .and().insertInto("TAG", 2753L)
                .d("GRP", "\"QqUJ\"")
                .d("NAME", "\"\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_categories = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"QVJQ1jUd\", " + 
                    " \"name\": \"Jlog\", " + 
                    " \"activities_count\": 560 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("QVJQ1jUd"))
                .body("'name'", containsString("Jlog"))
                .body("'activities_count'", numberMatches(560.0));
        location_categories = "/api/v1/categories" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"media_file\": { " + 
                    " \"id\": 804, " + 
                    " \"uri\": \"JMPmLhZ0C_8Nbsl\", " + 
                    " \"name\": \"rhnQVyMRrpcvg\", " + 
                    " \"copy_right\": \"S89MvD2HKGV7AIX\", " + 
                    " \"author\": \"ORx8lmO\" " + 
                    " }, " + 
                    " \"activities_count\": -8869874633638082215 " + 
                    " } ")
                .put(resolveLocation(location_categories, baseUrlOfSut + "/api/v1/categories/514"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_83_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    /**
    * [test_50_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_50_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 25043L)
                .d("URI", "\"_EM_115363_XYZ_\"")
            .and().insertInto("TAG", 25042L)
                .d("GRP", "\"T1dQVGINM0d\"")
                .d("NAME", "\"_EM_115364_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 25041L)
                .r("TAG_ID", 25042L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 25046L)
                .d("URI", "\"Mc6hXF3C0Xv\"")
            .and().insertInto("TAG", 25045L)
                .d("GRP", "\"gHe7z\"")
                .d("NAME", "\"_EM_115365_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 25044L)
                .r("TAG_ID", 25045L)
                .d("ACTIVITIES_COUNT", "-7414618760831237002")
            .and().insertInto("USERS", 25054L)
                .d("AUTHORIZATION_LEVEL", "-1836")
                .d("NAME", "\"YeZY\"")
            .and().insertInto("ACTIVITY", 25053L)
            .and().insertInto("ACTIVITY", 25052L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25051L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-693")
                .d("DATE_CREATED", "\"2024-02-27 01:01:49\"")
                .d("DATE_PUBLISHED", "\"1933-07-11 09:24:24\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"ji\"")
                .d("DESCRIPTION_MAIN", "\"UOdglAK\"")
                .d("DESCRIPTION_MATERIAL", "\"JUyLNcDw\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"L\"")
                .d("DESCRIPTION_SAFETY", "\"7muoZ00mY^\"")
                .d("FEATURED", "true")
                .d("NAME", "\"43bH\"")
                .d("PARTICIPANTS_MAX", "55")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"\"")
                .d("TIME_MAX", "738")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 25053L)
                .d("AUTHOR_ID", "1")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 25058L)
                .d("AUTHORIZATION_LEVEL", "65585")
                .d("NAME", "\"TxGkdRUN1JLTw\"")
            .and().insertInto("ACTIVITY", 25057L)
            .and().insertInto("ACTIVITY", 25056L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25055L)
                .d("AGE_MAX", "-2147483190")
                .d("AGE_MIN", "-6")
                .d("DATE_CREATED", "\"1946-03-22 14:17:52\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1981-08-20 15:53:04\"")
                .d("DESCRIPTION_INTRODUCTION", "\"_EM_115366_XYZ_\"")
                .d("DESCRIPTION_MAIN", "\"ol0SUOdUUf63h\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"GK75SGm7hIG9sT\"")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "\"cwOf8g5\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"Y0x\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"\"")
                .d("TIME_MAX", "941")
                .d("TIME_MIN", "796")
                .r("ACTIVITY_ID", 25057L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 25056L)
            .and().insertInto("USERS", 25062L)
                .d("AUTHORIZATION_LEVEL", "745")
                .d("NAME", "\"MOsPHuqaJVlBw3x\"")
            .and().insertInto("ACTIVITY", 25061L)
            .and().insertInto("ACTIVITY", 25060L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25059L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-434")
                .d("DATE_CREATED", "\"2033-04-02 10:07:37\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1927-12-25 04:02:53\"")
                .d("DESCRIPTION_INTRODUCTION", "\"_EM_115367_XYZ_\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"1qJoY2jL8N\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"lB7meEnM\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "false")
                .d("NAME", "\"kosYvPTT\"")
                .d("PARTICIPANTS_MAX", "1305377885")
                .d("PARTICIPANTS_MIN", "558")
                .d("SOURCE", "\"0bUlB\"")
                .d("TIME_MAX", "1048715")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 25061L)
                .r("AUTHOR_ID", 25054L)
                .r("PUBLISHING_ACTIVITY_ID", 25053L)
            .and().insertInto("USERS", 25066L)
                .d("AUTHORIZATION_LEVEL", "-2106234178")
                .d("NAME", "\"YSkGfD\"")
            .and().insertInto("ACTIVITY", 25065L)
            .and().insertInto("ACTIVITY", 25064L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25063L)
                .d("AGE_MAX", "-2147482838")
                .d("AGE_MIN", "-2147483039")
                .d("DATE_CREATED", "\"2035-10-24 17:37:04\"")
                .d("DATE_PUBLISHED", "\"2005-03-14 02:50:11\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"2Sx38TcX5jR\"")
                .d("DESCRIPTION_MAIN", "\"Efw_VJkD\"")
                .d("DESCRIPTION_MATERIAL", "\"Z4eVlNG\"")
                .d("DESCRIPTION_NOTES", "\"2O6y_gGXsbAyrYJ\"")
                .d("DESCRIPTION_PREPARE", "\"XZ59GS9kvRbhuC\"")
                .d("DESCRIPTION_SAFETY", "\"iaVZUGxfX_w\"")
                .d("FEATURED", "false")
                .d("NAME", "\"\"")
                .d("PARTICIPANTS_MAX", "316")
                .d("PARTICIPANTS_MIN", "592")
                .d("SOURCE", "\"APdBFidfhivA\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "122")
                .r("ACTIVITY_ID", 25052L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 25064L)
            .and().insertInto("USERS", 25070L)
                .d("AUTHORIZATION_LEVEL", "35")
                .d("NAME", "\"5\"")
            .and().insertInto("ACTIVITY", 25069L)
            .and().insertInto("ACTIVITY", 25068L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25067L)
                .d("AGE_MAX", "-1118")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"2029-07-18 11:19:43\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1901-12-19 12:08:52\"")
                .d("DESCRIPTION_INTRODUCTION", "\"PPPTwnpP\"")
                .d("DESCRIPTION_MAIN", "\"NdsSoW7Dy\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"_EM_115368_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "\"u62qcPIFnLTy\"")
                .d("PARTICIPANTS_MAX", "-470427887")
                .d("PARTICIPANTS_MIN", "736")
                .d("SOURCE", "\"rcPqx8\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "489")
                .r("ACTIVITY_ID", 25057L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 25052L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_tags = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_created\": \"2031-06-25T00:16:16\", " + 
                    " \"date_updated\": \"1900-00-08T14:12:13\", " + 
                    " \"description_prepare\": \"b1VhsLaC6XrH\", " + 
                    " \"age_min\": -284, " + 
                    " \"age_max\": -942915189, " + 
                    " \"participants_max\": 789, " + 
                    " \"time_min\": 582, " + 
                    " \"time_max\": 213, " + 
                    " \"source\": \"nyHWYg3ROb4ApQT\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 5819331822379985758, " + 
                    " \"name\": \"hLrk0mRAPq\", " + 
                    " \"media_file\": { " + 
                    " \"id\": -8371284907084297280 " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 593, " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"vVzqYkLeH\", " + 
                    " \"name\": \"xWY3skHyxc74eI\", " + 
                    " \"copy_right\": \"weV8HxYA8YAk\", " + 
                    " \"author\": \"kjWvI9T4WvJs1jdU\" " + 
                    " }, " + 
                    " \"activities_count\": 83 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"uri\": \"\", " + 
                    " \"name\": \"qw\", " + 
                    " \"capture_date\": \"2089-01-23T24:32:35\", " + 
                    " \"copy_right\": \"maZwUSCx0WpWrO9\", " + 
                    " \"author\": \"8h5K9rQXhzSOl\" " + 
                    " }, " + 
                    " { " + 
                    " \"uri\": \"7Zl3oI\", " + 
                    " \"copy_right\": \"Zpiy83S\", " + 
                    " \"author\": \"4HBNPl\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 1497214020, " + 
                    " \"name\": \"145NdNZd9zvDi6\", " + 
                    " \"email_address\": \"jc0m5ldmXMN\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 32, " + 
                    " \"ratings_average\": 0.6096422725646881, " + 
                    " \"favourites_count\": 754, " + 
                    " \"ratings_sum\": 780, " + 
                    " \"ratings_count\": 975, " + 
                    " \"related\": [ " + 
                    " 707, " + 
                    " 201, " + 
                    " 667 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/activities?" + 
                    "ratings_count_min=sZ&" + 
                    "random=yZK472O_7qd6ig&" + 
                    "featured=1Z0ldq&" + 
                    "favourites=hIztMsjmlPjh&" + 
                    "ratings_average_min=qweU&" + 
                    "name=WN&" + 
                    "text=zTU&" + 
                    "participants=P8IqdniwxQMtVM&" + 
                    "my_favourites=8ltSH8&" + 
                    "time_1=_EM_115362_XYZ_&" + 
                    "verify_unused=o7VYML1TltWIo6")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"k79BkrQ6Sv0\", " + 
                    " \"name\": \"7xNlwJY27F8J\", " + 
                    " \"activities_count\": -6633115226964605832 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("k79BkrQ6Sv0"))
                .body("'name'", containsString("7xNlwJY27F8J"))
                .body("'activities_count'", numberMatches(-6.633115226964606E18));
        location_tags = "/api/v2/tags" + "/" + res_2.extract().body().path("id").toString();
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"\", " + 
                    " \"media_file\": {}, " + 
                    " \"activities_count\": 936 " + 
                    " } ")
                .put(resolveLocation(location_tags, baseUrlOfSut + "/api/v2/tags/24"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_89_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    /**
    * [test_51_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_51_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 4282L)
                .d("KEY", "\"_EM_67332_XYZ_\"")
                .d("VALID_FROM", "\"1963-05-28 17:14:21\"")
                .d("VALID_TO", "\"1991-01-21 09:02:24\"")
                .d("VALUE", "\"QKYT\"")
            .and().insertInto("SYSTEM_MESSAGE", 4283L)
                .d("KEY", "\"_EM_61726_XYZ_\"")
                .d("VALID_FROM", "\"2061-05-09 11:41:29\"")
                .d("VALID_TO", "\"2046-02-26 14:11:17\"")
                .d("VALUE", "\"_EM_67333_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 4284L)
                .d("KEY", "\"UZO9vY7qZUWA5PK\"")
                .d("VALID_FROM", "\"1900-09-02 14:03:04\"")
                .d("VALID_TO", "\"2018-06-18 14:54:39\"")
                .d("VALUE", "\"A.GQTUQ17J9Cox\"")
            .and().insertInto("SYSTEM_MESSAGE", 4285L)
                .d("KEY", "\"xHRH4x6PAKQK5PkI\"")
                .d("VALID_FROM", "\"1924-09-04 08:18:13\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"\"")
            .and().insertInto("SYSTEM_MESSAGE", 4286L)
                .d("KEY", "\"_EM_61727_XYZ_\"")
                .d("VALID_FROM", "\"2063-05-10 05:16:16\"")
                .d("VALID_TO", "\"1951-12-04 01:51:29\"")
                .d("VALUE", "\"wCwq3Y\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_categories = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"IB4yuxyT7fGMNu\", " + 
                    " \"name\": \"WL7FRHO5UzZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("IB4yuxyT7fGMNu"))
                .body("'name'", containsString("WL7FRHO5UzZ"))
                .body("'activities_count'", numberMatches(0.0));
        location_categories = "/api/v1/categories" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"c\", " + 
                    " \"name\": \"8bp2xb\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"_EM_67330_XYZ_\", " + 
                    " \"uri\": \"AoaZ5y4F\", " + 
                    " \"name\": \"FViso40Ulf\", " + 
                    " \"copy_right\": \"_EM_67331_XYZ_\", " + 
                    " \"author\": \"MLOxUOKMBIZf\" " + 
                    " } " + 
                    " } ")
                .put(resolveLocation(location_categories, baseUrlOfSut + "/api/v1/categories/3458764513786986496"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("c"))
                .body("'name'", containsString("8bp2xb"))
                .body("'activities_count'", numberMatches(0.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/3458764513786986496")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_41_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_published\": \"1909-04-28T04:30:27\", " + 
                    " \"date_created\": \"2074-10-31T25:04:19\", " + 
                    " \"date_updated\": \"2010-13-00T13:21:13\", " + 
                    " \"description_prepare\": \"Jfmd0v_8\", " + 
                    " \"age_min\": -2147482941, " + 
                    " \"age_max\": -2147482752, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"Eg6obH\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 49, " + 
                    " \"group\": \"Ftp\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 640, " + 
                    " \"name\": \"TsVt\", " + 
                    " \"activities_count\": 67 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"guDgvEtQyG\", " + 
                    " \"name\": \"jHK\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 367 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    /**
    * [test_52_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_52_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 7260L)
                .d("AUTHOR", "\"_EM_36190_XYZ_\"")
                .d("CAPTURE_DATE", "\"2045-08-02 09:29:22\"")
                .d("COPY_RIGHT", "\"utZP2pAN\"")
                .d("MIME_TYPE", "\"_EM_66293_XYZ_\"")
                .d("NAME", "\"YYmYyrODG1HNhl\"")
                .d("URI", "\"_EM_66294_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 107, " + 
                    " \"mime_type\": \"_EM_36189_XYZ_\", " + 
                    " \"uri\": \"_EM_3668_XYZ_\", " + 
                    " \"capture_date\": \"2017-02-06T11:33:05\", " + 
                    " \"copy_right\": \"8f\", " + 
                    " \"author\": \"_EM_3670_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/-1941")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/roles")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"\", " + 
                    " \"uri\": \"nQOOSAGXTqT_PU8\", " + 
                    " \"name\": \"RuD8toBsG1UYVPvh\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString(""))
                .body("'uri'", containsString("nQOOSAGXTqT_PU8"))
                .body("'name'", containsString("RuD8toBsG1UYVPvh"));
        location_media_files = "/api/v1/media_files" + "/" + res_2.extract().body().path("id").toString();
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 98, " + 
                    " \"mime_type\": \"\" " + 
                    " } ")
                .put(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/98"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/MediaFile_134_setUri
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    /**
    * [test_53_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_53_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 879L)
                .d("AUTHORIZATION_LEVEL", "-130637")
                .d("NAME", "\"DJNGygja1Png\"")
            .and().insertInto("ACTIVITY", 878L)
            .and().insertInto("ACTIVITY", 877L)
            .and().insertInto("ACTIVITY_RELATION", 876L)
                .r("ACTIVITY_1_ID", 877L)
                .r("ACTIVITY_2_ID", 877L)
                .r("OWNER_ID", 879L)
            .and().insertInto("USERS", 883L)
                .d("AUTHORIZATION_LEVEL", "306")
                .d("NAME", "\"_EM_19212_XYZ_\"")
            .and().insertInto("ACTIVITY", 882L)
            .and().insertInto("ACTIVITY", 881L)
            .and().insertInto("ACTIVITY_RELATION", 880L)
                .r("ACTIVITY_1_ID", 877L)
                .r("ACTIVITY_2_ID", 882L)
                .r("OWNER_ID", 883L)
            .and().insertInto("USERS", 887L)
                .d("AUTHORIZATION_LEVEL", "67109583")
                .d("NAME", "\"46\"")
            .and().insertInto("ACTIVITY", 886L)
            .and().insertInto("ACTIVITY", 885L)
            .and().insertInto("ACTIVITY_RELATION", 884L)
                .r("ACTIVITY_1_ID", 881L)
                .r("ACTIVITY_2_ID", 881L)
                .r("OWNER_ID", 879L)
            .and().insertInto("USERS", 891L)
                .d("AUTHORIZATION_LEVEL", "391")
                .d("NAME", "\"_EM_14006_XYZ_\"")
            .and().insertInto("ACTIVITY", 890L)
            .and().insertInto("ACTIVITY", 889L)
            .and().insertInto("ACTIVITY_RELATION", 888L)
                .r("ACTIVITY_1_ID", 885L)
                .r("ACTIVITY_2_ID", 889L)
                .r("OWNER_ID", 883L)
            .and().insertInto("USERS", 895L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"SYSTEM_SEQUENCE_FFA08BB4_296B_4BB1_B5D1_DCF4360CBDAF\"")
            .and().insertInto("ACTIVITY", 894L)
            .and().insertInto("ACTIVITY", 893L)
            .and().insertInto("ACTIVITY_RELATION", 892L)
                .r("ACTIVITY_1_ID", 893L)
                .r("ACTIVITY_2_ID", 886L)
                .r("OWNER_ID", 879L)
            .and().insertInto("USERS", 1536L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"C7k\"")
            .and().insertInto("ACTIVITY", 1535L)
            .and().insertInto("ACTIVITY", 1534L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1533L)
                .d("AGE_MAX", "-616")
                .d("AGE_MIN", "-2147483648")
                .d("DATE_CREATED", "\"1955-03-31 10:01:38\"")
                .d("DATE_PUBLISHED", "\"2047-09-09 04:17:42\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"4666119\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"_EM_16051_XYZ_\"")
                .d("DESCRIPTION_NOTES", "\"fBBDH\"")
                .d("DESCRIPTION_PREPARE", "\"_EM_16052_XYZ_\"")
                .d("DESCRIPTION_SAFETY", "\"DQ130\"")
                .d("FEATURED", "false")
                .d("NAME", "\"_EM_19213_XYZ_\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "524223")
                .d("SOURCE", "\"IXl\"")
                .d("TIME_MAX", "65536")
                .d("TIME_MIN", "2908")
                .r("ACTIVITY_ID", 1534L)
                .d("AUTHOR_ID", "1")
                .r("PUBLISHING_ACTIVITY_ID", 886L)
            .and().insertInto("USERS", 1540L)
                .d("AUTHORIZATION_LEVEL", "-1487")
                .d("NAME", "\"_EM_19214_XYZ_\"")
            .and().insertInto("ACTIVITY", 1539L)
            .and().insertInto("ACTIVITY", 1538L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1537L)
                .d("AGE_MAX", "-2112879759")
                .d("AGE_MIN", "-2147483648")
                .d("DATE_CREATED", "\"2000-07-21 11:02:29\"")
                .d("DATE_PUBLISHED", "\"2000-06-24 11:29:29\"")
                .d("DATE_UPDATED", "\"1960-01-16 11:29:40\"")
                .d("DESCRIPTION_INTRODUCTION", "\"_EM_19215_XYZ_\"")
                .d("DESCRIPTION_MAIN", "\"_EM_19216_XYZ_\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"PKtdMTj\"")
                .d("DESCRIPTION_PREPARE", "\"_EM_14009_XYZ_T\"")
                .d("DESCRIPTION_SAFETY", "\"j\"")
                .d("FEATURED", "true")
                .d("NAME", "\"W_0l3\"")
                .d("PARTICIPANTS_MAX", "640")
                .d("PARTICIPANTS_MIN", "-16252580")
                .d("SOURCE", "\"_EM_16053_XYZ_\"")
                .d("TIME_MAX", "528626")
                .d("TIME_MIN", "555")
                .r("ACTIVITY_ID", 893L)
                .r("AUTHOR_ID", 883L)
                .r("PUBLISHING_ACTIVITY_ID", 1539L)
            .and().insertInto("USERS", 1544L)
                .d("AUTHORIZATION_LEVEL", "-163593")
                .d("NAME", "\"em7Nxc9Uv\"")
            .and().insertInto("ACTIVITY", 1543L)
            .and().insertInto("ACTIVITY", 1542L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1541L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-138")
                .d("DATE_CREATED", "\"1943-10-05 09:25:38\"")
                .d("DATE_PUBLISHED", "\"2000-06-24 02:00:45\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"qKvSv\"")
                .d("DESCRIPTION_MAIN", "\"Y97qrfh\"")
                .d("DESCRIPTION_MATERIAL", "\"_EM_19217_XYZ_\"")
                .d("DESCRIPTION_NOTES", "\"_EM_19218_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "\"twIzi5IG5\"")
                .d("FEATURED", "false")
                .d("NAME", "\"_EM_14012_XYZ_\"")
                .d("PARTICIPANTS_MAX", "0")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"WnpdEBE\"")
                .d("TIME_MAX", "0")
                .d("TIME_MIN", "482")
                .r("ACTIVITY_ID", 893L)
                .r("AUTHOR_ID", 895L)
                .r("PUBLISHING_ACTIVITY_ID", 882L)
            .and().insertInto("USERS", 1548L)
                .d("AUTHORIZATION_LEVEL", "195")
                .d("NAME", "\"4662260\"")
            .and().insertInto("ACTIVITY", 1547L)
            .and().insertInto("ACTIVITY", 1546L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1545L)
                .d("AGE_MAX", "-1073741774")
                .d("AGE_MIN", "-2013265817")
                .d("DATE_CREATED", "\"1993-02-16 10:29:29\"")
                .d("DATE_PUBLISHED", "\"1904-05-08 13:19:50\"")
                .d("DATE_UPDATED", "\"1914-07-06 14:14:20\"")
                .d("DESCRIPTION_INTRODUCTION", "\"=t2_1\"")
                .d("DESCRIPTION_MAIN", "\"9oQ_Iv8ti4\"")
                .d("DESCRIPTION_MATERIAL", "\"4662193\"")
                .d("DESCRIPTION_NOTES", "\"_EM_19219_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "\"_EM_19220_XYZ_\"")
                .d("DESCRIPTION_SAFETY", "\"_EM_14016_XYZ_\"")
                .d("FEATURED", "false")
                .d("NAME", "\"_EM_14017_XYZ_\"")
                .d("PARTICIPANTS_MAX", "16777216")
                .d("PARTICIPANTS_MIN", "0")
                .d("SOURCE", "\"_EM_16055_XYZ_\"")
                .d("TIME_MAX", "182")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 882L)
                .r("AUTHOR_ID", 1540L)
                .r("PUBLISHING_ACTIVITY_ID", 894L)
            .and().insertInto("USERS", 1552L)
                .d("AUTHORIZATION_LEVEL", "-64784")
                .d("NAME", "\"_EM_16056_XYZ_\"")
            .and().insertInto("ACTIVITY", 1551L)
            .and().insertInto("ACTIVITY", 1550L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1549L)
                .d("AGE_MAX", "-1342177230")
                .d("AGE_MIN", "-2147483480")
                .d("DATE_CREATED", "\"2100-04-13 00:59:59\"")
                .d("DATE_PUBLISHED", "\"2007-11-11 14:12:29\"")
                .d("DATE_UPDATED", "\"2059-07-10 11:46:54\"")
                .d("DESCRIPTION_INTRODUCTION", "\"7yt\"")
                .d("DESCRIPTION_MAIN", "\"SfT7Pg\"")
                .d("DESCRIPTION_MATERIAL", "\"mFSaVGKjzyCVPw\"")
                .d("DESCRIPTION_NOTES", "\"DinT\"")
                .d("DESCRIPTION_PREPARE", "\"_EM_14020_XYZ_F\"")
                .d("DESCRIPTION_SAFETY", "\"_EM_16058_XYZ_\"")
                .d("FEATURED", "true")
                .d("NAME", "\"Y9b5i3lczpkx9f7\"")
                .d("PARTICIPANTS_MAX", "728")
                .d("PARTICIPANTS_MIN", "0")
                .d("SOURCE", "\"_EM_19221_XYZ_\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "4926")
                .r("ACTIVITY_ID", 893L)
                .r("AUTHOR_ID", 887L)
                .r("PUBLISHING_ACTIVITY_ID", 1543L)
            .and().insertInto("USERS", 1555L)
                .d("AUTHORIZATION_LEVEL", "894")
                .d("NAME", "\"_EM_19222_XYZ_\"")
            .and().insertInto("ACTIVITY", 1554L)
            .and().insertInto("ACTIVITY_RATING", 1553L)
                .r("ACTIVITY_ID", 1535L)
                .r("USER_ID", 895L)
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("MEDIA_FILE", 2387L)
                .d("URI", "\"_EM_19223_XYZ_\"")
            .and().insertInto("USERS", 2386L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_16061_XYZ_\"")
            .and().insertInto("ACTIVITY", 2385L)
            .and().insertInto("ACTIVITY", 2384L)
            .and().insertInto("ACTIVITY_PROPERTIES", 2383L)
                .r("ACTIVITY_ID", 893L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 2382L)
                .r("ACTIVITY_PROPERTIES_ID", 1545L)
                .r("MEDIA_FILE_ID", 2387L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 2394L)
                .d("URI", "\"_EM_19224_XYZ_\"")
            .and().insertInto("TAG", 2393L)
                .d("GRP", "\"r\"")
                .d("NAME", "\"1D3x23aNX6A\"")
            .and().insertInto("USERS", 2392L)
                .d("AUTHORIZATION_LEVEL", "33105")
                .d("NAME", "\"_EM_19225_XYZ_\"")
            .and().insertInto("ACTIVITY", 2391L)
            .and().insertInto("ACTIVITY", 2390L)
            .and().insertInto("ACTIVITY_PROPERTIES", 2389L)
                .r("ACTIVITY_ID", 894L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 2388L)
                .r("ACTIVITY_PROPERTIES_ID", 1533L)
                .r("TAG_ID", 2393L)
            .and().insertInto("MEDIA_FILE", 2401L)
                .d("URI", "\"_EM_16062_XYZ_\"")
            .and().insertInto("TAG", 2400L)
                .d("GRP", "\"L\"")
                .d("NAME", "\"ITcVwvuRP3tDiw\"")
            .and().insertInto("USERS", 2399L)
                .d("AUTHORIZATION_LEVEL", "249")
                .d("NAME", "\"_EM_19226_XYZ_\"")
            .and().insertInto("ACTIVITY", 2398L)
            .and().insertInto("ACTIVITY", 2397L)
            .and().insertInto("ACTIVITY_PROPERTIES", 2396L)
                .r("ACTIVITY_ID", 894L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 2395L)
                .r("ACTIVITY_PROPERTIES_ID", 1545L)
                .r("TAG_ID", 2400L)
            .and().insertInto("MEDIA_FILE", 2408L)
                .d("URI", "\"_EM_19227_XYZ_\"")
            .and().insertInto("TAG", 2407L)
                .d("GRP", "\"4670341\"")
                .d("NAME", "\"g18NiT2dy\"")
            .and().insertInto("USERS", 2406L)
                .d("AUTHORIZATION_LEVEL", "401")
                .d("NAME", "\"_EM_16064_XYZ_\"")
            .and().insertInto("ACTIVITY", 2405L)
            .and().insertInto("ACTIVITY", 2404L)
            .and().insertInto("ACTIVITY_PROPERTIES", 2403L)
                .r("ACTIVITY_ID", 1551L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 2402L)
                .r("ACTIVITY_PROPERTIES_ID", 1537L)
                .r("TAG_ID", 2400L)
            .and().insertInto("MEDIA_FILE", 2415L)
                .d("URI", "\"O\"")
            .and().insertInto("TAG", 2414L)
                .d("GRP", "\"_sjcQ0OxP8L\"")
                .d("NAME", "\"_EM_16065_XYZ_\"")
            .and().insertInto("USERS", 2413L)
                .d("AUTHORIZATION_LEVEL", "-1047988")
                .d("NAME", "\"_EM_16066_XYZ_\"")
            .and().insertInto("ACTIVITY", 2412L)
            .and().insertInto("ACTIVITY", 2411L)
            .and().insertInto("ACTIVITY_PROPERTIES", 2410L)
                .r("ACTIVITY_ID", 894L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 2409L)
                .r("ACTIVITY_PROPERTIES_ID", 2410L)
                .r("TAG_ID", 2393L)
            .and().insertInto("MEDIA_FILE", 2422L)
                .d("URI", "\"4673098\"")
            .and().insertInto("TAG", 2421L)
                .d("GRP", "\"_EM_16068_XYZ_\"")
                .d("NAME", "\"_EM_16069_XYZ_\"")
            .and().insertInto("USERS", 2420L)
                .d("AUTHORIZATION_LEVEL", "16778092")
                .d("NAME", "\"_EM_16070_XYZ_\"")
            .and().insertInto("ACTIVITY", 2419L)
            .and().insertInto("ACTIVITY", 2418L)
            .and().insertInto("ACTIVITY_PROPERTIES", 2417L)
                .r("ACTIVITY_ID", 1547L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 2416L)
                .r("ACTIVITY_PROPERTIES_ID", 2417L)
                .r("TAG_ID", 2421L)
            .and().insertInto("ACTIVITY", 2424L)
            .and().insertInto("ACTIVITY_DERIVED", 2423L)
                .r("ACTIVITY_ID", 2418L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "0.334448653769858")
                .d("RATINGS_COUNT", "667")
                .d("RATINGS_SUM", "1048787")
            .and().insertInto("ACTIVITY", 2426L)
            .and().insertInto("ACTIVITY_DERIVED", 2425L)
                .r("ACTIVITY_ID", 2404L)
                .d("FAVOURITES_COUNT", "502")
                .d("RATINGS_AVG", "2.422436730349308")
                .d("RATINGS_COUNT", "716")
                .d("RATINGS_SUM", "0")
            .and().insertInto("ACTIVITY", 2428L)
            .and().insertInto("ACTIVITY_DERIVED", 2427L)
                .r("ACTIVITY_ID", 885L)
                .d("FAVOURITES_COUNT", "307")
                .d("RATINGS_AVG", "0.8232216645716351")
                .d("RATINGS_COUNT", "460")
                .d("RATINGS_SUM", "2122")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/9")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_104_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_54_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_54_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"\", " + 
                    " \"description_material\": \"bzD0e5_n\", " + 
                    " \"description_prepare\": \"\", " + 
                    " \"description_safety\": \"hr\", " + 
                    " \"description_notes\": \"HDyWl69grw8Gv\", " + 
                    " \"age_max\": -796, " + 
                    " \"time_min\": -1846322723, " + 
                    " \"time_max\": 123, " + 
                    " \"source\": \"rUQXLKr17bsfi\", " + 
                    " \"author\": { " + 
                    " \"id\": 736, " + 
                    " \"name\": \"jlIrKC\", " + 
                    " \"email_address\": \"Jl9DaC3UFK9S\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_55_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_55_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 703L)
            .and().insertInto("ACTIVITY", 704L)
            .and().insertInto("ACTIVITY", 705L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"dMGzBT5\", " + 
                    " \"description_material\": \"deRBpBH\", " + 
                    " \"description_prepare\": \"t9a\", " + 
                    " \"description_notes\": \"xgONx0b\", " + 
                    " \"featured\": false, " + 
                    " \"source\": \"9ID\", " + 
                    " \"author\": {}, " + 
                    " \"activity\": { " + 
                    " \"ratings_average\": 0.7491512129098238, " + 
                    " \"ratings_count\": 981 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_114_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_56_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_56_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 459L)
            .and().insertInto("ACTIVITY", 460L)
            .and().insertInto("ACTIVITY", 461L)
            .and().insertInto("ACTIVITY", 462L)
            .and().insertInto("ACTIVITY", 463L)
            .and().insertInto("MEDIA_FILE", 8999L)
                .d("URI", "\"t2dwx88adnz2fBfnm\"")
            .and().insertInto("TAG", 8998L)
                .d("GRP", "\"lVZSX\"")
                .d("NAME", "\"pPyin1Xc\"")
                .r("MEDIA_FILE_ID", 8999L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 511, " + 
                    " \"description_introduction\": \"MWGI5WD3\", " + 
                    " \"description_safety\": \"_EM_57227_XYZ_\", " + 
                    " \"description_notes\": \"_EM_57227_XYZ_\", " + 
                    " \"age_min\": -2147483648, " + 
                    " \"age_max\": -2147483648, " + 
                    " \"participants_min\": 907, " + 
                    " \"source\": \"xpxndk2hpx4Dm\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 424, " + 
                    " \"group\": \"ni_Cp_NQZDF5Cz\", " + 
                    " \"name\": \"XzQj\", " + 
                    " \"activities_count\": 47 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"9gZWKAuNPLI\", " + 
                    " \"email_address\": \"wJZKSotWGknT2\", " + 
                    " \"authorization_level\": 33555013, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"type\": \"API\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 386, " + 
                    " \"properties_revisions\": [] " + 
                    " } " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v1/activities/511?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_57_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_57_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 459L)
            .and().insertInto("ACTIVITY", 460L)
            .and().insertInto("ACTIVITY", 461L)
            .and().insertInto("ACTIVITY", 462L)
            .and().insertInto("ACTIVITY", 463L)
            .and().insertInto("MEDIA_FILE", 9154L)
                .d("URI", "\"Xek56pbG0jNECgx\"")
            .and().insertInto("TAG", 9153L)
                .d("GRP", "\"\"")
                .d("NAME", "\"lxYH0Xkxs9xwG8\"")
                .r("MEDIA_FILE_ID", 9154L)
            .and().insertInto("MEDIA_FILE", 9156L)
                .d("URI", "\"RzxCme\"")
            .and().insertInto("TAG", 9155L)
                .d("GRP", "\"VQ2Rl\"")
                .d("NAME", "\"QCkTp9eSHzmUC\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 9158L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 9157L)
                .d("GRP", "\"Z7XHzMLy6w\"")
                .d("NAME", "\"gzJSRXfZYkGb_2T\"")
                .r("MEDIA_FILE_ID", 9156L)
            .and().insertInto("MEDIA_FILE", 9160L)
                .d("URI", "\"myMqJccBunHfUVMo\"")
            .and().insertInto("TAG", 9159L)
                .d("GRP", "\"A8\"")
                .d("NAME", "\"98XOTy\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 9162L)
                .d("URI", "\"jLKSrgMQ5U\"")
            .and().insertInto("TAG", 9161L)
                .d("GRP", "\"0V_Ok5\"")
                .d("NAME", "\"Ka0eMP\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 639, " + 
                    " \"name\": \"5q\", " + 
                    " \"description_introduction\": \"MWGE5WD\", " + 
                    " \"description_safety\": \"\", " + 
                    " \"description_notes\": \"\", " + 
                    " \"age_min\": -2147474995, " + 
                    " \"age_max\": -2147474995, " + 
                    " \"participants_min\": 907, " + 
                    " \"time_min\": 593, " + 
                    " \"source\": \"xpxndk2hpx4Dm\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 424, " + 
                    " \"group\": \"ni_Cp_NQZDF5Cz\", " + 
                    " \"name\": \"XzQj\", " + 
                    " \"activities_count\": 47 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"wJZKSotWGknT2\", " + 
                    " \"authorization_level\": 581, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"type\": \"API\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 386, " + 
                    " \"properties_revisions\": [] " + 
                    " } " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v1/activities/639")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_58_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_58_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 460, " + 
                    " \"description_introduction\": \"_EM_13348_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_13349_XYZ_\", " + 
                    " \"description_safety\": \"_EM_13351_XYZ_\", " + 
                    " \"description_notes\": \"_EM_13352_XYZ_\", " + 
                    " \"participants_min\": 77, " + 
                    " \"time_min\": 723, " + 
                    " \"time_max\": 77, " + 
                    " \"author\": { " + 
                    " \"id\": 781, " + 
                    " \"email_address\": \"_EM_13373_XYZ_\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"value\": \"_EM_13374_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.4310587366305565, " + 
                    " \"favourites_count\": 906, " + 
                    " \"ratings_sum\": 831, " + 
                    " \"ratings_count\": 748 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_114_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_59_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_59_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_introduction\": \"nYp0c\", " + 
                    " \"description_notes\": \"noV_XGXHdfgid\", " + 
                    " \"age_min\": -548, " + 
                    " \"age_max\": -315, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 2038314466, " + 
                    " \"mime_type\": \"3LhTAMA_akKKs\", " + 
                    " \"uri\": \"yIhitjv7RynFtK\", " + 
                    " \"name\": \"mvA76Ig\", " + 
                    " \"copy_right\": \"I0C5\" " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"9Xl\", " + 
                    " \"copy_right\": \"P\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 443, " + 
                    " \"mime_type\": \"sUU34a\", " + 
                    " \"uri\": \"5YHluoG0Agm0w8BO\", " + 
                    " \"name\": \"5ZSUphUqhyV\", " + 
                    " \"copy_right\": \"UsRlK7i\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": -1130701171, " + 
                    " \"authorization_level\": 983 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_211_lambda$initMediaFiles$8
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_60_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_60_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 46728L)
                .d("AUTHORIZATION_LEVEL", "551")
                .d("NAME", "\"AF5BvERaIjU\"")
            .and().insertInto("ACTIVITY", 46727L)
            .and().insertInto("ACTIVITY", 46726L)
            .and().insertInto("ACTIVITY_RELATION", 46725L)
                .r("ACTIVITY_1_ID", 46727L)
                .r("ACTIVITY_2_ID", 46727L)
                .d("OWNER_ID", "1")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"OrgjYg8rwbUn\", " + 
                    " \"description_introduction\": \"aJoeXLa9JMRYMX\", " + 
                    " \"description_safety\": \"BYuejfD_a\", " + 
                    " \"description_notes\": \"slFX\", " + 
                    " \"participants_min\": 774, " + 
                    " \"participants_max\": 588, " + 
                    " \"time_max\": 560, " + 
                    " \"source\": \"5efelFI5OxHsy\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"uM2Ooij\", " + 
                    " \"copy_right\": \"W\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_61_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_61_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_main\": \"mFJlJZDRRVR07uD\", " + 
                    " \"age_min\": -2147482945, " + 
                    " \"time_min\": -2147482945, " + 
                    " \"time_max\": -2147482793, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"dEcQfNCZY\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 141, " + 
                    " \"group\": \"_EM_41685_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 1168592712, " + 
                    " \"group\": \"_EM_41691_XYZ_\", " + 
                    " \"name\": \"_EM_41692_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"_EM_41705_XYZ_\", " + 
                    " \"authorization_level\": 142 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_113_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_62_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_62_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 28522L)
                .d("AUTHORIZATION_LEVEL", "954")
                .d("DATE_CREATED", "\"1968-04-19 23:00:38\"")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"0NUZ1\"")
            .and().insertInto("MEDIA_FILE", 28524L)
                .d("URI", "\"rP9jaVX4\"")
            .and().insertInto("TAG", 28523L)
                .d("GRP", "\"ncaDbXS9FJq\"")
                .d("NAME", "\"0NUZ1\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("ACTIVITY", 28525L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 195, " + 
                    " \"name\": \"0NUZ1\", " + 
                    " \"description_introduction\": \"buLxzrNgxqK8I\", " + 
                    " \"description_safety\": \"_EM_121857_XYZ_\", " + 
                    " \"description_notes\": \"yYX\", " + 
                    " \"participants_min\": 314, " + 
                    " \"time_min\": 92, " + 
                    " \"source\": \"AoLzBd\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 7035532987350372502, " + 
                    " \"uri\": \"9LmSACsWDH\", " + 
                    " \"name\": \"_EM_121863_XYZ_\", " + 
                    " \"author\": \"_EM_121864_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"Uel07w5CO\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_211_lambda$initMediaFiles$8
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_63_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_63_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 554L)
            .and().insertInto("ACTIVITY", 555L)
            .and().insertInto("ACTIVITY", 556L)
            .and().insertInto("ACTIVITY", 557L)
            .and().insertInto("ACTIVITY", 558L)
            .and().insertInto("MEDIA_FILE", 19326L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"\"")
                .d("MIME_TYPE", "\"lkMDcaWDqBt_\"")
                .d("NAME", "NULL")
                .d("URI", "\"_rXTurJzazd\"")
            .and().insertInto("MEDIA_FILE", 19327L)
                .d("AUTHOR", "\"e3\"")
                .d("CAPTURE_DATE", "\"2016-08-05 22:21:50\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"pfiDGGn\"")
                .d("NAME", "NULL")
                .d("URI", "\"\"")
            .and().insertInto("USERS", 51475L)
                .d("AUTHORIZATION_LEVEL", "417")
                .d("NAME", "\"iixBm2U\"")
            .and().insertInto("ACTIVITY", 51474L)
            .and().insertInto("ACTIVITY", 51473L)
            .and().insertInto("ACTIVITY_PROPERTIES", 51472L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"2059-12-16 09:51:58\"")
                .d("DATE_PUBLISHED", "\"2073-08-30 09:02:11\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"zB\"")
                .d("DESCRIPTION_MATERIAL", "\"qenv_V\"")
                .d("DESCRIPTION_NOTES", "\"szGUI0Rku\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"W8f_8vW9f\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"cU5E1p1ahDZKgZ\"")
                .d("PARTICIPANTS_MAX", "136")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"ekE\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "334")
                .r("ACTIVITY_ID", 558L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 51479L)
                .d("AUTHORIZATION_LEVEL", "355")
                .d("NAME", "\"aSFajKiGI4cJD\"")
            .and().insertInto("ACTIVITY", 51478L)
            .and().insertInto("ACTIVITY", 51477L)
            .and().insertInto("ACTIVITY_PROPERTIES", 51476L)
                .d("AGE_MAX", "-2147482764")
                .d("AGE_MIN", "-44")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"2052-07-22 17:30:33\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"Uw\"")
                .d("DESCRIPTION_MAIN", "\"QWcUfVYqcZ\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"pPk3\"")
                .d("DESCRIPTION_PREPARE", "\"DJZCNWBF\"")
                .d("DESCRIPTION_SAFETY", "\"AnLjojJk5P\"")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "0")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"1m8qs8INkdll4YC\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "616")
                .r("ACTIVITY_ID", 556L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 51478L)
            .and().insertInto("USERS", 51483L)
                .d("AUTHORIZATION_LEVEL", "886")
                .d("NAME", "\"iv4DCmkQn4\"")
            .and().insertInto("ACTIVITY", 51482L)
            .and().insertInto("ACTIVITY", 51481L)
            .and().insertInto("ACTIVITY_PROPERTIES", 51480L)
                .d("AGE_MAX", "-2147483129")
                .d("AGE_MIN", "-102")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"1932-12-10 07:26:16\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"\"")
                .d("DESCRIPTION_MAIN", "\"AX9qQdKT\"")
                .d("DESCRIPTION_MATERIAL", "\"2Ne755ZNid\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"6QOw4mMbAu0A\"")
                .d("DESCRIPTION_SAFETY", "\"kY5mBDdLjLc\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"VM\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "522")
                .r("ACTIVITY_ID", 51477L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 556L)
            .and().insertInto("USERS", 51501L)
                .d("AUTHORIZATION_LEVEL", "379")
                .d("NAME", "\"xsvG\"")
            .and().insertInto("ACTIVITY", 51500L)
            .and().insertInto("ACTIVITY_RATING", 51499L)
                .r("ACTIVITY_ID", 51477L)
                .r("USER_ID", 51501L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"N39YDnZNizs9p1s\", " + 
                    " \"description_introduction\": \"6othi1Ki9j6LZ1\", " + 
                    " \"description_prepare\": \"P46Wd4_XG3\", " + 
                    " \"description_safety\": \"Isu\", " + 
                    " \"description_notes\": \"iRwuikyr\", " + 
                    " \"age_min\": -2147483537, " + 
                    " \"participants_min\": 289, " + 
                    " \"participants_max\": 799, " + 
                    " \"time_min\": 78, " + 
                    " \"time_max\": 131, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 344, " + 
                    " \"group\": \"mjYGyRo6ov\", " + 
                    " \"activities_count\": 878 " + 
                    " }, " + 
                    " {}, " + 
                    " { " + 
                    " \"id\": -660490607492679954, " + 
                    " \"group\": \"xZPtyfcrIr7YqTTW\", " + 
                    " \"activities_count\": 883 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"dB8Nhhwzmt0\", " + 
                    " \"name\": \"dKFBWNm_7NNEFs\", " + 
                    " \"activities_count\": 45 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 93, " + 
                    " \"group\": \"FS29piAHgf\", " + 
                    " \"name\": \"cYlrQLQgKoD\", " + 
                    " \"activities_count\": 521 " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.5084878980102088 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_64_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_64_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_14042_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_introduction\": \"_EM_14027_XYZ_\", " + 
                    " \"description_notes\": \"_EM_14031_XYZ_\", " + 
                    " \"participants_min\": 922, " + 
                    " \"source\": \"_EM_14032_XYZ_\", " + 
                    " \"tags\": [ " + 
                    " {} " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 950, " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 914, " + 
                    " \"ratings_sum\": 528, " + 
                    " \"related\": [ " + 
                    " -743226153, " + 
                    " 820, " + 
                    " 407 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_65_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_65_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_notes\": \"gnaRVWReYHUGcBK\", " + 
                    " \"age_min\": -387, " + 
                    " \"time_min\": 782, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"dx6NNf1B8Q\", " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 215, " + 
                    " \"ratings_sum\": 28, " + 
                    " \"related\": [ " + 
                    " 978 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-29T07:34:37.9Z"))
                .body("'properties_revisions'[0].'description_notes'", containsString("gnaRVWReYHUGcBK"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-387.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(782.0))
                .body("'properties_revisions'[0].'featured'", equalTo(true))
                .body("'properties_revisions'[0].'source'", containsString("dx6NNf1B8Q"))
                .body("'properties'.'date_created'", containsString("2024-05-29T07:34:37.9Z"))
                .body("'properties'.'description_notes'", containsString("gnaRVWReYHUGcBK"))
                .body("'properties'.'age_min'", numberMatches(-387.0))
                .body("'properties'.'time_min'", numberMatches(782.0))
                .body("'properties'.'featured'", equalTo(true))
                .body("'properties'.'source'", containsString("dx6NNf1B8Q"))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_published\": \"1931-03-13T25:55:23\", " + 
                    " \"date_created\": \"2053-00-11T04:28:18\", " + 
                    " \"date_updated\": \"1911-12-04T17:09:58\", " + 
                    " \"description_main\": \"FSMRZ94pO\", " + 
                    " \"description_safety\": \"Ls\", " + 
                    " \"age_min\": -1117819847, " + 
                    " \"participants_min\": 128821502, " + 
                    " \"participants_max\": 542, " + 
                    " \"time_max\": 547, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 585, " + 
                    " \"group\": \"3MVrE6q\", " + 
                    " \"name\": \"vaPez\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 587, " + 
                    " \"uri\": \"SHglDy\", " + 
                    " \"name\": \"pMtFgnKoflh\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 456, " + 
                    " \"name\": \"KxtUunsleVdGy\" " + 
                    " }, " + 
                    " { " + 
                    " \"media_file\": { " + 
                    " \"id\": 570, " + 
                    " \"mime_type\": \"yTo7mAJa3\", " + 
                    " \"capture_date\": \"2027-03-20T05:60:35\", " + 
                    " \"author\": \"rmQlzUG8niOFf1\" " + 
                    " }, " + 
                    " \"activities_count\": 268 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 131, " + 
                    " \"group\": \"kSNJ\", " + 
                    " \"name\": \"Xp9PxK\", " + 
                    " \"media_file\": { " + 
                    " \"capture_date\": \"2010-11-07T04:44:01\", " + 
                    " \"copy_right\": \"7s7XsIYtl1Vnx\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 61707628, " + 
                    " \"name\": \"hMxOBluHPx91U\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"date_created\": \"1984-11-08T15:39:02\", " + 
                    " \"type\": \"EVOMASTER\" " + 
                    " } " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .patch(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/17"))
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .patch(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/17"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityProperties_369_isContentEqual
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    /**
    * [test_66_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_66_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_tags = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_created\": \"2031-06-25T00:16:16\", " + 
                    " \"date_updated\": \"1900-00-08T14:12:13\", " + 
                    " \"description_prepare\": \"b1VhsLaC6XrH\", " + 
                    " \"age_min\": -284, " + 
                    " \"age_max\": -942915189, " + 
                    " \"participants_max\": 789, " + 
                    " \"time_min\": 582, " + 
                    " \"time_max\": 213, " + 
                    " \"source\": \"nyHWYg3ROb4ApQT\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 5819331822379985758, " + 
                    " \"name\": \"hLrk0mRAPq\", " + 
                    " \"media_file\": { " + 
                    " \"id\": -8371284907084297280 " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 593, " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"vVzqYkLeH\", " + 
                    " \"name\": \"xWY3skHyxc74eI\", " + 
                    " \"copy_right\": \"weV8HxYA8YAk\", " + 
                    " \"author\": \"kjWvI9T4WvJs1jdU\" " + 
                    " }, " + 
                    " \"activities_count\": 83 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"uri\": \"\", " + 
                    " \"name\": \"qw\", " + 
                    " \"capture_date\": \"2089-01-23T24:32:35\", " + 
                    " \"copy_right\": \"maZwUSCx0WpWrO9\", " + 
                    " \"author\": \"8h5K9rQXhzSOl\" " + 
                    " }, " + 
                    " { " + 
                    " \"uri\": \"7Zl3oI\", " + 
                    " \"copy_right\": \"Zpiy83S\", " + 
                    " \"author\": \"4HBNPl\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 1497214020, " + 
                    " \"name\": \"145NdNZd9zvDi6\", " + 
                    " \"email_address\": \"jc0m5ldmXMN\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 32, " + 
                    " \"ratings_average\": 0.6096422725646881, " + 
                    " \"favourites_count\": 754, " + 
                    " \"ratings_sum\": 780, " + 
                    " \"ratings_count\": 975, " + 
                    " \"related\": [ " + 
                    " 707, " + 
                    " 201, " + 
                    " 667 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 103, " + 
                    " \"description_introduction\": \"51N99\", " + 
                    " \"description_notes\": \"25YsWTv4\", " + 
                    " \"participants_max\": 607, " + 
                    " \"time_min\": 706, " + 
                    " \"time_max\": 200, " + 
                    " \"source\": \"87YgokxCW\", " + 
                    " \"activity\": { " + 
                    " \"id\": -538073686, " + 
                    " \"ratings_sum\": 320, " + 
                    " \"ratings_count\": 153, " + 
                    " \"related\": [ " + 
                    " 391, " + 
                    " 438, " + 
                    " 307 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?" + 
                    "ratings_count_min=sZ&" + 
                    "random=yZK472O_7qd6igP&" + 
                    "featured=1Z0ldq&" + 
                    "favourites=_EM_117119_XYZ_&" + 
                    "ratings_average_min=qweU&" + 
                    "name=WP&" + 
                    "text=zTU&" + 
                    "participants=P8IqdniwxQMtVM&" + 
                    "my_favourites=8ltSH8&" + 
                    "attrs=8zQKIa")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_113_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"k79BkrQ6Sv0\", " + 
                    " \"name\": \"7xNlwJY27F8J\", " + 
                    " \"activities_count\": -6633115226964605832 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("k79BkrQ6Sv0"))
                .body("'name'", containsString("7xNlwJY27F8J"))
                .body("'activities_count'", numberMatches(-6.633115226964606E18));
        location_tags = "/api/v2/tags" + "/" + res_2.extract().body().path("id").toString();
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"Ga\", " + 
                    " \"media_file\": {}, " + 
                    " \"activities_count\": -261208 " + 
                    " } ")
                .put(resolveLocation(location_tags, baseUrlOfSut + "/api/v2/tags/65560"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString(""))
                .body("'name'", containsString("Ga"))
                .body("'activities_count'", numberMatches(0.0));
        
    }
    
    
    /**
    * [test_67_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_67_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 459L)
            .and().insertInto("ACTIVITY", 460L)
            .and().insertInto("ACTIVITY", 461L)
            .and().insertInto("ACTIVITY", 462L)
            .and().insertInto("ACTIVITY", 463L)
            .and().insertInto("MEDIA_FILE", 11664L)
                .d("URI", "\"j\"")
            .and().insertInto("TAG", 11663L)
                .d("GRP", "\"_EM_47986_XYZ_\"")
                .d("NAME", "\"apOV\"")
            .and().insertInto("USERS", 11662L)
                .d("AUTHORIZATION_LEVEL", "665")
                .d("NAME", "\"UUUUPWU9Z`UZf\"")
            .and().insertInto("ACTIVITY", 11661L)
            .and().insertInto("ACTIVITY", 11660L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11659L)
                .r("ACTIVITY_ID", 462L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11658L)
                .r("ACTIVITY_PROPERTIES_ID", 11659L)
                .r("TAG_ID", 11663L)
            .and().insertInto("MEDIA_FILE", 11671L)
                .d("URI", "\"d\"")
            .and().insertInto("TAG", 11670L)
                .d("GRP", "\"_EM_47987_XYZ_\"")
                .d("NAME", "\"X44RKTe8ZuzKt\"")
            .and().insertInto("USERS", 11669L)
                .d("AUTHORIZATION_LEVEL", "286")
                .d("NAME", "\"_EM_47988_XYZ_\"")
            .and().insertInto("ACTIVITY", 11668L)
            .and().insertInto("ACTIVITY", 11667L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11666L)
                .r("ACTIVITY_ID", 11660L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11665L)
                .r("ACTIVITY_PROPERTIES_ID", 11666L)
                .r("TAG_ID", 11663L)
            .and().insertInto("MEDIA_FILE", 11678L)
                .d("URI", "\"_EM_47989_XYZ_\"")
            .and().insertInto("TAG", 11677L)
                .d("GRP", "\"ljC4_ltomW\"")
                .d("NAME", "\"\"")
            .and().insertInto("USERS", 11676L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"rUP0\"")
            .and().insertInto("ACTIVITY", 11675L)
            .and().insertInto("ACTIVITY", 11674L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11673L)
                .r("ACTIVITY_ID", 462L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11672L)
                .r("ACTIVITY_PROPERTIES_ID", 11673L)
                .r("TAG_ID", 11663L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"MuXsZNFv\", " + 
                    " \"description_prepare\": \"lyDfaeCG0coa\", " + 
                    " \"description_notes\": \"BYyB4GV\", " + 
                    " \"age_max\": -306, " + 
                    " \"participants_min\": 73, " + 
                    " \"time_min\": 79, " + 
                    " \"time_max\": 720, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"activities_count\": 147 " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 3778879684237799115, " + 
                    " \"ratings_sum\": -1371157237, " + 
                    " \"related\": [ " + 
                    " 418, " + 
                    " -1137869267, " + 
                    " 659, " + 
                    " 583 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_68_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_68_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 27420L)
                .d("AUTHOR", "\"5kOwNBtLk\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"Mmjn6Q8n\"")
                .d("MIME_TYPE", "\"4\"")
                .d("NAME", "\"NGr9IkAuv5kAZ\"")
                .d("URI", "\"dam8P\"")
            .and().insertInto("MEDIA_FILE", 27426L)
                .d("URI", "\"kx4V93\"")
            .and().insertInto("USERS", 27425L)
                .d("AUTHORIZATION_LEVEL", "262580")
                .d("NAME", "\"_EM_124445_XYZ_\"")
            .and().insertInto("ACTIVITY", 27424L)
            .and().insertInto("ACTIVITY", 27423L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27422L)
                .r("ACTIVITY_ID", 27424L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 27421L)
                .r("ACTIVITY_PROPERTIES_ID", 27422L)
                .r("MEDIA_FILE_ID", 27420L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 27432L)
                .d("URI", "\"\"")
            .and().insertInto("USERS", 27431L)
                .d("AUTHORIZATION_LEVEL", "576")
                .d("NAME", "\"u\"")
            .and().insertInto("ACTIVITY", 27430L)
            .and().insertInto("ACTIVITY", 27429L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27428L)
                .r("ACTIVITY_ID", 27430L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 27427L)
                .r("ACTIVITY_PROPERTIES_ID", 27428L)
                .r("MEDIA_FILE_ID", 27420L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 27438L)
                .d("URI", "\"_EM_120110_XYZ_\"")
            .and().insertInto("USERS", 27437L)
                .d("AUTHORIZATION_LEVEL", "973929694")
                .d("NAME", "\"soi0iK\"")
            .and().insertInto("ACTIVITY", 27436L)
            .and().insertInto("ACTIVITY", 27435L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27434L)
                .r("ACTIVITY_ID", 27423L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 27433L)
                .r("ACTIVITY_PROPERTIES_ID", 27422L)
                .r("MEDIA_FILE_ID", 27426L)
                .d("FEATURED", "false")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -512, " + 
                    " \"description_material\": \"T1UPf\", " + 
                    " \"description_introduction\": \"7\", " + 
                    " \"description_safety\": \"_qFJtSrK3fYeC\", " + 
                    " \"participants_max\": 897, " + 
                    " \"time_min\": 225, " + 
                    " \"featured\": false, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"uri\": \"Z2qtFbG\", " + 
                    " \"name\": \"fTsyfpL\", " + 
                    " \"copy_right\": \"_u\", " + 
                    " \"author\": \"0Tjq20\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 722, " + 
                    " \"name\": \"\", " + 
                    " \"email_address\": \"sQNaDo343tB\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"ratings_average\": 0.22750374039999643 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_69_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_69_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"xElmQfA6p9f\", " + 
                    " \"description_introduction\": \"PNF\", " + 
                    " \"description_prepare\": \"VP6j2hgF\", " + 
                    " \"description_main\": \"TUIUaH7X\", " + 
                    " \"description_notes\": \"TUIUaH7X\", " + 
                    " \"age_max\": -557, " + 
                    " \"participants_max\": 279, " + 
                    " \"source\": \"beA54qi6SU0Pjp_\", " + 
                    " \"tags\": [ " + 
                    " {}, " + 
                    " { " + 
                    " \"id\": 463, " + 
                    " \"group\": \"_EM_6207_XYZ_\", " + 
                    " \"name\": \"_EM_6208_XYZ_\", " + 
                    " \"activities_count\": 337 " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"_EM_6215_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 910, " + 
                    " \"copy_right\": \"_EM_6219_XYZ_\", " + 
                    " \"author\": \"_EM_6220_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 687 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"_EM_6221_XYZ_\", " + 
                    " \"name\": \"_EM_6222_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 214, " + 
                    " \"mime_type\": \"V8helB\", " + 
                    " \"uri\": \"_EM_6223_XYZ_\", " + 
                    " \"name\": \"N3W6vz\", " + 
                    " \"copy_right\": \"_EM_6224_XYZ_\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"_EM_6226_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 3139479541196594306, " + 
                    " \"uri\": \"_EM_6229_XYZ_\", " + 
                    " \"copy_right\": \"_EM_6231_XYZ_\", " + 
                    " \"author\": \"_EM_6232_XYZ_\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"_EM_6243_XYZ_\", " + 
                    " \"email_address\": \"_EM_6244_XYZ_\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_70_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_70_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"qF9Y45T1x\", " + 
                    " \"description_introduction\": \"ucRHt\", " + 
                    " \"description_prepare\": \"3IGgBEW39Pv2\", " + 
                    " \"description_main\": \"ebgVYmajrhHiJ\", " + 
                    " \"participants_min\": 931, " + 
                    " \"participants_max\": 485, " + 
                    " \"time_min\": 491, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"name\": \"Lit19rGcDe\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 1385574207, " + 
                    " \"uri\": \"Z3HkDcQkn\", " + 
                    " \"name\": \"\", " + 
                    " \"copy_right\": \"w7oZeBhZJqqq\", " + 
                    " \"author\": \"A7I0LFxJSfEmjxT\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"0qRMkeaX\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"ajnqqV8Hp\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 944, " + 
                    " \"activities_count\": 558 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"fu9b953\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 1353887886, " + 
                    " \"mime_type\": \"Nri2\", " + 
                    " \"uri\": \"\", " + 
                    " \"name\": \"gRlXXb0K1SCPJZ\", " + 
                    " \"copy_right\": \"VZS\", " + 
                    " \"author\": \"YF9f1zpj\" " + 
                    " }, " + 
                    " \"activities_count\": 338 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"Em2d3JJGufmx\", " + 
                    " \"authorization_level\": 285 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_71_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_71_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 459L)
            .and().insertInto("ACTIVITY", 460L)
            .and().insertInto("ACTIVITY", 461L)
            .and().insertInto("ACTIVITY", 462L)
            .and().insertInto("ACTIVITY", 463L)
            .and().insertInto("MEDIA_FILE", 11664L)
                .d("URI", "\"j\"")
            .and().insertInto("TAG", 11663L)
                .d("GRP", "\"_EM_47986_XYZ_\"")
                .d("NAME", "\"apOV\"")
            .and().insertInto("USERS", 11662L)
                .d("AUTHORIZATION_LEVEL", "665")
                .d("NAME", "\"UUUUPWU9Z`UZf\"")
            .and().insertInto("ACTIVITY", 11661L)
            .and().insertInto("ACTIVITY", 11660L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11659L)
                .r("ACTIVITY_ID", 462L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11658L)
                .r("ACTIVITY_PROPERTIES_ID", 11659L)
                .r("TAG_ID", 11663L)
            .and().insertInto("MEDIA_FILE", 11671L)
                .d("URI", "\"d\"")
            .and().insertInto("TAG", 11670L)
                .d("GRP", "\"_EM_47987_XYZ_\"")
                .d("NAME", "\"_EM_120273_XYZ_\"")
            .and().insertInto("USERS", 11669L)
                .d("AUTHORIZATION_LEVEL", "-7906")
                .d("NAME", "\"_EM_47988_XYZ_\"")
            .and().insertInto("ACTIVITY", 11668L)
            .and().insertInto("ACTIVITY", 11667L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11666L)
                .r("ACTIVITY_ID", 11668L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11665L)
                .r("ACTIVITY_PROPERTIES_ID", 11666L)
                .r("TAG_ID", 11663L)
            .and().insertInto("MEDIA_FILE", 11678L)
                .d("URI", "\"gEM_4U96U_XYZU\"")
            .and().insertInto("TAG", 11677L)
                .d("GRP", "\"ljC4_ltomW\"")
                .d("NAME", "\"\"")
            .and().insertInto("USERS", 11676L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"vUP0\"")
            .and().insertInto("ACTIVITY", 11675L)
            .and().insertInto("ACTIVITY", 11674L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11673L)
                .r("ACTIVITY_ID", 460L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11672L)
                .r("ACTIVITY_PROPERTIES_ID", 11673L)
                .r("TAG_ID", 11670L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"oeNSWNBt\", " + 
                    " \"description_introduction\": \"Aol9b0s5G7nweSzX\", " + 
                    " \"description_prepare\": \"ti4\", " + 
                    " \"description_notes\": \"_NMfH\", " + 
                    " \"participants_min\": 226, " + 
                    " \"participants_max\": 395, " + 
                    " \"time_min\": 82, " + 
                    " \"time_max\": 321, " + 
                    " \"source\": \"bQ4ga8p\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": -1651673132, " + 
                    " \"name\": \"j9d\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 389, " + 
                    " \"group\": \"H_HG7DSWQdR4m0u\", " + 
                    " \"activities_count\": 993 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 137 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"prVoA\", " + 
                    " \"name\": \"kc7sp\", " + 
                    " \"activities_count\": 538 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.29395344566761605, " + 
                    " \"favourites_count\": 188, " + 
                    " \"ratings_sum\": 185 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_72_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_72_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 20128L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_introduction\": \"_EM_86940_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_86941_XYZ_\", " + 
                    " \"description_safety\": \"_EM_86942_XYZ_\", " + 
                    " \"description_notes\": \"PI_4P7pn\", " + 
                    " \"age_min\": -1847780838, " + 
                    " \"participants_min\": 683, " + 
                    " \"time_max\": 812, " + 
                    " \"source\": \"V6pdsY4WgBg6\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"mKc_\", " + 
                    " \"name\": \"_EM_86943_XYZ_\", " + 
                    " \"activities_count\": 40 " + 
                    " }, " + 
                    " { " + 
                    " \"media_file\": { " + 
                    " \"id\": 1136015129, " + 
                    " \"mime_type\": \"_EM_86947_XYZ_\", " + 
                    " \"author\": \"_EM_86951_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 2870110250198517991 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"_EM_86961_XYZ_\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_114_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_73_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_73_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 0, " + 
                    " \"name\": \"_EM_46822_XYZ_\", " + 
                    " \"description_material\": \"_UM_24046_ZYZ_\", " + 
                    " \"description_introduction\": \"_EM_14027_XYZ_\", " + 
                    " \"description_prepare\": \"UBRMPrvQ_3RSq0\", " + 
                    " \"description_main\": \"_EM_14029_XYZ_\", " + 
                    " \"description_safety\": \"_EM_14030_XYZ_\", " + 
                    " \"description_notes\": \"_EM_46823_XYZ_\", " + 
                    " \"age_min\": -1094845565, " + 
                    " \"age_max\": -124, " + 
                    " \"participants_min\": -8383590, " + 
                    " \"participants_max\": 402655091, " + 
                    " \"time_max\": 1073709127, " + 
                    " \"source\": \"lMkVClQi7Pm\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 429, " + 
                    " \"group\": \"OwOL\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 660, " + 
                    " \"mime_type\": \"_EM_14035_XYZ_\", " + 
                    " \"uri\": \"_EM_14036_XYZ_\", " + 
                    " \"name\": \"_EM_14037_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 869 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [], " + 
                    " \"author\": { " + 
                    " \"id\": 355, " + 
                    " \"name\": \"_EM_14039_XYZ_\", " + 
                    " \"email_address\": \"_EM_46824_XYZ_\", " + 
                    " \"identities\": [] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 950, " + 
                    " \"ratings_average\": 7784164.15900965, " + 
                    " \"favourites_count\": 1426, " + 
                    " \"ratings_sum\": 544, " + 
                    " \"ratings_count\": 1048819, " + 
                    " \"related\": [ " + 
                    " -709671721, " + 
                    " 1332, " + 
                    " 407 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=_EM_14041_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_74_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_74_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 2985L)
                .d("KEY", "\"_EM_120986_XYZ_\"")
                .d("VALID_FROM", "\"2095-10-16 02:46:25\"")
                .d("VALID_TO", "\"2067-02-04 13:29:00\"")
                .d("VALUE", "\"5978153\"")
            .and().insertInto("SYSTEM_MESSAGE", 2986L)
                .d("KEY", "\"E\"")
                .d("VALID_FROM", "\"1924-08-27 12:38:59\"")
                .d("VALID_TO", "\"2026-05-18 19:29:29\"")
                .d("VALUE", "\"BUUfDUsKUUdimU\"")
            .and().insertInto("MEDIA_FILE", 27823L)
                .d("URI", "\"ZtKrsVlFf9\"")
            .and().insertInto("USERS", 27822L)
                .d("AUTHORIZATION_LEVEL", "323")
                .d("NAME", "\"1904-05-08 13:19:50\"")
            .and().insertInto("ACTIVITY", 27821L)
            .and().insertInto("ACTIVITY", 27820L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27819L)
                .r("ACTIVITY_ID", 27820L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 27818L)
                .r("ACTIVITY_PROPERTIES_ID", 27819L)
                .r("MEDIA_FILE_ID", 27823L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 27829L)
                .d("URI", "\"_EM_120602_XYZ_\"")
            .and().insertInto("USERS", 27828L)
                .d("AUTHORIZATION_LEVEL", "8826")
                .d("NAME", "\"TZMeNTb8dfV\"")
            .and().insertInto("ACTIVITY", 27827L)
            .and().insertInto("ACTIVITY", 27826L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27825L)
                .r("ACTIVITY_ID", 27820L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 27824L)
                .r("ACTIVITY_PROPERTIES_ID", 27825L)
                .r("MEDIA_FILE_ID", 27823L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 27831L)
                .d("URI", "\"O25l8dy\"")
            .and().insertInto("TAG", 27830L)
                .d("GRP", "\"rDy2xZUKiaUdUUyZ\"")
                .d("NAME", "\"UqM3IAE1m__z\"")
                .r("MEDIA_FILE_ID", 27829L)
            .and().insertInto("MEDIA_FILE", 27838L)
                .d("URI", "\"_EM_120590_XYZ_\"")
            .and().insertInto("TAG", 27837L)
                .d("GRP", "\"\"")
                .d("NAME", "\"UF_cwzv2Q8Qb_xG\"")
            .and().insertInto("USERS", 27836L)
                .d("AUTHORIZATION_LEVEL", "-64958")
                .d("NAME", "\"p\"")
            .and().insertInto("ACTIVITY", 27835L)
            .and().insertInto("ACTIVITY", 27834L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27833L)
                .r("ACTIVITY_ID", 27834L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 27832L)
                .r("ACTIVITY_PROPERTIES_ID", 27819L)
                .r("TAG_ID", 27837L)
            .and().insertInto("MEDIA_FILE", 27845L)
                .d("URI", "\"CONSTANTS\"")
            .and().insertInto("TAG", 27844L)
                .d("GRP", "\"FAVOURITE\"")
                .d("NAME", "\"_EM_120987_XYZ_\"")
            .and().insertInto("USERS", 27843L)
                .d("AUTHORIZATION_LEVEL", "-31991")
                .d("NAME", "\"5997572\"")
            .and().insertInto("ACTIVITY", 27842L)
            .and().insertInto("ACTIVITY", 27841L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27840L)
                .r("ACTIVITY_ID", 27827L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 27839L)
                .r("ACTIVITY_PROPERTIES_ID", 27819L)
                .r("TAG_ID", 27830L)
            .and().insertInto("MEDIA_FILE", 27852L)
                .d("URI", "\"hF2\"")
            .and().insertInto("TAG", 27851L)
                .d("GRP", "\"LuFNnvShmm5Mv\"")
                .d("NAME", "\"2r63abc\"")
            .and().insertInto("USERS", 27850L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"dMTzIaqqCG9\"")
            .and().insertInto("ACTIVITY", 27849L)
            .and().insertInto("ACTIVITY", 27848L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27847L)
                .r("ACTIVITY_ID", 27826L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 27846L)
                .r("ACTIVITY_PROPERTIES_ID", 27840L)
                .r("TAG_ID", 27837L)
            .and().insertInto("MEDIA_FILE", 27859L)
                .d("URI", "\"_EM_120988_XYZ_\"")
            .and().insertInto("TAG", 27858L)
                .d("GRP", "\"f3\"")
                .d("NAME", "\"_EM_120741_XYZ_\"")
            .and().insertInto("USERS", 27857L)
                .d("AUTHORIZATION_LEVEL", "936")
                .d("NAME", "\"cGJphRb01xm\"")
            .and().insertInto("ACTIVITY", 27856L)
            .and().insertInto("ACTIVITY", 27855L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27854L)
                .r("ACTIVITY_ID", 27826L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 27853L)
                .r("ACTIVITY_PROPERTIES_ID", 27840L)
                .r("TAG_ID", 27844L)
            .and().insertInto("MEDIA_FILE", 27866L)
                .d("URI", "\"GfXQn\\Ke5J\"")
            .and().insertInto("TAG", 27865L)
                .d("GRP", "\"mLqiBP\"")
                .d("NAME", "\"GzQa5nh\"")
            .and().insertInto("USERS", 27864L)
                .d("AUTHORIZATION_LEVEL", "1397")
                .d("NAME", "\"_EM_120593_XYZ_\"")
            .and().insertInto("ACTIVITY", 27863L)
            .and().insertInto("ACTIVITY", 27862L)
            .and().insertInto("ACTIVITY_PROPERTIES", 27861L)
                .r("ACTIVITY_ID", 27842L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 27860L)
                .r("ACTIVITY_PROPERTIES_ID", 27861L)
                .r("TAG_ID", 27851L)
            .and().insertInto("MEDIA_FILE", 55586L)
                .d("URI", "\"9Si\"")
            .and().insertInto("TAG", 55585L)
                .d("GRP", "\"S\"")
                .d("NAME", "\"GS_zjJthlkrGWJ5\"")
            .and().insertInto("TAG_DERIVED", 55584L)
                .r("TAG_ID", 27844L)
                .d("ACTIVITIES_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 0, " + 
                    " \"name\": \"\", " + 
                    " \"description_material\": \"VrwmHYn8usNtb7id\", " + 
                    " \"description_introduction\": \"\", " + 
                    " \"description_prepare\": \"_EM_120739_XYZ_\", " + 
                    " \"description_main\": \"tkRbb\", " + 
                    " \"description_safety\": \"D1AM\", " + 
                    " \"description_notes\": \"ncETWxKtRy\", " + 
                    " \"age_min\": -133, " + 
                    " \"age_max\": -695, " + 
                    " \"participants_min\": 345133038, " + 
                    " \"time_min\": 571, " + 
                    " \"time_max\": 0, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"_EM_120588_XYZ_\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 698, " + 
                    " \"group\": \"Qm67kk7\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"\", " + 
                    " \"copy_right\": \"OBUioqJKM\", " + 
                    " \"author\": \"n5pbmyp8Bgu\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 23, " + 
                    " \"group\": \"s0431BjkOf\", " + 
                    " \"activities_count\": 2869323198266499412 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 613, " + 
                    " \"uri\": \"t33\", " + 
                    " \"name\": \"PyZiZGL3DY\", " + 
                    " \"copy_right\": \"9k7YIkQzzK3ANM\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"_EM_120740_XYZ_\", " + 
                    " \"uri\": \"WdfN_jW2C\", " + 
                    " \"name\": \"FcOyOQO47w_\", " + 
                    " \"copy_right\": \"Q\", " + 
                    " \"author\": \"I_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 5093929843042453662, " + 
                    " \"mime_type\": \"n6qa1w7NKkIt\", " + 
                    " \"copy_right\": \"vuzWL9Lf4WJKR\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 235, " + 
                    " \"uri\": \"dOJT2obtbhhZ\", " + 
                    " \"name\": \"6dgAMtcY\", " + 
                    " \"author\": \"lkgJ71s\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_38_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_75_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_75_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 459L)
            .and().insertInto("ACTIVITY", 460L)
            .and().insertInto("ACTIVITY", 461L)
            .and().insertInto("ACTIVITY", 462L)
            .and().insertInto("ACTIVITY", 463L)
            .and().insertInto("MEDIA_FILE", 11664L)
                .d("URI", "\"j\"")
            .and().insertInto("TAG", 11663L)
                .d("GRP", "\"_EM_47986_XYZ_\"")
                .d("NAME", "\"apOV\"")
            .and().insertInto("USERS", 11662L)
                .d("AUTHORIZATION_LEVEL", "665")
                .d("NAME", "\"UUUUPWU9Z`UZf\"")
            .and().insertInto("ACTIVITY", 11661L)
            .and().insertInto("ACTIVITY", 11660L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11659L)
                .r("ACTIVITY_ID", 462L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11658L)
                .r("ACTIVITY_PROPERTIES_ID", 11659L)
                .r("TAG_ID", 11663L)
            .and().insertInto("MEDIA_FILE", 11671L)
                .d("URI", "\"d\"")
            .and().insertInto("TAG", 11670L)
                .d("GRP", "\"_EM_47987_XYZ_\"")
                .d("NAME", "\"X44RKTe8ZuzKt\"")
            .and().insertInto("USERS", 11669L)
                .d("AUTHORIZATION_LEVEL", "286")
                .d("NAME", "\"_EM_47988_XYZ_\"")
            .and().insertInto("ACTIVITY", 11668L)
            .and().insertInto("ACTIVITY", 11667L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11666L)
                .r("ACTIVITY_ID", 11660L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11665L)
                .r("ACTIVITY_PROPERTIES_ID", 11666L)
                .r("TAG_ID", 11663L)
            .and().insertInto("MEDIA_FILE", 11678L)
                .d("URI", "\"_EM_47989_XYZ_\"")
            .and().insertInto("TAG", 11677L)
                .d("GRP", "\"ljC4_ltomW\"")
                .d("NAME", "\"\"")
            .and().insertInto("USERS", 11676L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"rUP0\"")
            .and().insertInto("ACTIVITY", 11675L)
            .and().insertInto("ACTIVITY", 11674L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11673L)
                .r("ACTIVITY_ID", 462L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11672L)
                .r("ACTIVITY_PROPERTIES_ID", 11673L)
                .r("TAG_ID", 11663L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 22, " + 
                    " \"name\": \"_EM_47982_XYZ_\", " + 
                    " \"description_material\": \"\", " + 
                    " \"description_introduction\": \"_EM_47983_XYZ_\", " + 
                    " \"description_main\": \"sHrqkMd1Z\", " + 
                    " \"description_notes\": \"2vv0KRqbW\", " + 
                    " \"age_max\": -2147483354, " + 
                    " \"time_min\": 74, " + 
                    " \"time_max\": 971678378, " + 
                    " \"source\": \"Hfw6mMSiw8F66j\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 33, " + 
                    " \"group\": \"_EM_47984_XYZ_\", " + 
                    " \"name\": \"KzroC\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"hXP\", " + 
                    " \"name\": \"WSsDiAkIqY8634\", " + 
                    " \"copy_right\": \"I3edYhA4M9Xp\", " + 
                    " \"author\": \"fF\" " + 
                    " }, " + 
                    " \"activities_count\": 231 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 741 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"JSMJ0IkYIeUM\", " + 
                    " \"name\": \"2EJB0l\", " + 
                    " \"copy_right\": \"IoT2\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"1WtavL\", " + 
                    " \"authorization_level\": 478 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": -8036649392718310236, " + 
                    " \"related\": [ " + 
                    " 609, " + 
                    " 938 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_76_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_76_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 17381L)
                .d("AUTHORIZATION_LEVEL", "270")
                .d("NAME", "\"TABLE\"")
            .and().insertInto("ACTIVITY", 17380L)
            .and().insertInto("ACTIVITY", 17379L)
            .and().insertInto("ACTIVITY_PROPERTIES", 17378L)
                .d("AGE_MAX", "-1073742030")
                .d("AGE_MIN", "-1073741774")
                .d("DATE_CREATED", "\"1967-09-20 20:16:12\"")
                .d("DATE_PUBLISHED", "\"1911-01-08 11:55:05\"")
                .d("DATE_UPDATED", "\"1936-01-01 11:28:00\"")
                .d("DESCRIPTION_INTRODUCTION", "\"3cAX67j28eT\"")
                .d("DESCRIPTION_MAIN", "\"SxHvjeAU\"")
                .d("DESCRIPTION_MATERIAL", "\"S\"")
                .d("DESCRIPTION_NOTES", "\"L_Q6`cC`C\"")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "\"6297508\"")
                .d("FEATURED", "false")
                .d("NAME", "\"5XNeiOzg\"")
                .d("PARTICIPANTS_MAX", "450")
                .d("PARTICIPANTS_MIN", "552")
                .d("SOURCE", "\"\"")
                .d("TIME_MAX", "668")
                .d("TIME_MIN", "-128")
                .r("ACTIVITY_ID", 17380L)
                .d("AUTHOR_ID", "2")
                .r("PUBLISHING_ACTIVITY_ID", 17379L)
            .and().insertInto("USERS", 17385L)
                .d("AUTHORIZATION_LEVEL", "50083")
                .d("NAME", "\"_EM_129613_XYZ_\"")
            .and().insertInto("ACTIVITY", 17384L)
            .and().insertInto("ACTIVITY", 17383L)
            .and().insertInto("ACTIVITY_PROPERTIES", 17382L)
                .d("AGE_MAX", "84")
                .d("AGE_MIN", "-2147482675")
                .d("DATE_CREATED", "\"2030-06-18 08:06:59\"")
                .d("DATE_PUBLISHED", "\"1943-12-19 00:25:17\"")
                .d("DATE_UPDATED", "\"2084-09-11 19:06:34\"")
                .d("DESCRIPTION_INTRODUCTION", "\"5VVt0jSpff\"")
                .d("DESCRIPTION_MAIN", "\"NAME5_13_\"")
                .d("DESCRIPTION_MATERIAL", "\"vt1o2\"")
                .d("DESCRIPTION_NOTES", "\"_EM_129689_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "\"rLhUUqjw0EbU\"")
                .d("DESCRIPTION_SAFETY", "\"NhgS_G1UcrfH5i0\"")
                .d("FEATURED", "true")
                .d("NAME", "\"AUTHOR\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "-1497037370")
                .d("SOURCE", "\"6371362\"")
                .d("TIME_MAX", "-7666")
                .d("TIME_MIN", "322")
                .r("ACTIVITY_ID", 17384L)
                .d("AUTHOR_ID", "1")
                .r("PUBLISHING_ACTIVITY_ID", 17384L)
            .and().insertInto("USERS", 17389L)
                .d("AUTHORIZATION_LEVEL", "543")
                .d("NAME", "\"0UOfEK\"")
            .and().insertInto("ACTIVITY", 17388L)
            .and().insertInto("ACTIVITY", 17387L)
            .and().insertInto("ACTIVITY_PROPERTIES", 17386L)
                .d("AGE_MAX", "-1073741774")
                .d("AGE_MIN", "-707")
                .d("DATE_CREATED", "\"1902-10-08 17:07:16\"")
                .d("DATE_PUBLISHED", "\"1937-07-25 23:27:43\"")
                .d("DATE_UPDATED", "\"2043-04-08 17:43:15\"")
                .d("DESCRIPTION_INTRODUCTION", "\"anAp9s0EmLN0Iiv\"")
                .d("DESCRIPTION_MAIN", "\"_EM_149239_XYZ_\"")
                .d("DESCRIPTION_MATERIAL", "\"8V1Q43\"")
                .d("DESCRIPTION_NOTES", "\"531HjKCd0P81\"")
                .d("DESCRIPTION_PREPARE", "\"rgWgZwx_0ZkF\"")
                .d("DESCRIPTION_SAFETY", "\"U\"")
                .d("FEATURED", "false")
                .d("NAME", "\"phOEDZa40U\"")
                .d("PARTICIPANTS_MAX", "0")
                .d("PARTICIPANTS_MIN", "628")
                .d("SOURCE", "\"_EM_149578_XYZ_\"")
                .d("TIME_MAX", "761")
                .d("TIME_MIN", "134")
                .r("ACTIVITY_ID", 17384L)
                .d("AUTHOR_ID", "2")
                .r("PUBLISHING_ACTIVITY_ID", 17380L)
            .and().insertInto("USERS", 17393L)
                .d("AUTHORIZATION_LEVEL", "-8")
                .d("NAME", "\"oWQy3\"")
            .and().insertInto("ACTIVITY", 17392L)
            .and().insertInto("ACTIVITY", 17391L)
            .and().insertInto("ACTIVITY_PROPERTIES", 17390L)
                .d("AGE_MAX", "-1073749934")
                .d("AGE_MIN", "-1")
                .d("DATE_CREATED", "\"2075-11-05 23:13:55\"")
                .d("DATE_PUBLISHED", "\"1946-09-22 13:38:57\"")
                .d("DATE_UPDATED", "\"2063-06-14 21:10:16\"")
                .d("DESCRIPTION_INTRODUCTION", "\"531HjKCd0P81\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"_EM_129707_XYZ_\"")
                .d("DESCRIPTION_NOTES", "\"_EM_129708_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "\"6gCUEkbK0sQ\"")
                .d("DESCRIPTION_SAFETY", "\"_EM_129417_XYZ_\"")
                .d("FEATURED", "false")
                .d("NAME", "\"%UJ%\"")
                .d("PARTICIPANTS_MAX", "-1740390813")
                .d("PARTICIPANTS_MIN", "32951")
                .d("SOURCE", "\"uLZUwO\"")
                .d("TIME_MAX", "382")
                .d("TIME_MIN", "-264")
                .r("ACTIVITY_ID", 17391L)
                .r("AUTHOR_ID", 17385L)
                .r("PUBLISHING_ACTIVITY_ID", 17392L)
            .and().insertInto("ACTIVITY", 17395L)
            .and().insertInto("ACTIVITY_DERIVED", 17394L)
                .r("ACTIVITY_ID", 17380L)
                .d("FAVOURITES_COUNT", "292")
                .d("RATINGS_AVG", "0.812896")
                .d("RATINGS_COUNT", "508")
                .d("RATINGS_SUM", "-2327860942350076461")
            .and().insertInto("ACTIVITY", 17397L)
            .and().insertInto("ACTIVITY_DERIVED", 17396L)
                .r("ACTIVITY_ID", 17384L)
                .d("FAVOURITES_COUNT", "-1242851130081308625")
                .d("RATINGS_AVG", "0.0")
                .d("RATINGS_COUNT", "0")
                .d("RATINGS_SUM", "496")
            .and().insertInto("ACTIVITY", 17399L)
            .and().insertInto("ACTIVITY_DERIVED", 17398L)
                .r("ACTIVITY_ID", 17392L)
                .d("FAVOURITES_COUNT", "488")
                .d("RATINGS_AVG", "-0.15776388942527533")
                .d("RATINGS_COUNT", "-883847682")
                .d("RATINGS_SUM", "631679945")
            .and().insertInto("ACTIVITY", 17401L)
            .and().insertInto("ACTIVITY_DERIVED", 17400L)
                .r("ACTIVITY_ID", 17388L)
                .d("FAVOURITES_COUNT", "733")
                .d("RATINGS_AVG", "16.682444735973846")
                .d("RATINGS_COUNT", "-64849")
                .d("RATINGS_SUM", "16987")
            .and().insertInto("MEDIA_FILE", 30357L)
                .d("AUTHOR", "\"S\"")
                .d("CAPTURE_DATE", "\"1902-12-24 01:14:02\"")
                .d("COPY_RIGHT", "\"_EM_129709_XYZ_\"")
                .d("MIME_TYPE", "\"TIME_MAX\"")
                .d("NAME", "\"ID1_7_\"")
                .d("URI", "\"DESCRIPTION_MATERIAL\"")
            .and().insertInto("MEDIA_FILE", 30358L)
                .d("AUTHOR", "\"PvhF\"")
                .d("CAPTURE_DATE", "\"2099-08-18 11:29:57\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"\"")
                .d("NAME", "\"_EM_126497_XYZ_c\"")
                .d("URI", "\"\"")
            .and().insertInto("MEDIA_FILE", 30359L)
                .d("AUTHOR", "\"Al1Q_3G\"")
                .d("CAPTURE_DATE", "\"2074-02-16 02:05:33\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_150040_XYZ_\"")
                .d("NAME", "\"-7\"")
                .d("URI", "\"_EM_129419_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 30365L)
                .d("URI", "\"_EM_138537_XYZ_\"")
            .and().insertInto("USERS", 30364L)
                .d("AUTHORIZATION_LEVEL", "373")
                .d("NAME", "\"U8Y\"")
            .and().insertInto("ACTIVITY", 30363L)
            .and().insertInto("ACTIVITY", 30362L)
            .and().insertInto("ACTIVITY_PROPERTIES", 30361L)
                .r("ACTIVITY_ID", 17380L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 30360L)
                .r("ACTIVITY_PROPERTIES_ID", 17390L)
                .r("MEDIA_FILE_ID", 30365L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 30371L)
                .d("URI", "\"RELATIONS0_\"")
            .and().insertInto("USERS", 30370L)
                .d("AUTHORIZATION_LEVEL", "-16108")
                .d("NAME", "\"_EM_129691_XYZ_\"")
            .and().insertInto("ACTIVITY", 30369L)
            .and().insertInto("ACTIVITY", 30368L)
            .and().insertInto("ACTIVITY_PROPERTIES", 30367L)
                .r("ACTIVITY_ID", 17380L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 30366L)
                .r("ACTIVITY_PROPERTIES_ID", 17378L)
                .r("MEDIA_FILE_ID", 30371L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 30377L)
                .d("URI", "\"Cq_QQeRRsZ6\"")
            .and().insertInto("USERS", 30376L)
                .d("AUTHORIZATION_LEVEL", "16")
                .d("NAME", "\"_EM_129619_XYZ_\"")
            .and().insertInto("ACTIVITY", 30375L)
            .and().insertInto("ACTIVITY", 30374L)
            .and().insertInto("ACTIVITY_PROPERTIES", 30373L)
                .r("ACTIVITY_ID", 30362L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 30372L)
                .r("ACTIVITY_PROPERTIES_ID", 30373L)
                .r("MEDIA_FILE_ID", 30358L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 30383L)
                .d("URI", "\"_EM_129620_XYZ_\"")
            .and().insertInto("USERS", 30382L)
                .d("AUTHORIZATION_LEVEL", "-1617")
                .d("NAME", "\"i\"")
            .and().insertInto("ACTIVITY", 30381L)
            .and().insertInto("ACTIVITY", 30380L)
            .and().insertInto("ACTIVITY_PROPERTIES", 30379L)
                .r("ACTIVITY_ID", 17392L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 30378L)
                .r("ACTIVITY_PROPERTIES_ID", 30379L)
                .r("MEDIA_FILE_ID", 30371L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 30389L)
                .d("URI", "\"_EM_127942_XYZ_\"")
            .and().insertInto("USERS", 30388L)
                .d("AUTHORIZATION_LEVEL", "-8060")
                .d("NAME", "\"qgWgZwx^0ZkF\"")
            .and().insertInto("ACTIVITY", 30387L)
            .and().insertInto("ACTIVITY", 30386L)
            .and().insertInto("ACTIVITY_PROPERTIES", 30385L)
                .r("ACTIVITY_ID", 17395L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 30384L)
                .r("ACTIVITY_PROPERTIES_ID", 30367L)
                .r("MEDIA_FILE_ID", 30358L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 30973L)
                .d("AUTHORIZATION_LEVEL", "371")
                .d("NAME", "\"_EM_12U943_XYZ]\"")
            .and().insertInto("ACTIVITY", 30972L)
            .and().insertInto("ACTIVITY", 30971L)
            .and().insertInto("ACTIVITY_RELATION", 30970L)
                .r("ACTIVITY_1_ID", 17388L)
                .r("ACTIVITY_2_ID", 17397L)
                .r("OWNER_ID", 30364L)
            .and().insertInto("MEDIA_FILE", 30980L)
                .d("URI", "\"ZIWmsGC\"")
            .and().insertInto("TAG", 30979L)
                .d("GRP", "\"_\"")
                .d("NAME", "\"0UOfEK\"")
            .and().insertInto("USERS", 30978L)
                .d("AUTHORIZATION_LEVEL", "138")
                .d("NAME", "\"Zs7LIP_3M\"")
            .and().insertInto("ACTIVITY", 30977L)
            .and().insertInto("ACTIVITY", 30976L)
            .and().insertInto("ACTIVITY_PROPERTIES", 30975L)
                .r("ACTIVITY_ID", 30972L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 30974L)
                .r("ACTIVITY_PROPERTIES_ID", 30361L)
                .r("TAG_ID", 30979L)
            .and().insertInto("MEDIA_FILE", 30987L)
                .d("URI", "\"5gCUEkbK0s\"")
            .and().insertInto("TAG", 30986L)
                .d("GRP", "\"eWQLCW4Yv\"")
                .d("NAME", "\"BUghjj9edcpsUja\"")
            .and().insertInto("USERS", 30985L)
                .d("AUTHORIZATION_LEVEL", "-768")
                .d("NAME", "\"ppNRkSn\"")
            .and().insertInto("ACTIVITY", 30984L)
            .and().insertInto("ACTIVITY", 30983L)
            .and().insertInto("ACTIVITY_PROPERTIES", 30982L)
                .r("ACTIVITY_ID", 17384L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 30981L)
                .r("ACTIVITY_PROPERTIES_ID", 17386L)
                .r("TAG_ID", 30979L)
            .and().insertInto("MEDIA_FILE", 30994L)
                .d("URI", "\"8yV\"")
            .and().insertInto("TAG", 30993L)
                .d("GRP", "\"6359323\"")
                .d("NAME", "\"ZZcqvhdI\"")
            .and().insertInto("USERS", 30992L)
                .d("AUTHORIZATION_LEVEL", "706")
                .d("NAME", "\"mk\"")
            .and().insertInto("ACTIVITY", 30991L)
            .and().insertInto("ACTIVITY", 30990L)
            .and().insertInto("ACTIVITY_PROPERTIES", 30989L)
                .r("ACTIVITY_ID", 17388L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 30988L)
                .r("ACTIVITY_PROPERTIES_ID", 30373L)
                .r("TAG_ID", 30986L)
            .and().insertInto("MEDIA_FILE", 31001L)
                .d("URI", "\"_EM_138538_XYZ_\"")
            .and().insertInto("TAG", 31000L)
                .d("GRP", "\"a4SULUfGctk\"")
                .d("NAME", "\"wr1U2\"")
            .and().insertInto("USERS", 30999L)
                .d("AUTHORIZATION_LEVEL", "498")
                .d("NAME", "\"_EM_138539_XYZ_\"")
            .and().insertInto("ACTIVITY", 30998L)
            .and().insertInto("ACTIVITY", 30997L)
            .and().insertInto("ACTIVITY_PROPERTIES", 30996L)
                .r("ACTIVITY_ID", 17401L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 30995L)
                .r("ACTIVITY_PROPERTIES_ID", 17386L)
                .r("TAG_ID", 30986L)
            .and().insertInto("MEDIA_FILE", 38593L)
                .d("URI", "\"9HIDqJhz_\"")
            .and().insertInto("TAG", 38592L)
                .d("GRP", "\"WoIbeyW5t\"")
                .d("NAME", "\"_EM_150041_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 38591L)
                .r("TAG_ID", 30979L)
                .d("ACTIVITIES_COUNT", "535")
            .and().insertInto("MEDIA_FILE", 38596L)
                .d("URI", "\"s3FBwntnYI45zW3\"")
            .and().insertInto("TAG", 38595L)
                .d("GRP", "\"LE6HlBKlE4J\"")
                .d("NAME", "\"\"")
            .and().insertInto("TAG_DERIVED", 38594L)
                .r("TAG_ID", 31000L)
                .d("ACTIVITIES_COUNT", "814")
            .and().insertInto("MEDIA_FILE", 38599L)
                .d("URI", "\"PvhF\"")
            .and().insertInto("TAG", 38598L)
                .d("GRP", "\"MdebYqM\"")
                .d("NAME", "\"C2mSh\"")
            .and().insertInto("TAG_DERIVED", 38597L)
                .r("TAG_ID", 30993L)
                .d("ACTIVITIES_COUNT", "493")
            .and().insertInto("MEDIA_FILE", 38602L)
                .d("URI", "\"U\"")
            .and().insertInto("TAG", 38601L)
                .d("GRP", "\"AGeIiCPSFI6ofsN\"")
                .d("NAME", "\"YNGR7sloW6m\"")
            .and().insertInto("TAG_DERIVED", 38600L)
                .r("TAG_ID", 38595L)
                .d("ACTIVITIES_COUNT", "533")
            .and().insertInto("MEDIA_FILE", 38605L)
                .d("URI", "\"IEZ\"")
            .and().insertInto("TAG", 38604L)
                .d("GRP", "\"F0aI7P_KWq_D4c89\"")
                .d("NAME", "\"INl\"")
            .and().insertInto("TAG_DERIVED", 38603L)
                .r("TAG_ID", 38604L)
                .d("ACTIVITIES_COUNT", "708")
            .and().insertInto("SYSTEM_MESSAGE", 38653L)
                .d("KEY", "\"xSgb\"")
                .d("VALID_FROM", "\"2050-01-23 15:25:20\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"l9fa0zBgl5oKDEyo\"")
            .and().insertInto("USERS", 38768L)
                .d("AUTHORIZATION_LEVEL", "738")
                .d("NAME", "\"14UiLg\"")
            .and().insertInto("ACTIVITY", 38767L)
            .and().insertInto("ACTIVITY_RATING", 38766L)
                .r("ACTIVITY_ID", 17397L)
                .r("USER_ID", 38768L)
                .d("FAVOURITE", "false")
                .d("RATING", "263")
            .and().insertInto("USERS", 38771L)
                .d("AUTHORIZATION_LEVEL", "132")
                .d("NAME", "\"Rng\"")
            .and().insertInto("ACTIVITY", 38770L)
            .and().insertInto("ACTIVITY_RATING", 38769L)
                .r("ACTIVITY_ID", 30977L)
                .r("USER_ID", 30388L)
                .d("FAVOURITE", "true")
                .d("RATING", "597")
            .and().insertInto("USERS", 38774L)
                .d("AUTHORIZATION_LEVEL", "683")
                .d("NAME", "\"3BAgrE\"")
            .and().insertInto("ACTIVITY", 38773L)
            .and().insertInto("ACTIVITY_RATING", 38772L)
                .r("ACTIVITY_ID", 38767L)
                .r("USER_ID", 30376L)
                .d("FAVOURITE", "true")
                .d("RATING", "392")
            .and().insertInto("USERS", 38777L)
                .d("AUTHORIZATION_LEVEL", "945")
                .d("NAME", "\"PkohU\"")
            .and().insertInto("ACTIVITY", 38776L)
            .and().insertInto("ACTIVITY_RATING", 38775L)
                .r("ACTIVITY_ID", 17384L)
                .r("USER_ID", 30985L)
                .d("FAVOURITE", "false")
                .d("RATING", "188")
            .and().insertInto("USERS", 38780L)
                .d("AUTHORIZATION_LEVEL", "152")
                .d("NAME", "\"ikVJaGGAUzbhPx\"")
            .and().insertInto("ACTIVITY", 38779L)
            .and().insertInto("ACTIVITY_RATING", 38778L)
                .r("ACTIVITY_ID", 30380L)
                .r("USER_ID", 17393L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("ACTIVITY", 16294L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/favourites?" + 
                    "ratings_average_min=8ec5&" + 
                    "text=In")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=QwNX&" + 
                    "name=%2F&" + 
                    "featured=true&" + 
                    "durations=_EM_62323_XYZ_&" + 
                    "ratings_count_min=0&" + 
                    "ratings_average_min=1.291574721015416&" + 
                    "random=50&" + 
                    "favourites=23")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"8JHxK\", " + 
                    " \"description_introduction\": \"ta8MOnWqdXa\", " + 
                    " \"description_prepare\": \"dOYbBsK3zQ\", " + 
                    " \"description_main\": \"DREWICKmBVCJn\", " + 
                    " \"age_min\": -2147482871, " + 
                    " \"age_max\": -332, " + 
                    " \"participants_min\": 851, " + 
                    " \"participants_max\": 863, " + 
                    " \"time_min\": 765, " + 
                    " \"time_max\": 675, " + 
                    " \"featured\": true " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("8JHxK"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-29T07:34:32.352Z"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("ta8MOnWqdXa"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("dOYbBsK3zQ"))
                .body("'properties_revisions'[0].'description_main'", containsString("DREWICKmBVCJn"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-2.147482871E9))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-332.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(851.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(863.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(765.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(675.0))
                .body("'properties_revisions'[0].'featured'", equalTo(true))
                .body("'properties'.'name'", containsString("8JHxK"))
                .body("'properties'.'date_created'", containsString("2024-05-29T07:34:32.352Z"))
                .body("'properties'.'description_introduction'", containsString("ta8MOnWqdXa"))
                .body("'properties'.'description_prepare'", containsString("dOYbBsK3zQ"))
                .body("'properties'.'description_main'", containsString("DREWICKmBVCJn"))
                .body("'properties'.'age_min'", numberMatches(-2.147482871E9))
                .body("'properties'.'age_max'", numberMatches(-332.0))
                .body("'properties'.'participants_min'", numberMatches(851.0))
                .body("'properties'.'participants_max'", numberMatches(863.0))
                .body("'properties'.'time_min'", numberMatches(765.0))
                .body("'properties'.'time_max'", numberMatches(675.0))
                .body("'properties'.'featured'", equalTo(true))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_3.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/755?ratings_average_min=V&name=8JHxK&key=URBr5_mm6J5&attrs=UH"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        ValidatableResponse res_5 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/system_messages/943882555?" + 
                    "name=NofdRf6BUtQ0kws&" + 
                    "ratings_count_min=nu&" + 
                    "ages=w9x_KDf&" + 
                    "attrs=")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_102_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_5.extract().statusCode()));
    }
    
    
    /**
    * [test_77_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_77_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 5295L)
                .d("AUTHORIZATION_LEVEL", "161")
                .d("DATE_CREATED", "\"2001-07-02 00:16:17\"")
                .d("EMAIL_ADDRESS", "\"\"")
                .d("NAME", "\"Vwt4Di\"")
            .and().insertInto("USERS", 5296L)
                .d("AUTHORIZATION_LEVEL", "195")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "\"K5DyIN6WLnhE0crD\"")
                .d("NAME", "\"mN07CE\"")
            .and().insertInto("USERS", 5297L)
                .d("AUTHORIZATION_LEVEL", "995")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"7cs\"")
            .and().insertInto("USERS", 5298L)
                .d("AUTHORIZATION_LEVEL", "789")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "\"f\"")
                .d("NAME", "\"zw3vK\"")
            .and().insertInto("USERS", 5299L)
                .d("AUTHORIZATION_LEVEL", "207")
                .d("DATE_CREATED", "\"2077-10-25 04:02:58\"")
                .d("EMAIL_ADDRESS", "\"fPObp0bwgu\"")
                .d("NAME", "\"f66QpagG1t\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"UhIijLtVQC\", " + 
                    " \"description_main\": \"35b85NloF0\", " + 
                    " \"participants_min\": 117, " + 
                    " \"participants_max\": 397, " + 
                    " \"time_max\": 527, " + 
                    " \"source\": \"f_oxs9k1M\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-29T07:34:37.516Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("UhIijLtVQC"))
                .body("'properties_revisions'[0].'description_main'", containsString("35b85NloF0"))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(117.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(397.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(527.0))
                .body("'properties_revisions'[0].'source'", containsString("f_oxs9k1M"))
                .body("'properties'.'date_created'", containsString("2024-05-29T07:34:37.516Z"))
                .body("'properties'.'description_material'", containsString("UhIijLtVQC"))
                .body("'properties'.'description_main'", containsString("35b85NloF0"))
                .body("'properties'.'participants_min'", numberMatches(117.0))
                .body("'properties'.'participants_max'", numberMatches(397.0))
                .body("'properties'.'time_max'", numberMatches(527.0))
                .body("'properties'.'source'", containsString("f_oxs9k1M"))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/421/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_112_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/421/rating"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_23664_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"Lzyvj78Axw14i1I\", " + 
                    " \"uri\": \"khu0bDuX89FR6b\", " + 
                    " \"name\": \"P1Y9qcu\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("Lzyvj78Axw14i1I"))
                .body("'uri'", containsString("khu0bDuX89FR6b"))
                .body("'name'", containsString("P1Y9qcu"));
        location_media_files = "/api/v1/media_files" + "/" + res_3.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_23664_XYZ_")
                .get(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/592/file?EMextraParam123=_EM_23663_XYZ_&featured=9v7Hfah__&ratings_average_min=WkLQckmmdtWOd&age_1=JYvZwVB"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_268_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_78_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_78_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_14042_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 2439579728149028491, " + 
                    " \"name\": \"X\", " + 
                    " \"description_material\": \"_EM_14026_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_46564_XYZ_\", " + 
                    " \"description_prepare\": \"4668031\", " + 
                    " \"description_main\": \"qMGwEL9e5\", " + 
                    " \"description_safety\": \"_EM_14030_XYZ_\", " + 
                    " \"description_notes\": \"_EM_14031_XYZ_\", " + 
                    " \"age_min\": -1459728498, " + 
                    " \"age_max\": 100, " + 
                    " \"participants_min\": 993202, " + 
                    " \"participants_max\": 1348467883, " + 
                    " \"time_min\": 771, " + 
                    " \"time_max\": 1444955248, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"_EM_16591_XYZ_\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 2349, " + 
                    " \"group\": \"jG\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 660, " + 
                    " \"mime_type\": \"_EM_14035_XYZ_\", " + 
                    " \"uri\": \"_EM_14036_XYZ_\", " + 
                    " \"name\": \"_EM_14037_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 1049445 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"pUxQYY\", " + 
                    " \"uri\": \"\", " + 
                    " \"copy_right\": \"dLvTJhQ3RNt1kXfM\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 355, " + 
                    " \"email_address\": \"_EM_14040_XYZ_\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 0, " + 
                    " \"ratings_average\": 0.9651248864562795, " + 
                    " \"favourites_count\": -8125552, " + 
                    " \"ratings_sum\": 528, " + 
                    " \"ratings_count\": 249, " + 
                    " \"related\": [ " + 
                    " -743226153, " + 
                    " -2096332, " + 
                    " 407 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_19_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_79_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_79_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 2439579728149027467, " + 
                    " \"name\": \"X\", " + 
                    " \"description_material\": \"_EM_14026_XYZ_\", " + 
                    " \"description_introduction\": \"CErZMNvJaK22ErON\", " + 
                    " \"description_prepare\": \"4668031\", " + 
                    " \"description_main\": \"O1p_A0_BT\", " + 
                    " \"description_safety\": \"_EM_14030_XYZ_G\", " + 
                    " \"description_notes\": \"_EM_14031_XYZ_q\", " + 
                    " \"age_min\": -976635046, " + 
                    " \"age_max\": 45, " + 
                    " \"participants_min\": 993200, " + 
                    " \"participants_max\": 1348467883, " + 
                    " \"time_min\": 771, " + 
                    " \"time_max\": 1444955184, " + 
                    " \"source\": \"_EM_16591_XYZ_\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 2477, " + 
                    " \"group\": \"_EM_42856_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 660, " + 
                    " \"mime_type\": \"_EM_14035_XYZ_\", " + 
                    " \"uri\": \"_EM_14036_XYZ_\", " + 
                    " \"name\": \"_EM_14037_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 869 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"NsSo5\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 283, " + 
                    " \"mime_type\": \"TD\", " + 
                    " \"uri\": \"\", " + 
                    " \"name\": \"J7Bl4DFRCAz7\", " + 
                    " \"copy_right\": \"kJ\" " + 
                    " }, " + 
                    " \"activities_count\": 827 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [], " + 
                    " \"author\": { " + 
                    " \"id\": 355, " + 
                    " \"name\": \"_EM_14039_XYZ_\", " + 
                    " \"email_address\": \"_EM_14040_XYZ_\", " + 
                    " \"identities\": [] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 0, " + 
                    " \"favourites_count\": -8125550, " + 
                    " \"ratings_sum\": 528, " + 
                    " \"ratings_count\": 247, " + 
                    " \"related\": [ " + 
                    " -743226153, " + 
                    " -2096332, " + 
                    " 407 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_80_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_80_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_14042_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 2439579728149027467, " + 
                    " \"name\": \"X\", " + 
                    " \"description_material\": \"_EM_14026_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_14027_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_14028_XYZ_\", " + 
                    " \"description_main\": \"_EM_14029_XYZ_\", " + 
                    " \"description_safety\": \"_EM_14030_XYZ_\", " + 
                    " \"description_notes\": \"ufOTElhDNCr8Mj\", " + 
                    " \"age_min\": -1073878140, " + 
                    " \"age_max\": -124, " + 
                    " \"participants_min\": -8383582, " + 
                    " \"participants_max\": 402655091, " + 
                    " \"time_min\": 771, " + 
                    " \"time_max\": 143, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 3146157, " + 
                    " \"group\": \"_EM_48395_XYZ_\", " + 
                    " \"name\": \"_EM_14034_XYZ_\", " + 
                    " \"activities_count\": 869 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": -974150718, " + 
                    " \"uri\": \"svR7elTVSFFN6\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 355, " + 
                    " \"email_address\": \"r_jqaspsnUMdRZG\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 950, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.9651248864562795, " + 
                    " \"favourites_count\": 914, " + 
                    " \"ratings_sum\": 544, " + 
                    " \"ratings_count\": 243, " + 
                    " \"related\": [ " + 
                    " -709671721, " + 
                    " 1332, " + 
                    " 407 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=_EM_14041_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_81_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_81_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 18109L)
                .d("URI", "\"_EM_69595_XYZ_\"")
            .and().insertInto("TAG", 18108L)
                .d("GRP", "\"_EM_69596_XYZ_\"")
                .d("NAME", "\"tvlMO6CG\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("ACTIVITY", 18110L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "group=5hIwfmwbP6d&" + 
                    "min_activities_count=626&" + 
                    "attrs=KG4ZFPnyY7EK0g")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_69597_XYZ_\", " + 
                    " \"description_safety\": \"_EM_69600_XYZ_\", " + 
                    " \"description_notes\": \"_EM_69601_XYZ_\", " + 
                    " \"participants_max\": 801, " + 
                    " \"time_max\": 42, " + 
                    " \"featured\": true, " + 
                    " \"activity\": { " + 
                    " \"ratings_average\": 0.20097034362439115, " + 
                    " \"related\": [ " + 
                    " 403 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-29T07:34:34.886Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("_EM_69597_XYZ_"))
                .body("'properties_revisions'[0].'description_safety'", containsString("_EM_69600_XYZ_"))
                .body("'properties_revisions'[0].'description_notes'", containsString("_EM_69601_XYZ_"))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(801.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(42.0))
                .body("'properties_revisions'[0].'featured'", equalTo(true))
                .body("'properties'.'date_created'", containsString("2024-05-29T07:34:34.886Z"))
                .body("'properties'.'description_material'", containsString("_EM_69597_XYZ_"))
                .body("'properties'.'description_safety'", containsString("_EM_69600_XYZ_"))
                .body("'properties'.'description_notes'", containsString("_EM_69601_XYZ_"))
                .body("'properties'.'participants_max'", numberMatches(801.0))
                .body("'properties'.'time_max'", numberMatches(42.0))
                .body("'properties'.'featured'", equalTo(true))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_1.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 951 " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/951/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating_78_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/951/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_120_deleteRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"_EM_69633_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("_EM_69633_XYZ_"));
        
    }
    
    
    /**
    * [test_82_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_82_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 459L)
            .and().insertInto("ACTIVITY", 460L)
            .and().insertInto("ACTIVITY", 461L)
            .and().insertInto("ACTIVITY", 462L)
            .and().insertInto("ACTIVITY", 463L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/732/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"5q\", " + 
                    " \"date_updated\": \"1923-04-16T08:60:34\", " + 
                    " \"description_material\": \"\", " + 
                    " \"description_prepare\": \"4vPyHNsb\", " + 
                    " \"description_main\": \"Iiztf\", " + 
                    " \"age_min\": -2147483187, " + 
                    " \"age_max\": -2147483187, " + 
                    " \"participants_min\": 907, " + 
                    " \"time_min\": 233, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"xpxndk2hpx4Dm\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 424, " + 
                    " \"group\": \"ni_Cp_NQZDF5Cz\", " + 
                    " \"name\": \"XzQj\", " + 
                    " \"activities_count\": 47 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"wJZKSotWGknT2\", " + 
                    " \"authorization_level\": 581, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"type\": \"API\" " + 
                    " } " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"5q\", " + 
                    " \"description_main\": \"\", " + 
                    " \"description_notes\": \"\", " + 
                    " \"time_min\": -2147483187, " + 
                    " \"time_max\": -2147483187, " + 
                    " \"source\": \"xpxndk2hpx4Dm\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("5q"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-29T07:34:36.951Z"))
                .body("'properties_revisions'[0].'description_main'", containsString(""))
                .body("'properties_revisions'[0].'description_notes'", containsString(""))
                .body("'properties_revisions'[0].'time_min'", numberMatches(-2.147483187E9))
                .body("'properties_revisions'[0].'time_max'", numberMatches(-2.147483187E9))
                .body("'properties_revisions'[0].'source'", containsString("xpxndk2hpx4Dm"))
                .body("'properties'.'name'", containsString("5q"))
                .body("'properties'.'date_created'", containsString("2024-05-29T07:34:36.951Z"))
                .body("'properties'.'description_main'", containsString(""))
                .body("'properties'.'description_notes'", containsString(""))
                .body("'properties'.'time_min'", numberMatches(-2.147483187E9))
                .body("'properties'.'time_max'", numberMatches(-2.147483187E9))
                .body("'properties'.'source'", containsString("xpxndk2hpx4Dm"))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_3.extract().body().path("id").toString();
        
        
        ValidatableResponse res_4 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .patch(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/511?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityProperties_369_isContentEqual
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_4.extract().statusCode()));
        
        ValidatableResponse res_5 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 511, " + 
                    " \"description_introduction\": \"MWGI5WD3\", " + 
                    " \"description_safety\": \"\", " + 
                    " \"description_notes\": \"\", " + 
                    " \"age_min\": -2147483187, " + 
                    " \"age_max\": -2147483187, " + 
                    " \"participants_min\": 907, " + 
                    " \"source\": \"xpxndk2hpx4Dm\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 424, " + 
                    " \"group\": \"ni_Cp_NQZDF5Cz\", " + 
                    " \"name\": \"XzQj\", " + 
                    " \"activities_count\": 47 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"wJZKSotWGknT2\", " + 
                    " \"authorization_level\": 581, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"type\": \"API\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 386, " + 
                    " \"properties_revisions\": [] " + 
                    " } " + 
                    " } ")
                .patch(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/511?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_184_unsetPublishedProperties
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_5.extract().statusCode()));
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/system/roles")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
        
    }
    
    
    /**
    * [test_83_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_83_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 34692L)
                .d("KEY", "\"r\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2085-11-03 13:10:51\"")
                .d("VALUE", "\"_EM_144256_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 34694L)
                .d("URI", "\"5kWWMxHNGv1n4\"")
            .and().insertInto("TAG", 34693L)
                .d("GRP", "\"TMZIoQGNcPOSv\"")
                .d("NAME", "\"tTuNCGMVb\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("ACTIVITY", 34695L)
            .and().insertInto("USERS", 34696L)
                .d("AUTHORIZATION_LEVEL", "733")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "\"ew8m4yrs9oN\"")
                .d("NAME", "\"pawy\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_144232_XYZ_\", " + 
                    " \"description_safety\": \"\", " + 
                    " \"description_notes\": \"KIR16f9jl5Lx1bhY\", " + 
                    " \"age_min\": -2147482765, " + 
                    " \"participants_min\": 668, " + 
                    " \"participants_max\": 202, " + 
                    " \"time_min\": 835 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-29T07:34:38.207Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("_EM_144232_XYZ_"))
                .body("'properties_revisions'[0].'description_safety'", containsString(""))
                .body("'properties_revisions'[0].'description_notes'", containsString("KIR16f9jl5Lx1bhY"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-2.147482765E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(668.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(202.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(835.0))
                .body("'properties'.'date_created'", containsString("2024-05-29T07:34:38.207Z"))
                .body("'properties'.'description_material'", containsString("_EM_144232_XYZ_"))
                .body("'properties'.'description_safety'", containsString(""))
                .body("'properties'.'description_notes'", containsString("KIR16f9jl5Lx1bhY"))
                .body("'properties'.'age_min'", numberMatches(-2.147482765E9))
                .body("'properties'.'participants_min'", numberMatches(668.0))
                .body("'properties'.'participants_max'", numberMatches(202.0))
                .body("'properties'.'time_min'", numberMatches(835.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 800 " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/800/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating_78_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/800?" + 
                    "valid=2085-11-03+13%3A10%3A51&" + 
                    "time_1=JvWzk&" + 
                    "ratings_average_min=EwxG0K6SPX&" + 
                    "age_2=J&" + 
                    "ratings_count_min=6tqtSyUfxEyAd")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories/800?" + 
                    "attrs=jC&" + 
                    "my_favourites=ioi1mbN0lECpZ&" + 
                    "ratings_count_min=6tqtSyUfxEyAd&" + 
                    "name=pawy&" + 
                    "ages=IKeq&" + 
                    "durations=U_CO9o5&" + 
                    "ratings_average_min=EwxG0K6SPX&" + 
                    "time_1=JvWzk&" + 
                    "categories=&" + 
                    "time_2=kYoXCmBFFmiq")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities/800?attrs=jC")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users?" + 
                    "name=pawy&" + 
                    "attrs=jC&" + 
                    "time_1=JvWzk&" + 
                    "favourites=W&" + 
                    "ratings_average_min=EwxG0K6SPX&" + 
                    "age_1=&" + 
                    "text=V7_m6AjyGXHpNC&" + 
                    "participants=yTpMgGUXVu")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("'[0]'.isEmpty()", is(true));
        
        
        ValidatableResponse res_6 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -6648432063336613570, " + 
                    " \"group\": \"y0c\", " + 
                    " \"activities_count\": 316 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/tags/800")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_6.extract().statusCode()));
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/profile?" + 
                    "random=wpEcIQGRk&" + 
                    "ratings_average_min=EwxG0K6SPX&" + 
                    "participants=yTpMgGUXVu&" + 
                    "time_1=JvWzk&" + 
                    "min_activities_count=LQV&" + 
                    "favourites=W")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'role_permissions'.size()", equalTo(18))
                .body("'role_permissions'", hasItems("activity_create", "activity_edit", "activity_edit_own", "auth_profile_edit", "auth_role_assignown", "category_create", "category_edit", "comment_create", "comment_edit", "comment_edit_own", "mediaitem_create", "mediaitem_edit", "mediaitem_edit_own", "rating_set_own", "reference_create", "reference_edit", "reference_edit_own", "system_message_read"))
                .body("'name'", containsString("INTEGRATION TEST MODERATOR"))
                .body("'role'", containsString("moderator"));
        
    }
    
    
    /**
    * [test_84_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_84_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 4282L)
                .d("KEY", "\"\"")
                .d("VALID_FROM", "\"1963-05-28 17:14:21\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"eiQGAS\"")
            .and().insertInto("SYSTEM_MESSAGE", 4283L)
                .d("KEY", "\"_EM_43168_XYZ_\"")
                .d("VALID_FROM", "\"2061-06-25 11:29:16\"")
                .d("VALID_TO", "\"2046-02-26 06:11:49\"")
                .d("VALUE", "\"_EM_42065_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 4284L)
                .d("KEY", "\"_EM_42066_XYZ_\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2018-08-18 14:54:39\"")
                .d("VALUE", "\"A2GQTUQ17J9Cox\"")
            .and().insertInto("SYSTEM_MESSAGE", 4285L)
                .d("KEY", "\"xHRH4x6PAKQK5PkI\"")
                .d("VALID_FROM", "\"1926-07-04 08:19:33\"")
                .d("VALID_TO", "\"1913-06-28 15:55:44\"")
                .d("VALUE", "\"_EM_42067_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 4286L)
                .d("KEY", "\"_EM_43169_XYZ_\"")
                .d("VALID_FROM", "\"2064-03-10 09:16:16\"")
                .d("VALID_TO", "\"1949-12-04 00:55:43\"")
                .d("VALUE", "\"2061-09-30 22:39:51\"")
            .and().insertInto("ACTIVITY", 10062L)
            .and().insertInto("ACTIVITY", 10063L)
            .and().insertInto("MEDIA_FILE", 10069L)
                .d("URI", "\"_EM_43170_XYZ_\"")
            .and().insertInto("TAG", 10068L)
                .d("GRP", "\"nONloR7v\"")
                .d("NAME", "\"5KK2Q_M\"")
            .and().insertInto("TAG_DERIVED", 10067L)
                .r("TAG_ID", 10068L)
                .d("ACTIVITIES_COUNT", "-141")
            .and().insertInto("MEDIA_FILE", 10072L)
                .d("URI", "\"IxzI\"")
            .and().insertInto("TAG", 10071L)
                .d("GRP", "\"gRwpAmUfxrEY\"")
                .d("NAME", "\"_EM_43171_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 10070L)
                .r("TAG_ID", 10071L)
                .d("ACTIVITIES_COUNT", "209")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_categories = "";
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"IB4yuxyT7fGMNu\", " + 
                    " \"name\": \"WL7FRHO5UzZ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("IB4yuxyT7fGMNu"))
                .body("'name'", containsString("WL7FRHO5UzZ"))
                .body("'activities_count'", numberMatches(0.0));
        location_categories = "/api/v1/categories" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"c\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"eiQGAS\", " + 
                    " \"uri\": \"AoaZ5y4F\", " + 
                    " \"capture_date\": \"1985-11-11T17:46:20\", " + 
                    " \"copy_right\": \"tyuY7\" " + 
                    " } " + 
                    " } ")
                .put(resolveLocation(location_categories, baseUrlOfSut + "/api/v1/categories/-134217654?EMextraParam123=42"))
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/system_messages/165?attrs=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"SGlTKY\", " + 
                    " \"activities_count\": 8 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories?" + 
                    "min_activities_count=8&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'group'", containsString("gRwpAmUfxrEY"))
                .body("[0].'name'", containsString("_EM_43171_XYZ_"))
                .body("[0].'media_file'", nullValue())
                .body("[0].'activities_count'", numberMatches(209.0));
        
        
        ValidatableResponse res_5 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"uxnBrjvHnH\", " + 
                    " \"description_material\": \"PJMTlX1U4YLv8X\", " + 
                    " \"description_notes\": \"Ipi59cZoeffI\", " + 
                    " \"age_min\": -366, " + 
                    " \"age_max\": -2147483292, " + 
                    " \"time_min\": 57, " + 
                    " \"time_max\": 220, " + 
                    " \"source\": \"U5QsV\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("uxnBrjvHnH"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-29T07:34:33.178Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("PJMTlX1U4YLv8X"))
                .body("'properties_revisions'[0].'description_notes'", containsString("Ipi59cZoeffI"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-366.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147483292E9))
                .body("'properties_revisions'[0].'time_min'", numberMatches(57.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(220.0))
                .body("'properties_revisions'[0].'source'", containsString("U5QsV"))
                .body("'properties'.'name'", containsString("uxnBrjvHnH"))
                .body("'properties'.'date_created'", containsString("2024-05-29T07:34:33.178Z"))
                .body("'properties'.'description_material'", containsString("PJMTlX1U4YLv8X"))
                .body("'properties'.'description_notes'", containsString("Ipi59cZoeffI"))
                .body("'properties'.'age_min'", numberMatches(-366.0))
                .body("'properties'.'age_max'", numberMatches(-2.147483292E9))
                .body("'properties'.'time_min'", numberMatches(57.0))
                .body("'properties'.'time_max'", numberMatches(220.0))
                .body("'properties'.'source'", containsString("U5QsV"))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_5.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"favourite\": true " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/896/rating?EMextraParam123=42"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/896/rating"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    /**
    * [test_85_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_85_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 459L)
            .and().insertInto("ACTIVITY", 460L)
            .and().insertInto("ACTIVITY", 461L)
            .and().insertInto("ACTIVITY", 462L)
            .and().insertInto("ACTIVITY", 463L)
            .and().insertInto("MEDIA_FILE", 9154L)
                .d("URI", "\"Xek56pbG0jNECgx\"")
            .and().insertInto("TAG", 9153L)
                .d("GRP", "\"\"")
                .d("NAME", "\"lxYH0Xkxs9xwG8\"")
                .r("MEDIA_FILE_ID", 9154L)
            .and().insertInto("MEDIA_FILE", 9156L)
                .d("URI", "\"RzxCme\"")
            .and().insertInto("TAG", 9155L)
                .d("GRP", "\"VQ2Rl\"")
                .d("NAME", "\"QCkTp9eSHzmUC\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 9158L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 9157L)
                .d("GRP", "\"Z7XHzMLy6w\"")
                .d("NAME", "\"gzJSRXfZYkGb_2T\"")
                .r("MEDIA_FILE_ID", 9156L)
            .and().insertInto("MEDIA_FILE", 9160L)
                .d("URI", "\"myMqJccBunHfUVMo\"")
            .and().insertInto("TAG", 9159L)
                .d("GRP", "\"A8\"")
                .d("NAME", "\"98XOTy\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 9162L)
                .d("URI", "\"jLKSrgMQ5U\"")
            .and().insertInto("TAG", 9161L)
                .d("GRP", "\"0V_Ok5\"")
                .d("NAME", "\"Ka0eMP\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/732/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"5q\", " + 
                    " \"description_introduction\": \"l75OQueW6oLC6Lj\", " + 
                    " \"description_main\": \"\", " + 
                    " \"description_notes\": \"\", " + 
                    " \"age_min\": -2147474995, " + 
                    " \"participants_min\": 82, " + 
                    " \"time_min\": -2147474995, " + 
                    " \"time_max\": -2147474995, " + 
                    " \"source\": \"xpxndk2hpx4Dm\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("5q"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-29T07:34:37.76Z"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("l75OQueW6oLC6Lj"))
                .body("'properties_revisions'[0].'description_main'", containsString(""))
                .body("'properties_revisions'[0].'description_notes'", containsString(""))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-2.147474995E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(82.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(-2.147474995E9))
                .body("'properties_revisions'[0].'time_max'", numberMatches(-2.147474995E9))
                .body("'properties_revisions'[0].'source'", containsString("xpxndk2hpx4Dm"))
                .body("'properties'.'name'", containsString("5q"))
                .body("'properties'.'date_created'", containsString("2024-05-29T07:34:37.76Z"))
                .body("'properties'.'description_introduction'", containsString("l75OQueW6oLC6Lj"))
                .body("'properties'.'description_main'", containsString(""))
                .body("'properties'.'description_notes'", containsString(""))
                .body("'properties'.'age_min'", numberMatches(-2.147474995E9))
                .body("'properties'.'participants_min'", numberMatches(82.0))
                .body("'properties'.'time_min'", numberMatches(-2.147474995E9))
                .body("'properties'.'time_max'", numberMatches(-2.147474995E9))
                .body("'properties'.'source'", containsString("xpxndk2hpx4Dm"))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_3.extract().body().path("id").toString();
        
        
        ValidatableResponse res_4 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .patch(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/639"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityProperties_369_isContentEqual
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_4.extract().statusCode()));
        
        ValidatableResponse res_5 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 639, " + 
                    " \"name\": \"5q\", " + 
                    " \"description_introduction\": \"MWGE5WD\", " + 
                    " \"description_safety\": \"\", " + 
                    " \"description_notes\": \"\", " + 
                    " \"age_min\": -2147474995, " + 
                    " \"age_max\": -2147474995, " + 
                    " \"participants_min\": 907, " + 
                    " \"time_min\": 593, " + 
                    " \"source\": \"xpxndk2hpx4Dm\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 424, " + 
                    " \"group\": \"ni_Cp_NQZDF5Cz\", " + 
                    " \"name\": \"XzQj\", " + 
                    " \"activities_count\": 47 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"wJZKSotWGknT2\", " + 
                    " \"authorization_level\": 581, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"type\": \"API\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 386, " + 
                    " \"properties_revisions\": [] " + 
                    " } " + 
                    " } ")
                .patch(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/639"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_184_unsetPublishedProperties
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_5.extract().statusCode()));
        
        ValidatableResponse res_6 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_6.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "group=BEpDfI_QgjHK0c&" + 
                    "name=PjnijjTpvfbg&" + 
                    "valid=mzeE&" + 
                    "my_favourites=dqwa33dA7FJZUIR&" + 
                    "ratings_count_min=2IGTTPIqVuV&" + 
                    "ages=msoBhJUA2gJsR&" + 
                    "durations=fB3E&" + 
                    "participants=&" + 
                    "time_2=MbZ6gG4C7&" + 
                    "random=NRuOCj&" + 
                    "favourites=S7YALeURC&" + 
                    "categories=DjLCAScbM2wlqQ&" + 
                    "text=mlaWjqDxCqQWtmi&" + 
                    "uri=fEPnLjy")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    /**
    * [test_86_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_86_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/732/rating?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"MuXsZNFv\", " + 
                    " \"description_prepare\": \"lyDfaeCG0coa\", " + 
                    " \"description_notes\": \"BYyB4GV\", " + 
                    " \"age_max\": -306, " + 
                    " \"participants_min\": 73, " + 
                    " \"time_min\": 79, " + 
                    " \"time_max\": 720, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"activities_count\": 147 " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 3778879684237799115, " + 
                    " \"ratings_sum\": -1371157237, " + 
                    " \"related\": [ " + 
                    " 418, " + 
                    " -1137869267, " + 
                    " 659, " + 
                    " 583 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("MuXsZNFv"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-29T07:34:37.317Z"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("lyDfaeCG0coa"))
                .body("'properties_revisions'[0].'description_notes'", containsString("BYyB4GV"))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-306.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(73.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(79.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(720.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'tags'.size()", equalTo(1))
                .body("'properties_revisions'[0].'tags'[0].'group'", containsString("_EM_47986_XYZ_"))
                .body("'properties_revisions'[0].'tags'[0].'name'", containsString("apOV"))
                .body("'properties_revisions'[0].'tags'[0].'activities_count'", numberMatches(0.0))
                .body("'properties'.'name'", containsString("MuXsZNFv"))
                .body("'properties'.'date_created'", containsString("2024-05-29T07:34:37.317Z"))
                .body("'properties'.'description_prepare'", containsString("lyDfaeCG0coa"))
                .body("'properties'.'description_notes'", containsString("BYyB4GV"))
                .body("'properties'.'age_max'", numberMatches(-306.0))
                .body("'properties'.'participants_min'", numberMatches(73.0))
                .body("'properties'.'time_min'", numberMatches(79.0))
                .body("'properties'.'time_max'", numberMatches(720.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'tags'.size()", equalTo(1))
                .body("'properties'.'tags'[0].'group'", containsString("_EM_47986_XYZ_"))
                .body("'properties'.'tags'[0].'name'", containsString("apOV"))
                .body("'properties'.'tags'[0].'activities_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_1.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/761/rating?EMextraParam123=42"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/761/rating?attrs=k9J6k0pMZ_god"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'rating'", nullValue())
                .body("'favourite'", equalTo(false))
                .body("'activity'.isEmpty()", is(true))
                .body("'user'.isEmpty()", is(true));
        
        
        ValidatableResponse res_4 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 761, " + 
                    " \"group\": \"vy6E1c015Jp9_1v7\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 7792568423328113598, " + 
                    " \"mime_type\": \"tY2XEbPNZ\", " + 
                    " \"uri\": \"baEO3Fxn8X4\", " + 
                    " \"name\": \"8W0ecyddoOM\", " + 
                    " \"copy_right\": \"_EM_47985_XYZ_\", " + 
                    " \"author\": \"FeDhrX3oC8zZC\" " + 
                    " }, " + 
                    " \"activities_count\": 371 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_61_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_4.extract().statusCode()));
    }


}
