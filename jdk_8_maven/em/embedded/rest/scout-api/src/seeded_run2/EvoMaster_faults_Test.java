import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2024-05-30T06:34:58.796+02:00[Europe/Paris]
 * <br>
 * The generated test suite contains 87 tests
 * <br>
 * Covered targets: 1672
 * <br>
 * Used time: 2h 0m 55s
 * <br>
 * Needed budget for current results: 97%
 * <br>
 * This file contains test cases that are likely to indicate faults.
 */
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.se.devscout.scoutapi.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("tag","ACTIVITY_PROPERTIES_TAG","TAG_DERIVED","MEDIA_FILE","ACTIVITY_PROPERTIES_MEDIA_FILE","MEDIA_FILE_KEYWORDS","USERS","ACTIVITY_PROPERTIES","ACTIVITY_RATING","ACTIVITY_RELATION","USER_IDENTITY","ACTIVITY","ACTIVITY_DERIVED","SYSTEM_MESSAGE"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * [test_0_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_0_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "age_1=0eo0w46NV5G5uf&" + 
                    "participants=_EM_1952_XYZ_&" + 
                    "time_2=_EM_1954_XYZ_&" + 
                    "id=_EM_1955_XYZ_&" + 
                    "my_favourites=false&" + 
                    "ratings_count_min=265")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
    }
    
    
    /**
    * [test_1_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_1_with500() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "categories=_EM_139_XYZ_&" + 
                    "ages=_EM_140_XYZ_&" + 
                    "participants=_EM_141_XYZ_&" + 
                    "durations=_EM_142_XYZ_&" + 
                    "my_favourites=false&" + 
                    "ratings_count_min=537&" + 
                    "favourites=391")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_77_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
    }
    
    
    /**
    * [test_2_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_2_with500() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/media_files/3/file?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_3_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_3_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1856_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/system_messages/770")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_4_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_4_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/198?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_5_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_5_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 359L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_6990_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/activities/1106")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_6992_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_6993_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_6994_XYZ_\", " + 
                    " \"description_main\": \"_EM_6995_XYZ_\", " + 
                    " \"description_safety\": \"EVUbh\", " + 
                    " \"age_min\": -468, " + 
                    " \"participants_max\": 187, " + 
                    " \"time_max\": 420, " + 
                    " \"featured\": true, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 1869692186687106970, " + 
                    " \"ratings_average\": 0.48057404031736384, " + 
                    " \"ratings_count\": 296, " + 
                    " \"ratings_sum\": 697, " + 
                    " \"related\": [] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    /**
    * [test_6_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_6_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 16361L)
                .d("AUTHOR", "\"2oD1xvfHiI\"")
                .d("CAPTURE_DATE", "\"2036-01-08 07:29:00\"")
                .d("COPY_RIGHT", "\"_EM_62215_XYZ_\"")
                .d("MIME_TYPE", "\"9223372036854775807\"")
                .d("NAME", "\"_EM_60799_XYZ_\"")
                .d("URI", "\"_EM_62217_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 16362L)
                .d("AUTHOR", "\"oIDRW7jQOiWjB2yp\"")
                .d("CAPTURE_DATE", "\"1924-06-19 11:42:29\"")
                .d("COPY_RIGHT", "\"zxXziNB\"")
                .d("MIME_TYPE", "\"8AvzfmDPacfFWFdw\"")
                .d("NAME", "\"vPj4so\"")
                .d("URI", "\"g91VKKmql4p{\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/2/file?" + 
                    "size=174210235&" + 
                    "attrs=dg5sPzLmGfS&" + 
                    "uri=vvkfJQn9&" + 
                    "my_favourites=vvkfJQn9&" + 
                    "categories=MWlLX1yow&" + 
                    "name=fdwP3vBGGYP&" + 
                    "group=cauurhtXV2INpvJK")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_282_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
    }
    
    
    /**
    * [test_7_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_7_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 16361L)
                .d("AUTHOR", "\"2oD1xvfHiI\"")
                .d("CAPTURE_DATE", "\"2036-01-08 07:29:00\"")
                .d("COPY_RIGHT", "\"_EM_62215_XYZ_\"")
                .d("MIME_TYPE", "\"9223372036854775807\"")
                .d("NAME", "\"_EM_60799_XYZ_\"")
                .d("URI", "\"_EM_62217_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 16362L)
                .d("AUTHOR", "\"oIDRW7jQOiWjB2yp\"")
                .d("CAPTURE_DATE", "\"1924-06-19 11:42:29\"")
                .d("COPY_RIGHT", "\"zxXziNB\"")
                .d("MIME_TYPE", "\"8AvzfmDPacfFWFdw\"")
                .d("NAME", "\"vPj4so\"")
                .d("URI", "\"g91VKKmql4py\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/2/file?" + 
                    "size=174210235&" + 
                    "attrs=j9ttqao8GU&" + 
                    "categories=hhoLx&" + 
                    "name=9")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_268_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_8_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_8_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 6511L)
            .and().insertInto("ACTIVITY", 6512L)
            .and().insertInto("USERS", 13596L)
                .d("AUTHORIZATION_LEVEL", "297")
                .d("NAME", "\"_EM_53631_XYZ_\"")
            .and().insertInto("ACTIVITY", 13595L)
            .and().insertInto("ACTIVITY", 13594L)
            .and().insertInto("ACTIVITY_PROPERTIES", 13593L)
                .d("AGE_MAX", "-53")
                .d("AGE_MIN", "-2147483233")
                .d("DATE_CREATED", "\"1957-07-20 15:25:53\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"2007-02-10 08:25:04\"")
                .d("DESCRIPTION_INTRODUCTION", "\"Xa9rmETqv0LRhr2X\"")
                .d("DESCRIPTION_MAIN", "\"h9C9FS1qgB\"")
                .d("DESCRIPTION_MATERIAL", "\"nIsIE75daWFhIC\"")
                .d("DESCRIPTION_NOTES", "\"TnQ3QrD5ctCIAD\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "true")
                .d("NAME", "\"_EM_53632_XYZ_\"")
                .d("PARTICIPANTS_MAX", "270")
                .d("PARTICIPANTS_MIN", "846")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "186")
                .r("ACTIVITY_ID", 6512L)
                .d("AUTHOR_ID", "1")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 13600L)
                .d("AUTHORIZATION_LEVEL", "8389470")
                .d("NAME", "\"_EM_53633_XYZ_\"")
            .and().insertInto("ACTIVITY", 13599L)
            .and().insertInto("ACTIVITY", 13598L)
            .and().insertInto("ACTIVITY_PROPERTIES", 13597L)
                .d("AGE_MAX", "-167")
                .d("AGE_MIN", "-6")
                .d("DATE_CREATED", "\"2049-07-08 00:18:54\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1918-10-10 21:54:08\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"bgiNmEBZGNQDdG37\"")
                .d("DESCRIPTION_MATERIAL", "\"NwRlsbF\"")
                .d("DESCRIPTION_NOTES", "\"cd5ubb1C6\"")
                .d("DESCRIPTION_PREPARE", "\"pwR\"")
                .d("DESCRIPTION_SAFETY", "\"mjbTIEfZeTY\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"OOaHLsbLSOTjYLN3\"")
                .d("PARTICIPANTS_MAX", "-1173399186")
                .d("PARTICIPANTS_MIN", "13")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "904")
                .r("ACTIVITY_ID", 6512L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 13595L)
            .and().insertInto("ACTIVITY", 13602L)
            .and().insertInto("ACTIVITY_DERIVED", 13601L)
                .r("ACTIVITY_ID", 13602L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "35")
                .d("RATINGS_SUM", "4722453514909081114")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "name=&" + 
                    "featured=true&" + 
                    "ratings_count_min=-4193430&" + 
                    "favourites=202")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_68_lambda$all$2
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_9_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_9_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/tags?EMextraParam123=_EM_3715_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_10_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_10_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/users?EMextraParam123=_EM_5258_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_11_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_11_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_10745_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/users/802?EMextraParam123=_EM_10744_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_12_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_12_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/users/849?EMextraParam123=_EM_5077_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_48_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_13_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_13_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3555_XYZ_")
                .delete(baseUrlOfSut + "/api/v2/tags/462")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_14_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_14_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/657?EMextraParam123=_EM_5064_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_41_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_15_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_15_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/377?EMextraParam123=_EM_3541_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_16_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_16_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/FavouritesResourceV1_66_put
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_17_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_17_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3610_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/categories/2456532858867961747")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_18_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_18_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_40_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_19_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_19_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=_EM_1998_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_20_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_20_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"_EM_5242_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_33_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_21_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_21_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/784/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_22_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_22_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/694/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_23_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_23_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1794_XYZ_")
                .get(baseUrlOfSut + "/api/v1/activities/806/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_24_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_24_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_7185_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=_EM_7184_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_25_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_25_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1796_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/activities/964/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_26_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_26_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 8911575525964624807 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_62_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_27_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_27_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3538_XYZ_")
                .delete(baseUrlOfSut + "/api/v2/activities/225?EMextraParam123=_EM_3537_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_28_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_28_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v2/activities/-1028602869?EMextraParam123=_EM_3876_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_29_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_29_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .patch(baseUrlOfSut + "/api/v1/activities/397")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_30_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_30_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3606_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/activities/195008611")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_31_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_31_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 2676L)
                .d("KEY", "\"lKnDcHzWnToGIG\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1921-10-04 18:22:15\"")
                .d("VALUE", "\"S2\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 392 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/392")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_102_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_32_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_32_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/638?" + 
                    "verify_unused=true&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_33_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_33_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 692, " + 
                    " \"key\": \"_EM_10930_XYZ_\", " + 
                    " \"value\": \"_EM_10931_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_78_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_34_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_34_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3154L)
                .d("URI", "\"412819\"")
            .and().insertInto("TAG", 3153L)
                .d("GRP", "\"_EM_68515_XYZ_\"")
                .d("NAME", "\"hyVUK\"")
                .r("MEDIA_FILE_ID", 3154L)
            .and().insertInto("MEDIA_FILE", 3156L)
                .d("URI", "\"_EM_69037_XYZ_\"")
            .and().insertInto("TAG", 3155L)
                .d("GRP", "\"197679\"")
                .d("NAME", "\"530528\"")
                .r("MEDIA_FILE_ID", 3154L)
            .and().insertInto("MEDIA_FILE", 18376L)
                .d("URI", "\"mwmrJz0p16mcQG\"")
            .and().insertInto("TAG", 18375L)
                .d("GRP", "\"_EM_68516_XYZ_\"")
                .d("NAME", "\"N\"")
            .and().insertInto("TAG_DERIVED", 18374L)
                .r("TAG_ID", 3153L)
                .d("ACTIVITIES_COUNT", "131")
            .and().insertInto("MEDIA_FILE", 18379L)
                .d("URI", "\"_EM_69038_XYZ_\"")
            .and().insertInto("TAG", 18378L)
                .d("GRP", "\"Q95XuKUU\"")
                .d("NAME", "\"yQ5h\"")
            .and().insertInto("TAG_DERIVED", 18377L)
                .r("TAG_ID", 18378L)
                .d("ACTIVITIES_COUNT", "-8621119316825899848")
            .and().insertInto("MEDIA_FILE", 18382L)
                .d("URI", "\"Qagg\"")
            .and().insertInto("TAG", 18381L)
                .d("GRP", "\"_EM_69039_XYZ_\"")
                .d("NAME", "\"_EM_68517_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 18380L)
                .r("TAG_ID", 3155L)
                .d("ACTIVITIES_COUNT", "0")
            .and().insertInto("MEDIA_FILE", 18385L)
                .d("URI", "\"530951\"")
            .and().insertInto("TAG", 18384L)
                .d("GRP", "\"n\"")
                .d("NAME", "\"xAV83Q2YU\"")
            .and().insertInto("TAG_DERIVED", 18383L)
                .r("TAG_ID", 18381L)
                .d("ACTIVITIES_COUNT", "-9073212693839014765")
            .and().insertInto("MEDIA_FILE", 18388L)
                .d("URI", "\"znLE0ywTdNFJ\"")
            .and().insertInto("TAG", 18387L)
                .d("GRP", "\"7ToqO\"")
                .d("NAME", "\"_EM_68519_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/categories/4")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_53_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_35_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_35_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_5614_XYZ_\", " + 
                    " \"name\": \"_EM_5615_XYZ_\", " + 
                    " \"copy_right\": \"_EM_5616_XYZ_\", " + 
                    " \"author\": \"_EM_5617_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_109_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_36_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_36_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3655_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": -1950383197 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities/-1950383197/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_37_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_37_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 864, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities/864/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_38_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_38_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1503L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"FlhdgTiUHYK\"")
                .d("URI", "\"P\"")
            .and().insertInto("MEDIA_FILE", 1504L)
                .d("AUTHOR", "\"xPy\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"khDhYmKr\"")
                .d("NAME", "\"TpUg\"")
                .d("URI", "\"rpImqjt5CgE9gu\"")
            .and().insertInto("MEDIA_FILE", 1505L)
                .d("AUTHOR", "\"H3UWsl\"")
                .d("CAPTURE_DATE", "\"2050-08-10 23:35:00\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"u4cs5KR7e4YV5V\"")
                .d("URI", "\"vnCsHGcs2RAoYKZ\"")
            .and().insertInto("MEDIA_FILE", 1506L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"i6hwOd9Y5\"")
                .d("MIME_TYPE", "\"BVc\"")
                .d("NAME", "\"J\"")
                .d("URI", "\"\"")
            .and().insertInto("MEDIA_FILE", 1507L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2065-02-11 15:42:34\"")
                .d("COPY_RIGHT", "\"T\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"NMVwp_rYnbpKBc\"")
                .d("URI", "\"qQtt4uFu3hcMcC\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_39_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_39_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_5439_XYZ_\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 865, " + 
                    " \"type\": \"GOOGLE\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/804")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_100_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_40_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_40_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_43511_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 447, " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"_EM_43507_XYZ_\", " + 
                    " \"name\": \"_EM_43508_XYZ_\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_61_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_41_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_41_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 11459L)
                .d("KEY", "\"_SMIGjZ8ioOXuDU\"")
                .d("VALID_FROM", "\"1904-05-21 02:29:05\"")
                .d("VALID_TO", "\"1934-09-28 19:48:59\"")
                .d("VALUE", "\"CREATE MEMORY TABLE PUBLIC.TAG_DERIVED(\n    TAG_ID BIGINT NOT NULL,\n    ACTIVITIES_COUNT BIGINT\n)\"")
            .and().insertInto("SYSTEM_MESSAGE", 11460L)
                .d("KEY", "\"-5\"")
                .d("VALID_FROM", "\"2010-04-16 00:00:09\"")
                .d("VALID_TO", "\"1905-05-03 11:29:03\"")
                .d("VALUE", "\"_EM_47775_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 11615L)
                .d("URI", "\"WiW\"")
            .and().insertInto("TAG", 11614L)
                .d("GRP", "\"TABLE_SCHEMA\"")
                .d("NAME", "\"FCTjy7HHADyDN\"")
            .and().insertInto("TAG_DERIVED", 11613L)
                .r("TAG_ID", 11614L)
                .d("ACTIVITIES_COUNT", "-31474")
            .and().insertInto("MEDIA_FILE", 11618L)
                .d("URI", "\"VuRCj_7bvZBCNve\"")
            .and().insertInto("TAG", 11617L)
                .d("GRP", "\"jHrkt2xSMdsdZT\"")
                .d("NAME", "\"CROSS\"")
            .and().insertInto("TAG_DERIVED", 11616L)
                .r("TAG_ID", 11617L)
                .d("ACTIVITIES_COUNT", "0")
            .and().insertInto("MEDIA_FILE", 11621L)
                .d("URI", "\"Am\"")
            .and().insertInto("TAG", 11620L)
                .d("GRP", "\"_EM_87192_XYZ_\"")
                .d("NAME", "\"_EM_47809_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 11619L)
                .r("TAG_ID", 11620L)
                .d("ACTIVITIES_COUNT", "4")
            .and().insertInto("MEDIA_FILE", 11624L)
                .d("URI", "\"Gp5jUdvZnMzQW\"")
            .and().insertInto("TAG", 11623L)
                .d("GRP", "\"_EM_47810_XYZ_\"")
                .d("NAME", "\"_dfiqF0Z\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 594, " + 
                    " \"group\": \"_EM_87189_XYZ_\", " + 
                    " \"activities_count\": -667 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_60_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_42_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_42_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_9275_XYZ_\", " + 
                    " \"uri\": \"_EM_9276_XYZ_\", " + 
                    " \"name\": \"_EM_9277_XYZ_\", " + 
                    " \"copy_right\": \"_EM_9278_XYZ_\", " + 
                    " \"author\": \"_EM_9279_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/-8282317651543442653?EMextraParam123=_EM_9280_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_295_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_43_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_43_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"_EM_3952_XYZ_\", " + 
                    " \"name\": \"_EM_3953_XYZ_\", " + 
                    " \"activities_count\": 332 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/495")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_44_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_44_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 8200L)
                .d("AUTHORIZATION_LEVEL", "251")
                .d("DATE_CREATED", "\"1983-05-29 06:11:01\"")
                .d("EMAIL_ADDRESS", "\"_EM_112712_XYZ_\"")
                .d("NAME", "\"316033\"")
            .and().insertInto("MEDIA_FILE", 19399L)
                .d("AUTHOR", "\"en\"")
                .d("CAPTURE_DATE", "\"1991-07-25 23:03:41\"")
                .d("COPY_RIGHT", "\"2qH132Oc\"")
                .d("MIME_TYPE", "\"u9ZTb1sltl\"")
                .d("NAME", "\"UEM_7631U_XYUU\"")
                .d("URI", "\"_EM_112713_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 19400L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1962-12-15 21:29:54\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"PSDhM\"")
                .d("NAME", "\"5yoFKps9NV\"")
                .d("URI", "\"rozH_28UBYIJtDu\"")
            .and().insertInto("USERS", 32372L)
                .d("AUTHORIZATION_LEVEL", "-7906")
                .d("NAME", "\"Di\"")
            .and().insertInto("ACTIVITY", 32371L)
            .and().insertInto("ACTIVITY", 32370L)
            .and().insertInto("ACTIVITY_RELATION", 32369L)
                .r("ACTIVITY_1_ID", 32370L)
                .r("ACTIVITY_2_ID", 32371L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 32376L)
                .d("AUTHORIZATION_LEVEL", "-1939")
                .d("NAME", "\"_EM_112082_XYZ_\"")
            .and().insertInto("ACTIVITY", 32375L)
            .and().insertInto("ACTIVITY", 32374L)
            .and().insertInto("ACTIVITY_RELATION", 32373L)
                .r("ACTIVITY_1_ID", 32374L)
                .r("ACTIVITY_2_ID", 32371L)
                .d("OWNER_ID", "3")
            .and().insertInto("USERS", 32380L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"23ywYYZS\"")
            .and().insertInto("ACTIVITY", 32379L)
            .and().insertInto("ACTIVITY", 32378L)
            .and().insertInto("ACTIVITY_RELATION", 32377L)
                .r("ACTIVITY_1_ID", 32379L)
                .r("ACTIVITY_2_ID", 32371L)
                .r("OWNER_ID", 32376L)
            .and().insertInto("USERS", 32384L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_112565_XYZ_\"")
            .and().insertInto("ACTIVITY", 32383L)
            .and().insertInto("ACTIVITY", 32382L)
            .and().insertInto("ACTIVITY_RELATION", 32381L)
                .r("ACTIVITY_1_ID", 32375L)
                .r("ACTIVITY_2_ID", 32382L)
                .d("OWNER_ID", "3")
            .and().insertInto("USERS", 32424L)
                .d("AUTHORIZATION_LEVEL", "-130584")
                .d("NAME", "\"`F5MXooA\"")
            .and().insertInto("USER_IDENTITY", 32423L)
                .d("DATE_CREATED", "\"1958-06-15 04:01:29\"")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"_EM_112714_XYZ_\"")
                .d("USER_ID", "1")
            .and().insertInto("USERS", 32426L)
                .d("AUTHORIZATION_LEVEL", "768")
                .d("NAME", "\"_EM_112949_XYZ_\"")
            .and().insertInto("USER_IDENTITY", 32425L)
                .d("DATE_CREATED", "\"1997-05-01 07:45:59\"")
                .d("TYPE", "\"w2w_1g9\"")
                .d("VALUE", "\"BhUUUv\"")
                .d("USER_ID", "2")
            .and().insertInto("USERS", 32428L)
                .d("AUTHORIZATION_LEVEL", "-32826")
                .d("NAME", "\"1510480\"")
            .and().insertInto("USER_IDENTITY", 32427L)
                .d("DATE_CREATED", "NULL")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"kgpqCI\"")
                .d("USER_ID", "2")
            .and().insertInto("SYSTEM_MESSAGE", 32460L)
                .d("KEY", "\"6_kPIdjYhGg_t\"")
                .d("VALID_FROM", "\"1908-10-06 16:52:07\"")
                .d("VALID_TO", "\"1979-09-04 06:40:35\"")
                .d("VALUE", "\"_EM_112715_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 32816L)
                .d("URI", "\"u31pv7CPE37qcrKa_\"")
            .and().insertInto("MEDIA_FILE_KEYWORDS", 32815L)
                .r("MEDIA_FILE_ID", 19399L)
                .d("KEYWORD", "NULL")
            .and().insertInto("MEDIA_FILE", 32818L)
                .d("URI", "\"70ABEnV\"")
            .and().insertInto("MEDIA_FILE_KEYWORDS", 32817L)
                .r("MEDIA_FILE_ID", 32818L)
                .d("KEYWORD", "\"rzr2KdhdPyohttk\"")
            .and().insertInto("MEDIA_FILE", 32820L)
                .d("URI", "\"ib\"")
            .and().insertInto("MEDIA_FILE_KEYWORDS", 32819L)
                .r("MEDIA_FILE_ID", 32820L)
                .d("KEYWORD", "\"2Ah\"")
            .and().insertInto("MEDIA_FILE", 32822L)
                .d("URI", "\"Xm32\"")
            .and().insertInto("MEDIA_FILE_KEYWORDS", 32821L)
                .r("MEDIA_FILE_ID", 19399L)
                .d("KEYWORD", "NULL")
            .and().insertInto("MEDIA_FILE", 32862L)
                .d("URI", "\"sUx_metl8Bzn\"")
            .and().insertInto("TAG", 32861L)
                .d("GRP", "\"SDYX\"")
                .d("NAME", "\"2\"")
                .r("MEDIA_FILE_ID", 32816L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_36177_XYZ_\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 865, " + 
                    " \"type\": \"API\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/2")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_102_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_45_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_45_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 11459L)
                .d("KEY", "\"_SMIGjZ8ioOXuDU\"")
                .d("VALID_FROM", "\"1904-05-21 02:29:05\"")
                .d("VALID_TO", "\"1934-09-28 19:48:59\"")
                .d("VALUE", "\"CREATE MEMORY TABLE PUBLIC.TAG_DERIVED(\n    TAG_ID BIGINT NOT NULL,\n    ACTIVITIES_COUNT BIGINT\n)\"")
            .and().insertInto("SYSTEM_MESSAGE", 11460L)
                .d("KEY", "\"-5\"")
                .d("VALID_FROM", "\"2010-04-16 00:00:09\"")
                .d("VALID_TO", "\"1905-05-03 11:29:03\"")
                .d("VALUE", "\"_EM_47775_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 11615L)
                .d("URI", "\"WiW\"")
            .and().insertInto("TAG", 11614L)
                .d("GRP", "\"TABLE_SCHEMA\"")
                .d("NAME", "\"FCTjy7HHADyDN\"")
            .and().insertInto("TAG_DERIVED", 11613L)
                .r("TAG_ID", 11614L)
                .d("ACTIVITIES_COUNT", "-31474")
            .and().insertInto("MEDIA_FILE", 11618L)
                .d("URI", "\"VuRCj_7bvZBCNve\"")
            .and().insertInto("TAG", 11617L)
                .d("GRP", "\"jHrkt2xSMdsdZT\"")
                .d("NAME", "\"CROSS\"")
            .and().insertInto("TAG_DERIVED", 11616L)
                .r("TAG_ID", 11617L)
                .d("ACTIVITIES_COUNT", "0")
            .and().insertInto("MEDIA_FILE", 11621L)
                .d("URI", "\"Am\"")
            .and().insertInto("TAG", 11620L)
                .d("GRP", "\"_EM_87192_XYZ_\"")
                .d("NAME", "\"_EM_47809_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 11619L)
                .r("TAG_ID", 11620L)
                .d("ACTIVITIES_COUNT", "4")
            .and().insertInto("MEDIA_FILE", 11624L)
                .d("URI", "\"Gp5jUdvZnMzQW\"")
            .and().insertInto("TAG", 11623L)
                .d("GRP", "\"_EM_47810_XYZ_\"")
                .d("NAME", "\"_dfiqF0Z\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 491 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/1")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_108_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_46_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_46_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 3, " + 
                    " \"mime_type\": \"m8xwqu\", " + 
                    " \"uri\": \"WfKF1JmK6l\", " + 
                    " \"copy_right\": \"dgUEBxAcWAAUUpUT\", " + 
                    " \"author\": \"ArcppnX7u\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_137_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_47_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_47_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 359L)
            .and().insertInto("USERS", 941L)
                .d("AUTHORIZATION_LEVEL", "221")
                .d("NAME", "\"RLk\"")
            .and().insertInto("ACTIVITY", 940L)
            .and().insertInto("ACTIVITY_RATING", 939L)
                .r("ACTIVITY_ID", 359L)
                .r("USER_ID", 941L)
                .d("FAVOURITE", "true")
                .d("RATING", "996")
            .and().insertInto("USERS", 944L)
                .d("AUTHORIZATION_LEVEL", "521")
                .d("NAME", "\"5v5C1Dley\"")
            .and().insertInto("ACTIVITY", 943L)
            .and().insertInto("ACTIVITY_RATING", 942L)
                .r("ACTIVITY_ID", 940L)
                .r("USER_ID", 941L)
                .d("FAVOURITE", "false")
                .d("RATING", "0")
            .and().insertInto("USERS", 947L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"TUi\"")
            .and().insertInto("ACTIVITY", 946L)
            .and().insertInto("ACTIVITY_RATING", 945L)
                .r("ACTIVITY_ID", 946L)
                .r("USER_ID", 941L)
                .d("FAVOURITE", "false")
                .d("RATING", "-486569422")
            .and().insertInto("USERS", 950L)
                .d("AUTHORIZATION_LEVEL", "512")
                .d("NAME", "\"bwBbZYfn2vIF\"")
            .and().insertInto("ACTIVITY", 949L)
            .and().insertInto("ACTIVITY_RATING", 948L)
                .r("ACTIVITY_ID", 359L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "185")
            .and().insertInto("USERS", 953L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"W4Bg8\"")
            .and().insertInto("ACTIVITY", 952L)
            .and().insertInto("ACTIVITY_RATING", 951L)
                .r("ACTIVITY_ID", 952L)
                .r("USER_ID", 947L)
                .d("FAVOURITE", "false")
                .d("RATING", "455")
            .and().insertInto("MEDIA_FILE", 4644L)
                .d("URI", "\"_EM_78699_XYZ_\"")
            .and().insertInto("TAG", 4643L)
                .d("GRP", "\"_EM_78700_XYZ_\"")
                .d("NAME", "\"7sgaHM6tFoJb\"")
            .and().insertInto("USERS", 4642L)
                .d("AUTHORIZATION_LEVEL", "908")
                .d("NAME", "\"w26134yxJcw\"")
            .and().insertInto("ACTIVITY", 4641L)
            .and().insertInto("ACTIVITY", 4640L)
            .and().insertInto("ACTIVITY_PROPERTIES", 4639L)
                .r("ACTIVITY_ID", 949L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 4638L)
                .r("ACTIVITY_PROPERTIES_ID", 4639L)
                .r("TAG_ID", 4643L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"media_file\": { " + 
                    " \"id\": 893, " + 
                    " \"mime_type\": \"_EM_7060_XYZ_\", " + 
                    " \"uri\": \"_EM_7061_XYZ_\", " + 
                    " \"author\": \"07N6VYIE0byMse\" " + 
                    " }, " + 
                    " \"activities_count\": -1250449899 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_48_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_48_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_tags = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"_EM_17161_XYZ_\", " + 
                    " \"name\": \"_EM_17162_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("_EM_17161_XYZ_"))
                .body("'name'", containsString("_EM_17162_XYZ_"))
                .body("'activities_count'", numberMatches(0.0));
        location_tags = "/api/v2/tags" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_17169_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_tags, baseUrlOfSut + "/api/v2/tags/523"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_89_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    /**
    * [test_49_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_49_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 25407L)
            .and().insertInto("ACTIVITY", 25408L)
            .and().insertInto("ACTIVITY", 25409L)
            .and().insertInto("ACTIVITY", 25410L)
            .and().insertInto("MEDIA_FILE", 25412L)
                .d("URI", "\"_EMU94U33UXYUU\"")
            .and().insertInto("TAG", 25411L)
                .d("GRP", "\"_EM_94034_XYZ_\"")
                .d("NAME", "\"MGGZ\"")
                .r("MEDIA_FILE_ID", 25412L)
            .and().insertInto("USERS", 71647L)
                .d("AUTHORIZATION_LEVEL", "111")
                .d("NAME", "\"l9lwp\"")
            .and().insertInto("ACTIVITY", 71646L)
            .and().insertInto("ACTIVITY", 71645L)
            .and().insertInto("ACTIVITY_PROPERTIES", 71644L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-1271511572")
                .d("DATE_CREATED", "\"2060-01-09 12:35:01\"")
                .d("DATE_PUBLISHED", "\"1924-02-07 10:07:52\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"bpssKECrfQ\"")
                .d("DESCRIPTION_MATERIAL", "\"\"")
                .d("DESCRIPTION_NOTES", "\"khirxZjQJl0idh\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"F1U\"")
                .d("FEATURED", "false")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"oKpQHOs\"")
                .d("TIME_MAX", "305")
                .d("TIME_MIN", "453")
                .r("ACTIVITY_ID", 25410L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 19926L)
            .and().insertInto("USERS", 19927L)
                .d("AUTHORIZATION_LEVEL", "628")
                .d("DATE_CREATED", "\"1906-03-12 07:45:36\"")
                .d("EMAIL_ADDRESS", "\"qk\"")
                .d("NAME", "\"_EM_75737_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 19929L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 19928L)
                .d("GRP", "\"tyzJ9Rqf52A\"")
                .d("NAME", "\"_EM_75739_XYZ_\"")
                .r("MEDIA_FILE_ID", 19929L)
            .and().insertInto("USER_IDENTITY", 19930L)
                .d("DATE_CREATED", "\"2000-10-10 04:05:44\"")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"NPTZatXxYDX\"")
                .r("USER_ID", 19927L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 567, " + 
                    " \"group\": \"_EM_75741_XYZ_\", " + 
                    " \"activities_count\": 679 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/2?" + 
                    "ratings_count_min=PEaP&" + 
                    "random=_EM_94031_XYZ_&" + 
                    "text=dW&" + 
                    "categories=RS_njBQf0dRoQL&" + 
                    "id=2")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_83_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_50_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_50_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -8058, " + 
                    " \"group\": \"ByyOWC_WgQ\", " + 
                    " \"name\": \"CTuXH5O8O\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"8tDwDNNTg\", " + 
                    " \"name\": \"IPUnrcOdyrY\", " + 
                    " \"copy_right\": \"vKIF_AGKnI\", " + 
                    " \"author\": \"JSCV_MCfS\" " + 
                    " }, " + 
                    " \"activities_count\": 924 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/tags/134?" + 
                    "ratings_count_min=mulFxX1Zk&" + 
                    "featured=cxEZh3XRhHYky4&" + 
                    "min_activities_count=wO0T_2&" + 
                    "ratings_average_min=mVt&" + 
                    "key=qV7x5tXjFjGdE6Ea")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_51_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_51_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 359L)
            .and().insertInto("USERS", 4740L)
                .d("AUTHORIZATION_LEVEL", "285")
                .d("NAME", "\"_EM_26816_XYZ_\"")
            .and().insertInto("ACTIVITY", 4739L)
            .and().insertInto("ACTIVITY_RATING", 4738L)
                .r("ACTIVITY_ID", 4739L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "760")
            .and().insertInto("USERS", 4743L)
                .d("AUTHORIZATION_LEVEL", "33357")
                .d("NAME", "\"_EM_26817_XYZ_\"")
            .and().insertInto("ACTIVITY", 4742L)
            .and().insertInto("ACTIVITY_RATING", 4741L)
                .r("ACTIVITY_ID", 4739L)
                .r("USER_ID", 4743L)
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 4746L)
                .d("AUTHORIZATION_LEVEL", "287")
                .d("NAME", "\"Y3mi\"")
            .and().insertInto("ACTIVITY", 4745L)
            .and().insertInto("ACTIVITY_RATING", 4744L)
                .r("ACTIVITY_ID", 4745L)
                .r("USER_ID", 4746L)
                .d("FAVOURITE", "false")
                .d("RATING", "0")
            .and().insertInto("USERS", 4749L)
                .d("AUTHORIZATION_LEVEL", "1049479")
                .d("NAME", "\"_EM_26818_XYZ_\"")
            .and().insertInto("ACTIVITY", 4748L)
            .and().insertInto("ACTIVITY_RATING", 4747L)
                .r("ACTIVITY_ID", 4748L)
                .r("USER_ID", 4743L)
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("MEDIA_FILE", 11067L)
                .d("URI", "\"Wce_1V6KT\"")
            .and().insertInto("TAG", 11066L)
                .d("GRP", "\"o5Ko64m_pTNgqd\"")
                .d("NAME", "\"_wgxvL3Hi\"")
            .and().insertInto("USERS", 11065L)
                .d("AUTHORIZATION_LEVEL", "156")
                .d("NAME", "\"i9\"")
            .and().insertInto("ACTIVITY", 11064L)
            .and().insertInto("ACTIVITY", 11063L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11062L)
                .r("ACTIVITY_ID", 4739L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11061L)
                .r("ACTIVITY_PROPERTIES_ID", 11062L)
                .r("TAG_ID", 11066L)
            .and().insertInto("MEDIA_FILE", 11074L)
                .d("URI", "\"GDUS\"")
            .and().insertInto("TAG", 11073L)
                .d("GRP", "\"HAyyLl_Vb4R\"")
                .d("NAME", "\"q\"")
            .and().insertInto("USERS", 11072L)
                .d("AUTHORIZATION_LEVEL", "948")
                .d("NAME", "\"hvKZG8Qb2ub\"")
            .and().insertInto("ACTIVITY", 11071L)
            .and().insertInto("ACTIVITY", 11070L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11069L)
                .r("ACTIVITY_ID", 11070L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11068L)
                .r("ACTIVITY_PROPERTIES_ID", 11069L)
                .r("TAG_ID", 11066L)
            .and().insertInto("MEDIA_FILE", 11081L)
                .d("URI", "\"Ump\"")
            .and().insertInto("TAG", 11080L)
                .d("GRP", "\"LjoHM70i8d9\"")
                .d("NAME", "\"y\"")
            .and().insertInto("USERS", 11079L)
                .d("AUTHORIZATION_LEVEL", "872")
                .d("NAME", "\"bcJaLPdie5dA\"")
            .and().insertInto("ACTIVITY", 11078L)
            .and().insertInto("ACTIVITY", 11077L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11076L)
                .r("ACTIVITY_ID", 11071L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11075L)
                .r("ACTIVITY_PROPERTIES_ID", 11062L)
                .r("TAG_ID", 11073L)
            .and().insertInto("MEDIA_FILE", 11088L)
                .d("URI", "\"8RBi\"")
            .and().insertInto("TAG", 11087L)
                .d("GRP", "\"\"")
                .d("NAME", "\"\"")
            .and().insertInto("USERS", 11086L)
                .d("AUTHORIZATION_LEVEL", "419")
                .d("NAME", "\"iaGhaElTCsrk\"")
            .and().insertInto("ACTIVITY", 11085L)
            .and().insertInto("ACTIVITY", 11084L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11083L)
                .r("ACTIVITY_ID", 11070L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11082L)
                .r("ACTIVITY_PROPERTIES_ID", 11062L)
                .r("TAG_ID", 11080L)
            .and().insertInto("MEDIA_FILE", 11095L)
                .d("URI", "\"M\"")
            .and().insertInto("TAG", 11094L)
                .d("GRP", "\"knDBbdUB1\"")
                .d("NAME", "\"Y\"")
            .and().insertInto("USERS", 11093L)
                .d("AUTHORIZATION_LEVEL", "257")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 11092L)
            .and().insertInto("ACTIVITY", 11091L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11090L)
                .r("ACTIVITY_ID", 11084L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11089L)
                .r("ACTIVITY_PROPERTIES_ID", 11076L)
                .r("TAG_ID", 11080L)
            .and().insertInto("SYSTEM_MESSAGE", 38412L)
                .d("KEY", "\"dnunah6ITxKlmL\"")
                .d("VALID_FROM", "\"2014-06-23 23:40:07\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"3IBs5\"")
            .and().insertInto("SYSTEM_MESSAGE", 38413L)
                .d("KEY", "\"D8XevgH8\"")
                .d("VALID_FROM", "\"2064-02-14 17:16:35\"")
                .d("VALID_TO", "\"2088-03-04 03:41:58\"")
                .d("VALUE", "\"JcH8zaTW4iq2QO\"")
            .and().insertInto("SYSTEM_MESSAGE", 38414L)
                .d("KEY", "\"TV0ZW8Nv7Grox\"")
                .d("VALID_FROM", "\"2017-05-02 02:54:40\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"jxBGlQAMbe6q\"")
            .and().insertInto("SYSTEM_MESSAGE", 38415L)
                .d("KEY", "\"AZMQabH9JY\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"1uM3\"")
            .and().insertInto("SYSTEM_MESSAGE", 38416L)
                .d("KEY", "\"LL\"")
                .d("VALID_FROM", "\"1935-12-09 00:02:38\"")
                .d("VALID_TO", "\"2082-10-21 11:30:34\"")
                .d("VALUE", "\"LGDNL3JZodJ\"")
            .and().insertInto("MEDIA_FILE", 47955L)
                .d("URI", "\"lTJhQK6iL\"")
            .and().insertInto("TAG", 47954L)
                .d("GRP", "\"W0b3bcKisr2_\"")
                .d("NAME", "\"ffI\"")
            .and().insertInto("TAG_DERIVED", 47953L)
                .r("TAG_ID", 47954L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 47958L)
                .d("URI", "\"U5bynfQDkw\"")
            .and().insertInto("TAG", 47957L)
                .d("GRP", "\"XHSs\"")
                .d("NAME", "\"G_\"")
            .and().insertInto("TAG_DERIVED", 47956L)
                .r("TAG_ID", 11094L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 47961L)
                .d("URI", "\"v0lCqPV1eE\"")
            .and().insertInto("TAG", 47960L)
                .d("GRP", "\"Wz6REnuL02IvULxy\"")
                .d("NAME", "\"hg3CR2qstbLci\"")
            .and().insertInto("TAG_DERIVED", 47959L)
                .r("TAG_ID", 11080L)
                .d("ACTIVITIES_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .patch(baseUrlOfSut + "/api/v2/activities/1")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_52_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_52_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 25407L)
            .and().insertInto("ACTIVITY", 25408L)
            .and().insertInto("ACTIVITY", 25409L)
            .and().insertInto("ACTIVITY", 25410L)
            .and().insertInto("MEDIA_FILE", 25412L)
                .d("URI", "\"_EMU94U33UXYUU\"")
            .and().insertInto("TAG", 25411L)
                .d("GRP", "\"_EM_94034_XYZ_\"")
                .d("NAME", "\"MGGZ\"")
                .r("MEDIA_FILE_ID", 25412L)
            .and().insertInto("USERS", 71647L)
                .d("AUTHORIZATION_LEVEL", "111")
                .d("NAME", "\"l9lwp\"")
            .and().insertInto("ACTIVITY", 71646L)
            .and().insertInto("ACTIVITY", 71645L)
            .and().insertInto("ACTIVITY_PROPERTIES", 71644L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-1271511572")
                .d("DATE_CREATED", "\"2060-01-09 12:35:01\"")
                .d("DATE_PUBLISHED", "\"1924-02-07 10:07:52\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"bpssKECrfQ\"")
                .d("DESCRIPTION_MATERIAL", "\"\"")
                .d("DESCRIPTION_NOTES", "\"khirxZjQJl0idh\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"F1U\"")
                .d("FEATURED", "false")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"oKpQHOs\"")
                .d("TIME_MAX", "305")
                .d("TIME_MIN", "453")
                .r("ACTIVITY_ID", 25410L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 19926L)
            .and().insertInto("USERS", 19927L)
                .d("AUTHORIZATION_LEVEL", "628")
                .d("DATE_CREATED", "\"1906-03-12 07:45:36\"")
                .d("EMAIL_ADDRESS", "\"qk\"")
                .d("NAME", "\"_EM_75737_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 19929L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 19928L)
                .d("GRP", "\"tyzJ9Rqf52A\"")
                .d("NAME", "\"_EM_75739_XYZ_\"")
                .r("MEDIA_FILE_ID", 19929L)
            .and().insertInto("USER_IDENTITY", 19930L)
                .d("DATE_CREATED", "\"2000-10-10 04:05:44\"")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"NPTZatXxYDX\"")
                .r("USER_ID", 19927L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/activities/2")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_53_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_53_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 3118L)
                .d("AUTHORIZATION_LEVEL", "262264")
                .d("NAME", "\"ACTIVITY_RELATION\"")
            .and().insertInto("ACTIVITY", 3117L)
            .and().insertInto("ACTIVITY_RATING", 3116L)
                .r("ACTIVITY_ID", 3117L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "-4128")
            .and().insertInto("USERS", 3121L)
                .d("AUTHORIZATION_LEVEL", "-1048064")
                .d("NAME", "\"NAME5_13_7_\"")
            .and().insertInto("ACTIVITY", 3120L)
            .and().insertInto("ACTIVITY_RATING", 3119L)
                .r("ACTIVITY_ID", 3120L)
                .r("USER_ID", 3118L)
                .d("FAVOURITE", "true")
                .d("RATING", "4031597")
            .and().insertInto("MEDIA_FILE", 14802L)
                .d("URI", "\"umNElN\"")
            .and().insertInto("TAG", 14801L)
                .d("GRP", "\"1571759\"")
                .d("NAME", "\"_EM_113722_XYZ_\"")
                .r("MEDIA_FILE_ID", 14802L)
            .and().insertInto("MEDIA_FILE", 14804L)
                .d("URI", "\"1109658\"")
            .and().insertInto("TAG", 14803L)
                .d("GRP", "\"KU[UUUV0UUUvgw_U\"")
                .d("NAME", "\"_EM_57253_XYZ_\"")
                .r("MEDIA_FILE_ID", 14804L)
            .and().insertInto("MEDIA_FILE", 14806L)
                .d("URI", "\"ESMa2\"")
            .and().insertInto("TAG", 14805L)
                .d("GRP", "\"553809\"")
                .d("NAME", "\"_EM_56936_XYZ_\"")
                .r("MEDIA_FILE_ID", 14802L)
            .and().insertInto("USERS", 28096L)
                .d("AUTHORIZATION_LEVEL", "518")
                .d("NAME", "\"IB8LX\"")
            .and().insertInto("ACTIVITY", 28095L)
            .and().insertInto("ACTIVITY", 28094L)
            .and().insertInto("ACTIVITY_PROPERTIES", 28093L)
                .d("AGE_MAX", "-284")
                .d("AGE_MIN", "-613")
                .d("DATE_CREATED", "\"1998-11-15 00:04:48\"")
                .d("DATE_PUBLISHED", "\"2092-05-26 17:34:47\"")
                .d("DATE_UPDATED", "\"2021-06-01 20:02:20\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"_EM_113648_XYZ_\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"vZkGQkrDt9qbnpc\"")
                .d("DESCRIPTION_PREPARE", "\"8lNWmG\"")
                .d("DESCRIPTION_SAFETY", "\"_EM_113707_XYZ_\"")
                .d("FEATURED", "false")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "2")
                .d("PARTICIPANTS_MIN", "804")
                .d("SOURCE", "\"abC\"")
                .d("TIME_MAX", "41053")
                .d("TIME_MIN", "673")
                .r("ACTIVITY_ID", 28094L)
                .d("AUTHOR_ID", "1")
                .r("PUBLISHING_ACTIVITY_ID", 28094L)
            .and().insertInto("USERS", 28100L)
                .d("AUTHORIZATION_LEVEL", "852")
                .d("NAME", "\"8c9vVWPb2vF\"")
            .and().insertInto("ACTIVITY", 28099L)
            .and().insertInto("ACTIVITY", 28098L)
            .and().insertInto("ACTIVITY_PROPERTIES", 28097L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-1694728680")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"2085-06-25 23:48:29\"")
                .d("DATE_UPDATED", "\"1966-06-05 14:08:34\"")
                .d("DESCRIPTION_INTRODUCTION", "\"pz\"")
                .d("DESCRIPTION_MAIN", "\"F0zYJ_\"")
                .d("DESCRIPTION_MATERIAL", "\"DQAqKZyf7j7\"")
                .d("DESCRIPTION_NOTES", "\"_EM_114284_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "\"6GclOD7Os5A\"")
                .d("DESCRIPTION_SAFETY", "\"81YVqoSR1AK\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"1997-01-17 09:45:59\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "802")
                .d("SOURCE", "\"qeIJ\"")
                .d("TIME_MAX", "-8657451")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 3120L)
                .r("AUTHOR_ID", 3118L)
                .r("PUBLISHING_ACTIVITY_ID", 28099L)
            .and().insertInto("USERS", 28104L)
                .d("AUTHORIZATION_LEVEL", "629")
                .d("NAME", "\"_EM_114285_XYZ_\"")
            .and().insertInto("ACTIVITY", 28103L)
            .and().insertInto("ACTIVITY", 28102L)
            .and().insertInto("ACTIVITY_PROPERTIES", 28101L)
                .d("AGE_MAX", "-1073741774")
                .d("AGE_MIN", "-1073741746")
                .d("DATE_CREATED", "\"1929-11-28 10:23:31\"")
                .d("DATE_PUBLISHED", "\"2052-12-31 16:56:20\"")
                .d("DATE_UPDATED", "\"1940-10-16 17:07:21\"")
                .d("DESCRIPTION_INTRODUCTION", "\"jIzjr\"")
                .d("DESCRIPTION_MAIN", "\"bmtYt\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"_EM_113709_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "\"i\"")
                .d("DESCRIPTION_SAFETY", "\"pTDPI\"")
                .d("FEATURED", "true")
                .d("NAME", "\"yJArC4_t779mQA0\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "967")
                .d("SOURCE", "\"m7vXU\"")
                .d("TIME_MAX", "149")
                .d("TIME_MIN", "772")
                .r("ACTIVITY_ID", 28102L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 28103L)
            .and().insertInto("USERS", 28108L)
                .d("AUTHORIZATION_LEVEL", "2040975462")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 28107L)
            .and().insertInto("ACTIVITY", 28106L)
            .and().insertInto("ACTIVITY_PROPERTIES", 28105L)
                .d("AGE_MAX", "-2147483087")
                .d("AGE_MIN", "-2147483620")
                .d("DATE_CREATED", "\"1958-04-22 13:33:42\"")
                .d("DATE_PUBLISHED", "\"1910-07-21 19:22:07\"")
                .d("DATE_UPDATED", "\"1977-08-10 04:22:59\"")
                .d("DESCRIPTION_INTRODUCTION", "\"Vr19lejTqKwsCv\"")
                .d("DESCRIPTION_MAIN", "\"vcp\"")
                .d("DESCRIPTION_MATERIAL", "\"rUF\"")
                .d("DESCRIPTION_NOTES", "\"R_G6AFP\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"huU7T7j2e1k9\"")
                .d("FEATURED", "true")
                .d("NAME", "\"i0Fx0uGbFgbkJ\"")
                .d("PARTICIPANTS_MAX", "985")
                .d("PARTICIPANTS_MIN", "441")
                .d("SOURCE", "\"_EM_113710_XYZ_\"")
                .d("TIME_MAX", "2168")
                .d("TIME_MIN", "-1196")
                .r("ACTIVITY_ID", 28107L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 28095L)
            .and().insertInto("USERS", 28112L)
                .d("AUTHORIZATION_LEVEL", "615")
                .d("NAME", "\"4bisWhZk\"")
            .and().insertInto("ACTIVITY", 28111L)
            .and().insertInto("ACTIVITY", 28110L)
            .and().insertInto("ACTIVITY_PROPERTIES", 28109L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-2147483609")
                .d("DATE_CREATED", "\"2000-04-28 17:29:10\"")
                .d("DATE_PUBLISHED", "\"2000-12-29 09:24:00\"")
                .d("DATE_UPDATED", "\"2039-01-14 04:07:28\"")
                .d("DESCRIPTION_INTRODUCTION", "\"_EM_113723_XYZ_\"")
                .d("DESCRIPTION_MAIN", "\"jr9zF9ZIDEYEZD\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"zgJk9Q6PTK\"")
                .d("DESCRIPTION_PREPARE", "\"pQxLEZSHGzH\"")
                .d("DESCRIPTION_SAFETY", "\"5uCsoC4jer2U\"")
                .d("FEATURED", "false")
                .d("NAME", "\"ekHrykXdc\"")
                .d("PARTICIPANTS_MAX", "491")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"N\"")
                .d("TIME_MAX", "392")
                .d("TIME_MIN", "639")
                .r("ACTIVITY_ID", 3120L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 28107L)
            .and().insertInto("ACTIVITY", 33188L)
            .and().insertInto("ACTIVITY_DERIVED", 33187L)
                .r("ACTIVITY_ID", 3120L)
                .d("FAVOURITES_COUNT", "498")
                .d("RATINGS_AVG", "0.50805674015")
                .d("RATINGS_COUNT", "-1002042708041658530")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("ACTIVITY", 33190L)
            .and().insertInto("ACTIVITY_DERIVED", 33189L)
                .r("ACTIVITY_ID", 28106L)
                .d("FAVOURITES_COUNT", "0")
                .d("RATINGS_AVG", "0.0")
                .d("RATINGS_COUNT", "943")
                .d("RATINGS_SUM", "689")
            .and().insertInto("ACTIVITY", 33192L)
            .and().insertInto("ACTIVITY_DERIVED", 33191L)
                .r("ACTIVITY_ID", 28110L)
                .d("FAVOURITES_COUNT", "680")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "363")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("ACTIVITY", 33194L)
            .and().insertInto("ACTIVITY_DERIVED", 33193L)
                .r("ACTIVITY_ID", 28107L)
                .d("FAVOURITES_COUNT", "8478")
                .d("RATINGS_AVG", "0.4778660336483038")
                .d("RATINGS_COUNT", "0")
                .d("RATINGS_SUM", "521")
            .and().insertInto("SYSTEM_MESSAGE", 56813L)
                .d("KEY", "\"sDjeCSUUE1XjlJck\"")
                .d("VALID_FROM", "\"1957-04-29 01:02:00\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"Fg1\"")
            .and().insertInto("SYSTEM_MESSAGE", 56814L)
                .d("KEY", "\"a8\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2030-02-03 15:33:04\"")
                .d("VALUE", "\"4\"")
            .and().insertInto("MEDIA_FILE", 69308L)
                .d("URI", "\"q\"")
            .and().insertInto("TAG", 69307L)
                .d("GRP", "\"417IAlqwD\"")
                .d("NAME", "\"sU8E_n\"")
            .and().insertInto("TAG_DERIVED", 69306L)
                .r("TAG_ID", 69307L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 69311L)
                .d("URI", "\"RQJdx3yVK4\"")
            .and().insertInto("TAG", 69310L)
                .d("GRP", "\"bzWWkoR1nR\"")
                .d("NAME", "\"HUVjjdgz\"")
            .and().insertInto("TAG_DERIVED", 69309L)
                .r("TAG_ID", 69310L)
                .d("ACTIVITIES_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v2/activities/4")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityProperties_369_isContentEqual
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_54_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_54_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 4931L)
            .and().insertInto("ACTIVITY", 4932L)
            .and().insertInto("ACTIVITY", 4933L)
            .and().insertInto("USERS", 62010L)
                .d("AUTHORIZATION_LEVEL", "592")
                .d("NAME", "\"HZuxl\"")
            .and().insertInto("ACTIVITY", 62009L)
            .and().insertInto("ACTIVITY", 62008L)
            .and().insertInto("ACTIVITY_PROPERTIES", 62007L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-661")
                .d("DATE_CREATED", "\"1983-08-27 11:15:10\"")
                .d("DATE_PUBLISHED", "\"1996-10-26 00:23:00\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"RkbvOFCC\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "\"qu\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"ZhPUQb6hurDyu\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 62008L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 62014L)
                .d("AUTHORIZATION_LEVEL", "585")
                .d("NAME", "\"nYu\"")
            .and().insertInto("ACTIVITY", 62013L)
            .and().insertInto("ACTIVITY", 62012L)
            .and().insertInto("ACTIVITY_PROPERTIES", 62011L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-580")
                .d("DATE_CREATED", "\"1949-03-10 04:03:38\"")
                .d("DATE_PUBLISHED", "\"1983-02-09 22:14:38\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"kHFtUjRguU5nIIZ\"")
                .d("DESCRIPTION_MATERIAL", "\"DP1E8wy\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"ZKrVQthnlsYlrgyB\"")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "168")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "209")
                .r("ACTIVITY_ID", 4933L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 4931L)
            .and().insertInto("USERS", 62018L)
                .d("AUTHORIZATION_LEVEL", "701201135")
                .d("NAME", "\"qead3HYSqfFV2\"")
            .and().insertInto("ACTIVITY", 62017L)
            .and().insertInto("ACTIVITY", 62016L)
            .and().insertInto("ACTIVITY_PROPERTIES", 62015L)
                .d("AGE_MAX", "-515")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1912-11-07 03:29:14\"")
                .d("DESCRIPTION_INTRODUCTION", "\"VWbVP7gATVKDi9y6\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"lpF_vG9jTGA_XX\"")
                .d("DESCRIPTION_NOTES", "\"4cf1i2N\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "\"n\"")
                .d("PARTICIPANTS_MAX", "541")
                .d("PARTICIPANTS_MIN", "367")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "842")
                .d("TIME_MIN", "106")
                .r("ACTIVITY_ID", 62013L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 62017L)
            .and().insertInto("USERS", 62022L)
                .d("AUTHORIZATION_LEVEL", "660")
                .d("NAME", "\"ZhTKSpq752\"")
            .and().insertInto("ACTIVITY", 62021L)
            .and().insertInto("ACTIVITY", 62020L)
            .and().insertInto("ACTIVITY_PROPERTIES", 62019L)
                .d("AGE_MAX", "-2147482901")
                .d("AGE_MIN", "-778")
                .d("DATE_CREATED", "\"1933-08-13 22:21:31\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"0g\"")
                .d("DESCRIPTION_MAIN", "\"Wp_pA4e6g7\"")
                .d("DESCRIPTION_MATERIAL", "\"cSuKil9vNOcu9\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "612")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "304")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 4931L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 4933L)
            .and().insertInto("USERS", 62026L)
                .d("AUTHORIZATION_LEVEL", "499")
                .d("NAME", "\"MyFR\"")
            .and().insertInto("ACTIVITY", 62025L)
            .and().insertInto("ACTIVITY", 62024L)
            .and().insertInto("ACTIVITY_PROPERTIES", 62023L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "9")
                .d("SOURCE", "\"ebTtzDitLEwSS\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "-1592060404")
                .r("ACTIVITY_ID", 62017L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 62020L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/activities/1")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityProperties_369_isContentEqual
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_55_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_55_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 18083L)
                .d("URI", "\"OGzjOC\"")
            .and().insertInto("TAG", 18082L)
                .d("GRP", "\"Tb6SPH9YQ\"")
                .d("NAME", "\"LX1UcYNluUSm\"")
            .and().insertInto("TAG_DERIVED", 18081L)
                .r("TAG_ID", 18082L)
                .d("ACTIVITIES_COUNT", "102")
            .and().insertInto("USERS", 18098L)
                .d("AUTHORIZATION_LEVEL", "673")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 18097L)
            .and().insertInto("ACTIVITY_RATING", 18096L)
                .r("ACTIVITY_ID", 18097L)
                .r("USER_ID", 18098L)
                .d("FAVOURITE", "false")
                .d("RATING", "939")
            .and().insertInto("USERS", 18101L)
                .d("AUTHORIZATION_LEVEL", "772")
                .d("NAME", "\"KEE\"")
            .and().insertInto("ACTIVITY", 18100L)
            .and().insertInto("ACTIVITY_RATING", 18099L)
                .r("ACTIVITY_ID", 18100L)
                .r("USER_ID", 18098L)
                .d("FAVOURITE", "true")
                .d("RATING", "758")
            .and().insertInto("USERS", 18104L)
                .d("AUTHORIZATION_LEVEL", "584")
                .d("NAME", "\"Sl9mw\"")
            .and().insertInto("ACTIVITY", 18103L)
            .and().insertInto("ACTIVITY_RATING", 18102L)
                .r("ACTIVITY_ID", 18097L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "541")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/FavouritesResourceV1_58_lambda$put$3
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_56_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_56_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 3118L)
                .d("AUTHORIZATION_LEVEL", "262264")
                .d("NAME", "\"ACTIVITY_RELATION\"")
            .and().insertInto("ACTIVITY", 3117L)
            .and().insertInto("ACTIVITY_RATING", 3116L)
                .r("ACTIVITY_ID", 3117L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "-4128")
            .and().insertInto("USERS", 3121L)
                .d("AUTHORIZATION_LEVEL", "-1048064")
                .d("NAME", "\"NAME5_13_7_\"")
            .and().insertInto("ACTIVITY", 3120L)
            .and().insertInto("ACTIVITY_RATING", 3119L)
                .r("ACTIVITY_ID", 3120L)
                .r("USER_ID", 3118L)
                .d("FAVOURITE", "true")
                .d("RATING", "4031597")
            .and().insertInto("MEDIA_FILE", 14802L)
                .d("URI", "\"umNElN\"")
            .and().insertInto("TAG", 14801L)
                .d("GRP", "\"1571759\"")
                .d("NAME", "\"_EM_113722_XYZ_\"")
                .r("MEDIA_FILE_ID", 14802L)
            .and().insertInto("MEDIA_FILE", 14804L)
                .d("URI", "\"1109658\"")
            .and().insertInto("TAG", 14803L)
                .d("GRP", "\"KU[UUUV0UUUvgw_U\"")
                .d("NAME", "\"_EM_57253_XYZ_\"")
                .r("MEDIA_FILE_ID", 14804L)
            .and().insertInto("MEDIA_FILE", 14806L)
                .d("URI", "\"ESMa2\"")
            .and().insertInto("TAG", 14805L)
                .d("GRP", "\"553809\"")
                .d("NAME", "\"_EM_56936_XYZ_\"")
                .r("MEDIA_FILE_ID", 14802L)
            .and().insertInto("USERS", 28096L)
                .d("AUTHORIZATION_LEVEL", "518")
                .d("NAME", "\"IB8LX\"")
            .and().insertInto("ACTIVITY", 28095L)
            .and().insertInto("ACTIVITY", 28094L)
            .and().insertInto("ACTIVITY_PROPERTIES", 28093L)
                .d("AGE_MAX", "-284")
                .d("AGE_MIN", "-613")
                .d("DATE_CREATED", "\"1998-11-15 00:04:48\"")
                .d("DATE_PUBLISHED", "\"2092-05-26 17:34:47\"")
                .d("DATE_UPDATED", "\"2021-06-01 20:02:20\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"_EM_113648_XYZ_\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"vZkGQkrDt9qbnpc\"")
                .d("DESCRIPTION_PREPARE", "\"8lNWmG\"")
                .d("DESCRIPTION_SAFETY", "\"_EM_113707_XYZ_\"")
                .d("FEATURED", "false")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "2")
                .d("PARTICIPANTS_MIN", "804")
                .d("SOURCE", "\"abC\"")
                .d("TIME_MAX", "41053")
                .d("TIME_MIN", "673")
                .r("ACTIVITY_ID", 28094L)
                .d("AUTHOR_ID", "1")
                .r("PUBLISHING_ACTIVITY_ID", 28094L)
            .and().insertInto("USERS", 28100L)
                .d("AUTHORIZATION_LEVEL", "852")
                .d("NAME", "\"8c9vVWPb2vF\"")
            .and().insertInto("ACTIVITY", 28099L)
            .and().insertInto("ACTIVITY", 28098L)
            .and().insertInto("ACTIVITY_PROPERTIES", 28097L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-1694728680")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"2085-06-25 23:48:29\"")
                .d("DATE_UPDATED", "\"1966-06-05 14:08:34\"")
                .d("DESCRIPTION_INTRODUCTION", "\"pz\"")
                .d("DESCRIPTION_MAIN", "\"F0zYJ_\"")
                .d("DESCRIPTION_MATERIAL", "\"DQAqKZyf7j7\"")
                .d("DESCRIPTION_NOTES", "\"_EM_114284_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "\"6GclOD7Os5A\"")
                .d("DESCRIPTION_SAFETY", "\"81YVqoSR1AK\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"1997-01-17 09:45:59\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "802")
                .d("SOURCE", "\"qeIJ\"")
                .d("TIME_MAX", "-8657451")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 3120L)
                .r("AUTHOR_ID", 3118L)
                .r("PUBLISHING_ACTIVITY_ID", 28099L)
            .and().insertInto("USERS", 28104L)
                .d("AUTHORIZATION_LEVEL", "629")
                .d("NAME", "\"_EM_114285_XYZ_\"")
            .and().insertInto("ACTIVITY", 28103L)
            .and().insertInto("ACTIVITY", 28102L)
            .and().insertInto("ACTIVITY_PROPERTIES", 28101L)
                .d("AGE_MAX", "-1073741774")
                .d("AGE_MIN", "-1073741746")
                .d("DATE_CREATED", "\"1929-11-28 10:23:31\"")
                .d("DATE_PUBLISHED", "\"2052-12-31 16:56:20\"")
                .d("DATE_UPDATED", "\"1940-10-16 17:07:21\"")
                .d("DESCRIPTION_INTRODUCTION", "\"jIzjr\"")
                .d("DESCRIPTION_MAIN", "\"bmtYt\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"_EM_113709_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "\"i\"")
                .d("DESCRIPTION_SAFETY", "\"pTDPI\"")
                .d("FEATURED", "true")
                .d("NAME", "\"yJArC4_t779mQA0\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "967")
                .d("SOURCE", "\"m7vXU\"")
                .d("TIME_MAX", "149")
                .d("TIME_MIN", "772")
                .r("ACTIVITY_ID", 28102L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 28103L)
            .and().insertInto("USERS", 28108L)
                .d("AUTHORIZATION_LEVEL", "2040975462")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 28107L)
            .and().insertInto("ACTIVITY", 28106L)
            .and().insertInto("ACTIVITY_PROPERTIES", 28105L)
                .d("AGE_MAX", "-2147483087")
                .d("AGE_MIN", "-2147483620")
                .d("DATE_CREATED", "\"1958-04-22 13:33:42\"")
                .d("DATE_PUBLISHED", "\"1910-07-21 19:22:07\"")
                .d("DATE_UPDATED", "\"1977-08-10 04:22:59\"")
                .d("DESCRIPTION_INTRODUCTION", "\"Vr19lejTqKwsCv\"")
                .d("DESCRIPTION_MAIN", "\"vcp\"")
                .d("DESCRIPTION_MATERIAL", "\"rUF\"")
                .d("DESCRIPTION_NOTES", "\"R_G6AFP\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"huU7T7j2e1k9\"")
                .d("FEATURED", "true")
                .d("NAME", "\"i0Fx0uGbFgbkJ\"")
                .d("PARTICIPANTS_MAX", "985")
                .d("PARTICIPANTS_MIN", "441")
                .d("SOURCE", "\"_EM_113710_XYZ_\"")
                .d("TIME_MAX", "2168")
                .d("TIME_MIN", "-1196")
                .r("ACTIVITY_ID", 28107L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 28095L)
            .and().insertInto("USERS", 28112L)
                .d("AUTHORIZATION_LEVEL", "615")
                .d("NAME", "\"4bisWhZk\"")
            .and().insertInto("ACTIVITY", 28111L)
            .and().insertInto("ACTIVITY", 28110L)
            .and().insertInto("ACTIVITY_PROPERTIES", 28109L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-2147483609")
                .d("DATE_CREATED", "\"2000-04-28 17:29:10\"")
                .d("DATE_PUBLISHED", "\"2000-12-29 09:24:00\"")
                .d("DATE_UPDATED", "\"2039-01-14 04:07:28\"")
                .d("DESCRIPTION_INTRODUCTION", "\"_EM_113723_XYZ_\"")
                .d("DESCRIPTION_MAIN", "\"jr9zF9ZIDEYEZD\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"zgJk9Q6PTK\"")
                .d("DESCRIPTION_PREPARE", "\"pQxLEZSHGzH\"")
                .d("DESCRIPTION_SAFETY", "\"5uCsoC4jer2U\"")
                .d("FEATURED", "false")
                .d("NAME", "\"ekHrykXdc\"")
                .d("PARTICIPANTS_MAX", "491")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"N\"")
                .d("TIME_MAX", "392")
                .d("TIME_MIN", "639")
                .r("ACTIVITY_ID", 3120L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 28107L)
            .and().insertInto("ACTIVITY", 33188L)
            .and().insertInto("ACTIVITY_DERIVED", 33187L)
                .r("ACTIVITY_ID", 3120L)
                .d("FAVOURITES_COUNT", "498")
                .d("RATINGS_AVG", "0.50805674015")
                .d("RATINGS_COUNT", "-1002042708041658530")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("ACTIVITY", 33190L)
            .and().insertInto("ACTIVITY_DERIVED", 33189L)
                .r("ACTIVITY_ID", 28106L)
                .d("FAVOURITES_COUNT", "0")
                .d("RATINGS_AVG", "0.0")
                .d("RATINGS_COUNT", "943")
                .d("RATINGS_SUM", "689")
            .and().insertInto("ACTIVITY", 33192L)
            .and().insertInto("ACTIVITY_DERIVED", 33191L)
                .r("ACTIVITY_ID", 28110L)
                .d("FAVOURITES_COUNT", "680")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "363")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("ACTIVITY", 33194L)
            .and().insertInto("ACTIVITY_DERIVED", 33193L)
                .r("ACTIVITY_ID", 28107L)
                .d("FAVOURITES_COUNT", "8478")
                .d("RATINGS_AVG", "0.4778660336483038")
                .d("RATINGS_COUNT", "0")
                .d("RATINGS_SUM", "521")
            .and().insertInto("SYSTEM_MESSAGE", 56813L)
                .d("KEY", "\"sDjeCSUUE1XjlJck\"")
                .d("VALID_FROM", "\"1957-04-29 01:02:00\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"Fg1\"")
            .and().insertInto("SYSTEM_MESSAGE", 56814L)
                .d("KEY", "\"a8\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2030-02-03 15:33:04\"")
                .d("VALUE", "\"4\"")
            .and().insertInto("MEDIA_FILE", 69308L)
                .d("URI", "\"q\"")
            .and().insertInto("TAG", 69307L)
                .d("GRP", "\"417IAlqwD\"")
                .d("NAME", "\"sU8E_n\"")
            .and().insertInto("TAG_DERIVED", 69306L)
                .r("TAG_ID", 69307L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 69311L)
                .d("URI", "\"RQJdx3yVK4\"")
            .and().insertInto("TAG", 69310L)
                .d("GRP", "\"bzWWkoR1nR\"")
                .d("NAME", "\"HUVjjdgz\"")
            .and().insertInto("TAG_DERIVED", 69309L)
                .r("TAG_ID", 69310L)
                .d("ACTIVITIES_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/4/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_120_deleteRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_57_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_57_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 4156L)
                .d("URI", "\"cwklb3NxILefya\"")
            .and().insertInto("TAG", 4155L)
                .d("GRP", "\"xSSMetjecs\"")
                .d("NAME", "\"\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 4158L)
                .d("URI", "\"wOc\"")
            .and().insertInto("TAG", 4157L)
                .d("GRP", "\"zk0\"")
                .d("NAME", "\"wpwGRV8d1\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 4160L)
                .d("URI", "\"4oeVA\"")
            .and().insertInto("TAG", 4159L)
                .d("GRP", "\"7PKul\"")
                .d("NAME", "\"icVliEoRx4C3jT\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 4162L)
                .d("URI", "\"dNHmzGyH1r\"")
            .and().insertInto("TAG", 4161L)
                .d("GRP", "\"KPwiBugXHaQQmcu\"")
                .d("NAME", "\"UB\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 4164L)
                .d("URI", "\"yUbKo\"")
            .and().insertInto("TAG", 4163L)
                .d("GRP", "\"sgB15V\"")
                .d("NAME", "\"dbvGLxhkr40\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("ACTIVITY", 5263L)
            .and().insertInto("ACTIVITY", 5264L)
            .and().insertInto("ACTIVITY", 5265L)
            .and().insertInto("USERS", 5268L)
                .d("AUTHORIZATION_LEVEL", "-2012031902")
                .d("NAME", "\"lU79J4h0DqU\"")
            .and().insertInto("ACTIVITY", 5267L)
            .and().insertInto("ACTIVITY_RATING", 5266L)
                .r("ACTIVITY_ID", 5263L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "296")
            .and().insertInto("USERS", 5271L)
                .d("AUTHORIZATION_LEVEL", "720")
                .d("NAME", "\"GlkUYTkx2iWRjJ7O\"")
            .and().insertInto("ACTIVITY", 5270L)
            .and().insertInto("ACTIVITY_RATING", 5269L)
                .r("ACTIVITY_ID", 5264L)
                .r("USER_ID", 5268L)
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("MEDIA_FILE", 5274L)
                .d("URI", "\"04c4aTZnU\"")
            .and().insertInto("TAG", 5273L)
                .d("GRP", "\"4LTs2gwVfZxjxg9t\"")
                .d("NAME", "\"MWwj5tK8eOBWRDi\"")
            .and().insertInto("TAG_DERIVED", 5272L)
                .r("TAG_ID", 4155L)
                .d("ACTIVITIES_COUNT", "652")
            .and().insertInto("MEDIA_FILE", 5277L)
                .d("URI", "\"1J3WHE\"")
            .and().insertInto("TAG", 5276L)
                .d("GRP", "\"HcA8\"")
                .d("NAME", "\"nDanLfhgQdIA3IS\"")
            .and().insertInto("TAG_DERIVED", 5275L)
                .r("TAG_ID", 4159L)
                .d("ACTIVITIES_COUNT", "113")
            .and().insertInto("MEDIA_FILE", 5280L)
                .d("URI", "\"m6ha\"")
            .and().insertInto("TAG", 5279L)
                .d("GRP", "\"pF9Bklmcy\"")
                .d("NAME", "\"spsIuKBwQKDdIB\"")
            .and().insertInto("TAG_DERIVED", 5278L)
                .r("TAG_ID", 5279L)
                .d("ACTIVITIES_COUNT", "8507061676884240719")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/3/rating?" + 
                    "name=VrvjI3G3JvSN88&" + 
                    "key=_AC6TAIR")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_120_deleteRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_58_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_58_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 16361L)
                .d("AUTHOR", "\"2oB1xvfHiI\"")
                .d("CAPTURE_DATE", "\"2036-04-16 07:29:03\"")
                .d("COPY_RIGHT", "\"data:text/plain,X1c2RlVWNUhJVHA1Vg==\"")
                .d("MIME_TYPE", "\"22FB5\"")
                .d("NAME", "\"_EM_60799_XYZ_\"")
                .d("URI", "\"SrBc09ms5kdCvpz\"")
            .and().insertInto("MEDIA_FILE", 16362L)
                .d("AUTHOR", "\"oKDRW7jQOiWjB2yp\"")
                .d("CAPTURE_DATE", "\"1924-12-20 00:50:08\"")
                .d("COPY_RIGHT", "\"zxXziNB\"")
                .d("MIME_TYPE", "\"8AvzfmDPacfFWFdw\"")
                .d("NAME", "\"vPj4so\"")
                .d("URI", "\"g91VKKmql4py\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 0, " + 
                    " \"mime_type\": \"_EM_21263_XYZ_\", " + 
                    " \"uri\": \"data:text/plain,X1c2RlVWNUhJVHA1Vg\u003d\u003d\", " + 
                    " \"copy_right\": \"ACTIVITY_ID\", " + 
                    " \"author\": \"_EM_52667_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_59_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_59_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 16361L)
                .d("AUTHOR", "\"_EM_60801_XYZ_\"")
                .d("CAPTURE_DATE", "\"2036-04-16 07:29:03\"")
                .d("COPY_RIGHT", "\"_EM_61020_XYZ_\"")
                .d("MIME_TYPE", "\"22FB\"")
                .d("NAME", "\"_EM_60799_XYZ_b\"")
                .d("URI", "\"SrBc09ms5kdCvpz\"")
            .and().insertInto("MEDIA_FILE", 16362L)
                .d("AUTHOR", "\"_EM_60802_XYZ_\"")
                .d("CAPTURE_DATE", "\"1924-12-20 11:50:29\"")
                .d("COPY_RIGHT", "\"_EM_60803_XYZ_\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"vPj4so\"")
                .d("URI", "\"g91VKKmql4py\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 524785, " + 
                    " \"mime_type\": \"_EM_21263_XYZ_\", " + 
                    " \"uri\": \"data:text/plain;base64,X0VNXzYxMDE5X1hZWl8\u003d\", " + 
                    " \"author\": \"_EM_52667_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_60_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_60_with500() throws Exception {
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_21263_XYZ_\", " + 
                    " \"uri\": \"https://163.113.54.86/RhFGt1dB2U/EsuyYoTUhSbtUxN\", " + 
                    " \"copy_right\": \"_EM_21265_XYZ_\", " + 
                    " \"author\": \"Y8Iv5tF361mQ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("_EM_21263_XYZ_"))
                .body("'uri'", containsString("https://163.113.54.86/RhFGt1dB2U/EsuyYoTUhSbtUxN"))
                .body("'copy_right'", containsString("_EM_21265_XYZ_"))
                .body("'author'", containsString("Y8Iv5tF361mQ"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/596/file?size=761"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_279_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
    }
    
    
    /**
    * [test_61_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_61_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 8200L)
                .d("AUTHORIZATION_LEVEL", "269")
                .d("DATE_CREATED", "\"2000-05-31 06:11:29\"")
                .d("EMAIL_ADDRESS", "\"I\"")
                .d("NAME", "\"zYHfCw\"")
            .and().insertInto("MEDIA_FILE", 19389L)
                .d("AUTHOR", "\"EJ5_tLCjP\"")
                .d("CAPTURE_DATE", "\"1947-06-24 12:35:57\"")
                .d("COPY_RIGHT", "\"ow4VCd2Pe567\"")
                .d("MIME_TYPE", "\"hWk\"")
                .d("NAME", "\"OiI636Y6fv3GI4pW\"")
                .d("URI", "\"_EM_74423_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 19390L)
                .d("AUTHOR", "\"3cY4eTb\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"_EM_74424_XYZ_\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"pItIEbj4VA\"")
            .and().insertInto("MEDIA_FILE", 19391L)
                .d("AUTHOR", "\"xfOT5OND\"")
                .d("CAPTURE_DATE", "\"1980-03-08 02:29:29\"")
                .d("COPY_RIGHT", "\"fxvF5bmm2rYr8p1\"")
                .d("MIME_TYPE", "\"_EM_74425_XYZ_\"")
                .d("NAME", "\"yn2yvA\"")
                .d("URI", "\"E6LW6mBI_\"")
            .and().insertInto("MEDIA_FILE", 19392L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1990-04-10 00:52:33\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"\"")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_74426_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"WfKF1JmK6l\", " + 
                    " \"copy_right\": \"dgUEBxAcWAAUUpWT\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("WfKF1JmK6l"))
                .body("'copy_right'", containsString("dgUEBxAcWAAUUpWT"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 476, " + 
                    " \"mime_type\": \"UkJBVjJvXQAFD\", " + 
                    " \"name\": \"\", " + 
                    " \"copy_right\": \"ILve6fepYehey\", " + 
                    " \"author\": \"NwzY_ooiG\" " + 
                    " } ")
                .put(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/524764"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/MediaFile_134_setUri
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"e\", " + 
                    " \"description_material\": \"eoj_b\", " + 
                    " \"description_main\": \"9AdyjsUY6Cwj\", " + 
                    " \"description_safety\": \"memDa\", " + 
                    " \"description_notes\": \"tD4TS\", " + 
                    " \"age_min\": -2147483117, " + 
                    " \"age_max\": -2147482796, " + 
                    " \"participants_min\": 712, " + 
                    " \"time_min\": -1623013941, " + 
                    " \"activity\": { " + 
                    " \"id\": -990267137, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.060762326972102376, " + 
                    " \"ratings_sum\": 803 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_36177_XYZ_\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 865, " + 
                    " \"type\": \"API\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/524764")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_100_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    /**
    * [test_62_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_62_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"DlTR\", " + 
                    " \"description_main\": \"bFLd158Nj\", " + 
                    " \"age_max\": -171, " + 
                    " \"time_min\": 199, " + 
                    " \"time_max\": 500, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"XTOwKdXqH\", " + 
                    " \"media_files\": [], " + 
                    " \"author\": { " + 
                    " \"id\": 646 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_63_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_63_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"hvpdTCikkL\", " + 
                    " \"description_introduction\": \"mFn4pD\", " + 
                    " \"description_prepare\": \"V\", " + 
                    " \"description_main\": \"mjj8Zf\", " + 
                    " \"description_notes\": \"bXKnEJFK87so\", " + 
                    " \"age_min\": 39, " + 
                    " \"age_max\": -2147483417, " + 
                    " \"participants_min\": 425, " + 
                    " \"participants_max\": 932, " + 
                    " \"time_min\": -989183088, " + 
                    " \"time_max\": 934, " + 
                    " \"author\": { " + 
                    " \"name\": \"XwH3mIQ2QjRN\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_114_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_64_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_64_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 660, " + 
                    " \"description_main\": \"_EM_20001_XYZ_\", " + 
                    " \"description_notes\": \"Ua5xOAlOWu5X\", " + 
                    " \"age_max\": -2147483128, " + 
                    " \"participants_max\": 951, " + 
                    " \"time_min\": 19, " + 
                    " \"time_max\": 179, " + 
                    " \"author\": { " + 
                    " \"authorization_level\": 581 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.020303672410695972, " + 
                    " \"ratings_sum\": 6 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_113_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_65_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_65_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 8200L)
                .d("AUTHORIZATION_LEVEL", "251")
                .d("DATE_CREATED", "\"1983-05-29 06:11:01\"")
                .d("EMAIL_ADDRESS", "\"a\"")
                .d("NAME", "\"316033\"")
            .and().insertInto("MEDIA_FILE", 19399L)
                .d("AUTHOR", "\"en\"")
                .d("CAPTURE_DATE", "\"1991-07-25 23:07:41\"")
                .d("COPY_RIGHT", "\"_EM_112639_XYZ_\"")
                .d("MIME_TYPE", "\"u9ZTb1sltl\"")
                .d("NAME", "\"10\"")
                .d("URI", "\"FVDCcGYfVHJfvtZWm\"")
            .and().insertInto("MEDIA_FILE", 19400L)
                .d("AUTHOR", "\"kqkg\"")
                .d("CAPTURE_DATE", "\"1962-12-15 11:00:29\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"PSDhM\"")
                .d("NAME", "\"5yoFKps9NV\"")
                .d("URI", "\"rozH_28UCYIJtDu\"")
            .and().insertInto("USERS", 32372L)
                .d("AUTHORIZATION_LEVEL", "-7906")
                .d("NAME", "\"Di\"")
            .and().insertInto("ACTIVITY", 32371L)
            .and().insertInto("ACTIVITY", 32370L)
            .and().insertInto("ACTIVITY_RELATION", 32369L)
                .r("ACTIVITY_1_ID", 32370L)
                .r("ACTIVITY_2_ID", 32371L)
                .d("OWNER_ID", "3")
            .and().insertInto("USERS", 32376L)
                .d("AUTHORIZATION_LEVEL", "109")
                .d("NAME", "\"_EM_112082_XYZ_\"")
            .and().insertInto("ACTIVITY", 32375L)
            .and().insertInto("ACTIVITY", 32374L)
            .and().insertInto("ACTIVITY_RELATION", 32373L)
                .r("ACTIVITY_1_ID", 32374L)
                .r("ACTIVITY_2_ID", 32371L)
                .d("OWNER_ID", "2")
            .and().insertInto("USERS", 32380L)
                .d("AUTHORIZATION_LEVEL", "-256")
                .d("NAME", "\"_EM_112640_XYZ_\"")
            .and().insertInto("ACTIVITY", 32379L)
            .and().insertInto("ACTIVITY", 32378L)
            .and().insertInto("ACTIVITY_RELATION", 32377L)
                .r("ACTIVITY_1_ID", 32379L)
                .r("ACTIVITY_2_ID", 32371L)
                .r("OWNER_ID", 32372L)
            .and().insertInto("USERS", 32384L)
                .d("AUTHORIZATION_LEVEL", "958")
                .d("NAME", "\"_EM_112565_XYZ_\"")
            .and().insertInto("ACTIVITY", 32383L)
            .and().insertInto("ACTIVITY", 32382L)
            .and().insertInto("ACTIVITY_RELATION", 32381L)
                .r("ACTIVITY_1_ID", 32375L)
                .r("ACTIVITY_2_ID", 32371L)
                .d("OWNER_ID", "3")
            .and().insertInto("USERS", 32424L)
                .d("AUTHORIZATION_LEVEL", "-130584")
                .d("NAME", "\"`F5MXooAD\"")
            .and().insertInto("USER_IDENTITY", 32423L)
                .d("DATE_CREATED", "\"1958-06-01 04:09:29\"")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"_EM_112566_XYZ_\"")
                .d("USER_ID", "1")
            .and().insertInto("USERS", 32426L)
                .d("AUTHORIZATION_LEVEL", "768")
                .d("NAME", "\"4K\"")
            .and().insertInto("USER_IDENTITY", 32425L)
                .d("DATE_CREATED", "\"1997-05-17 09:45:59\"")
                .d("TYPE", "\"w2w_1g9\"")
                .d("VALUE", "\"_EM_112641_XYZ_\"")
                .d("USER_ID", "NULL")
            .and().insertInto("USERS", 32428L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_112567_XYZ_\"")
            .and().insertInto("USER_IDENTITY", 32427L)
                .d("DATE_CREATED", "NULL")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"kgnqCI\"")
                .r("USER_ID", 32428L)
            .and().insertInto("SYSTEM_MESSAGE", 32460L)
                .d("KEY", "\"316033\"")
                .d("VALID_FROM", "\"1912-10-10 16:52:07\"")
                .d("VALID_TO", "\"1975-10-04 06:40:34\"")
                .d("VALUE", "\"_EM_112642_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 32757L)
                .d("URI", "\"_EM_112643_XYZ_\"")
            .and().insertInto("MEDIA_FILE_KEYWORDS", 32756L)
                .r("MEDIA_FILE_ID", 32757L)
                .d("KEYWORD", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 3, " + 
                    " \"mime_type\": \"m8xwqu\", " + 
                    " \"uri\": \"WfKF1JmK6l\", " + 
                    " \"copy_right\": \"dgUEBxAcWAAUUpUT\", " + 
                    " \"author\": \"ArcppnX7u\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("m8xwqu"))
                .body("'uri'", containsString("WfKF1JmK6l"))
                .body("'copy_right'", containsString("dgUEBxAcWAAUUpUT"))
                .body("'author'", containsString("ArcppnX7u"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 476, " + 
                    " \"mime_type\": \"UkJBVjJvXQAFD\", " + 
                    " \"name\": \"_EM_112564_XYZ_\", " + 
                    " \"capture_date\": \"1988-00-22T22:27:28\", " + 
                    " \"copy_right\": \"ILve6fepYehey\", " + 
                    " \"author\": \"NwzY_ooiG\" " + 
                    " } ")
                .put(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/3"))
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_published\": \"1945-06-25T08:23:54\", " + 
                    " \"date_updated\": \"2080-07-02T03:00:05\", " + 
                    " \"description_material\": \"_EM_75516_XYZ_\", " + 
                    " \"description_safety\": \"g\", " + 
                    " \"age_min\": 0, " + 
                    " \"age_max\": -2147482752, " + 
                    " \"participants_max\": 859, " + 
                    " \"time_min\": 633, " + 
                    " \"time_max\": 104, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 944, " + 
                    " \"group\": \"3\" " + 
                    " }, " + 
                    " { " + 
                    " \"activities_count\": -1932098002 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 462, " + 
                    " \"media_file\": { " + 
                    " \"id\": 164, " + 
                    " \"mime_type\": \"9TdBgao1CTZSE7W\", " + 
                    " \"name\": \"NOvODOr44JBPnGfF\" " + 
                    " }, " + 
                    " \"activities_count\": 2 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 396, " + 
                    " \"group\": \"WcyVSuXQTqI\", " + 
                    " \"activities_count\": 756 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"vmcLUer\", " + 
                    " \"email_address\": \"PSiXYx1GiT_GYQTe\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": -8271678233509302439, " + 
                    " \"ratings_average\": 0.9409264205195569, " + 
                    " \"related\": [ " + 
                    " 704, " + 
                    " -550029409, " + 
                    " 46 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=vh_&" + 
                    "name=af6CD&" + 
                    "text=_EM_112081_XYZ_&" + 
                    "featured=false&" + 
                    "ages=_EM_75517_XYZ_&" + 
                    "participants=i&" + 
                    "durations=UjL5ipx&" + 
                    "id=PrQJ3N0&" + 
                    "my_favourites=true&" + 
                    "ratings_count_min=16822&" + 
                    "ratings_average_min=0.359848306&" + 
                    "random=913&" + 
                    "favourites=1594")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_77_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_36177_XYZ_\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 865, " + 
                    " \"type\": \"API\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/3")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("_EM_36177_XYZ_"))
                .body("'authorization_level'", numberMatches(20.0))
                .body("'identities'.size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/579/rating")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
        
    }
    
    
    /**
    * [test_66_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_66_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 4156L)
                .d("URI", "\"cwklb5NxILefya\"")
            .and().insertInto("TAG", 4155L)
                .d("GRP", "\"_EM_77261_XYZ_\"")
                .d("NAME", "\"_EM_26842_XYZ_\"")
                .r("MEDIA_FILE_ID", 4156L)
            .and().insertInto("MEDIA_FILE", 4158L)
                .d("URI", "\"tnRSFOeao5CrJZf\"")
            .and().insertInto("TAG", 4157L)
                .d("GRP", "\"zk0\"")
                .d("NAME", "\"wpwGRV8d\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 4160L)
                .d("URI", "\"qbjE5aqF\"")
            .and().insertInto("TAG", 4159L)
                .d("GRP", "\"_EM_24201_XYZ\"")
                .d("NAME", "\"icVliEoRx4C3jT\"")
                .r("MEDIA_FILE_ID", 4160L)
            .and().insertInto("MEDIA_FILE", 4162L)
                .d("URI", "\"dNHmzGyH1r\"")
            .and().insertInto("TAG", 4161L)
                .d("GRP", "\"KPwiBugXHaQQmcu\"")
                .d("NAME", "\"_EM_26844_XYZ_\"")
                .r("MEDIA_FILE_ID", 4156L)
            .and().insertInto("MEDIA_FILE", 4164L)
                .d("URI", "\"_EM_77262_XYZ_\"")
            .and().insertInto("TAG", 4163L)
                .d("GRP", "\"_EM_77263_XYZ_\"")
                .d("NAME", "\"_EM_26845_XYZ_\"")
                .r("MEDIA_FILE_ID", 4156L)
            .and().insertInto("ACTIVITY", 4223L)
            .and().insertInto("USERS", 4226L)
                .d("AUTHORIZATION_LEVEL", "29")
                .d("NAME", "\"fzQtCETXu0ss5\"")
            .and().insertInto("ACTIVITY", 4225L)
            .and().insertInto("ACTIVITY_RATING", 4224L)
                .r("ACTIVITY_ID", 4223L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "1272")
            .and().insertInto("USERS", 4229L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"Q\"")
            .and().insertInto("ACTIVITY", 4228L)
            .and().insertInto("ACTIVITY_RATING", 4227L)
                .r("ACTIVITY_ID", 4225L)
                .r("USER_ID", 4229L)
                .d("FAVOURITE", "true")
                .d("RATING", "0")
            .and().insertInto("USERS", 4232L)
                .d("AUTHORIZATION_LEVEL", "134218460")
                .d("NAME", "\"_EM_26846_XYZ_\"")
            .and().insertInto("ACTIVITY", 4231L)
            .and().insertInto("ACTIVITY_RATING", 4230L)
                .r("ACTIVITY_ID", 4225L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "0")
            .and().insertInto("USERS", 4235L)
                .d("AUTHORIZATION_LEVEL", "58720766")
                .d("NAME", "\"_EM_26847_XYZ_\"")
            .and().insertInto("ACTIVITY", 4234L)
            .and().insertInto("ACTIVITY_RATING", 4233L)
                .r("ACTIVITY_ID", 4223L)
                .r("USER_ID", 4235L)
                .d("FAVOURITE", "true")
                .d("RATING", "-259217")
            .and().insertInto("MEDIA_FILE", 4238L)
                .d("URI", "\"_EM_24203_XYZ_\"")
            .and().insertInto("TAG", 4237L)
                .d("GRP", "\"szaDKrskh\"")
                .d("NAME", "\"_EM_26848_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 4236L)
                .r("TAG_ID", 4161L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 4241L)
                .d("URI", "\"_EM_26849_XYZ_\"")
            .and().insertInto("TAG", 4240L)
                .d("GRP", "\"_EM_77264_XYZ_\"")
                .d("NAME", "\"_EM_24205_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 4239L)
                .r("TAG_ID", 4159L)
                .d("ACTIVITIES_COUNT", "206")
            .and().insertInto("MEDIA_FILE", 4244L)
                .d("URI", "\"BZtHQVDWqbAjhL\"")
            .and().insertInto("TAG", 4243L)
                .d("GRP", "\"8MvFOAdMhwqh\"")
                .d("NAME", "\"_EM_24208_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 4242L)
                .r("TAG_ID", 4240L)
                .d("ACTIVITIES_COUNT", "4915643630068208647")
            .and().insertInto("ACTIVITY", 3479L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/roles")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " -4059063300325639563, " + 
                    " 994101072269971943, " + 
                    " 767 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_30_readUserByIdentity
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -4611686018442706960, " + 
                    " \"name\": \"9Nn7Cla\", " + 
                    " \"description_material\": \"_EM_20053_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_20054_XYZ_\", " + 
                    " \"description_main\": \"yIxMHhuq\", " + 
                    " \"description_safety\": \"_EM_20056_XYZ_\", " + 
                    " \"age_min\": -2147483648, " + 
                    " \"age_max\": 96, " + 
                    " \"participants_min\": 810, " + 
                    " \"participants_max\": 180, " + 
                    " \"time_max\": 373, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"Ivk\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"name\": \"_EM_77260_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"Bc_kFABpx\", " + 
                    " \"copy_right\": \"_EM_20061_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": -1375460951 " + 
                    " }, " + 
                    " { " + 
                    " \"activities_count\": 145 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 975, " + 
                    " \"mime_type\": \"_EM_20069_XYZ_\", " + 
                    " \"name\": \"yiXHke8I2JfK\", " + 
                    " \"copy_right\": \"Uu\", " + 
                    " \"author\": \"_EM_20071_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 596, " + 
                    " \"uri\": \"_EM_20073_XYZ_\", " + 
                    " \"name\": \"_EM_20074_XYZ_\", " + 
                    " \"capture_date\": \"1941-04-31T09:25:52\", " + 
                    " \"author\": \"_EM_20076_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 900, " + 
                    " \"capture_date\": \"1964-03-08T17:27:02\", " + 
                    " \"copy_right\": \"_EM_20080_XYZ_\", " + 
                    " \"author\": \"_EM_20081_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 974, " + 
                    " \"uri\": \"_EM_20083_XYZ_\", " + 
                    " \"name\": \"_EM_20084_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 38, " + 
                    " \"ratings_count\": -1913170625 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    /**
    * [test_67_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_67_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"8dIY93HO68M74mVh\", " + 
                    " \"description_safety\": \"4tbO5ejXGrp0swZP\", " + 
                    " \"age_min\": 0, " + 
                    " \"age_max\": -310, " + 
                    " \"participants_max\": 9, " + 
                    " \"time_min\": 216, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"_EM_7358_XYZ_\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 756, " + 
                    " \"mime_type\": \"_EM_7392_XYZ_\", " + 
                    " \"name\": \"_EM_7394_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 905, " + 
                    " \"uri\": \"qLL8UDF3f80rn\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 270, " + 
                    " \"copy_right\": \"_EM_7402_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_211_lambda$initMediaFiles$8
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_68_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_68_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 40708L)
                .d("AUTHORIZATION_LEVEL", "420")
                .d("NAME", "\"ZnmVA0oJsLbUdnR1\"")
            .and().insertInto("ACTIVITY", 40707L)
            .and().insertInto("ACTIVITY", 40706L)
            .and().insertInto("ACTIVITY_PROPERTIES", 40705L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"2078-03-18 23:59:21\"")
                .d("DATE_UPDATED", "\"1912-10-02 03:22:29\"")
                .d("DESCRIPTION_INTRODUCTION", "\"ZudLqP1rW\"")
                .d("DESCRIPTION_MAIN", "\"06IE\"")
                .d("DESCRIPTION_MATERIAL", "\"\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"HXzXUhVYtXfGHCt\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "\"bL4_btLE\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"fq\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 40707L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 944, " + 
                    " \"description_material\": \"w\", " + 
                    " \"description_introduction\": \"Rrbpd1oByV6v0\", " + 
                    " \"description_prepare\": \"D4K\", " + 
                    " \"description_main\": \"PAykuRDZqrIuXeGB\", " + 
                    " \"description_safety\": \"C506az\", " + 
                    " \"age_max\": -2147483013, " + 
                    " \"participants_max\": 120, " + 
                    " \"time_min\": 729, " + 
                    " \"time_max\": 463, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"AcZog0ZzuplYN_d\", " + 
                    " \"name\": \"c95sa\", " + 
                    " \"author\": \"n\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_69_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_69_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_safety\": \"\", " + 
                    " \"age_min\": -732, " + 
                    " \"participants_max\": 894, " + 
                    " \"time_min\": 520, " + 
                    " \"time_max\": 37, " + 
                    " \"featured\": true, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 521, " + 
                    " \"mime_type\": \"IuWgrgGRE\", " + 
                    " \"name\": \"h8yg61UCkBnZyz\", " + 
                    " \"copy_right\": \"XptQxJL51T\" " + 
                    " }, " + 
                    " { " + 
                    " \"copy_right\": \"0\", " + 
                    " \"author\": \"wtuqwu2F\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 984, " + 
                    " \"ratings_average\": 0.5834614118528528 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_19_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_70_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_70_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 402L)
                .d("URI", "\"cyTKbBbWoaub\"")
            .and().insertInto("TAG", 401L)
                .d("GRP", "\"Fzt\"")
                .d("NAME", "\"bf\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 404L)
                .d("URI", "\"NCA\"")
            .and().insertInto("TAG", 403L)
                .d("GRP", "\"ip54VEPrvz\"")
                .d("NAME", "\"XmHlcn_oJ\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 406L)
                .d("URI", "\"B_g\"")
            .and().insertInto("TAG", 405L)
                .d("GRP", "\"qnvH__FafsS\"")
                .d("NAME", "\"veLgMYyXuDucAM_y\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 408L)
                .d("URI", "\"irqSjYyd6k1\"")
            .and().insertInto("TAG", 407L)
                .d("GRP", "\"fVY0\"")
                .d("NAME", "\"SWm4\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"t\", " + 
                    " \"description_prepare\": \"PEoOpRyFUjdU4QCu\", " + 
                    " \"description_safety\": \"wqOMT8gHHQPvr8E4\", " + 
                    " \"description_notes\": \"71jLYlEjda7M2hj\", " + 
                    " \"participants_max\": 186, " + 
                    " \"time_min\": 311, " + 
                    " \"time_max\": 219, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 8410100771836808833, " + 
                    " \"activities_count\": -1748237167 " + 
                    " }, " + 
                    " {} " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"WKq30jbE1PV\", " + 
                    " \"identities\": [] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_71_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_71_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 359L)
            .and().insertInto("USERS", 4740L)
                .d("AUTHORIZATION_LEVEL", "285")
                .d("NAME", "\"_EM_26816_XYZ_\"")
            .and().insertInto("ACTIVITY", 4739L)
            .and().insertInto("ACTIVITY_RATING", 4738L)
                .r("ACTIVITY_ID", 4739L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 4743L)
                .d("AUTHORIZATION_LEVEL", "589")
                .d("NAME", "\"_EM_26817_XYZ_\"")
            .and().insertInto("ACTIVITY", 4742L)
            .and().insertInto("ACTIVITY_RATING", 4741L)
                .r("ACTIVITY_ID", 4739L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 4746L)
                .d("AUTHORIZATION_LEVEL", "287")
                .d("NAME", "\"Y3mi\"")
            .and().insertInto("ACTIVITY", 4745L)
            .and().insertInto("ACTIVITY_RATING", 4744L)
                .r("ACTIVITY_ID", 359L)
                .r("USER_ID", 4740L)
                .d("FAVOURITE", "true")
                .d("RATING", "650")
            .and().insertInto("USERS", 4749L)
                .d("AUTHORIZATION_LEVEL", "903")
                .d("NAME", "\"_EM_26818_XYZ_\"")
            .and().insertInto("ACTIVITY", 4748L)
            .and().insertInto("ACTIVITY_RATING", 4747L)
                .r("ACTIVITY_ID", 359L)
                .r("USER_ID", 4743L)
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("MEDIA_FILE", 9029L)
                .d("URI", "\"r99QJuDCVk0gP4\"")
            .and().insertInto("TAG", 9028L)
                .d("GRP", "\"vlY\"")
                .d("NAME", "\"OdrbsDAQMxcHQqtq\"")
            .and().insertInto("USERS", 9027L)
                .d("AUTHORIZATION_LEVEL", "307")
                .d("NAME", "\"KyPieGw_xFPMdb3m\"")
            .and().insertInto("ACTIVITY", 9026L)
            .and().insertInto("ACTIVITY", 9025L)
            .and().insertInto("ACTIVITY_PROPERTIES", 9024L)
                .r("ACTIVITY_ID", 4745L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 9023L)
                .r("ACTIVITY_PROPERTIES_ID", 9024L)
                .r("TAG_ID", 9028L)
            .and().insertInto("MEDIA_FILE", 9036L)
                .d("URI", "\"UnyNd5KmB5E6r\"")
            .and().insertInto("TAG", 9035L)
                .d("GRP", "\"jt_jVmqQBEELl\"")
                .d("NAME", "\"\"")
            .and().insertInto("USERS", 9034L)
                .d("AUTHORIZATION_LEVEL", "902")
                .d("NAME", "\"dtYc\"")
            .and().insertInto("ACTIVITY", 9033L)
            .and().insertInto("ACTIVITY", 9032L)
            .and().insertInto("ACTIVITY_PROPERTIES", 9031L)
                .r("ACTIVITY_ID", 4742L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 9030L)
                .r("ACTIVITY_PROPERTIES_ID", 9031L)
                .r("TAG_ID", 9035L)
            .and().insertInto("MEDIA_FILE", 9043L)
                .d("URI", "\"MLQ\"")
            .and().insertInto("TAG", 9042L)
                .d("GRP", "\"Hu\"")
                .d("NAME", "\"X\"")
            .and().insertInto("USERS", 9041L)
                .d("AUTHORIZATION_LEVEL", "971")
                .d("NAME", "\"lhC\"")
            .and().insertInto("ACTIVITY", 9040L)
            .and().insertInto("ACTIVITY", 9039L)
            .and().insertInto("ACTIVITY_PROPERTIES", 9038L)
                .r("ACTIVITY_ID", 9033L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 9037L)
                .r("ACTIVITY_PROPERTIES_ID", 9031L)
                .r("TAG_ID", 9028L)
            .and().insertInto("MEDIA_FILE", 9050L)
                .d("URI", "\"NR9qSH\"")
            .and().insertInto("TAG", 9049L)
                .d("GRP", "\"SLkgxNs0Y6\"")
                .d("NAME", "\"L8g5r\"")
            .and().insertInto("USERS", 9048L)
                .d("AUTHORIZATION_LEVEL", "702")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 9047L)
            .and().insertInto("ACTIVITY", 9046L)
            .and().insertInto("ACTIVITY_PROPERTIES", 9045L)
                .r("ACTIVITY_ID", 4742L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 9044L)
                .r("ACTIVITY_PROPERTIES_ID", 9045L)
                .r("TAG_ID", 9049L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"\", " + 
                    " \"description_prepare\": \"9xlZ2Z5bVNJ6\", " + 
                    " \"participants_min\": 332, " + 
                    " \"participants_max\": 928, " + 
                    " \"featured\": false, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 355, " + 
                    " \"uri\": \"s9Xg\", " + 
                    " \"copy_right\": \"\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 427, " + 
                    " \"uri\": \"r3ibG\", " + 
                    " \"author\": \"_NP3\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"1bhll2QOBfX\", " + 
                    " \"authorization_level\": 705001862 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 116, " + 
                    " \"ratings_average\": 0.45124960430134253, " + 
                    " \"ratings_count\": 349 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_211_lambda$initMediaFiles$8
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_72_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_72_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 123L)
                .d("AUTHORIZATION_LEVEL", "-523873")
                .d("NAME", "\"_EM_23724_XYZ_\"")
            .and().insertInto("ACTIVITY", 122L)
            .and().insertInto("ACTIVITY_RATING", 121L)
                .r("ACTIVITY_ID", 122L)
                .r("USER_ID", 123L)
                .d("FAVOURITE", "true")
                .d("RATING", "-4194266")
            .and().insertInto("USERS", 126L)
                .d("AUTHORIZATION_LEVEL", "-134217280")
                .d("NAME", "\"67061\"")
            .and().insertInto("ACTIVITY", 125L)
            .and().insertInto("ACTIVITY_RATING", 124L)
                .r("ACTIVITY_ID", 125L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "985")
            .and().insertInto("USERS", 129L)
                .d("AUTHORIZATION_LEVEL", "-64870")
                .d("NAME", "\"13uFgixch\"")
            .and().insertInto("ACTIVITY", 128L)
            .and().insertInto("ACTIVITY_RATING", 127L)
                .r("ACTIVITY_ID", 128L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "955")
            .and().insertInto("USERS", 132L)
                .d("AUTHORIZATION_LEVEL", "1717022046")
                .d("NAME", "\"NzSE39O6\"")
            .and().insertInto("ACTIVITY", 131L)
            .and().insertInto("ACTIVITY_RATING", 130L)
                .r("ACTIVITY_ID", 125L)
                .r("USER_ID", 126L)
                .d("FAVOURITE", "false")
                .d("RATING", "-2003")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 643, " + 
                    " \"name\": \"\", " + 
                    " \"description_introduction\": \"m89_d7hDX2\", " + 
                    " \"description_main\": \"mcO2Ng2pBMol\", " + 
                    " \"description_notes\": \"BC\", " + 
                    " \"age_min\": -2147483260, " + 
                    " \"participants_max\": 875, " + 
                    " \"time_max\": 250, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 336, " + 
                    " \"uri\": \"I5LXE9xEFuR8gb\", " + 
                    " \"name\": \"d8U80\", " + 
                    " \"copy_right\": \"y7gXx62y4\", " + 
                    " \"author\": \"vpobYD8JabG8k\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 772, " + 
                    " \"authorization_level\": 870 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 1662079606, " + 
                    " \"related\": [] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_73_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_73_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 847, " + 
                    " \"name\": \"avpG_fXTUekAC\", " + 
                    " \"description_prepare\": \"eW0Qj\", " + 
                    " \"age_min\": -2147483590, " + 
                    " \"participants_max\": 794, " + 
                    " \"time_max\": 650, " + 
                    " \"source\": \"cLZ\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 975, " + 
                    " \"name\": \"CuGPP\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"cCDbWEw\", " + 
                    " \"uri\": \"_\", " + 
                    " \"name\": \"S\", " + 
                    " \"copy_right\": \"K\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -1038101521254084383, " + 
                    " \"name\": \"CZdPlB0FnpTtkBh\", " + 
                    " \"activities_count\": 717 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 502, " + 
                    " \"group\": \"LWDjWxc14V\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"BkSa1Vl6QGpbQbJg\" " + 
                    " }, " + 
                    " \"activities_count\": 362 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": {}, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.9768627364708528, " + 
                    " \"ratings_count\": 708, " + 
                    " \"ratings_sum\": 372 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?" + 
                    "random=D4696Ml1Pg6tkC0g&" + 
                    "favourites=C&" + 
                    "min_activities_count=JpvPfC&" + 
                    "ages=&" + 
                    "durations=nxLt0oixqp19GIO&" + 
                    "attrs=Md7AY_m58ltG")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_74_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_74_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 451L)
            .and().insertInto("ACTIVITY", 452L)
            .and().insertInto("ACTIVITY", 453L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 827, " + 
                    " \"name\": \"ZPXX38\", " + 
                    " \"description_introduction\": \"x0\", " + 
                    " \"description_main\": \"YxnH\", " + 
                    " \"description_notes\": \"MS0srxCJFZtBo\", " + 
                    " \"time_max\": 584, " + 
                    " \"source\": \"tQmUHlH\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 60, " + 
                    " \"activities_count\": 8018940074848580763 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 7, " + 
                    " \"uri\": \"YD\", " + 
                    " \"name\": \"xf6dk6_Nz\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 604, " + 
                    " \"ratings_count\": 977, " + 
                    " \"related\": [ " + 
                    " 1490968043, " + 
                    " 709, " + 
                    " 131, " + 
                    " 330 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_75_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_75_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 16361L)
                .d("AUTHOR", "\"2oD1xvfHiI\"")
                .d("CAPTURE_DATE", "\"2036-01-08 07:29:00\"")
                .d("COPY_RIGHT", "\"_EM_62215_XYZ_\"")
                .d("MIME_TYPE", "\"9223372036854775807\"")
                .d("NAME", "\"_EM_60799_XYZ_\"")
                .d("URI", "\"_EM_62217_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 16362L)
                .d("AUTHOR", "\"oIDRW7jQOiWjB2yp\"")
                .d("CAPTURE_DATE", "\"1924-06-19 11:42:29\"")
                .d("COPY_RIGHT", "\"zxXziNB\"")
                .d("MIME_TYPE", "\"8AvzfmDPacfFWFdw\"")
                .d("NAME", "\"vPj4so\"")
                .d("URI", "\"g91VKKmql4py\"")
            .and().insertInto("ACTIVITY", 59659L)
            .and().insertInto("ACTIVITY", 59660L)
            .and().insertInto("USERS", 59724L)
                .d("AUTHORIZATION_LEVEL", "665")
                .d("NAME", "\"xFrKNeFwYxsYyz\"")
            .and().insertInto("ACTIVITY", 59723L)
            .and().insertInto("ACTIVITY", 59722L)
            .and().insertInto("ACTIVITY_PROPERTIES", 59721L)
                .d("AGE_MAX", "-1799767090")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"1940-06-04 19:03:07\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"r\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"oau5UcbfgqR0Ac\"")
                .d("FEATURED", "false")
                .d("NAME", "\"qRo9OsGqtTv7k1w\"")
                .d("PARTICIPANTS_MAX", "979")
                .d("PARTICIPANTS_MIN", "-2141780271")
                .d("SOURCE", "\"W\"")
                .d("TIME_MAX", "535")
                .d("TIME_MIN", "59")
                .r("ACTIVITY_ID", 59723L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 59728L)
                .d("AUTHORIZATION_LEVEL", "928")
                .d("NAME", "\"KVa8J0qpJfSG7Ug\"")
            .and().insertInto("ACTIVITY", 59727L)
            .and().insertInto("ACTIVITY", 59726L)
            .and().insertInto("ACTIVITY_PROPERTIES", 59725L)
                .d("AGE_MAX", "-2147483197")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"TwhqCf\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"CHl6rg\"")
                .d("FEATURED", "false")
                .d("NAME", "\"lz\"")
                .d("PARTICIPANTS_MAX", "969")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "206")
                .d("TIME_MIN", "904")
                .r("ACTIVITY_ID", 59727L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 59659L)
            .and().insertInto("USERS", 59732L)
                .d("AUTHORIZATION_LEVEL", "419")
                .d("NAME", "\"Bjzwibdb4\"")
            .and().insertInto("ACTIVITY", 59731L)
            .and().insertInto("ACTIVITY", 59730L)
            .and().insertInto("ACTIVITY_PROPERTIES", 59729L)
                .d("AGE_MAX", "-2147483391")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"kU\"")
                .d("DESCRIPTION_NOTES", "\"BIQmsGzU2N\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "false")
                .d("NAME", "\"P\"")
                .d("PARTICIPANTS_MAX", "750")
                .d("PARTICIPANTS_MIN", "451")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "852")
                .d("TIME_MIN", "296")
                .r("ACTIVITY_ID", 59722L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 59730L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 0, " + 
                    " \"name\": \"mnSq\", " + 
                    " \"description_material\": \"FRIZq1D5wlKa\", " + 
                    " \"participants_max\": 853, " + 
                    " \"time_min\": 1851693592, " + 
                    " \"activity\": { " + 
                    " \"id\": -1365099513, " + 
                    " \"ratings_average\": 0.0544788452180095, " + 
                    " \"ratings_sum\": 947, " + 
                    " \"related\": [] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("mnSq"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T06:34:04.510Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("FRIZq1D5wlKa"))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(853.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(1.851693592E9))
                .body("'properties'.'name'", containsString("mnSq"))
                .body("'properties'.'date_created'", containsString("2024-05-30T06:34:04.510Z"))
                .body("'properties'.'description_material'", containsString("FRIZq1D5wlKa"))
                .body("'properties'.'participants_max'", numberMatches(853.0))
                .body("'properties'.'time_min'", numberMatches(1.851693592E9))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/0/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_112_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/0/rating?my_favourites=4JQxdhMlffaltEX9&ratings_count_min=VXkBJV2NsJGNGj&ratings_average_min=&name=mnSq&durations=Z8bIRh&categories=G1fxVkpj6s35bEeD&participants=yJGqNVmApyiCG&group=Ohp&min_activities_count=pw5OjOphtGXZkjuz&random=kmrr9STy&time_1=q7E8YLBYa08A3&size=Yyx246KPkWz&id=DLHx&ages=iOY6OGomAQG&text=JYohO6f"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/0/rating?" + 
                    "size=Yyx246KPkWz&" + 
                    "my_favourites=4JQxdhMlffaltEX9&" + 
                    "random=kmrr9STy&" + 
                    "time_1=q7E8YLBYa08A3&" + 
                    "name=mnSq&" + 
                    "text=JYohO6f&" + 
                    "id=0&" + 
                    "time_2=fULsQmp&" + 
                    "attrs=Fkmtg1ru")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_76_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_76_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3479L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 321, " + 
                    " \"name\": \"9Nn7Clb\", " + 
                    " \"description_prepare\": \"_EM_20054_XYZ_\", " + 
                    " \"description_main\": \"_EM_20055_XYZ_\", " + 
                    " \"description_safety\": \"_EM_20056_XYZ_\", " + 
                    " \"age_min\": -2147482956, " + 
                    " \"age_max\": 96, " + 
                    " \"time_max\": 373, " + 
                    " \"source\": \"Ivk\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"name\": \"\", " + 
                    " \"activities_count\": -1373363799 " + 
                    " }, " + 
                    " { " + 
                    " \"activities_count\": 145 " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 38, " + 
                    " \"ratings_count\": -1913170625 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_77_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_77_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 16361L)
                .d("AUTHOR", "\"2oD1xvfHiI\"")
                .d("CAPTURE_DATE", "\"2036-01-08 07:29:00\"")
                .d("COPY_RIGHT", "\"Jtg5YpxHkalle4cd\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"_EM_60799_XYZ_\"")
                .d("URI", "\"_EM_62217_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 16362L)
                .d("AUTHOR", "\"oIDRW7jPOiWjD1yp\"")
                .d("CAPTURE_DATE", "\"1924-06-19 11:42:29\"")
                .d("COPY_RIGHT", "\"zxXUiNB\"")
                .d("MIME_TYPE", "\"8AvzfmDPacfFWFdw\"")
                .d("NAME", "\"vPj4so\"")
                .d("URI", "\"g91VKKmql4py\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 967, " + 
                    " \"description_material\": \"N772PoYYvAND\", " + 
                    " \"description_notes\": \"EYA5WT6qcU\", " + 
                    " \"participants_max\": 837, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"Y2EdFT\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 370, " + 
                    " \"group\": \"GnvmM5DpFAGV8iCs\", " + 
                    " \"name\": \"TE3UqA56WzdayAO\", " + 
                    " \"activities_count\": 4526403571560574548 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"\", " + 
                    " \"uri\": \"JB_QK0UR0eS\", " + 
                    " \"copy_right\": \"7AwcNH4\", " + 
                    " \"author\": \"jiwTt9KxAAHYZsH\" " + 
                    " }, " + 
                    " {} " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_78_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_78_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 40708L)
                .d("AUTHORIZATION_LEVEL", "420")
                .d("NAME", "\"ZnmVA0oJsLbUdnR1\"")
            .and().insertInto("ACTIVITY", 40707L)
            .and().insertInto("ACTIVITY", 40706L)
            .and().insertInto("ACTIVITY_PROPERTIES", 40705L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"2078-03-18 23:59:21\"")
                .d("DATE_UPDATED", "\"1912-10-02 03:22:29\"")
                .d("DESCRIPTION_INTRODUCTION", "\"ZudLqP1rW\"")
                .d("DESCRIPTION_MAIN", "\"06IE\"")
                .d("DESCRIPTION_MATERIAL", "\"\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"HXzXUhVYtXfGHCt\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "\"bL4_btLE\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"fq\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 40707L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 948, " + 
                    " \"description_material\": \"w\", " + 
                    " \"description_introduction\": \"Rrbpd1oByV6v0\", " + 
                    " \"description_prepare\": \"D4K\", " + 
                    " \"description_main\": \"PAykuRDZqrIuXeGB\", " + 
                    " \"description_safety\": \"B506az\", " + 
                    " \"age_max\": -2147483013, " + 
                    " \"participants_min\": 59, " + 
                    " \"participants_max\": 120, " + 
                    " \"time_min\": 729, " + 
                    " \"time_max\": 463, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 100, " + 
                    " \"name\": \"nH8_Hvb62VK\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 248, " + 
                    " \"group\": \"cFl3Kl0txwRR\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 416, " + 
                    " \"copy_right\": \"3LDW\", " + 
                    " \"author\": \"5Y5RTZJu0h6\" " + 
                    " }, " + 
                    " \"activities_count\": 927 " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"w\" " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"AcZog0ZzuplYN_d\", " + 
                    " \"name\": \"_EM_122676_XYZ_\", " + 
                    " \"author\": \"n\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_79_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_79_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 359L)
            .and().insertInto("USERS", 941L)
                .d("AUTHORIZATION_LEVEL", "221")
                .d("NAME", "\"RLk\"")
            .and().insertInto("ACTIVITY", 940L)
            .and().insertInto("ACTIVITY_RATING", 939L)
                .r("ACTIVITY_ID", 359L)
                .r("USER_ID", 941L)
                .d("FAVOURITE", "true")
                .d("RATING", "996")
            .and().insertInto("USERS", 944L)
                .d("AUTHORIZATION_LEVEL", "521")
                .d("NAME", "\"5v5C1Dley\"")
            .and().insertInto("ACTIVITY", 943L)
            .and().insertInto("ACTIVITY_RATING", 942L)
                .r("ACTIVITY_ID", 940L)
                .r("USER_ID", 941L)
                .d("FAVOURITE", "false")
                .d("RATING", "0")
            .and().insertInto("USERS", 947L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"TUi\"")
            .and().insertInto("ACTIVITY", 946L)
            .and().insertInto("ACTIVITY_RATING", 945L)
                .r("ACTIVITY_ID", 946L)
                .r("USER_ID", 941L)
                .d("FAVOURITE", "false")
                .d("RATING", "-486569422")
            .and().insertInto("USERS", 950L)
                .d("AUTHORIZATION_LEVEL", "512")
                .d("NAME", "\"bwBbZYfn2vIF\"")
            .and().insertInto("ACTIVITY", 949L)
            .and().insertInto("ACTIVITY_RATING", 948L)
                .r("ACTIVITY_ID", 359L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "185")
            .and().insertInto("USERS", 953L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"W4Bg8\"")
            .and().insertInto("ACTIVITY", 952L)
            .and().insertInto("ACTIVITY_RATING", 951L)
                .r("ACTIVITY_ID", 952L)
                .r("USER_ID", 947L)
                .d("FAVOURITE", "false")
                .d("RATING", "455")
            .and().insertInto("MEDIA_FILE", 4644L)
                .d("URI", "\"_EM_78699_XYZ_\"")
            .and().insertInto("TAG", 4643L)
                .d("GRP", "\"_EM_78700_XYZ_\"")
                .d("NAME", "\"7sgaHM6tFoJb\"")
            .and().insertInto("USERS", 4642L)
                .d("AUTHORIZATION_LEVEL", "908")
                .d("NAME", "\"w26134yxJcw\"")
            .and().insertInto("ACTIVITY", 4641L)
            .and().insertInto("ACTIVITY", 4640L)
            .and().insertInto("ACTIVITY_PROPERTIES", 4639L)
                .r("ACTIVITY_ID", 949L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 4638L)
                .r("ACTIVITY_PROPERTIES_ID", 4639L)
                .r("TAG_ID", 4643L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_6991_XYZ_\", " + 
                    " \"description_material\": \"_EM_6992_XYZ_\", " + 
                    " \"description_introduction\": \"EKLngclofozsa1\", " + 
                    " \"description_prepare\": \"Yql_api\", " + 
                    " \"description_main\": \"FEATURED\", " + 
                    " \"description_safety\": \"EVUbp\", " + 
                    " \"description_notes\": \"_EM_6996_XYZ_\", " + 
                    " \"age_min\": -468, " + 
                    " \"age_max\": -2055345464, " + 
                    " \"participants_min\": 564, " + 
                    " \"participants_max\": 195, " + 
                    " \"time_min\": 991, " + 
                    " \"time_max\": -67108460, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 923, " + 
                    " \"name\": \"_EM_6999_XYZ_\", " + 
                    " \"activities_count\": 223 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -233, " + 
                    " \"group\": \"KkI2IX95\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 171, " + 
                    " \"mime_type\": \"_EM_7006_XYZ_\", " + 
                    " \"uri\": \"XGA5fp\", " + 
                    " \"copy_right\": \"w9Gi_qk\", " + 
                    " \"author\": \"_EM_7009_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 837 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 486, " + 
                    " \"activities_count\": 281 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 875846461, " + 
                    " \"group\": \"_EM_7017_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 870, " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"_EM_7025_XYZ_\", " + 
                    " \"name\": \"_EM_7026_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 545 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 410, " + 
                    " \"name\": \"_EM_7048_XYZ_\", " + 
                    " \"email_address\": \"_EM_7049_XYZ_\", " + 
                    " \"authorization_level\": 783, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 851, " + 
                    " \"type\": \"GOOGLE\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 602, " + 
                    " \"type\": \"GOOGLE\", " + 
                    " \"value\": \"_EM_7051_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"type\": \"API\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -171801980, " + 
                    " \"type\": \"API\", " + 
                    " \"value\": \"_EM_7052_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 1869692186687106970, " + 
                    " \"ratings_average\": 0.48057404031736384, " + 
                    " \"ratings_count\": 296, " + 
                    " \"ratings_sum\": 697, " + 
                    " \"related\": [] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_80_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_80_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 368, " + 
                    " \"description_introduction\": \"rbosgrc\", " + 
                    " \"description_main\": \"_EM_14280_XYZ_\", " + 
                    " \"description_safety\": \"xMTV\", " + 
                    " \"description_notes\": \"_EM_14281_XYZ_\", " + 
                    " \"age_min\": -461, " + 
                    " \"age_max\": -297, " + 
                    " \"participants_min\": -237242725, " + 
                    " \"participants_max\": 955, " + 
                    " \"time_min\": 607, " + 
                    " \"time_max\": 918, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"iwJrud8uE\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"HiEKBMH3bC\", " + 
                    " \"activities_count\": 46 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 274, " + 
                    " \"mime_type\": \"S4pZdHL\", " + 
                    " \"uri\": \"d1G\", " + 
                    " \"name\": \"w8oXf9vc3lOhVpqy\", " + 
                    " \"copy_right\": \"H\", " + 
                    " \"author\": \"_EM_14282_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"ratings_average\": 0.06373590053219957, " + 
                    " \"ratings_count\": 978, " + 
                    " \"related\": [ " + 
                    " 789857403, " + 
                    " 220, " + 
                    " 767 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_81_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_81_with500() throws Exception {
        
        String location_activities = "";
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/ping?" + 
                    "featured=R&" + 
                    "min_activities_count=mWWu4qq&" + 
                    "id=B&" + 
                    "uri=vf&" + 
                    "group=7Blg4W8NB5rK")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_main\": \"DlDB_0fV\", " + 
                    " \"description_safety\": \"GFb1M4\", " + 
                    " \"age_max\": -2147482927, " + 
                    " \"participants_min\": 548, " + 
                    " \"participants_max\": 919, " + 
                    " \"time_max\": 362 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T06:34:04.105Z"))
                .body("'properties_revisions'[0].'description_main'", containsString("DlDB_0fV"))
                .body("'properties_revisions'[0].'description_safety'", containsString("GFb1M4"))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147482927E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(548.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(919.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(362.0))
                .body("'properties'.'date_created'", containsString("2024-05-30T06:34:04.105Z"))
                .body("'properties'.'description_main'", containsString("DlDB_0fV"))
                .body("'properties'.'description_safety'", containsString("GFb1M4"))
                .body("'properties'.'age_max'", numberMatches(-2.147482927E9))
                .body("'properties'.'participants_min'", numberMatches(548.0))
                .body("'properties'.'participants_max'", numberMatches(919.0))
                .body("'properties'.'time_max'", numberMatches(362.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_1.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"favourite\": true " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/4/rating"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/4/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/AbstractResource_63_toJson
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("Could not generated JSON from ActivityRating object."));
        
    }
    
    
    /**
    * [test_82_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_82_with500() throws Exception {
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 0, " + 
                    " \"name\": \"_EM_76766_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_76768_XYZ_\", " + 
                    " \"description_main\": \"_EM_76770_XYZ_\", " + 
                    " \"age_min\": -323, " + 
                    " \"age_max\": -2147482661, " + 
                    " \"participants_min\": 611, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"_EM_76773_XYZ_\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"nbg_RG\", " + 
                    " \"uri\": \"_EM_76785_XYZ_\", " + 
                    " \"copy_right\": \"_EM_76787_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("_EM_76766_XYZ_"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T06:34:04.907Z"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("_EM_76768_XYZ_"))
                .body("'properties_revisions'[0].'description_main'", containsString("_EM_76770_XYZ_"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-323.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147482661E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(611.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'source'", containsString("_EM_76773_XYZ_"))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(1))
                .body("'properties_revisions'[0].'media_files'[0].'mime_type'", containsString("nbg_RG"))
                .body("'properties_revisions'[0].'media_files'[0].'uri'", containsString("_EM_76785_XYZ_"))
                .body("'properties_revisions'[0].'media_files'[0].'copy_right'", containsString("_EM_76787_XYZ_"))
                .body("'properties'.'name'", containsString("_EM_76766_XYZ_"))
                .body("'properties'.'date_created'", containsString("2024-05-30T06:34:04.907Z"))
                .body("'properties'.'description_introduction'", containsString("_EM_76768_XYZ_"))
                .body("'properties'.'description_main'", containsString("_EM_76770_XYZ_"))
                .body("'properties'.'age_min'", numberMatches(-323.0))
                .body("'properties'.'age_max'", numberMatches(-2.147482661E9))
                .body("'properties'.'participants_min'", numberMatches(611.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'source'", containsString("_EM_76773_XYZ_"))
                .body("'properties'.'media_files'.size()", equalTo(1))
                .body("'properties'.'media_files'[0].'mime_type'", containsString("nbg_RG"))
                .body("'properties'.'media_files'[0].'uri'", containsString("_EM_76785_XYZ_"))
                .body("'properties'.'media_files'[0].'copy_right'", containsString("_EM_76787_XYZ_"))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 0 " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/0/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating_78_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 975, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/0/rating"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/-2597966251413956363/rating?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_83_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_83_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 10690L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 10689L)
                .d("GRP", "\"VmIuI_xF\"")
                .d("NAME", "\"L5blO6Zk4M\"")
                .r("MEDIA_FILE_ID", 10690L)
            .and().insertInto("MEDIA_FILE", 10692L)
                .d("URI", "\"fwCpWEyndn\"")
            .and().insertInto("TAG", 10691L)
                .d("GRP", "\"_EM_43992_XYZ_\"")
                .d("NAME", "\"_EM_43993_XYZ_\"")
                .r("MEDIA_FILE_ID", 10692L)
            .and().insertInto("MEDIA_FILE", 25564L)
                .d("URI", "\"EAGb\"")
            .and().insertInto("USERS", 25563L)
                .d("AUTHORIZATION_LEVEL", "949")
                .d("NAME", "\"0g4IL\"")
            .and().insertInto("ACTIVITY", 25562L)
            .and().insertInto("ACTIVITY", 25561L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25560L)
                .r("ACTIVITY_ID", 25562L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 25559L)
                .r("ACTIVITY_PROPERTIES_ID", 25560L)
                .r("MEDIA_FILE_ID", 10690L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 25570L)
                .d("URI", "\"oLoMrxk_Wurk8J\"")
            .and().insertInto("USERS", 25569L)
                .d("AUTHORIZATION_LEVEL", "811174958")
                .d("NAME", "\"owSJvWhwEqm\"")
            .and().insertInto("ACTIVITY", 25568L)
            .and().insertInto("ACTIVITY", 25567L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25566L)
                .r("ACTIVITY_ID", 25561L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 25565L)
                .r("ACTIVITY_PROPERTIES_ID", 25566L)
                .r("MEDIA_FILE_ID", 10692L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 25576L)
                .d("URI", "\"Nr1Lx6YK6Gohd\"")
            .and().insertInto("USERS", 25575L)
                .d("AUTHORIZATION_LEVEL", "292")
                .d("NAME", "\"0w5LEZ1\"")
            .and().insertInto("ACTIVITY", 25574L)
            .and().insertInto("ACTIVITY", 25573L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25572L)
                .r("ACTIVITY_ID", 25573L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 25571L)
                .r("ACTIVITY_PROPERTIES_ID", 25560L)
                .r("MEDIA_FILE_ID", 25564L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 25583L)
                .d("URI", "\"UfPAdY0Fu49FbS\"")
            .and().insertInto("TAG", 25582L)
                .d("GRP", "\"zlf6jrrFiOH\"")
                .d("NAME", "\"lHXrMpea\"")
            .and().insertInto("USERS", 25581L)
                .d("AUTHORIZATION_LEVEL", "396")
                .d("NAME", "\"XEb0bitPfkJ6AK\"")
            .and().insertInto("ACTIVITY", 25580L)
            .and().insertInto("ACTIVITY", 25579L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25578L)
                .r("ACTIVITY_ID", 25568L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 25577L)
                .r("ACTIVITY_PROPERTIES_ID", 25560L)
                .r("TAG_ID", 25582L)
            .and().insertInto("MEDIA_FILE", 25590L)
                .d("URI", "\"7cQ6\"")
            .and().insertInto("TAG", 25589L)
                .d("GRP", "\"u8pxU7nNtw_49WYm\"")
                .d("NAME", "\"W_Jdamgskpe\"")
            .and().insertInto("USERS", 25588L)
                .d("AUTHORIZATION_LEVEL", "928")
                .d("NAME", "\"_Q7u3Sy_\"")
            .and().insertInto("ACTIVITY", 25587L)
            .and().insertInto("ACTIVITY", 25586L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25585L)
                .r("ACTIVITY_ID", 25567L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 25584L)
                .r("ACTIVITY_PROPERTIES_ID", 25572L)
                .r("TAG_ID", 10689L)
            .and().insertInto("MEDIA_FILE", 25597L)
                .d("URI", "\"DOEYeLJYdKh\"")
            .and().insertInto("TAG", 25596L)
                .d("GRP", "\"j7BYVkGglPO2Ynj\"")
                .d("NAME", "\"EZgVdJDBXTI7BM6U\"")
            .and().insertInto("USERS", 25595L)
                .d("AUTHORIZATION_LEVEL", "161")
                .d("NAME", "\"YM6\"")
            .and().insertInto("ACTIVITY", 25594L)
            .and().insertInto("ACTIVITY", 25593L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25592L)
                .r("ACTIVITY_ID", 25567L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 25591L)
                .r("ACTIVITY_PROPERTIES_ID", 25572L)
                .r("TAG_ID", 25582L)
            .and().insertInto("MEDIA_FILE", 25604L)
                .d("URI", "\"7oguK1N\"")
            .and().insertInto("TAG", 25603L)
                .d("GRP", "\"ohP\"")
                .d("NAME", "\"M\"")
            .and().insertInto("USERS", 25602L)
                .d("AUTHORIZATION_LEVEL", "226")
                .d("NAME", "\"QE0Us9Jgmne2\"")
            .and().insertInto("ACTIVITY", 25601L)
            .and().insertInto("ACTIVITY", 25600L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25599L)
                .r("ACTIVITY_ID", 25561L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 25598L)
                .r("ACTIVITY_PROPERTIES_ID", 25599L)
                .r("TAG_ID", 10689L)
            .and().insertInto("MEDIA_FILE", 25611L)
                .d("URI", "\"LT\"")
            .and().insertInto("TAG", 25610L)
                .d("GRP", "\"4b1Jqa8pvA62\"")
                .d("NAME", "\"l9t6W\"")
            .and().insertInto("USERS", 25609L)
                .d("AUTHORIZATION_LEVEL", "110")
                .d("NAME", "\"tXhph0TvIb5YA0M\"")
            .and().insertInto("ACTIVITY", 25608L)
            .and().insertInto("ACTIVITY", 25607L)
            .and().insertInto("ACTIVITY_PROPERTIES", 25606L)
                .r("ACTIVITY_ID", 25607L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 25605L)
                .r("ACTIVITY_PROPERTIES_ID", 25578L)
                .r("TAG_ID", 25603L)
            .and().insertInto("SYSTEM_MESSAGE", 25612L)
                .d("KEY", "\"Sr0W_CU\"")
                .d("VALID_FROM", "\"1979-11-20 02:22:21\"")
                .d("VALID_TO", "\"1952-11-03 16:14:29\"")
                .d("VALUE", "\"Hh2VXdOpUPEDm1Wl\"")
            .and().insertInto("SYSTEM_MESSAGE", 25613L)
                .d("KEY", "\"2dD3abgIk6S\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1988-04-10 16:04:45\"")
                .d("VALUE", "\"On0tIDMS\"")
            .and().insertInto("SYSTEM_MESSAGE", 25614L)
                .d("KEY", "\"c9BqoV2sB5\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2003-07-11 14:45:38\"")
                .d("VALUE", "\"n480WyX\"")
            .and().insertInto("SYSTEM_MESSAGE", 25615L)
                .d("KEY", "\"fFYhPm3t6K\"")
                .d("VALID_FROM", "\"1989-03-27 20:25:41\"")
                .d("VALID_TO", "\"2034-09-18 21:21:05\"")
                .d("VALUE", "\"aQOQQBiPFnazvO\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"uZj0jyr\", " + 
                    " \"description_material\": \"nKSRXxFVknN8hf\", " + 
                    " \"description_introduction\": \"_EM_42901_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_42902_XYZ_\", " + 
                    " \"description_main\": \"_EM_43990_XYZ_\", " + 
                    " \"description_safety\": \"_EM_43990_XYZ_\", " + 
                    " \"description_notes\": \"_EM_43990_XYZ_\", " + 
                    " \"age_max\": -1878638553, " + 
                    " \"participants_min\": -1205862770, " + 
                    " \"participants_max\": -1205862770, " + 
                    " \"time_min\": -1878638553, " + 
                    " \"time_max\": 13, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"naTCd8\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"Kx0k9JD3\", " + 
                    " \"name\": \"3c4076\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 923, " + 
                    " \"group\": \"I4tiR7FDEjrKil\", " + 
                    " \"name\": \"_EM_43991_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 997, " + 
                    " \"uri\": \"k5\" " + 
                    " }, " + 
                    " \"activities_count\": 438 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 261, " + 
                    " \"name\": \"W\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_84_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_84_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"WousT\", " + 
                    " \"description_material\": \"n7eG_0j\", " + 
                    " \"description_introduction\": \"F\", " + 
                    " \"description_prepare\": \"XEMDv3AG\", " + 
                    " \"description_main\": \"xfwcMmOB4\", " + 
                    " \"description_notes\": \"UaVBBqB\", " + 
                    " \"age_min\": 0, " + 
                    " \"time_min\": 879, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"GGDS\" " + 
                    " }, " + 
                    " { " + 
                    " \"activities_count\": 70 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 421, " + 
                    " \"uri\": \"hhSw5Icm\" " + 
                    " }, " + 
                    " { " + 
                    " \"uri\": \"YEiJ7STy\", " + 
                    " \"name\": \"NV79VCaGPj8lP\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"2GM1XLEr99\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"favourites_count\": 752079271, " + 
                    " \"ratings_average\": 0.63873604467454, " + 
                    " \"ratings_count\": 897, " + 
                    " \"ratings_sum\": 753 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_38_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_85_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_85_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 359L)
            .and().insertInto("USERS", 4740L)
                .d("AUTHORIZATION_LEVEL", "285")
                .d("NAME", "\"_EM_26816_XYZ_\"")
            .and().insertInto("ACTIVITY", 4739L)
            .and().insertInto("ACTIVITY_RATING", 4738L)
                .r("ACTIVITY_ID", 4739L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "760")
            .and().insertInto("USERS", 4743L)
                .d("AUTHORIZATION_LEVEL", "33357")
                .d("NAME", "\"_EM_26817_XYZ_\"")
            .and().insertInto("ACTIVITY", 4742L)
            .and().insertInto("ACTIVITY_RATING", 4741L)
                .r("ACTIVITY_ID", 4739L)
                .r("USER_ID", 4743L)
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 4746L)
                .d("AUTHORIZATION_LEVEL", "287")
                .d("NAME", "\"Y3mi\"")
            .and().insertInto("ACTIVITY", 4745L)
            .and().insertInto("ACTIVITY_RATING", 4744L)
                .r("ACTIVITY_ID", 4745L)
                .r("USER_ID", 4746L)
                .d("FAVOURITE", "false")
                .d("RATING", "0")
            .and().insertInto("USERS", 4749L)
                .d("AUTHORIZATION_LEVEL", "1049479")
                .d("NAME", "\"_EM_26818_XYZ_\"")
            .and().insertInto("ACTIVITY", 4748L)
            .and().insertInto("ACTIVITY_RATING", 4747L)
                .r("ACTIVITY_ID", 4748L)
                .r("USER_ID", 4743L)
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("MEDIA_FILE", 11067L)
                .d("URI", "\"Wce_1V6KT\"")
            .and().insertInto("TAG", 11066L)
                .d("GRP", "\"o5Ko64m_pTNgqd\"")
                .d("NAME", "\"_wgxvL3Hi\"")
            .and().insertInto("USERS", 11065L)
                .d("AUTHORIZATION_LEVEL", "156")
                .d("NAME", "\"i9\"")
            .and().insertInto("ACTIVITY", 11064L)
            .and().insertInto("ACTIVITY", 11063L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11062L)
                .r("ACTIVITY_ID", 4739L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11061L)
                .r("ACTIVITY_PROPERTIES_ID", 11062L)
                .r("TAG_ID", 11066L)
            .and().insertInto("MEDIA_FILE", 11074L)
                .d("URI", "\"GDUS\"")
            .and().insertInto("TAG", 11073L)
                .d("GRP", "\"HAyyLl_Vb4R\"")
                .d("NAME", "\"q\"")
            .and().insertInto("USERS", 11072L)
                .d("AUTHORIZATION_LEVEL", "948")
                .d("NAME", "\"hvKZG8Qb2ub\"")
            .and().insertInto("ACTIVITY", 11071L)
            .and().insertInto("ACTIVITY", 11070L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11069L)
                .r("ACTIVITY_ID", 11070L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11068L)
                .r("ACTIVITY_PROPERTIES_ID", 11069L)
                .r("TAG_ID", 11066L)
            .and().insertInto("MEDIA_FILE", 11081L)
                .d("URI", "\"Ump\"")
            .and().insertInto("TAG", 11080L)
                .d("GRP", "\"LjoHM70i8d9\"")
                .d("NAME", "\"y\"")
            .and().insertInto("USERS", 11079L)
                .d("AUTHORIZATION_LEVEL", "872")
                .d("NAME", "\"bcJaLPdie5dA\"")
            .and().insertInto("ACTIVITY", 11078L)
            .and().insertInto("ACTIVITY", 11077L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11076L)
                .r("ACTIVITY_ID", 11071L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11075L)
                .r("ACTIVITY_PROPERTIES_ID", 11062L)
                .r("TAG_ID", 11073L)
            .and().insertInto("MEDIA_FILE", 11088L)
                .d("URI", "\"8RBi\"")
            .and().insertInto("TAG", 11087L)
                .d("GRP", "\"\"")
                .d("NAME", "\"\"")
            .and().insertInto("USERS", 11086L)
                .d("AUTHORIZATION_LEVEL", "419")
                .d("NAME", "\"iaGhaElTCsrk\"")
            .and().insertInto("ACTIVITY", 11085L)
            .and().insertInto("ACTIVITY", 11084L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11083L)
                .r("ACTIVITY_ID", 11070L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11082L)
                .r("ACTIVITY_PROPERTIES_ID", 11062L)
                .r("TAG_ID", 11080L)
            .and().insertInto("MEDIA_FILE", 11095L)
                .d("URI", "\"M\"")
            .and().insertInto("TAG", 11094L)
                .d("GRP", "\"knDBbdUB1\"")
                .d("NAME", "\"Y\"")
            .and().insertInto("USERS", 11093L)
                .d("AUTHORIZATION_LEVEL", "257")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 11092L)
            .and().insertInto("ACTIVITY", 11091L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11090L)
                .r("ACTIVITY_ID", 11084L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 11089L)
                .r("ACTIVITY_PROPERTIES_ID", 11076L)
                .r("TAG_ID", 11080L)
            .and().insertInto("SYSTEM_MESSAGE", 38412L)
                .d("KEY", "\"dnunah6ITxKlmL\"")
                .d("VALID_FROM", "\"2014-06-23 23:40:07\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"3IBs5\"")
            .and().insertInto("SYSTEM_MESSAGE", 38413L)
                .d("KEY", "\"D8XevgH8\"")
                .d("VALID_FROM", "\"2064-02-14 17:16:35\"")
                .d("VALID_TO", "\"2088-03-04 03:41:58\"")
                .d("VALUE", "\"JcH8zaTW4iq2QO\"")
            .and().insertInto("SYSTEM_MESSAGE", 38414L)
                .d("KEY", "\"TV0ZW8Nv7Grox\"")
                .d("VALID_FROM", "\"2017-05-02 02:54:40\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"jxBGlQAMbe6q\"")
            .and().insertInto("SYSTEM_MESSAGE", 38415L)
                .d("KEY", "\"AZMQabH9JY\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"1uM3\"")
            .and().insertInto("SYSTEM_MESSAGE", 38416L)
                .d("KEY", "\"LL\"")
                .d("VALID_FROM", "\"1935-12-09 00:02:38\"")
                .d("VALID_TO", "\"2082-10-21 11:30:34\"")
                .d("VALUE", "\"LGDNL3JZodJ\"")
            .and().insertInto("MEDIA_FILE", 47955L)
                .d("URI", "\"lTJhQK6iL\"")
            .and().insertInto("TAG", 47954L)
                .d("GRP", "\"W0b3bcKisr2_\"")
                .d("NAME", "\"ffI\"")
            .and().insertInto("TAG_DERIVED", 47953L)
                .r("TAG_ID", 47954L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 47958L)
                .d("URI", "\"U5bynfQDkw\"")
            .and().insertInto("TAG", 47957L)
                .d("GRP", "\"XHSs\"")
                .d("NAME", "\"G_\"")
            .and().insertInto("TAG_DERIVED", 47956L)
                .r("TAG_ID", 11094L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 47961L)
                .d("URI", "\"v0lCqPV1eE\"")
            .and().insertInto("TAG", 47960L)
                .d("GRP", "\"Wz6REnuL02IvULxy\"")
                .d("NAME", "\"hg3CR2qstbLci\"")
            .and().insertInto("TAG_DERIVED", 47959L)
                .r("TAG_ID", 11080L)
                .d("ACTIVITIES_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories/73?" + 
                    "uri=KPGynU01l0dueV&" + 
                    "valid=Ea2vU&" + 
                    "min_activities_count=cTfv&" + 
                    "key=YU6nT&" + 
                    "my_favourites=zwmCu&" + 
                    "id=&" + 
                    "group=X2yKpvRdyZ_iimaY")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_created\": \"1935-03-11T19:32:05\", " + 
                    " \"date_updated\": \"2031-02-03T21:55:57\", " + 
                    " \"description_material\": \"\", " + 
                    " \"description_introduction\": \"ihOU\", " + 
                    " \"description_prepare\": \"mQFxJPjUqcKZ7w\", " + 
                    " \"description_safety\": \"5ae8\", " + 
                    " \"participants_min\": 984, " + 
                    " \"time_min\": 247, " + 
                    " \"source\": \"jyquzQ3qvsjn8UL\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"media_file\": { " + 
                    " \"id\": -5666908113524680482, " + 
                    " \"uri\": \"1DmSjsLbdbKOFdh\", " + 
                    " \"copy_right\": \"FmV\" " + 
                    " }, " + 
                    " \"activities_count\": 825 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 19, " + 
                    " \"name\": \"f\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"x7_9p67CES5pHs\", " + 
                    " \"name\": \"QeT\", " + 
                    " \"copy_right\": \"aV6HjJmx7EA\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 745, " + 
                    " \"name\": \"mxNXOewzA\", " + 
                    " \"activities_count\": 91 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 452, " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"lFyzKXHniEX9\", " + 
                    " \"name\": \"wo3W1WRBeCcIiU\", " + 
                    " \"capture_date\": \"2054-08-21T23:26:01\", " + 
                    " \"copy_right\": \"mtIj\", " + 
                    " \"author\": \"ereQJ3YE9\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"G_MqBb\", " + 
                    " \"activities_count\": 869 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"qR4unIzf8YdfB\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 402, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_sum\": 801 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/profile?" + 
                    "size=JefF0UAaimlH&" + 
                    "min_activities_count=x&" + 
                    "name=RfWfv9RsTW&" + 
                    "attrs=wbuFAN&" + 
                    "random=USz&" + 
                    "featured=8PCtNayJwMZvdBP&" + 
                    "favourites=M4TT_czuLJI1WV&" + 
                    "categories=VKxjbMIIXI25qs&" + 
                    "id=Ju_PSnJ1Wsg&" + 
                    "uri=uUWwUMX9MHWPLdo&" + 
                    "group=7FbBPmt4uSMyM&" + 
                    "participants=pY1M")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'role_permissions'.size()", equalTo(23))
                .body("'role_permissions'", hasItems("activity_create", "activity_edit", "activity_edit_own", "auth_profile_edit", "auth_role_assign", "auth_role_assignown", "auth_role_list", "auth_user_create", "auth_user_edit", "category_create", "category_edit", "comment_create", "comment_edit", "comment_edit_own", "mediaitem_create", "mediaitem_edit", "mediaitem_edit_own", "rating_set_own", "reference_create", "reference_edit", "reference_edit_own", "system_message_manage", "system_message_read"))
                .body("'name'", containsString("INTEGRATION TEST ADMINISTRATOR"))
                .body("'role'", containsString("administrator"));
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .patch(baseUrlOfSut + "/api/v2/activities/1")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/477?" + 
                    "attrs=CBEB_X&" + 
                    "size=YnF6oKP&" + 
                    "my_favourites=xr_Pbugr&" + 
                    "name=a&" + 
                    "durations=IG4K63nH5K&" + 
                    "group=3J6eE&" + 
                    "participants=oZ&" + 
                    "valid=ZvSgpey&" + 
                    "uri=oaMNkFC9UpHm")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
        
        
        ValidatableResponse res_5 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"K\", " + 
                    " \"description_prepare\": \"fBV\", " + 
                    " \"description_safety\": \"v8VkQPM\", " + 
                    " \"age_min\": -1301802150, " + 
                    " \"age_max\": -629, " + 
                    " \"time_min\": 251, " + 
                    " \"source\": \"fwhmnhwhnb3\", " + 
                    " \"tags\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T06:34:50.432Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("K"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("fBV"))
                .body("'properties_revisions'[0].'description_safety'", containsString("v8VkQPM"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-1.30180215E9))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-629.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(251.0))
                .body("'properties_revisions'[0].'source'", containsString("fwhmnhwhnb3"))
                .body("'properties_revisions'[0].'tags'.size()", equalTo(0))
                .body("'properties'.'date_created'", containsString("2024-05-30T06:34:50.432Z"))
                .body("'properties'.'description_material'", containsString("K"))
                .body("'properties'.'description_prepare'", containsString("fBV"))
                .body("'properties'.'description_safety'", containsString("v8VkQPM"))
                .body("'properties'.'age_min'", numberMatches(-1.30180215E9))
                .body("'properties'.'age_max'", numberMatches(-629.0))
                .body("'properties'.'time_min'", numberMatches(251.0))
                .body("'properties'.'source'", containsString("fwhmnhwhnb3"))
                .body("'properties'.'tags'.size()", equalTo(0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_5.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/6978282240968111668/rating?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_112_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/6978282240968111668/rating?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"\", " + 
                    " \"description_introduction\": \"ihOU\", " + 
                    " \"description_main\": \"\", " + 
                    " \"description_notes\": \"\", " + 
                    " \"age_min\": -2147483605, " + 
                    " \"age_max\": -2147483605, " + 
                    " \"participants_min\": 984, " + 
                    " \"participants_max\": 984, " + 
                    " \"time_min\": -2147483605, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"jyquzQ3qvsjn8UL\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T06:34:50.467Z"))
                .body("'properties_revisions'[0].'description_material'", containsString(""))
                .body("'properties_revisions'[0].'description_introduction'", containsString("ihOU"))
                .body("'properties_revisions'[0].'description_main'", containsString(""))
                .body("'properties_revisions'[0].'description_notes'", containsString(""))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-2.147483605E9))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147483605E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(984.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(984.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(-2.147483605E9))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'source'", containsString("jyquzQ3qvsjn8UL"))
                .body("'properties'.'date_created'", containsString("2024-05-30T06:34:50.467Z"))
                .body("'properties'.'description_material'", containsString(""))
                .body("'properties'.'description_introduction'", containsString("ihOU"))
                .body("'properties'.'description_main'", containsString(""))
                .body("'properties'.'description_notes'", containsString(""))
                .body("'properties'.'age_min'", numberMatches(-2.147483605E9))
                .body("'properties'.'age_max'", numberMatches(-2.147483605E9))
                .body("'properties'.'participants_min'", numberMatches(984.0))
                .body("'properties'.'participants_max'", numberMatches(984.0))
                .body("'properties'.'time_min'", numberMatches(-2.147483605E9))
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'source'", containsString("jyquzQ3qvsjn8UL"))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?" + 
                    "uri=&" + 
                    "group=v&" + 
                    "name=jNvKWBBG0pdI7XW")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(8))
                .body("[0].'mime_type'", nullValue())
                .body("[0].'uri'", containsString("Wce_1V6KT"))
                .body("[0].'name'", nullValue())
                .body("[0].'capture_date'", nullValue())
                .body("[0].'copy_right'", nullValue())
                .body("[0].'author'", nullValue())
                .body("[1].'mime_type'", nullValue())
                .body("[1].'uri'", containsString("GDUS"))
                .body("[1].'name'", nullValue())
                .body("[1].'capture_date'", nullValue())
                .body("[1].'copy_right'", nullValue())
                .body("[1].'author'", nullValue())
                .body("[2].'mime_type'", nullValue())
                .body("[2].'uri'", containsString("Ump"))
                .body("[2].'name'", nullValue())
                .body("[2].'capture_date'", nullValue())
                .body("[2].'copy_right'", nullValue())
                .body("[2].'author'", nullValue())
                ; // Skipping assertions on the remaining 5 elements. This limit of 3 elements can be increased in the configurations
        
    }
    
    
    /**
    * [test_86_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_86_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 0, " + 
                    " \"name\": \"_EM_76766_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_76768_XYZ_\", " + 
                    " \"description_main\": \"_EM_76770_XYZ_\", " + 
                    " \"age_min\": -323, " + 
                    " \"age_max\": -2147482661, " + 
                    " \"participants_min\": 611, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"_EM_76773_XYZ_\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"nbg_RG\", " + 
                    " \"uri\": \"_EM_76785_XYZ_\", " + 
                    " \"copy_right\": \"_EM_76787_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("_EM_76766_XYZ_"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T06:34:49.920Z"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("_EM_76768_XYZ_"))
                .body("'properties_revisions'[0].'description_main'", containsString("_EM_76770_XYZ_"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-323.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147482661E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(611.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'source'", containsString("_EM_76773_XYZ_"))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(1))
                .body("'properties_revisions'[0].'media_files'[0].'mime_type'", containsString("nbg_RG"))
                .body("'properties_revisions'[0].'media_files'[0].'uri'", containsString("_EM_76785_XYZ_"))
                .body("'properties_revisions'[0].'media_files'[0].'copy_right'", containsString("_EM_76787_XYZ_"))
                .body("'properties'.'name'", containsString("_EM_76766_XYZ_"))
                .body("'properties'.'date_created'", containsString("2024-05-30T06:34:49.920Z"))
                .body("'properties'.'description_introduction'", containsString("_EM_76768_XYZ_"))
                .body("'properties'.'description_main'", containsString("_EM_76770_XYZ_"))
                .body("'properties'.'age_min'", numberMatches(-323.0))
                .body("'properties'.'age_max'", numberMatches(-2.147482661E9))
                .body("'properties'.'participants_min'", numberMatches(611.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'source'", containsString("_EM_76773_XYZ_"))
                .body("'properties'.'media_files'.size()", equalTo(1))
                .body("'properties'.'media_files'[0].'mime_type'", containsString("nbg_RG"))
                .body("'properties'.'media_files'[0].'uri'", containsString("_EM_76785_XYZ_"))
                .body("'properties'.'media_files'[0].'copy_right'", containsString("_EM_76787_XYZ_"))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 0, " + 
                    " \"favourite\": true " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/0/rating"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 975, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/0/rating"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 0, " + 
                    " \"name\": \"_EM_76790_XYZ_\", " + 
                    " \"author\": \"_EM_76792_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_109_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }


}
