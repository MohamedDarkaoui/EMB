import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2024-05-30T01:44:37.185+02:00[Europe/Paris]
 * <br>
 * The generated test suite contains 43 tests
 * <br>
 * Covered targets: 1459
 * <br>
 * Used time: 2h 0m 55s
 * <br>
 * Needed budget for current results: 98%
 * <br>
 * This file contains test cases that represent successful calls.
 */
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.embedded.se.devscout.scoutapi.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("MEDIA_FILE","ACTIVITY_PROPERTIES_MEDIA_FILE","MEDIA_FILE_KEYWORDS","TAG","ACTIVITY_PROPERTIES_TAG","TAG_DERIVED","USERS","ACTIVITY_PROPERTIES","ACTIVITY_RATING","ACTIVITY_RELATION","USER_IDENTITY","ACTIVITY","ACTIVITY_DERIVED","SYSTEM_MESSAGE"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test(timeout = 60000)
    public void test_0() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .get(baseUrlOfSut + "/api/swagger.json")
                .then()
                .statusCode(200);
        
        expectationHandler.expect(ems)
            /*
             Note: No supported codes appear to be defined. https://swagger.io/docs/specification/describing-responses/.
             This is somewhat unexpected, so the code below is likely to lead to a failed expectation
            */
            .that(sco, Arrays.asList().contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/categories/-9478521309129093")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_2() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_61_XYZ_")
                .get(baseUrlOfSut + "/api/v1/system/roles?EMextraParam123=_EM_60_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_3() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/-7521821855966670929?" + 
                    "attrs=_EM_49_XYZ_&" + 
                    "EMextraParam123=_EM_50_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_4() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages/720?attrs=_EM_54_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_5() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1140L)
                .d("AUTHOR", "\"_EM_39326_XYZ_\"")
                .d("CAPTURE_DATE", "\"1946-11-26 21:00:31\"")
                .d("COPY_RIGHT", "\"Zp9UElDKwKj\"")
                .d("MIME_TYPE", "\"pkUWbKI\"")
                .d("NAME", "\"ACTIVITY_DERIVED\"")
                .d("URI", "\"mMU1UyVXu5\"")
            .and().insertInto("MEDIA_FILE", 1141L)
                .d("AUTHOR", "\"XfCqTMj\"")
                .d("CAPTURE_DATE", "\"1985-07-21 00:35:29\"")
                .d("COPY_RIGHT", "\"v\"")
                .d("MIME_TYPE", "\"195921\"")
                .d("NAME", "\"Ze\"")
                .d("URI", "\"-1\"")
            .and().insertInto("MEDIA_FILE", 1142L)
                .d("AUTHOR", "\"_EM_39327_XYZ_\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"8P6xzgZ7pUXsNIEb\"")
                .d("MIME_TYPE", "\"_EM_39328_XYZ_\"")
                .d("NAME", "\"193706\"")
                .d("URI", "\"_EM_39134_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 1143L)
                .d("AUTHOR", "\"n\"")
                .d("CAPTURE_DATE", "\"1956-05-12 20:38:29\"")
                .d("COPY_RIGHT", "\"126403\"")
                .d("MIME_TYPE", "\"126578\"")
                .d("NAME", "\"SHa3g\"")
                .d("URI", "\"_EM_39329_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 1144L)
                .d("AUTHOR", "\"TsPmRDKOo\"")
                .d("CAPTURE_DATE", "\"2028-08-29 14:46:40\"")
                .d("COPY_RIGHT", "\"CROSS\"")
                .d("MIME_TYPE", "\"_EM_39330_XYZ_\"")
                .d("NAME", "\"\"")
                .d("URI", "\"6841\"")
            .and().insertInto("MEDIA_FILE", 1146L)
                .d("URI", "\"1908-02-10 02:16:00\"")
            .and().insertInto("TAG", 1145L)
                .d("GRP", "\"2032-09-29 19:17:34\"")
                .d("NAME", "\"_EM_39331_XYZ_\"")
                .r("MEDIA_FILE_ID", 1146L)
            .and().insertInto("MEDIA_FILE", 1148L)
                .d("URI", "\"1rRPw_IDu4Z1\"")
            .and().insertInto("TAG", 1147L)
                .d("GRP", "\"LU1\"")
                .d("NAME", "\"_EM_12722_XYZ_\"")
                .r("MEDIA_FILE_ID", 1142L)
            .and().insertInto("MEDIA_FILE", 1150L)
                .d("URI", "\"_EM_19795_XYZ_\"")
            .and().insertInto("TAG", 1149L)
                .d("GRP", "\"_EM_19796_XYZ_\"")
                .d("NAME", "\"8LuU5DNxKZFS\"")
                .r("MEDIA_FILE_ID", 1150L)
            .and().insertInto("MEDIA_FILE", 1152L)
                .d("URI", "\"2666i\"")
            .and().insertInto("TAG", 1151L)
                .d("GRP", "\"_EM_19797_XYZ_\"")
                .d("NAME", "\"_EM_39332_XYZ_\"")
                .r("MEDIA_FILE_ID", 1152L)
            .and().insertInto("MEDIA_FILE", 1154L)
                .d("URI", "\"-24\"")
            .and().insertInto("TAG", 1153L)
                .d("GRP", "\"RATINGS_3_1_4_\"")
                .d("NAME", "\"6549\"")
                .r("MEDIA_FILE_ID", 1152L)
            .and().insertInto("ACTIVITY", 1155L)
            .and().insertInto("SYSTEM_MESSAGE", 1156L)
                .d("KEY", "\"SCHEMATA\"")
                .d("VALID_FROM", "\"1904-10-26 00:33:31\"")
                .d("VALID_TO", "\"2000-06-16 21:52:12\"")
                .d("VALUE", "\"QNFHoU_UAbM\"")
            .and().insertInto("SYSTEM_MESSAGE", 1157L)
                .d("KEY", "\"\"")
                .d("VALID_FROM", "\"1987-03-16 00:43:44\"")
                .d("VALID_TO", "\"1900-10-24 09:29:00\"")
                .d("VALUE", "\"_EM_19800_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 1158L)
                .d("KEY", "\"D49WZ\"")
                .d("VALID_FROM", "\"2007-08-25 07:13:29\"")
                .d("VALID_TO", "\"2100-07-22 04:00:36\"")
                .d("VALUE", "\"ztWRbAksxZuU\"")
            .and().insertInto("SYSTEM_MESSAGE", 1159L)
                .d("KEY", "\"RYNlN_YVld3\"")
                .d("VALID_FROM", "\"2008-03-07 11:29:29\"")
                .d("VALID_TO", "\"1908-06-10 00:16:14\"")
                .d("VALUE", "\"_EM_39333_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 1160L)
                .d("KEY", "\"(NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_BACD66F8_7CAB_474C_B5A3_0E27F781AB08)\"")
                .d("VALID_FROM", "\"2013-07-15 18:25:20\"")
                .d("VALID_TO", "\"2096-03-27 05:11:15\"")
                .d("VALUE", "\"_EM_39334_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v2/tags/-3800?attrs=QtjCLllTFWU8g2V")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_6() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/166?" + 
                    "attrs=_EM_11_XYZ_&" + 
                    "EMextraParam123=_EM_12_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_7() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities/114?" + 
                    "attrs=_EM_74_XYZ_&" + 
                    "EMextraParam123=_EM_75_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_8() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_148_XYZ_")
                .get(baseUrlOfSut + "/api/v1/media_files?" + 
                    "uri=_EM_145_XYZ_&" + 
                    "EMextraParam123=_EM_147_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_9() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_152_XYZ_")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "valid=now_and_future&" + 
                    "EMextraParam123=_EM_151_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_10() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 166L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2072-10-31 16:36:22\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"_EM_7905_XYZ_\"")
                .d("URI", "\"t3rTqfg5Vdk\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_7908_XYZ_")
                .get(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'mime_type'", nullValue())
                .body("[0].'uri'", containsString("t3rTqfg5Vdk"))
                .body("[0].'name'", containsString("_EM_7905_XYZ_"))
                .body("[0].'capture_date'", numberMatches(3.245153782E12))
                .body("[0].'copy_right'", nullValue())
                .body("[0].'author'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_11() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 1537L)
                .d("KEY", "\"DmMd0ua\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_13695_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?attrs=_EM_13696_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("'[0]'.isEmpty()", is(true));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_12() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 1072L)
                .d("KEY", "\"l0e3FfBtQr\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2058-08-22 18:40:31\"")
                .d("VALUE", "\"_EM_11075_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=l0e3FfBtQr&" + 
                    "valid=now")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'key'", containsString("l0e3FfBtQr"))
                .body("[0].'value'", containsString("_EM_11075_XYZ_"))
                .body("[0].'valid_to'", numberMatches(2.797260031E12))
                .body("[0].'valid_from'", nullValue());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_13() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1519L)
            .and().insertInto("ACTIVITY", 1520L)
            .and().insertInto("ACTIVITY", 1521L)
            .and().insertInto("ACTIVITY", 1522L)
            .and().insertInto("MEDIA_FILE", 12484L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "\"2091-09-24 13:45:07\"")
                .d("COPY_RIGHT", "\"_EM_54605_XYZ_\"")
                .d("MIME_TYPE", "\"VIS4TDFzYqiuLW\"")
                .d("NAME", "\"381950\"")
                .d("URI", "\"7ftrM_oUU\"")
            .and().insertInto("USERS", 13719L)
                .d("AUTHORIZATION_LEVEL", "-32709")
                .d("NAME", "\"XpNG0HmjHOTz5\"")
            .and().insertInto("ACTIVITY", 13718L)
            .and().insertInto("ACTIVITY", 13717L)
            .and().insertInto("ACTIVITY_PROPERTIES", 13716L)
                .d("AGE_MAX", "-457")
                .d("AGE_MIN", "-44")
                .d("DATE_CREATED", "\"2094-08-31 17:05:14\"")
                .d("DATE_PUBLISHED", "\"2034-05-02 11:29:02\"")
                .d("DATE_UPDATED", "\"2054-09-23 17:00:52\"")
                .d("DESCRIPTION_INTRODUCTION", "\"Sd9VpVj7gVQ85BW\"")
                .d("DESCRIPTION_MAIN", "\"zmy_a4igN5RTdF_V\"")
                .d("DESCRIPTION_MATERIAL", "\"cHNKn\"")
                .d("DESCRIPTION_NOTES", "\"EGDOsz\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "false")
                .d("NAME", "\"C9m\"")
                .d("PARTICIPANTS_MAX", "856")
                .d("PARTICIPANTS_MIN", "282")
                .d("SOURCE", "\"Gk7zeRCjKWVy\"")
                .d("TIME_MAX", "596423860")
                .d("TIME_MIN", "-107340004")
                .r("ACTIVITY_ID", 1521L)
                .d("AUTHOR_ID", "3")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 13723L)
                .d("AUTHORIZATION_LEVEL", "824")
                .d("NAME", "\"42O7Zn6dHHrd0\"")
            .and().insertInto("ACTIVITY", 13722L)
            .and().insertInto("ACTIVITY", 13721L)
            .and().insertInto("ACTIVITY_PROPERTIES", 13720L)
                .d("AGE_MAX", "19")
                .d("AGE_MIN", "-2147482954")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"2006-07-16 02:39:39\"")
                .d("DATE_UPDATED", "\"2002-05-10 08:00:42\"")
                .d("DESCRIPTION_INTRODUCTION", "\"zEQ1k1QFIKn5\"")
                .d("DESCRIPTION_MAIN", "\"tcEtGsnTnNHAcgyA\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"UWO\"")
                .d("DESCRIPTION_PREPARE", "\"EnZ3RvRWqiV4f40\"")
                .d("DESCRIPTION_SAFETY", "\"u10GmTismjMg1kwfm\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"_EM_54606_XYZ_\"")
                .d("PARTICIPANTS_MAX", "239")
                .d("PARTICIPANTS_MIN", "569")
                .d("SOURCE", "\"2e10\"")
                .d("TIME_MAX", "707")
                .d("TIME_MIN", "1301826294")
                .r("ACTIVITY_ID", 13722L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 13722L)
            .and().insertInto("ACTIVITY", 13725L)
            .and().insertInto("ACTIVITY_DERIVED", 13724L)
                .r("ACTIVITY_ID", 1522L)
                .d("FAVOURITES_COUNT", "44")
                .d("RATINGS_AVG", "0.22458612434228675")
                .d("RATINGS_COUNT", "481")
                .d("RATINGS_SUM", "907")
            .and().insertInto("ACTIVITY", 13727L)
            .and().insertInto("ACTIVITY_DERIVED", 13726L)
                .r("ACTIVITY_ID", 13725L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "0.1676033261117561")
                .d("RATINGS_COUNT", "3163225694716165963")
                .d("RATINGS_SUM", "1321853703")
            .and().insertInto("ACTIVITY", 13729L)
            .and().insertInto("ACTIVITY_DERIVED", 13728L)
                .r("ACTIVITY_ID", 13721L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "941")
                .d("RATINGS_SUM", "157")
            .and().insertInto("MEDIA_FILE", 32853L)
                .d("URI", "\"Z\"")
            .and().insertInto("TAG", 32852L)
                .d("GRP", "\"\"")
                .d("NAME", "\"_i3II5Ln\"")
            .and().insertInto("TAG_DERIVED", 32851L)
                .r("TAG_ID", 32852L)
                .d("ACTIVITIES_COUNT", "763")
            .and().insertInto("MEDIA_FILE", 32856L)
                .d("URI", "\"LBTw7EM\"")
            .and().insertInto("TAG", 32855L)
                .d("GRP", "\"3hk\"")
                .d("NAME", "\"H3RThC2eNsy\"")
            .and().insertInto("TAG_DERIVED", 32854L)
                .r("TAG_ID", 32855L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 32859L)
                .d("URI", "\"tDYilMT_ZNl\"")
            .and().insertInto("TAG", 32858L)
                .d("GRP", "\"HuGy3J\"")
                .d("NAME", "\"\"")
            .and().insertInto("TAG_DERIVED", 32857L)
                .r("TAG_ID", 32858L)
                .d("ACTIVITIES_COUNT", "804")
            .and().insertInto("MEDIA_FILE", 32862L)
                .d("URI", "\"AqC\"")
            .and().insertInto("TAG", 32861L)
                .d("GRP", "\"06\"")
                .d("NAME", "\"H\"")
            .and().insertInto("TAG_DERIVED", 32860L)
                .r("TAG_ID", 32861L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("USERS", 32895L)
                .d("AUTHORIZATION_LEVEL", "620")
                .d("NAME", "\"HRaw\"")
            .and().insertInto("ACTIVITY", 32894L)
            .and().insertInto("ACTIVITY_RATING", 32893L)
                .r("ACTIVITY_ID", 13722L)
                .r("USER_ID", 32895L)
                .d("FAVOURITE", "false")
                .d("RATING", "548")
            .and().insertInto("USERS", 32898L)
                .d("AUTHORIZATION_LEVEL", "13")
                .d("NAME", "\"hSx1O3cnbKmWr_\"")
            .and().insertInto("ACTIVITY", 32897L)
            .and().insertInto("ACTIVITY_RATING", 32896L)
                .r("ACTIVITY_ID", 32897L)
                .r("USER_ID", 13719L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 32901L)
                .d("AUTHORIZATION_LEVEL", "222")
                .d("NAME", "\"V4GuRfKw\"")
            .and().insertInto("ACTIVITY", 32900L)
            .and().insertInto("ACTIVITY_RATING", 32899L)
                .r("ACTIVITY_ID", 1521L)
                .r("USER_ID", 32895L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 32904L)
                .d("AUTHORIZATION_LEVEL", "312")
                .d("NAME", "\"XkzRzr99\"")
            .and().insertInto("ACTIVITY", 32903L)
            .and().insertInto("ACTIVITY_RATING", 32902L)
                .r("ACTIVITY_ID", 1521L)
                .r("USER_ID", 32904L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories?" + 
                    "min_activities_count=366&" + 
                    "attrs=cnI")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("'[0]'.isEmpty()", is(true))
                .body("'[1]'.isEmpty()", is(true));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_14() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 21L)
                .d("URI", "\"_EM_6686_XYZ_\"")
            .and().insertInto("TAG", 20L)
                .d("GRP", "\"_EM_6687_XYZ_\"")
                .d("NAME", "\"JcV\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_6691_XYZ_")
                .get(baseUrlOfSut + "/api/v2/tags?name=JcV")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'group'", containsString("_EM_6687_XYZ_"))
                .body("[0].'name'", containsString("JcV"))
                .body("[0].'media_file'", nullValue())
                .body("[0].'activities_count'", numberMatches(0.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_15() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/users?" + 
                    "name=jHN&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_16() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/318?EMextraParam123=_EM_5076_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_17() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"_EM_5247_XYZ_\", " + 
                    " \"value\": \"_EM_5248_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'key'", containsString("_EM_5247_XYZ_"))
                .body("'value'", containsString("_EM_5248_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_18() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 31996L)
                .d("AUTHORIZATION_LEVEL", "112")
                .d("NAME", "\"o1b0PwpporAxRv\"")
            .and().insertInto("USER_IDENTITY", 31995L)
                .d("DATE_CREATED", "NULL")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"FZ_\"")
                .d("USER_ID", "NULL")
            .and().insertInto("USERS", 31998L)
                .d("AUTHORIZATION_LEVEL", "658")
                .d("NAME", "\"ZEGFUp\"")
            .and().insertInto("USER_IDENTITY", 31997L)
                .d("DATE_CREATED", "\"1909-04-05 15:23:54\"")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"VDnoKxkbLzm\"")
                .d("USER_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"l\", " + 
                    " \"email_address\": \"MDUyKUZkTy\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("l"))
                .body("'email_address'", containsString("MDUyKUZkTy"))
                .body("'authorization_level'", numberMatches(0.0))
                .body("'identities'.size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_19() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 5613L)
                .d("URI", "\"_EM_26110_XYZ_\"")
            .and().insertInto("TAG", 5612L)
                .d("GRP", "\"yyzBnT11yVjma\"")
                .d("NAME", "\"_EM_26111_XYZ_\"")
                .r("MEDIA_FILE_ID", 5613L)
            .and().insertInto("MEDIA_FILE", 5615L)
                .d("URI", "\"_EM_26112_XYZ_\"")
            .and().insertInto("TAG", 5614L)
                .d("GRP", "\"_EM_26113_XYZ_\"")
                .d("NAME", "\"kyA\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 5617L)
                .d("URI", "\"_EM_26114_XYZ_\"")
            .and().insertInto("TAG", 5616L)
                .d("GRP", "\"_EM_26115_XYZ_\"")
                .d("NAME", "\"Qc\"")
                .r("MEDIA_FILE_ID", 5613L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"vZd6n9Gtek\", " + 
                    " \"name\": \"LbypI\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("vZd6n9Gtek"))
                .body("'name'", containsString("LbypI"))
                .body("'activities_count'", numberMatches(0.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_20() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(3))
                .body("[0].'name'", containsString("INTEGRATION TEST MODERATOR"))
                .body("[0].'email_address'", nullValue())
                .body("[0].'authorization_level'", numberMatches(10.0))
                .body("[0].'identities'.size()", equalTo(1))
                .body("[0].'identities'[0].'date_created'", numberMatches(9.811548E11))
                .body("[0].'identities'[0].'type'", containsString("API"))
                .body("[0].'identities'[0].'value'", containsString("moderator"))
                .body("[1].'name'", containsString("INTEGRATION TEST ADMINISTRATOR"))
                .body("[1].'email_address'", nullValue())
                .body("[1].'authorization_level'", numberMatches(20.0))
                .body("[1].'identities'.size()", equalTo(1))
                .body("[1].'identities'[0].'date_created'", numberMatches(9.811548E11))
                .body("[1].'identities'[0].'type'", containsString("API"))
                .body("[1].'identities'[0].'value'", containsString("administrator"))
                .body("[2].'name'", containsString("INTEGRATION TEST USER"))
                .body("[2].'email_address'", nullValue())
                .body("[2].'authorization_level'", numberMatches(0.0))
                .body("[2].'identities'.size()", equalTo(1))
                .body("[2].'identities'[0].'date_created'", numberMatches(9.811548E11))
                .body("[2].'identities'[0].'type'", containsString("API"))
                .body("[2].'identities'[0].'value'", containsString("user"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_21() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 602L)
                .d("URI", "\"dX3\"")
            .and().insertInto("TAG", 601L)
                .d("GRP", "\"_EM_27890_XYZ_\"")
                .d("NAME", "\"RqxcKY6bpSda\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 604L)
                .d("URI", "\"de0jEiPzZHGB\"")
            .and().insertInto("TAG", 603L)
                .d("GRP", "\"aTP\"")
                .d("NAME", "\"_EM_27891_XYZ_\"")
                .r("MEDIA_FILE_ID", 604L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_tags = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"m_RrS\", " + 
                    " \"name\": \"PjDy8M2_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("m_RrS"))
                .body("'name'", containsString("PjDy8M2_"))
                .body("'activities_count'", numberMatches(0.0));
        location_tags = "/api/v2/tags" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .delete(resolveLocation(location_tags, baseUrlOfSut + "/api/v2/tags/6429844632527398624"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_22() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1870_XYZ_")
                .get(baseUrlOfSut + "/api/v1/users/profile")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'role_permissions'.size()", equalTo(9))
                .body("'role_permissions'", hasItems("activity_create", "activity_edit_own", "auth_profile_edit", "comment_create", "comment_edit_own", "mediaitem_edit_own", "rating_set_own", "reference_edit_own", "system_message_read"))
                .body("'name'", containsString("INTEGRATION TEST USER"))
                .body("'role'", containsString("user"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_23() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 0, " + 
                    " \"mime_type\": \"h\", " + 
                    " \"uri\": \"http://194.191.173.56/Gff1n/RLeE\", " + 
                    " \"name\": \"_EM_65804_XYZ_\", " + 
                    " \"copy_right\": \"_EM_65805_XYZ_\", " + 
                    " \"author\": \"2elm8vrAyOYTf38s\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("h"))
                .body("'uri'", containsString("http://194.191.173.56/Gff1n/RLeE"))
                .body("'name'", containsString("_EM_65804_XYZ_"))
                .body("'copy_right'", containsString("_EM_65805_XYZ_"))
                .body("'author'", containsString("2elm8vrAyOYTf38s"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_24() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1519L)
            .and().insertInto("ACTIVITY", 1520L)
            .and().insertInto("ACTIVITY", 1521L)
            .and().insertInto("ACTIVITY", 1522L)
            .and().insertInto("MEDIA_FILE", 12484L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "\"2091-09-24 13:45:07\"")
                .d("COPY_RIGHT", "\"bxcuS_KLb9Jk\"")
                .d("MIME_TYPE", "\"VIS4TDFzYqiuLW\"")
                .d("NAME", "\"_EM_54499_XYZ_\"")
                .d("URI", "\"7ftrM_oUU\"")
            .and().insertInto("ACTIVITY", 72L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=K3ZlLXhTE8&" + 
                    "featured=false&" + 
                    "categories=5&" + 
                    "ratings_count_min=249&" + 
                    "ratings_average_min=0.9211511435571516&" + 
                    "favourites=473")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_25() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 5613L)
                .d("URI", "\"_EM_26110_XYZ_\"")
            .and().insertInto("TAG", 5612L)
                .d("GRP", "\"yyzBnT11yVjma\"")
                .d("NAME", "\"_EM_26111_XYZ_\"")
                .r("MEDIA_FILE_ID", 5613L)
            .and().insertInto("MEDIA_FILE", 5615L)
                .d("URI", "\"_EM_26112_XYZ_\"")
            .and().insertInto("TAG", 5614L)
                .d("GRP", "\"_EM_26113_XYZ_\"")
                .d("NAME", "\"kyA\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 5617L)
                .d("URI", "\"_EM_26114_XYZ_\"")
            .and().insertInto("TAG", 5616L)
                .d("GRP", "\"_EM_26115_XYZ_\"")
                .d("NAME", "\"Qc\"")
                .r("MEDIA_FILE_ID", 5613L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_categories = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"vZd6n9Gtek\", " + 
                    " \"name\": \"LbypI\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("vZd6n9Gtek"))
                .body("'name'", containsString("LbypI"))
                .body("'activities_count'", numberMatches(0.0));
        location_categories = "/api/v1/categories" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 916, " + 
                    " \"group\": \"DCBBlxjAjSB3\", " + 
                    " \"name\": \"Rzb23\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"RwXCRtCV468\", " + 
                    " \"copy_right\": \"euUMyC4\", " + 
                    " \"author\": \"q27rH4ceb6UW\" " + 
                    " } " + 
                    " } ")
                .put(resolveLocation(location_categories, baseUrlOfSut + "/api/v1/categories/916"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("DCBBlxjAjSB3"))
                .body("'name'", containsString("Rzb23"))
                .body("'activities_count'", numberMatches(0.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_26() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 115L)
                .d("AUTHOR", "\"_EM_66573_XYZ_\"")
                .d("CAPTURE_DATE", "\"2100-06-02 06:09:09\"")
                .d("COPY_RIGHT", "\"SUVb\"")
                .d("MIME_TYPE", "\"1976-03-11 18:43:32\"")
                .d("NAME", "\"fFlBuLFhf2\"")
                .d("URI", "\"qnPVTTiX1ijEmRM\"")
            .and().insertInto("MEDIA_FILE", 13151L)
                .d("URI", "\"_EM_66827_XYZ_\"")
            .and().insertInto("TAG", 13150L)
                .d("GRP", "\"_EM_52350_XYZ_\"")
                .d("NAME", "\"MPU\"")
                .r("MEDIA_FILE_ID", 115L)
            .and().insertInto("USERS", 16008L)
                .d("AUTHORIZATION_LEVEL", "-213")
                .d("NAME", "\"Lgt\"")
            .and().insertInto("ACTIVITY", 16007L)
            .and().insertInto("ACTIVITY", 16006L)
            .and().insertInto("ACTIVITY_PROPERTIES", 16005L)
                .d("AGE_MAX", "-592")
                .d("AGE_MIN", "-2147483169")
                .d("DATE_CREATED", "\"2054-03-16 11:51:17\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1912-05-14 13:38:31\"")
                .d("DESCRIPTION_INTRODUCTION", "\"T0ldyh\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"LIu\"")
                .d("DESCRIPTION_NOTES", "\"Bl5qKqDY\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"O0oHSXHTp_I\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"5tvJ55Zbcyqayv\"")
                .d("PARTICIPANTS_MAX", "389")
                .d("PARTICIPANTS_MIN", "0")
                .d("SOURCE", "\"duSYQ3\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "-16")
                .r("ACTIVITY_ID", 16007L)
                .d("AUTHOR_ID", "1")
                .r("PUBLISHING_ACTIVITY_ID", 16007L)
            .and().insertInto("USERS", 16012L)
                .d("AUTHORIZATION_LEVEL", "680")
                .d("NAME", "\"515857\"")
            .and().insertInto("ACTIVITY", 16011L)
            .and().insertInto("ACTIVITY", 16010L)
            .and().insertInto("ACTIVITY_PROPERTIES", 16009L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"2016-11-17 16:12:58\"")
                .d("DATE_PUBLISHED", "\"1931-04-10 06:10:10\"")
                .d("DATE_UPDATED", "\"2067-05-29 04:27:09\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"T6EAA_\"")
                .d("DESCRIPTION_MATERIAL", "\"1cEY62\"")
                .d("DESCRIPTION_NOTES", "\"57OLZuLCTLnGnC\"")
                .d("DESCRIPTION_PREPARE", "\"SVzLeawORN\"")
                .d("DESCRIPTION_SAFETY", "\"RheVDCtwCMGl\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"_EM_69442_XYZ_\"")
                .d("PARTICIPANTS_MAX", "559")
                .d("PARTICIPANTS_MIN", "115")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "29")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 16010L)
                .d("AUTHOR_ID", "3")
                .r("PUBLISHING_ACTIVITY_ID", 16011L)
            .and().insertInto("USERS", 16016L)
                .d("AUTHORIZATION_LEVEL", "1616061179")
                .d("NAME", "\"gnULWmQAUUw1FwqD\"")
            .and().insertInto("ACTIVITY", 16015L)
            .and().insertInto("ACTIVITY", 16014L)
            .and().insertInto("ACTIVITY_PROPERTIES", 16013L)
                .d("AGE_MAX", "-363")
                .d("AGE_MIN", "-83")
                .d("DATE_CREATED", "\"1982-07-08 22:27:50\"")
                .d("DATE_PUBLISHED", "\"2042-12-08 13:08:04\"")
                .d("DATE_UPDATED", "\"2017-12-18 17:37:29\"")
                .d("DESCRIPTION_INTRODUCTION", "\"Da45tFMo\"")
                .d("DESCRIPTION_MAIN", "\"_EM_66904_XYZ_\"")
                .d("DESCRIPTION_MATERIAL", "\"js9\"")
                .d("DESCRIPTION_NOTES", "\"\"")
                .d("DESCRIPTION_PREPARE", "\"WI81XX0j8\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "false")
                .d("NAME", "\"_EM_69443_XYZ_\"")
                .d("PARTICIPANTS_MAX", "412")
                .d("PARTICIPANTS_MIN", "474")
                .d("SOURCE", "\"qUGOjt\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "698")
                .r("ACTIVITY_ID", 16006L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 16015L)
            .and().insertInto("USERS", 16020L)
                .d("AUTHORIZATION_LEVEL", "159")
                .d("NAME", "\"tQz8v2bf2Wc_\"")
            .and().insertInto("ACTIVITY", 16019L)
            .and().insertInto("ACTIVITY", 16018L)
            .and().insertInto("ACTIVITY_PROPERTIES", 16017L)
                .d("AGE_MAX", "-1073741774")
                .d("AGE_MIN", "66")
                .d("DATE_CREATED", "\"1915-12-11 23:22:29\"")
                .d("DATE_PUBLISHED", "\"2078-11-16 04:19:12\"")
                .d("DATE_UPDATED", "\"2059-03-12 22:24:45\"")
                .d("DESCRIPTION_INTRODUCTION", "\"_EM_69444_XYZ_\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"6UPcwdoN\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"eoqrtM6G\"")
                .d("DESCRIPTION_SAFETY", "\"fe9_QPnH\"")
                .d("FEATURED", "true")
                .d("NAME", "\"VbIaVMfNBP1XdyYS\"")
                .d("PARTICIPANTS_MAX", "303")
                .d("PARTICIPANTS_MIN", "390")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "247")
                .d("TIME_MIN", "-256")
                .r("ACTIVITY_ID", 16015L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 16006L)
            .and().insertInto("ACTIVITY", 16022L)
            .and().insertInto("ACTIVITY_DERIVED", 16021L)
                .r("ACTIVITY_ID", 16007L)
                .d("FAVOURITES_COUNT", "809")
                .d("RATINGS_AVG", "0.15756407818880547")
                .d("RATINGS_COUNT", "80")
                .d("RATINGS_SUM", "16423")
            .and().insertInto("ACTIVITY", 16024L)
            .and().insertInto("ACTIVITY_DERIVED", 16023L)
                .r("ACTIVITY_ID", 16015L)
                .d("FAVOURITES_COUNT", "244")
                .d("RATINGS_AVG", "0.03949306808639952")
                .d("RATINGS_COUNT", "716")
                .d("RATINGS_SUM", "505")
            .and().insertInto("ACTIVITY", 16026L)
            .and().insertInto("ACTIVITY_DERIVED", 16025L)
                .r("ACTIVITY_ID", 16018L)
                .d("FAVOURITES_COUNT", "-618")
                .d("RATINGS_AVG", "0.2982385097314667")
                .d("RATINGS_COUNT", "771")
                .d("RATINGS_SUM", "-228")
            .and().insertInto("ACTIVITY", 16028L)
            .and().insertInto("ACTIVITY_DERIVED", 16027L)
                .r("ACTIVITY_ID", 16006L)
                .d("FAVOURITES_COUNT", "294")
                .d("RATINGS_AVG", "0.39813585534455986")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "319")
            .and().insertInto("ACTIVITY", 16030L)
            .and().insertInto("ACTIVITY_DERIVED", 16029L)
                .r("ACTIVITY_ID", 16026L)
                .d("FAVOURITES_COUNT", "-7995366056113516138")
                .d("RATINGS_AVG", "0.0")
                .d("RATINGS_COUNT", "309")
                .d("RATINGS_SUM", "681")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=_EM_66826_XYZ_&" + 
                    "text=&" + 
                    "categories=&" + 
                    "random=-81581")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(4))
                .body("'[0]'.isEmpty()", is(true))
                .body("'[1]'.isEmpty()", is(true))
                .body("'[2]'.isEmpty()", is(true))
                ; // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
        
    }
    
    
    @Test(timeout = 60000)
    public void test_27() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"ZHz6erhhWw1VsT5\", " + 
                    " \"name\": \"FPQRGTgPTf\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"RndM7ScJdaq\", " + 
                    " \"uri\": \"h9fSK\", " + 
                    " \"name\": \"BwNX\" " + 
                    " }, " + 
                    " \"activities_count\": 2979746366514292436 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("ZHz6erhhWw1VsT5"))
                .body("'name'", containsString("FPQRGTgPTf"))
                .body("'media_file'.'mime_type'", containsString("RndM7ScJdaq"))
                .body("'media_file'.'uri'", containsString("h9fSK"))
                .body("'media_file'.'name'", containsString("BwNX"))
                .body("'activities_count'", numberMatches(2.9797463665142922E18));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_28() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3443L)
            .and().insertInto("ACTIVITY", 3444L)
            .and().insertInto("USERS", 3447L)
                .d("AUTHORIZATION_LEVEL", "972")
                .d("NAME", "\"ZcOB7Buz\"")
            .and().insertInto("ACTIVITY", 3446L)
            .and().insertInto("ACTIVITY_RATING", 3445L)
                .r("ACTIVITY_ID", 3444L)
                .r("USER_ID", 3447L)
                .d("FAVOURITE", "false")
                .d("RATING", "-1992522526")
            .and().insertInto("USERS", 3450L)
                .d("AUTHORIZATION_LEVEL", "67")
                .d("NAME", "\"_EM_21265_XYZ\"")
            .and().insertInto("ACTIVITY", 3449L)
            .and().insertInto("ACTIVITY_RATING", 3448L)
                .r("ACTIVITY_ID", 3444L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "933")
            .and().insertInto("USERS", 3453L)
                .d("AUTHORIZATION_LEVEL", "245")
                .d("NAME", "\"_EM_21266_XYZ_\"")
            .and().insertInto("ACTIVITY", 3452L)
            .and().insertInto("ACTIVITY_RATING", 3451L)
                .r("ACTIVITY_ID", 3452L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "1185435991")
            .and().insertInto("USERS", 3456L)
                .d("AUTHORIZATION_LEVEL", "-1837")
                .d("NAME", "\"_EM_24110_XYZ_\"")
            .and().insertInto("ACTIVITY", 3455L)
            .and().insertInto("ACTIVITY_RATING", 3454L)
                .r("ACTIVITY_ID", 3449L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "-261855")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_29() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 7338L)
                .d("KEY", "\"CpTsx\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1968-11-18 16:02:56\"")
                .d("VALUE", "\"P\"")
            .and().insertInto("SYSTEM_MESSAGE", 7339L)
                .d("KEY", "\"5Tc\"")
                .d("VALID_FROM", "\"2033-08-16 16:14:07\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"t2GGw0ejjAeLV\"")
            .and().insertInto("SYSTEM_MESSAGE", 7340L)
                .d("KEY", "\"u2IcZW\"")
                .d("VALID_FROM", "\"2033-04-06 20:08:46\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"obpw1iVKM\"")
            .and().insertInto("SYSTEM_MESSAGE", 6121L)
                .d("KEY", "\"_EM_27095_XYZ_\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1977-12-26 09:43:51\"")
                .d("VALUE", "\"_EM_27096_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "featured=true&" + 
                    "participants=44&" + 
                    "ratings_count_min=319&" + 
                    "ratings_average_min=0.9217409543231042&" + 
                    "random=193&" + 
                    "favourites=596&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_30() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=wk08&" + 
                    "name=y&" + 
                    "featured=true&" + 
                    "ratings_average_min=0.20225917796695336&" + 
                    "random=180&" + 
                    "favourites=545")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_31() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_29536_XYZ_")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "attrs=_EM_29527_XYZ_&" + 
                    "name=vRt5R2&" + 
                    "text=_EM_29528_XYZ_&" + 
                    "featured=false&" + 
                    "ratings_count_min=601&" + 
                    "favourites=673")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_32() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 5156L)
                .d("AUTHORIZATION_LEVEL", "619")
                .d("NAME", "\"jd\"")
            .and().insertInto("ACTIVITY", 5155L)
            .and().insertInto("ACTIVITY", 5154L)
            .and().insertInto("ACTIVITY_RELATION", 5153L)
                .r("ACTIVITY_1_ID", 5155L)
                .r("ACTIVITY_2_ID", 5154L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 5160L)
                .d("AUTHORIZATION_LEVEL", "18")
                .d("NAME", "\"o6UcmN4yp7HD\"")
            .and().insertInto("ACTIVITY", 5159L)
            .and().insertInto("ACTIVITY", 5158L)
            .and().insertInto("ACTIVITY_RELATION", 5157L)
                .r("ACTIVITY_1_ID", 5158L)
                .r("ACTIVITY_2_ID", 5158L)
                .r("OWNER_ID", 5156L)
            .and().insertInto("USERS", 5164L)
                .d("AUTHORIZATION_LEVEL", "27")
                .d("NAME", "\"UsFctV7ge64\"")
            .and().insertInto("ACTIVITY", 5163L)
            .and().insertInto("ACTIVITY", 5162L)
            .and().insertInto("ACTIVITY_RELATION", 5161L)
                .r("ACTIVITY_1_ID", 5155L)
                .r("ACTIVITY_2_ID", 5158L)
                .d("OWNER_ID", "2")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"fsHi9gT1zP\", " + 
                    " \"description_introduction\": \"JgN5xVysfxlnQR4\", " + 
                    " \"description_main\": \"l_HcCNrOv4nDBKP6\", " + 
                    " \"description_safety\": \"dSqv\", " + 
                    " \"age_min\": -2147482832, " + 
                    " \"participants_max\": 959, " + 
                    " \"activity\": { " + 
                    " \"ratings_count\": 79, " + 
                    " \"related\": [ " + 
                    " 841, " + 
                    " 178, " + 
                    " 360, " + 
                    " 184 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("fsHi9gT1zP"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T01:44:32.143Z"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("JgN5xVysfxlnQR4"))
                .body("'properties_revisions'[0].'description_main'", containsString("l_HcCNrOv4nDBKP6"))
                .body("'properties_revisions'[0].'description_safety'", containsString("dSqv"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-2.147482832E9))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(959.0))
                .body("'properties'.'name'", containsString("fsHi9gT1zP"))
                .body("'properties'.'date_created'", containsString("2024-05-30T01:44:32.143Z"))
                .body("'properties'.'description_introduction'", containsString("JgN5xVysfxlnQR4"))
                .body("'properties'.'description_main'", containsString("l_HcCNrOv4nDBKP6"))
                .body("'properties'.'description_safety'", containsString("dSqv"))
                .body("'properties'.'age_min'", numberMatches(-2.147482832E9))
                .body("'properties'.'participants_max'", numberMatches(959.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_33() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 28555L)
                .d("AUTHORIZATION_LEVEL", "382")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"b39QHKOhEsufMoo\"")
            .and().insertInto("USERS", 28556L)
                .d("AUTHORIZATION_LEVEL", "818")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "\"S9He\"")
                .d("NAME", "\"\"")
            .and().insertInto("USERS", 28557L)
                .d("AUTHORIZATION_LEVEL", "269")
                .d("DATE_CREATED", "\"2016-09-01 08:31:14\"")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"GUpfHLHdV\"")
            .and().insertInto("USERS", 28558L)
                .d("AUTHORIZATION_LEVEL", "612")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "\"jUE8nQjrw`__g\"")
                .d("NAME", "\"7bpxSwz9\"")
            .and().insertInto("USERS", 28559L)
                .d("AUTHORIZATION_LEVEL", "600")
                .d("DATE_CREATED", "\"1923-10-18 03:02:40\"")
                .d("EMAIL_ADDRESS", "\"Ip0\"")
                .d("NAME", "\"juLz\"")
            .and().insertInto("MEDIA_FILE", 28637L)
                .d("AUTHOR", "\"bxIZ5InSb9l7\"")
                .d("CAPTURE_DATE", "\"1983-07-05 21:02:09\"")
                .d("COPY_RIGHT", "\"\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"dmmfFAYt7pzWv\"")
            .and().insertInto("MEDIA_FILE", 28638L)
                .d("AUTHOR", "\"EhxgCnvFyJObqei3\"")
                .d("CAPTURE_DATE", "\"2034-04-24 15:18:40\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"Bt7HdBtfUoq\"")
                .d("URI", "\"yk\"")
            .and().insertInto("MEDIA_FILE", 28639L)
                .d("AUTHOR", "\"p5s4L8sFlIelIR\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"ZZ1Cj\"")
                .d("MIME_TYPE", "\"iZgh2dl\"")
                .d("NAME", "NULL")
                .d("URI", "\"fO_fLM\"")
            .and().insertInto("MEDIA_FILE", 28640L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2041-02-22 01:33:40\"")
                .d("COPY_RIGHT", "\"3zVZap4Z7nDDQSNx\"")
                .d("MIME_TYPE", "\"\"")
                .d("NAME", "\"3ItHJWTHwDBQ\"")
                .d("URI", "\"0sxeHQte\"")
            .and().insertInto("MEDIA_FILE", 28641L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2057-07-01 12:11:08\"")
                .d("COPY_RIGHT", "\"ATLbGteyzleO\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"jtJ0H\"")
            .and().insertInto("USERS", 30263L)
                .d("AUTHORIZATION_LEVEL", "799")
                .d("NAME", "\"RQwVqzX5T0XGY\"")
            .and().insertInto("ACTIVITY", 30262L)
            .and().insertInto("ACTIVITY_RATING", 30261L)
                .r("ACTIVITY_ID", 30262L)
                .r("USER_ID", 28556L)
                .d("FAVOURITE", "true")
                .d("RATING", "400")
            .and().insertInto("USERS", 30266L)
                .d("AUTHORIZATION_LEVEL", "766")
                .d("NAME", "\"PRD9hFg6LIh\"")
            .and().insertInto("ACTIVITY", 30265L)
            .and().insertInto("ACTIVITY_RATING", 30264L)
                .r("ACTIVITY_ID", 30265L)
                .r("USER_ID", 28555L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 30269L)
                .d("AUTHORIZATION_LEVEL", "883")
                .d("NAME", "\"XL\"")
            .and().insertInto("ACTIVITY", 30268L)
            .and().insertInto("ACTIVITY_RATING", 30267L)
                .r("ACTIVITY_ID", 30265L)
                .r("USER_ID", 28556L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 30272L)
                .d("AUTHORIZATION_LEVEL", "569")
                .d("NAME", "\"T21t\"")
            .and().insertInto("ACTIVITY", 30271L)
            .and().insertInto("ACTIVITY_RATING", 30270L)
                .r("ACTIVITY_ID", 30265L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "423")
            .and().insertInto("USERS", 30275L)
                .d("AUTHORIZATION_LEVEL", "714")
                .d("NAME", "\"BEoEqqI\"")
            .and().insertInto("ACTIVITY", 30274L)
            .and().insertInto("ACTIVITY_RATING", 30273L)
                .r("ACTIVITY_ID", 30262L)
                .r("USER_ID", 30272L)
                .d("FAVOURITE", "true")
                .d("RATING", "375")
            .and().insertInto("USERS", 30297L)
                .d("AUTHORIZATION_LEVEL", "899")
                .d("NAME", "\"Tz\"")
            .and().insertInto("USER_IDENTITY", 30296L)
                .d("DATE_CREATED", "NULL")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"pzpSF\"")
                .d("USER_ID", "NULL")
            .and().insertInto("USERS", 30401L)
                .d("AUTHORIZATION_LEVEL", "884")
                .d("NAME", "\"1QoeY9ViIeo5kU\"")
            .and().insertInto("ACTIVITY", 30400L)
            .and().insertInto("ACTIVITY", 30399L)
            .and().insertInto("ACTIVITY_RELATION", 30398L)
                .r("ACTIVITY_1_ID", 30400L)
                .r("ACTIVITY_2_ID", 30400L)
                .r("OWNER_ID", 28555L)
            .and().insertInto("USERS", 30405L)
                .d("AUTHORIZATION_LEVEL", "334")
                .d("NAME", "\"Eor1KDI\"")
            .and().insertInto("ACTIVITY", 30404L)
            .and().insertInto("ACTIVITY", 30403L)
            .and().insertInto("ACTIVITY_RELATION", 30402L)
                .r("ACTIVITY_1_ID", 30262L)
                .r("ACTIVITY_2_ID", 30400L)
                .r("OWNER_ID", 28558L)
            .and().insertInto("USERS", 30409L)
                .d("AUTHORIZATION_LEVEL", "10")
                .d("NAME", "\"wxximWRGevLb\"")
            .and().insertInto("ACTIVITY", 30408L)
            .and().insertInto("ACTIVITY", 30407L)
            .and().insertInto("ACTIVITY_RELATION", 30406L)
                .r("ACTIVITY_1_ID", 30265L)
                .r("ACTIVITY_2_ID", 30407L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 30413L)
                .d("AUTHORIZATION_LEVEL", "230")
                .d("NAME", "\"MqWDto5s9Yaj\"")
            .and().insertInto("ACTIVITY", 30412L)
            .and().insertInto("ACTIVITY", 30411L)
            .and().insertInto("ACTIVITY_RELATION", 30410L)
                .r("ACTIVITY_1_ID", 30404L)
                .r("ACTIVITY_2_ID", 30271L)
                .r("OWNER_ID", 30266L)
            .and().insertInto("MEDIA_FILE", 30949L)
                .d("URI", "\"4elcXbaYHPEi\"")
            .and().insertInto("TAG", 30948L)
                .d("GRP", "\"0Yh_govL8JBTjzI\"")
                .d("NAME", "\"EgeFPDcMgk8nx\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_prepare\": \"X9UKgtX\", " + 
                    " \"description_safety\": \"cD1YKbKzC\", " + 
                    " \"age_min\": -788, " + 
                    " \"age_max\": 31, " + 
                    " \"participants_min\": 191, " + 
                    " \"participants_max\": 105, " + 
                    " \"featured\": false, " + 
                    " \"activity\": { " + 
                    " \"id\": 196062140, " + 
                    " \"ratings_sum\": 302, " + 
                    " \"related\": [ " + 
                    " 66, " + 
                    " 825, " + 
                    " -96381590 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T01:44:35.704Z"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("X9UKgtX"))
                .body("'properties_revisions'[0].'description_safety'", containsString("cD1YKbKzC"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-788.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(31.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(191.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(105.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties'.'date_created'", containsString("2024-05-30T01:44:35.704Z"))
                .body("'properties'.'description_prepare'", containsString("X9UKgtX"))
                .body("'properties'.'description_safety'", containsString("cD1YKbKzC"))
                .body("'properties'.'age_min'", numberMatches(-788.0))
                .body("'properties'.'age_max'", numberMatches(31.0))
                .body("'properties'.'participants_min'", numberMatches(191.0))
                .body("'properties'.'participants_max'", numberMatches(105.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_34() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_20193_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_20194_XYZ_\", " + 
                    " \"description_main\": \"_EM_20196_XYZ_\", " + 
                    " \"participants_min\": 232, " + 
                    " \"participants_max\": 194, " + 
                    " \"time_max\": 659, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"_EM_20198_XYZ_\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"_EM_20205_XYZ_\", " + 
                    " \"uri\": \"_EM_20206_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"uri\": \"_EM_20211_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"favourites_count\": 947, " + 
                    " \"ratings_average\": 0.9418971798641237, " + 
                    " \"ratings_sum\": -1768197080213452009 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T01:44:32.42Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("_EM_20193_XYZ_"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("_EM_20194_XYZ_"))
                .body("'properties_revisions'[0].'description_main'", containsString("_EM_20196_XYZ_"))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(232.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(194.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(659.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'source'", containsString("_EM_20198_XYZ_"))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(2))
                .body("'properties_revisions'[0].'media_files'[0].'mime_type'", containsString("_EM_20205_XYZ_"))
                .body("'properties_revisions'[0].'media_files'[0].'uri'", containsString("_EM_20206_XYZ_"))
                .body("'properties_revisions'[0].'media_files'[1].'uri'", containsString("_EM_20211_XYZ_"))
                .body("'properties'.'date_created'", containsString("2024-05-30T01:44:32.42Z"))
                .body("'properties'.'description_material'", containsString("_EM_20193_XYZ_"))
                .body("'properties'.'description_introduction'", containsString("_EM_20194_XYZ_"))
                .body("'properties'.'description_main'", containsString("_EM_20196_XYZ_"))
                .body("'properties'.'participants_min'", numberMatches(232.0))
                .body("'properties'.'participants_max'", numberMatches(194.0))
                .body("'properties'.'time_max'", numberMatches(659.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'source'", containsString("_EM_20198_XYZ_"))
                .body("'properties'.'media_files'.size()", equalTo(2))
                .body("'properties'.'media_files'[0].'mime_type'", containsString("_EM_20205_XYZ_"))
                .body("'properties'.'media_files'[0].'uri'", containsString("_EM_20206_XYZ_"))
                .body("'properties'.'media_files'[1].'uri'", containsString("_EM_20211_XYZ_"))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_35() throws Exception {
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"jSy7\", " + 
                    " \"description_introduction\": \"yv_U\", " + 
                    " \"age_max\": -2147482868, " + 
                    " \"participants_min\": 505 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T01:44:03.122Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("jSy7"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("yv_U"))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147482868E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(505.0))
                .body("'properties'.'date_created'", containsString("2024-05-30T01:44:03.122Z"))
                .body("'properties'.'description_material'", containsString("jSy7"))
                .body("'properties'.'description_introduction'", containsString("yv_U"))
                .body("'properties'.'age_max'", numberMatches(-2.147482868E9))
                .body("'properties'.'participants_min'", numberMatches(505.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": -1189, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/-1189/rating"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/-1189/rating?attrs=J21EdI4X4D"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'rating'", numberMatches(-1189.0))
                .body("'favourite'", equalTo(false))
                .body("'activity'.isEmpty()", is(true))
                .body("'user'.isEmpty()", is(true));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(3))
                .body("[0].'mime_type'", nullValue())
                .body("[0].'uri'", containsString("mU1bpY"))
                .body("[0].'name'", containsString("P578J9M"))
                .body("[0].'capture_date'", numberMatches(1.39186583E12))
                .body("[0].'copy_right'", containsString("DAz;B"))
                .body("[0].'author'", nullValue())
                .body("[1].'mime_type'", containsString("fUWqGZBoSrXjvX23"))
                .body("[1].'uri'", containsString("_EM_80126_XYZ_"))
                .body("[1].'name'", containsString("erHop1EHkcZs"))
                .body("[1].'capture_date'", nullValue())
                .body("[1].'copy_right'", nullValue())
                .body("[1].'author'", containsString("VS1A9ezLf"))
                .body("[2].'mime_type'", containsString("Yk"))
                .body("[2].'uri'", containsString("r2Jr33jvBhd1UbM4"))
                .body("[2].'name'", nullValue())
                .body("[2].'capture_date'", nullValue())
                .body("[2].'copy_right'", containsString("JIHsAzEAwYpIl"))
                .body("[2].'author'", nullValue());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/ping")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_36() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/ping?EMextraParam123=_EM_58_XYZ_")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_37() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 6132L)
                .d("URI", "\"eAoxYPoMq8v\"")
            .and().insertInto("TAG", 6131L)
                .d("GRP", "\"_EM_27158_XYZ_\"")
                .d("NAME", "\"158154\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 6134L)
                .d("URI", "\"PpxXG\"")
            .and().insertInto("TAG", 6133L)
                .d("GRP", "\"_EM_27159_XYZ_\"")
                .d("NAME", "\"_EM_34910_XYZ_\"")
                .r("MEDIA_FILE_ID", 6132L)
            .and().insertInto("MEDIA_FILE", 6136L)
                .d("URI", "\"1.4.196\"")
            .and().insertInto("TAG", 6135L)
                .d("GRP", "\"6EcVzUn\"")
                .d("NAME", "\"_EM_27161_XYZ_\"")
                .r("MEDIA_FILE_ID", 6132L)
            .and().insertInto("MEDIA_FILE", 6138L)
                .d("URI", "\"u3nHByPN8s8IX9\"")
            .and().insertInto("TAG", 6137L)
                .d("GRP", "\"_EM_34911_XYZ_\"")
                .d("NAME", "\"_EM_24U12_XYZU\"")
                .r("MEDIA_FILE_ID", 6138L)
            .and().insertInto("MEDIA_FILE", 6140L)
                .d("URI", "\"_EM_27162_XYZ_\"")
            .and().insertInto("TAG", 6139L)
                .d("GRP", "\"_EM_34913_XYZ_\"")
                .d("NAME", "\"d\"")
                .r("MEDIA_FILE_ID", 6138L)
            .and().insertInto("SYSTEM_MESSAGE", 6141L)
                .d("KEY", "\"_EM_34914_XYZ_\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2000-11-27 00:31:29\"")
                .d("VALUE", "\"_EM_34918_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 6142L)
                .d("KEY", "\"teKe\"")
                .d("VALID_FROM", "\"1924-11-03 14:42:29\"")
                .d("VALID_TO", "\"2011-06-19 00:25:29\"")
                .d("VALUE", "\"4\"")
            .and().insertInto("SYSTEM_MESSAGE", 6143L)
                .d("KEY", "\"_EM_27164_XYZ_\"")
                .d("VALID_FROM", "\"1979-08-05 11:19:50\"")
                .d("VALID_TO", "\"1999-07-18 09:22:29\"")
                .d("VALUE", "\"Irz9aWRPeI\"")
            .and().insertInto("ACTIVITY", 8481L)
            .and().insertInto("ACTIVITY", 8482L)
            .and().insertInto("ACTIVITY", 8483L)
            .and().insertInto("ACTIVITY", 8484L)
            .and().insertInto("ACTIVITY", 8485L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/1")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_38() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1140L)
                .d("AUTHOR", "\"TFsrR2V\"")
                .d("CAPTURE_DATE", "\"1946-11-26 21:29:31\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_37450_XYZ_\"")
                .d("NAME", "\"_EM_37451_XYZ_\"")
                .d("URI", "\"_EM_37452_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 1141L)
                .d("AUTHOR", "\"_EM_37453_XYZ_\"")
                .d("CAPTURE_DATE", "\"1985-12-21 10:27:54\"")
                .d("COPY_RIGHT", "\"v\"")
                .d("MIME_TYPE", "\"_EM_19793_XYZ_\"")
                .d("NAME", "\"olmcPfs1ItzZbmm\"")
                .d("URI", "\"-1\"")
            .and().insertInto("MEDIA_FILE", 1142L)
                .d("AUTHOR", "\"_EM_37454_XYZ_\"")
                .d("CAPTURE_DATE", "\"2022-09-07 12:17:41\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"zUiZbhG97O\"")
                .d("NAME", "\"_EM_37455_XYZ_\"")
                .d("URI", "\"oJ82sBrT\"")
            .and().insertInto("MEDIA_FILE", 1143L)
                .d("AUTHOR", "\"m\"")
                .d("CAPTURE_DATE", "\"1956-05-28 20:38:11\"")
                .d("COPY_RIGHT", "\"105712\"")
                .d("MIME_TYPE", "\"\"")
                .d("NAME", "NULL")
                .d("URI", "\"9PFyaBIUgSKn\"")
            .and().insertInto("MEDIA_FILE", 1144L)
                .d("AUTHOR", "\"TsPmRDLOo\"")
                .d("CAPTURE_DATE", "\"2000-08-16 14:14:40\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"Opa6i\"")
                .d("NAME", "\"_EM_37456_XYZ_\"")
                .d("URI", "\"6841\"")
            .and().insertInto("MEDIA_FILE", 1146L)
                .d("URI", "\"_EM_37457_XYZ_\"")
            .and().insertInto("TAG", 1145L)
                .d("GRP", "\"2032-09-29 19:17:34\"")
                .d("NAME", "\"46148\"")
                .r("MEDIA_FILE_ID", 1146L)
            .and().insertInto("MEDIA_FILE", 1148L)
                .d("URI", "\"1rRPw_IDu4Z1\"")
            .and().insertInto("TAG", 1147L)
                .d("GRP", "\"_EM_37458_XYZ_\"")
                .d("NAME", "\"_EM_37459_XYZ_\"")
                .r("MEDIA_FILE_ID", 1142L)
            .and().insertInto("MEDIA_FILE", 1150L)
                .d("URI", "\"_EM_19795_XYZ_\"")
            .and().insertInto("TAG", 1149L)
                .d("GRP", "\"_EM_19796_XYZ_\"")
                .d("NAME", "\"8LuU5DNxKZF\"")
                .r("MEDIA_FILE_ID", 1140L)
            .and().insertInto("MEDIA_FILE", 1152L)
                .d("URI", "\"_EM_12724_XYZ_\"")
            .and().insertInto("TAG", 1151L)
                .d("GRP", "\"99561\"")
                .d("NAME", "\"_EM_37460_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 1154L)
                .d("URI", "\"_EM_19798_XYZ_\"")
            .and().insertInto("TAG", 1153L)
                .d("GRP", "\"Q8m\"")
                .d("NAME", "\"6549\"")
                .r("MEDIA_FILE_ID", 1141L)
            .and().insertInto("ACTIVITY", 1155L)
            .and().insertInto("SYSTEM_MESSAGE", 1156L)
                .d("KEY", "\"jk\"")
                .d("VALID_FROM", "\"1905-10-26 01:33:31\"")
                .d("VALID_TO", "\"2064-05-18 21:52:12\"")
                .d("VALUE", "\"14\"")
            .and().insertInto("SYSTEM_MESSAGE", 1157L)
                .d("KEY", "\"\"")
                .d("VALID_FROM", "\"1987-04-02 00:43:44\"")
                .d("VALID_TO", "\"1900-10-24 09:37:29\"")
                .d("VALUE", "\"UccK\"")
            .and().insertInto("SYSTEM_MESSAGE", 1158L)
                .d("KEY", "\"_EM_10005_XYZ_s\"")
                .d("VALID_FROM", "\"2039-06-25 09:13:01\"")
                .d("VALID_TO", "\"2087-07-26 04:00:36\"")
                .d("VALUE", "\"_EM_37461_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 1159L)
                .d("KEY", "\"RYNlN_YVld3F\"")
                .d("VALID_FROM", "\"2010-01-08 16:00:33\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"XfCqTMj\"")
            .and().insertInto("SYSTEM_MESSAGE", 1160L)
                .d("KEY", "\"(NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_BACD66F8_7CAB_474C_B5A3_0E27F781AB08)\"")
                .d("VALID_FROM", "\"2013-07-15 18:25:20\"")
                .d("VALID_TO", "\"2096-03-27 05:11:15\"")
                .d("VALUE", "\"_EM_37462_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/categories/1?EMextraParam123=_EM_10558_XYZ_")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_39() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3443L)
            .and().insertInto("ACTIVITY", 3444L)
            .and().insertInto("USERS", 3447L)
                .d("AUTHORIZATION_LEVEL", "256")
                .d("NAME", "\"ZcOB7Buz\"")
            .and().insertInto("ACTIVITY", 3446L)
            .and().insertInto("ACTIVITY_RATING", 3445L)
                .r("ACTIVITY_ID", 3444L)
                .r("USER_ID", 3447L)
                .d("FAVOURITE", "true")
                .d("RATING", "-2009299742")
            .and().insertInto("USERS", 3450L)
                .d("AUTHORIZATION_LEVEL", "-16777149")
                .d("NAME", "\"_EM_21265_XYZ_\"")
            .and().insertInto("ACTIVITY", 3449L)
            .and().insertInto("ACTIVITY_RATING", 3448L)
                .r("ACTIVITY_ID", 3443L)
                .r("USER_ID", 3450L)
                .d("FAVOURITE", "true")
                .d("RATING", "3493")
            .and().insertInto("USERS", 3453L)
                .d("AUTHORIZATION_LEVEL", "268435449")
                .d("NAME", "\"_EM_29613_XYZ_\"")
            .and().insertInto("ACTIVITY", 3452L)
            .and().insertInto("ACTIVITY_RATING", 3451L)
                .r("ACTIVITY_ID", 3444L)
                .r("USER_ID", 3450L)
                .d("FAVOURITE", "false")
                .d("RATING", "1185698135")
            .and().insertInto("USERS", 3456L)
                .d("AUTHORIZATION_LEVEL", "-8")
                .d("NAME", "\"_EM_29614_XYZ_\"")
            .and().insertInto("ACTIVITY", 3455L)
            .and().insertInto("ACTIVITY_RATING", 3454L)
                .r("ACTIVITY_ID", 3452L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "61738")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 728, " + 
                    " 4, " + 
                    " -4611686018429484544, " + 
                    " -4611686018427387392 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=42")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_40() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1519L)
            .and().insertInto("ACTIVITY", 1520L)
            .and().insertInto("ACTIVITY", 1521L)
            .and().insertInto("ACTIVITY", 1522L)
            .and().insertInto("MEDIA_FILE", 12484L)
                .d("AUTHOR", "\"wWET16Oe8GybJ1\"")
                .d("CAPTURE_DATE", "\"2091-09-24 11:29:07\"")
                .d("COPY_RIGHT", "\"62RUrP9egvHPv\"")
                .d("MIME_TYPE", "\"VIS4TDFzYqiuLW\"")
                .d("NAME", "\"_EM_47197_XYZ_\"")
                .d("URI", "\"7ftrM_oUU\"")
            .and().insertInto("USERS", 13484L)
                .d("AUTHORIZATION_LEVEL", "240")
                .d("NAME", "\"7EVZx8\"")
            .and().insertInto("ACTIVITY", 13483L)
            .and().insertInto("ACTIVITY_RATING", 13482L)
                .r("ACTIVITY_ID", 1519L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "837")
            .and().insertInto("USERS", 13487L)
                .d("AUTHORIZATION_LEVEL", "172")
                .d("NAME", "\"jb\"")
            .and().insertInto("ACTIVITY", 13486L)
            .and().insertInto("ACTIVITY_RATING", 13485L)
                .r("ACTIVITY_ID", 13486L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "927")
            .and().insertInto("USERS", 13490L)
                .d("AUTHORIZATION_LEVEL", "616")
                .d("NAME", "\"0{JUV\"")
            .and().insertInto("ACTIVITY", 13489L)
            .and().insertInto("ACTIVITY_RATING", 13488L)
                .r("ACTIVITY_ID", 1519L)
                .r("USER_ID", 13484L)
                .d("FAVOURITE", "false")
                .d("RATING", "0")
            .and().insertInto("USERS", 13493L)
                .d("AUTHORIZATION_LEVEL", "28")
                .d("NAME", "\"_EM_54900_XYZ_\"")
            .and().insertInto("ACTIVITY", 13492L)
            .and().insertInto("ACTIVITY_RATING", 13491L)
                .r("ACTIVITY_ID", 13489L)
                .r("USER_ID", 13487L)
                .d("FAVOURITE", "true")
                .d("RATING", "204")
            .and().insertInto("USERS", 13496L)
                .d("AUTHORIZATION_LEVEL", "-523774")
                .d("NAME", "\"uKjgLN9ubaq30m\"")
            .and().insertInto("ACTIVITY", 13495L)
            .and().insertInto("ACTIVITY_RATING", 13494L)
                .r("ACTIVITY_ID", 1521L)
                .r("USER_ID", 13490L)
                .d("FAVOURITE", "true")
                .d("RATING", "-8650558")
            .and().insertInto("MEDIA_FILE", 13827L)
                .d("URI", "\"QrOKQyrqm\"")
            .and().insertInto("TAG", 13826L)
                .d("GRP", "\"YwZ4Cj_YLGw\"")
                .d("NAME", "\"_EM_54901_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 13829L)
                .d("URI", "\"VMAjSsu6NM\"")
            .and().insertInto("TAG", 13828L)
                .d("GRP", "\"_EM_54902_XYZ_\"")
                .d("NAME", "\"hk\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("ACTIVITY", 72L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 452, " + 
                    " 419, " + 
                    " 1208 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=42")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_41() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3443L)
            .and().insertInto("ACTIVITY", 3444L)
            .and().insertInto("USERS", 3447L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"ZcOB7Buz\"")
            .and().insertInto("ACTIVITY", 3446L)
            .and().insertInto("ACTIVITY_RATING", 3445L)
                .r("ACTIVITY_ID", 3443L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "-1992522526")
            .and().insertInto("USERS", 3450L)
                .d("AUTHORIZATION_LEVEL", "-16777149")
                .d("NAME", "\"_EM_21265_XYZ_\"")
            .and().insertInto("ACTIVITY", 3449L)
            .and().insertInto("ACTIVITY_RATING", 3448L)
                .r("ACTIVITY_ID", 3444L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "0")
            .and().insertInto("USERS", 3453L)
                .d("AUTHORIZATION_LEVEL", "268435961")
                .d("NAME", "\"_EM_21266_XYZ_\"")
            .and().insertInto("ACTIVITY", 3452L)
            .and().insertInto("ACTIVITY_RATING", 3451L)
                .r("ACTIVITY_ID", 3444L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "1185435991")
            .and().insertInto("USERS", 3456L)
                .d("AUTHORIZATION_LEVEL", "-8")
                .d("NAME", "\"_EM_24504_XYZ_X\"")
            .and().insertInto("ACTIVITY", 3455L)
            .and().insertInto("ACTIVITY_RATING", 3454L)
                .r("ACTIVITY_ID", 3443L)
                .r("USER_ID", 3447L)
                .d("FAVOURITE", "true")
                .d("RATING", "61737")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 728, " + 
                    " 2, " + 
                    " 1574143, " + 
                    " 33555129 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_42() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3443L)
            .and().insertInto("ACTIVITY", 3444L)
            .and().insertInto("USERS", 3447L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"ZcOB7Buz\"")
            .and().insertInto("ACTIVITY", 3446L)
            .and().insertInto("ACTIVITY_RATING", 3445L)
                .r("ACTIVITY_ID", 3443L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "-1992522526")
            .and().insertInto("USERS", 3450L)
                .d("AUTHORIZATION_LEVEL", "-16777149")
                .d("NAME", "\"_EM_21265_XYZ_\"")
            .and().insertInto("ACTIVITY", 3449L)
            .and().insertInto("ACTIVITY_RATING", 3448L)
                .r("ACTIVITY_ID", 3444L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "0")
            .and().insertInto("USERS", 3453L)
                .d("AUTHORIZATION_LEVEL", "268435961")
                .d("NAME", "\"_EM_21266_XYZ_\"")
            .and().insertInto("ACTIVITY", 3452L)
            .and().insertInto("ACTIVITY_RATING", 3451L)
                .r("ACTIVITY_ID", 3444L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "1185435991")
            .and().insertInto("USERS", 3456L)
                .d("AUTHORIZATION_LEVEL", "-8")
                .d("NAME", "\"_EM_24504_XYZ_X\"")
            .and().insertInto("ACTIVITY", 3455L)
            .and().insertInto("ACTIVITY_RATING", 3454L)
                .r("ACTIVITY_ID", 3443L)
                .r("USER_ID", 3447L)
                .d("FAVOURITE", "true")
                .d("RATING", "61737")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 1962764168907671052, " + 
                    " 755, " + 
                    " 4572, " + 
                    " -3682653243807900259, " + 
                    " 24 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }


}
