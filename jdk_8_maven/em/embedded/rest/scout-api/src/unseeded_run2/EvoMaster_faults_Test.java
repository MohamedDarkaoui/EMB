import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2024-05-30T01:44:36.715+02:00[Europe/Paris]
 * <br>
 * The generated test suite contains 76 tests
 * <br>
 * Covered targets: 1562
 * <br>
 * Used time: 2h 0m 55s
 * <br>
 * Needed budget for current results: 98%
 * <br>
 * This file contains test cases that are likely to indicate faults.
 */
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.se.devscout.scoutapi.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    /**
    * rso - response structure oracle - checking that the response objects match the responses defined in the schema
    */
    private static boolean rso = false;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("MEDIA_FILE","ACTIVITY_PROPERTIES_MEDIA_FILE","MEDIA_FILE_KEYWORDS","TAG","ACTIVITY_PROPERTIES_TAG","TAG_DERIVED","USERS","ACTIVITY_PROPERTIES","ACTIVITY_RATING","ACTIVITY_RELATION","USER_IDENTITY","ACTIVITY","ACTIVITY_DERIVED","SYSTEM_MESSAGE"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * [test_0_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_0_with500() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "categories=_EM_138_XYZ_&" + 
                    "ages=_EM_139_XYZ_&" + 
                    "participants=_EM_140_XYZ_&" + 
                    "durations=_EM_141_XYZ_&" + 
                    "my_favourites=false&" + 
                    "ratings_count_min=537&" + 
                    "favourites=391")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_77_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
    }
    
    
    /**
    * [test_1_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_1_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "age_1=_EM_1949_XYZ_&" + 
                    "participants=_EM_1951_XYZ_&" + 
                    "time_2=_EM_1953_XYZ_&" + 
                    "id=_EM_1954_XYZ_&" + 
                    "my_favourites=false&" + 
                    "ratings_count_min=265")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
    }
    
    
    /**
    * [test_2_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_2_with500() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/336/file?EMextraParam123=_EM_4_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_3_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_3_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 115L)
                .d("AUTHOR", "\"_EM_36271_XYZ_\"")
                .d("CAPTURE_DATE", "\"2076-07-02 06:09:09\"")
                .d("COPY_RIGHT", "\"_EM_52347_XYZ_\"")
                .d("MIME_TYPE", "\"_EM_52348_XYZ_\"")
                .d("NAME", "\"fFlBuLFhf2\"")
                .d("URI", "\"_EM_52349_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 13151L)
                .d("URI", "\"AUyJt\"")
            .and().insertInto("TAG", 13150L)
                .d("GRP", "\"_EM_52350_XYZ_\"")
                .d("NAME", "\"KPY\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_7082_XYZ_")
                .get(baseUrlOfSut + "/api/v1/media_files/2/file?size=284")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_268_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_4_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_4_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 31996L)
                .d("AUTHORIZATION_LEVEL", "112")
                .d("NAME", "\"o1b0PwpporAxRv\"")
            .and().insertInto("USER_IDENTITY", 31995L)
                .d("DATE_CREATED", "NULL")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"FZ_\"")
                .d("USER_ID", "NULL")
            .and().insertInto("USERS", 31998L)
                .d("AUTHORIZATION_LEVEL", "658")
                .d("NAME", "\"ZEGFUp\"")
            .and().insertInto("USER_IDENTITY", 31997L)
                .d("DATE_CREATED", "\"1909-04-05 15:23:54\"")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"VDnoKxkbLzm\"")
                .d("USER_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=HjZZz7v&" + 
                    "name=&" + 
                    "ratings_average_min=0.08554877272409422&" + 
                    "random=881")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_68_lambda$all$2
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_5_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_5_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_5262_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/users?EMextraParam123=_EM_5261_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_6_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_6_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_9678_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/users/631?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_7_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_7_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_9139_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/users/6?EMextraParam123=_EM_9138_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_48_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_8_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_8_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/657?EMextraParam123=_EM_5065_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_41_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_9_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_9_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3548_XYZ_")
                .delete(baseUrlOfSut + "/api/v2/tags/462")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_10_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_10_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/377?EMextraParam123=_EM_3533_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_11_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_11_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3605_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/categories/2456532858867961747")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_12_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_12_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/FavouritesResourceV1_66_put
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_13_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_13_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/694/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_14_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_14_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/784/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_15_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_15_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=_EM_2000_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_16_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_16_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities/7/rating?attrs=FpT")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_17_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_17_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1796_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/activities/964/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_18_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_18_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"_EM_5247_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages?EMextraParam123=_EM_5249_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_33_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_19_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_19_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_6755_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=_EM_6754_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_20_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_20_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_55706_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"identities\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_40_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_21_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_21_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 878, " + 
                    " \"key\": \"_EM_10957_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_78_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_22_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_22_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3529_XYZ_")
                .delete(baseUrlOfSut + "/api/v2/activities/225?EMextraParam123=_EM_3528_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_23_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_23_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 9753L)
                .d("AUTHORIZATION_LEVEL", "855")
                .d("NAME", "\"uxbOJrXk7aYG0MJN\"")
            .and().insertInto("ACTIVITY", 9752L)
            .and().insertInto("ACTIVITY", 9751L)
            .and().insertInto("ACTIVITY_RELATION", 9750L)
                .r("ACTIVITY_1_ID", 9752L)
                .r("ACTIVITY_2_ID", 9751L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 9757L)
                .d("AUTHORIZATION_LEVEL", "312")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 9756L)
            .and().insertInto("ACTIVITY", 9755L)
            .and().insertInto("ACTIVITY_RELATION", 9754L)
                .r("ACTIVITY_1_ID", 9756L)
                .r("ACTIVITY_2_ID", 9751L)
                .d("OWNER_ID", "3")
            .and().insertInto("USERS", 9761L)
                .d("AUTHORIZATION_LEVEL", "633")
                .d("NAME", "\"BfxSpMfnLr\"")
            .and().insertInto("ACTIVITY", 9760L)
            .and().insertInto("ACTIVITY", 9759L)
            .and().insertInto("ACTIVITY_RELATION", 9758L)
                .r("ACTIVITY_1_ID", 9751L)
                .r("ACTIVITY_2_ID", 9752L)
                .r("OWNER_ID", 9761L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .patch(baseUrlOfSut + "/api/v1/activities/399")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_24_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_24_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3600_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/activities/195008611")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_25_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_25_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3868_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v2/activities/-1028602869?EMextraParam123=_EM_3867_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_26_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_26_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/638?" + 
                    "verify_unused=true&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_27_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_27_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 115L)
                .d("AUTHOR", "\"_EM_36271_XYZ_\"")
                .d("CAPTURE_DATE", "\"2076-07-02 06:09:09\"")
                .d("COPY_RIGHT", "\"_EM_52347_XYZ_\"")
                .d("MIME_TYPE", "\"_EM_52348_XYZ_\"")
                .d("NAME", "\"fFlBuLFhf2\"")
                .d("URI", "\"_EM_52349_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 13151L)
                .d("URI", "\"AUyJt\"")
            .and().insertInto("TAG", 13150L)
                .d("GRP", "\"_EM_52350_XYZ_\"")
                .d("NAME", "\"KPY\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 475, " + 
                    " \"group\": \"aMlMQ\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/tags/475")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_28_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_28_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 5869L)
                .d("KEY", "\"_EM_26472_XYZ_\"")
                .d("VALID_FROM", "\"2002-08-05 01:45:45\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_26473_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"_EM_26474_XYZ_\", " + 
                    " \"value\": \"_EM_26475_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/5869")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_102_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_29_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_29_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1140L)
                .d("AUTHOR", "\"_EM_39326_XYZ_\"")
                .d("CAPTURE_DATE", "\"1946-11-26 21:00:31\"")
                .d("COPY_RIGHT", "\"Zp9UElDKwKj\"")
                .d("MIME_TYPE", "\"pkUWbKI\"")
                .d("NAME", "\"ACTIVITY_DERIVED\"")
                .d("URI", "\"mMU1UyVXu5\"")
            .and().insertInto("MEDIA_FILE", 1141L)
                .d("AUTHOR", "\"XfCqTMj\"")
                .d("CAPTURE_DATE", "\"1985-07-21 00:35:29\"")
                .d("COPY_RIGHT", "\"v\"")
                .d("MIME_TYPE", "\"195921\"")
                .d("NAME", "\"Ze\"")
                .d("URI", "\"-1\"")
            .and().insertInto("MEDIA_FILE", 1142L)
                .d("AUTHOR", "\"_EM_39327_XYZ_\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"8P6xzgZ7pUXsNIEb\"")
                .d("MIME_TYPE", "\"_EM_39328_XYZ_\"")
                .d("NAME", "\"193706\"")
                .d("URI", "\"_EM_39134_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 1143L)
                .d("AUTHOR", "\"n\"")
                .d("CAPTURE_DATE", "\"1956-05-12 20:38:29\"")
                .d("COPY_RIGHT", "\"126403\"")
                .d("MIME_TYPE", "\"126578\"")
                .d("NAME", "\"SHa3g\"")
                .d("URI", "\"_EM_39329_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 1144L)
                .d("AUTHOR", "\"TsPmRDKOo\"")
                .d("CAPTURE_DATE", "\"2028-08-29 14:46:40\"")
                .d("COPY_RIGHT", "\"CROSS\"")
                .d("MIME_TYPE", "\"_EM_39330_XYZ_\"")
                .d("NAME", "\"\"")
                .d("URI", "\"6841\"")
            .and().insertInto("MEDIA_FILE", 1146L)
                .d("URI", "\"1908-02-10 02:16:00\"")
            .and().insertInto("TAG", 1145L)
                .d("GRP", "\"2032-09-29 19:17:34\"")
                .d("NAME", "\"_EM_39331_XYZ_\"")
                .r("MEDIA_FILE_ID", 1146L)
            .and().insertInto("MEDIA_FILE", 1148L)
                .d("URI", "\"1rRPw_IDu4Z1\"")
            .and().insertInto("TAG", 1147L)
                .d("GRP", "\"LU1\"")
                .d("NAME", "\"_EM_12722_XYZ_\"")
                .r("MEDIA_FILE_ID", 1142L)
            .and().insertInto("MEDIA_FILE", 1150L)
                .d("URI", "\"_EM_19795_XYZ_\"")
            .and().insertInto("TAG", 1149L)
                .d("GRP", "\"_EM_19796_XYZ_\"")
                .d("NAME", "\"8LuU5DNxKZFS\"")
                .r("MEDIA_FILE_ID", 1150L)
            .and().insertInto("MEDIA_FILE", 1152L)
                .d("URI", "\"2666i\"")
            .and().insertInto("TAG", 1151L)
                .d("GRP", "\"_EM_19797_XYZ_\"")
                .d("NAME", "\"_EM_39332_XYZ_\"")
                .r("MEDIA_FILE_ID", 1152L)
            .and().insertInto("MEDIA_FILE", 1154L)
                .d("URI", "\"-24\"")
            .and().insertInto("TAG", 1153L)
                .d("GRP", "\"RATINGS_3_1_4_\"")
                .d("NAME", "\"6549\"")
                .r("MEDIA_FILE_ID", 1152L)
            .and().insertInto("ACTIVITY", 1155L)
            .and().insertInto("SYSTEM_MESSAGE", 1156L)
                .d("KEY", "\"SCHEMATA\"")
                .d("VALID_FROM", "\"1904-10-26 00:33:31\"")
                .d("VALID_TO", "\"2000-06-16 21:52:12\"")
                .d("VALUE", "\"QNFHoU_UAbM\"")
            .and().insertInto("SYSTEM_MESSAGE", 1157L)
                .d("KEY", "\"\"")
                .d("VALID_FROM", "\"1987-03-16 00:43:44\"")
                .d("VALID_TO", "\"1900-10-24 09:29:00\"")
                .d("VALUE", "\"_EM_19800_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 1158L)
                .d("KEY", "\"D49WZ\"")
                .d("VALID_FROM", "\"2007-08-25 07:13:29\"")
                .d("VALID_TO", "\"2100-07-22 04:00:36\"")
                .d("VALUE", "\"ztWRbAksxZuU\"")
            .and().insertInto("SYSTEM_MESSAGE", 1159L)
                .d("KEY", "\"RYNlN_YVld3\"")
                .d("VALID_FROM", "\"2008-03-07 11:29:29\"")
                .d("VALID_TO", "\"1908-06-10 00:16:14\"")
                .d("VALUE", "\"_EM_39333_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 1160L)
                .d("KEY", "\"(NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_BACD66F8_7CAB_474C_B5A3_0E27F781AB08)\"")
                .d("VALID_FROM", "\"2013-07-15 18:25:20\"")
                .d("VALID_TO", "\"2096-03-27 05:11:15\"")
                .d("VALUE", "\"_EM_39334_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/categories/4?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_53_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_30_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_30_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_5619_XYZ_\", " + 
                    " \"name\": \"_EM_5621_XYZ_\", " + 
                    " \"copy_right\": \"V8itiKb0vsQK\", " + 
                    " \"author\": \"_EM_5622_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_109_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_31_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_31_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 5, " + 
                    " \"name\": \"KPhvFTdCP0VBh\", " + 
                    " \"email_address\": \"_EM_15995_XYZ_\", " + 
                    " \"identities\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_62_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_32_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_32_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3754_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"activities_count\": -864954987 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_33_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_33_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 864, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities/864/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_34_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_34_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 21767L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2014-02-08 14:23:50\"")
                .d("COPY_RIGHT", "\"DAz;B\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"P578J9M\"")
                .d("URI", "\"mU1bpY\"")
            .and().insertInto("MEDIA_FILE", 21768L)
                .d("AUTHOR", "\"VS1A9ezLf\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"fUWqGZBoSrXjvX23\"")
                .d("NAME", "\"erHop1EHkcZs\"")
                .d("URI", "\"_EM_80126_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 21769L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"JIHsAzEAwYpIl\"")
                .d("MIME_TYPE", "\"Yk\"")
                .d("NAME", "NULL")
                .d("URI", "\"r2Jr33jvBhd1UbM4\"")
            .and().insertInto("USERS", 21877L)
                .d("AUTHORIZATION_LEVEL", "219")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 21876L)
            .and().insertInto("ACTIVITY_RATING", 21875L)
                .r("ACTIVITY_ID", 21876L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "663")
            .and().insertInto("USERS", 21880L)
                .d("AUTHORIZATION_LEVEL", "469")
                .d("NAME", "\"EXw6yuMK9\"")
            .and().insertInto("ACTIVITY", 21879L)
            .and().insertInto("ACTIVITY_RATING", 21878L)
                .r("ACTIVITY_ID", 21876L)
                .r("USER_ID", 21880L)
                .d("FAVOURITE", "false")
                .d("RATING", "37")
            .and().insertInto("USERS", 21883L)
                .d("AUTHORIZATION_LEVEL", "330")
                .d("NAME", "\"_EM_80127_XYZ_\"")
            .and().insertInto("ACTIVITY", 21882L)
            .and().insertInto("ACTIVITY_RATING", 21881L)
                .r("ACTIVITY_ID", 21882L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": -1189, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities/-1189/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_35_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_35_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 33813L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2068-09-11 10:07:12\"")
                .d("COPY_RIGHT", "\"eDs\"")
                .d("MIME_TYPE", "\"X\"")
                .d("NAME", "\"hls4gb4WNgtLqdag\"")
                .d("URI", "\"7EPtfiLNFa0Sykb\"")
            .and().insertInto("MEDIA_FILE", 33814L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1950-11-18 08:23:56\"")
                .d("COPY_RIGHT", "\"B\"")
                .d("MIME_TYPE", "\"G5A9WsNI\"")
                .d("NAME", "\"mYI6b\"")
                .d("URI", "\"upHSawMFlFo5Tv\"")
            .and().insertInto("MEDIA_FILE", 33815L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"WLmd2cTj6TvI0n\"")
                .d("MIME_TYPE", "\"9uSq99Jv6M5\"")
                .d("NAME", "\"uhvgf1n\"")
                .d("URI", "\"IK2zcbogh\"")
            .and().insertInto("MEDIA_FILE", 33816L)
                .d("AUTHOR", "\"tBhw4FxvQ\"")
                .d("CAPTURE_DATE", "\"1975-06-22 00:37:14\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"GhK\"")
                .d("NAME", "\"dMtoQQJsX6lh\"")
                .d("URI", "\"UUAY7hPGRGTzTNWp\"")
            .and().insertInto("MEDIA_FILE", 33817L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"cZinrfF\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"BhWXsN_7tU\", " + 
                    " \"uri\": \"GMTiWR6s6FZu\", " + 
                    " \"copy_right\": \"BNF\", " + 
                    " \"author\": \"gHlvDJ\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/1912978978")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_295_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_36_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_36_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_5451_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_5447_XYZ_\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 865, " + 
                    " \"type\": \"GOOGLE\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/804")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_100_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_37_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_37_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_12960_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 85, " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"_EM_12955_XYZ_\", " + 
                    " \"copy_right\": \"_EM_12957_XYZ_\", " + 
                    " \"author\": \"_EM_12958_XYZ_\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_61_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_38_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_38_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_24711_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 525, " + 
                    " \"mime_type\": \"_EM_24707_XYZ_\", " + 
                    " \"uri\": \"x16O0DmY9m0YGgG\", " + 
                    " \"name\": \"_EM_24708_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_137_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_39_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_39_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 6132L)
                .d("URI", "\"eAoxYPoMq8v\"")
            .and().insertInto("TAG", 6131L)
                .d("GRP", "\"_EM_27158_XYZ_\"")
                .d("NAME", "\"158154\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 6134L)
                .d("URI", "\"PpxXG\"")
            .and().insertInto("TAG", 6133L)
                .d("GRP", "\"_EM_27159_XYZ_\"")
                .d("NAME", "\"_EM_34910_XYZ_\"")
                .r("MEDIA_FILE_ID", 6132L)
            .and().insertInto("MEDIA_FILE", 6136L)
                .d("URI", "\"1.4.196\"")
            .and().insertInto("TAG", 6135L)
                .d("GRP", "\"6EcVzUn\"")
                .d("NAME", "\"_EM_27161_XYZ_\"")
                .r("MEDIA_FILE_ID", 6132L)
            .and().insertInto("MEDIA_FILE", 6138L)
                .d("URI", "\"u3nHByPN8s8IX9\"")
            .and().insertInto("TAG", 6137L)
                .d("GRP", "\"_EM_34911_XYZ_\"")
                .d("NAME", "\"_EM_24U12_XYZU\"")
                .r("MEDIA_FILE_ID", 6138L)
            .and().insertInto("MEDIA_FILE", 6140L)
                .d("URI", "\"_EM_27162_XYZ_\"")
            .and().insertInto("TAG", 6139L)
                .d("GRP", "\"_EM_34913_XYZ_\"")
                .d("NAME", "\"d\"")
                .r("MEDIA_FILE_ID", 6138L)
            .and().insertInto("SYSTEM_MESSAGE", 6141L)
                .d("KEY", "\"_EM_34914_XYZ_\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2000-11-27 00:31:29\"")
                .d("VALUE", "\"_EM_34918_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 6142L)
                .d("KEY", "\"teKe\"")
                .d("VALID_FROM", "\"1924-11-03 14:42:29\"")
                .d("VALID_TO", "\"2011-06-19 00:25:29\"")
                .d("VALUE", "\"4\"")
            .and().insertInto("SYSTEM_MESSAGE", 6143L)
                .d("KEY", "\"_EM_27164_XYZ_\"")
                .d("VALID_FROM", "\"1979-08-05 11:19:50\"")
                .d("VALID_TO", "\"1999-07-18 09:22:29\"")
                .d("VALUE", "\"Irz9aWRPeI\"")
            .and().insertInto("ACTIVITY", 8481L)
            .and().insertInto("ACTIVITY", 8482L)
            .and().insertInto("ACTIVITY", 8483L)
            .and().insertInto("ACTIVITY", 8484L)
            .and().insertInto("ACTIVITY", 8485L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"DESCRIP11_2_3_\", " + 
                    " \"media_file\": { " + 
                    " \"id\": -524182, " + 
                    " \"mime_type\": \"Uenhtw0\", " + 
                    " \"name\": \"_EM_27157_XYZ_\", " + 
                    " \"author\": \"_EM_18217_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 100 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_40_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_40_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 5613L)
                .d("URI", "\"_EM_26110_XYZ_\"")
            .and().insertInto("TAG", 5612L)
                .d("GRP", "\"yyzBnT11yVjma\"")
                .d("NAME", "\"_EM_26111_XYZ_\"")
                .r("MEDIA_FILE_ID", 5613L)
            .and().insertInto("MEDIA_FILE", 5615L)
                .d("URI", "\"_EM_26112_XYZ_\"")
            .and().insertInto("TAG", 5614L)
                .d("GRP", "\"_EM_26113_XYZ_\"")
                .d("NAME", "\"kyA\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 5617L)
                .d("URI", "\"_EM_26114_XYZ_\"")
            .and().insertInto("TAG", 5616L)
                .d("GRP", "\"_EM_26115_XYZ_\"")
                .d("NAME", "\"Qc\"")
                .r("MEDIA_FILE_ID", 5613L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 916, " + 
                    " \"group\": \"DCBBlxjAjSB3\", " + 
                    " \"name\": \"Rzb23\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"RwXCRtCV468\", " + 
                    " \"copy_right\": \"euUMyC4\", " + 
                    " \"author\": \"q27rH4ceb6UW\" " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/916")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_41_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_41_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1519L)
            .and().insertInto("ACTIVITY", 1520L)
            .and().insertInto("ACTIVITY", 1521L)
            .and().insertInto("ACTIVITY", 1522L)
            .and().insertInto("MEDIA_FILE", 12484L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "\"2091-09-24 13:45:07\"")
                .d("COPY_RIGHT", "\"_EM_54605_XYZ_\"")
                .d("MIME_TYPE", "\"VIS4TDFzYqiuLW\"")
                .d("NAME", "\"381950\"")
                .d("URI", "\"7ftrM_oUU\"")
            .and().insertInto("USERS", 13719L)
                .d("AUTHORIZATION_LEVEL", "-32709")
                .d("NAME", "\"XpNG0HmjHOTz5\"")
            .and().insertInto("ACTIVITY", 13718L)
            .and().insertInto("ACTIVITY", 13717L)
            .and().insertInto("ACTIVITY_PROPERTIES", 13716L)
                .d("AGE_MAX", "-457")
                .d("AGE_MIN", "-44")
                .d("DATE_CREATED", "\"2094-08-31 17:05:14\"")
                .d("DATE_PUBLISHED", "\"2034-05-02 11:29:02\"")
                .d("DATE_UPDATED", "\"2054-09-23 17:00:52\"")
                .d("DESCRIPTION_INTRODUCTION", "\"Sd9VpVj7gVQ85BW\"")
                .d("DESCRIPTION_MAIN", "\"zmy_a4igN5RTdF_V\"")
                .d("DESCRIPTION_MATERIAL", "\"cHNKn\"")
                .d("DESCRIPTION_NOTES", "\"EGDOsz\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "false")
                .d("NAME", "\"C9m\"")
                .d("PARTICIPANTS_MAX", "856")
                .d("PARTICIPANTS_MIN", "282")
                .d("SOURCE", "\"Gk7zeRCjKWVy\"")
                .d("TIME_MAX", "596423860")
                .d("TIME_MIN", "-107340004")
                .r("ACTIVITY_ID", 1521L)
                .d("AUTHOR_ID", "3")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 13723L)
                .d("AUTHORIZATION_LEVEL", "824")
                .d("NAME", "\"42O7Zn6dHHrd0\"")
            .and().insertInto("ACTIVITY", 13722L)
            .and().insertInto("ACTIVITY", 13721L)
            .and().insertInto("ACTIVITY_PROPERTIES", 13720L)
                .d("AGE_MAX", "19")
                .d("AGE_MIN", "-2147482954")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"2006-07-16 02:39:39\"")
                .d("DATE_UPDATED", "\"2002-05-10 08:00:42\"")
                .d("DESCRIPTION_INTRODUCTION", "\"zEQ1k1QFIKn5\"")
                .d("DESCRIPTION_MAIN", "\"tcEtGsnTnNHAcgyA\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"UWO\"")
                .d("DESCRIPTION_PREPARE", "\"EnZ3RvRWqiV4f40\"")
                .d("DESCRIPTION_SAFETY", "\"u10GmTismjMg1kwfm\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"_EM_54606_XYZ_\"")
                .d("PARTICIPANTS_MAX", "239")
                .d("PARTICIPANTS_MIN", "569")
                .d("SOURCE", "\"2e10\"")
                .d("TIME_MAX", "707")
                .d("TIME_MIN", "1301826294")
                .r("ACTIVITY_ID", 13722L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 13722L)
            .and().insertInto("ACTIVITY", 13725L)
            .and().insertInto("ACTIVITY_DERIVED", 13724L)
                .r("ACTIVITY_ID", 1522L)
                .d("FAVOURITES_COUNT", "44")
                .d("RATINGS_AVG", "0.22458612434228675")
                .d("RATINGS_COUNT", "481")
                .d("RATINGS_SUM", "907")
            .and().insertInto("ACTIVITY", 13727L)
            .and().insertInto("ACTIVITY_DERIVED", 13726L)
                .r("ACTIVITY_ID", 13725L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "0.1676033261117561")
                .d("RATINGS_COUNT", "3163225694716165963")
                .d("RATINGS_SUM", "1321853703")
            .and().insertInto("ACTIVITY", 13729L)
            .and().insertInto("ACTIVITY_DERIVED", 13728L)
                .r("ACTIVITY_ID", 13721L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "941")
                .d("RATINGS_SUM", "157")
            .and().insertInto("MEDIA_FILE", 32853L)
                .d("URI", "\"Z\"")
            .and().insertInto("TAG", 32852L)
                .d("GRP", "\"\"")
                .d("NAME", "\"_i3II5Ln\"")
            .and().insertInto("TAG_DERIVED", 32851L)
                .r("TAG_ID", 32852L)
                .d("ACTIVITIES_COUNT", "763")
            .and().insertInto("MEDIA_FILE", 32856L)
                .d("URI", "\"LBTw7EM\"")
            .and().insertInto("TAG", 32855L)
                .d("GRP", "\"3hk\"")
                .d("NAME", "\"H3RThC2eNsy\"")
            .and().insertInto("TAG_DERIVED", 32854L)
                .r("TAG_ID", 32855L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 32859L)
                .d("URI", "\"tDYilMT_ZNl\"")
            .and().insertInto("TAG", 32858L)
                .d("GRP", "\"HuGy3J\"")
                .d("NAME", "\"\"")
            .and().insertInto("TAG_DERIVED", 32857L)
                .r("TAG_ID", 32858L)
                .d("ACTIVITIES_COUNT", "804")
            .and().insertInto("MEDIA_FILE", 32862L)
                .d("URI", "\"AqC\"")
            .and().insertInto("TAG", 32861L)
                .d("GRP", "\"06\"")
                .d("NAME", "\"H\"")
            .and().insertInto("TAG_DERIVED", 32860L)
                .r("TAG_ID", 32861L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("USERS", 32895L)
                .d("AUTHORIZATION_LEVEL", "620")
                .d("NAME", "\"HRaw\"")
            .and().insertInto("ACTIVITY", 32894L)
            .and().insertInto("ACTIVITY_RATING", 32893L)
                .r("ACTIVITY_ID", 13722L)
                .r("USER_ID", 32895L)
                .d("FAVOURITE", "false")
                .d("RATING", "548")
            .and().insertInto("USERS", 32898L)
                .d("AUTHORIZATION_LEVEL", "13")
                .d("NAME", "\"hSx1O3cnbKmWr_\"")
            .and().insertInto("ACTIVITY", 32897L)
            .and().insertInto("ACTIVITY_RATING", 32896L)
                .r("ACTIVITY_ID", 32897L)
                .r("USER_ID", 13719L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 32901L)
                .d("AUTHORIZATION_LEVEL", "222")
                .d("NAME", "\"V4GuRfKw\"")
            .and().insertInto("ACTIVITY", 32900L)
            .and().insertInto("ACTIVITY_RATING", 32899L)
                .r("ACTIVITY_ID", 1521L)
                .r("USER_ID", 32895L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 32904L)
                .d("AUTHORIZATION_LEVEL", "312")
                .d("NAME", "\"XkzRzr99\"")
            .and().insertInto("ACTIVITY", 32903L)
            .and().insertInto("ACTIVITY_RATING", 32902L)
                .r("ACTIVITY_ID", 1521L)
                .r("USER_ID", 32904L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 181, " + 
                    " \"group\": \"L7ic5ZyYYzArdRC\", " + 
                    " \"name\": \"EXRyh\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 902, " + 
                    " \"mime_type\": \"\", " + 
                    " \"name\": \"MoG2qumS5Yk\", " + 
                    " \"author\": \"XuY7g2idW0J\" " + 
                    " }, " + 
                    " \"activities_count\": 366 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_60_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_42_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_42_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3276L)
            .and().insertInto("ACTIVITY", 3277L)
            .and().insertInto("ACTIVITY", 3278L)
            .and().insertInto("USERS", 3281L)
                .d("AUTHORIZATION_LEVEL", "427")
                .d("NAME", "\"Sk0HYEFqEGGQ\"")
            .and().insertInto("ACTIVITY", 3280L)
            .and().insertInto("ACTIVITY_RATING", 3279L)
                .r("ACTIVITY_ID", 3276L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "226")
            .and().insertInto("USERS", 3284L)
                .d("AUTHORIZATION_LEVEL", "690")
                .d("NAME", "\"DIRqCzHYX\"")
            .and().insertInto("ACTIVITY", 3283L)
            .and().insertInto("ACTIVITY_RATING", 3282L)
                .r("ACTIVITY_ID", 3278L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "405")
            .and().insertInto("USERS", 3287L)
                .d("AUTHORIZATION_LEVEL", "712")
                .d("NAME", "\"YAxtqpOj\"")
            .and().insertInto("ACTIVITY", 3286L)
            .and().insertInto("ACTIVITY_RATING", 3285L)
                .r("ACTIVITY_ID", 3278L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "1")
            .and().insertInto("USERS", 2561L)
                .d("AUTHORIZATION_LEVEL", "529")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 2560L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=_EM_18307_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/FavouritesResourceV1_58_lambda$put$3
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_43_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_43_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 2829L)
            .and().insertInto("ACTIVITY", 2830L)
            .and().insertInto("ACTIVITY", 2831L)
            .and().insertInto("USERS", 27646L)
                .d("AUTHORIZATION_LEVEL", "371")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 27645L)
            .and().insertInto("ACTIVITY", 27644L)
            .and().insertInto("ACTIVITY_RELATION", 27643L)
                .r("ACTIVITY_1_ID", 2831L)
                .r("ACTIVITY_2_ID", 2829L)
                .d("OWNER_ID", "3")
            .and().insertInto("USERS", 27650L)
                .d("AUTHORIZATION_LEVEL", "759")
                .d("NAME", "\"GiQerOw3hAvsUsb\"")
            .and().insertInto("ACTIVITY", 27649L)
            .and().insertInto("ACTIVITY", 27648L)
            .and().insertInto("ACTIVITY_RELATION", 27647L)
                .r("ACTIVITY_1_ID", 27644L)
                .r("ACTIVITY_2_ID", 27645L)
                .d("OWNER_ID", "3")
            .and().insertInto("USERS", 27654L)
                .d("AUTHORIZATION_LEVEL", "42")
                .d("NAME", "\"tG4XAidwgbiU\"")
            .and().insertInto("ACTIVITY", 27653L)
            .and().insertInto("ACTIVITY", 27652L)
            .and().insertInto("ACTIVITY_RELATION", 27651L)
                .r("ACTIVITY_1_ID", 27648L)
                .r("ACTIVITY_2_ID", 27652L)
                .d("OWNER_ID", "2")
            .and().insertInto("USERS", 31860L)
                .d("AUTHORIZATION_LEVEL", "514")
                .d("NAME", "\"Qzm4o47W\"")
            .and().insertInto("ACTIVITY", 31859L)
            .and().insertInto("ACTIVITY", 31858L)
            .and().insertInto("ACTIVITY_PROPERTIES", 31857L)
                .d("AGE_MAX", "-2147483255")
                .d("AGE_MIN", "-24123640")
                .d("DATE_CREATED", "\"2006-08-24 19:01:49\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1932-01-08 12:01:03\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "934")
                .d("SOURCE", "\"Pn8X6v0easj7\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "153")
                .r("ACTIVITY_ID", 31859L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 31864L)
                .d("AUTHORIZATION_LEVEL", "154")
                .d("NAME", "\"ZJyp08a\"")
            .and().insertInto("ACTIVITY", 31863L)
            .and().insertInto("ACTIVITY", 31862L)
            .and().insertInto("ACTIVITY_PROPERTIES", 31861L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-2034267600")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"1964-01-28 03:18:01\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"YBg9MyryALEVzF\"")
                .d("DESCRIPTION_MATERIAL", "\"6G\"")
                .d("DESCRIPTION_NOTES", "\"ru\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "true")
                .d("NAME", "\"qXop7n89R\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "557")
                .d("SOURCE", "\"FmiPD6zBZ0aQU\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "993")
                .r("ACTIVITY_ID", 27653L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 27644L)
            .and().insertInto("USERS", 31868L)
                .d("AUTHORIZATION_LEVEL", "391")
                .d("NAME", "\"fE\"")
            .and().insertInto("ACTIVITY", 31867L)
            .and().insertInto("ACTIVITY", 31866L)
            .and().insertInto("ACTIVITY_PROPERTIES", 31865L)
                .d("AGE_MAX", "-853")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"2011-06-03 08:53:41\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1902-12-24 12:53:25\"")
                .d("DESCRIPTION_INTRODUCTION", "\"9KozcW9dsu8HfBnW\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"nI4T\"")
                .d("DESCRIPTION_NOTES", "\"qajQ0zJoTnyqh9R\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "\"z\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"kRJ1uy0CFznIl\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 27645L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 2830L)
            .and().insertInto("USERS", 31872L)
                .d("AUTHORIZATION_LEVEL", "135")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 31871L)
            .and().insertInto("ACTIVITY", 31870L)
            .and().insertInto("ACTIVITY_PROPERTIES", 31869L)
                .d("AGE_MAX", "-2147483406")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"1921-12-05 03:18:36\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1975-03-05 11:01:42\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"QSCF5JVnBL\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "true")
                .d("NAME", "\"IghFLg\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "174")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "978")
                .r("ACTIVITY_ID", 31862L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 31858L)
            .and().insertInto("USERS", 31876L)
                .d("AUTHORIZATION_LEVEL", "641")
                .d("NAME", "\"7waTd\"")
            .and().insertInto("ACTIVITY", 31875L)
            .and().insertInto("ACTIVITY", 31874L)
            .and().insertInto("ACTIVITY_PROPERTIES", 31873L)
                .d("AGE_MAX", "-2147482943")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1976-03-05 01:07:07\"")
                .d("DESCRIPTION_INTRODUCTION", "\"U93TBIIkp\"")
                .d("DESCRIPTION_MAIN", "\"IN93sO\"")
                .d("DESCRIPTION_MATERIAL", "\"B6ATSz5ZbbI6\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "true")
                .d("NAME", "\"yVR6bofaXAQr\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "325")
                .d("SOURCE", "\"dxEkjfR\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 27648L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 31867L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .patch(baseUrlOfSut + "/api/v2/activities/11")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityProperties_369_isContentEqual
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 12, " + 
                    " \"date_created\": \"1903-05-26T-1:11:41\", " + 
                    " \"description_introduction\": \"\", " + 
                    " \"description_safety\": \"YZp\", " + 
                    " \"description_notes\": \"\", " + 
                    " \"age_max\": -562, " + 
                    " \"participants_min\": 784, " + 
                    " \"time_max\": 788548185, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"Kspjulsk2oGb1Q\", " + 
                    " \"name\": \"Veu2ubIDFddJqI\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"ZS5SNOdWa\", " + 
                    " \"uri\": \"DoG78Ws39HekxM\", " + 
                    " \"name\": \"\", " + 
                    " \"capture_date\": \"2030-01-17T12:06:33\" " + 
                    " } " + 
                    " }, " + 
                    " {}, " + 
                    " { " + 
                    " \"id\": 351, " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"UGsQlIeYyTQh8\", " + 
                    " \"capture_date\": \"1941-12-23T11:21:30\", " + 
                    " \"author\": \"U\" " + 
                    " }, " + 
                    " \"activities_count\": 46 " + 
                    " }, " + 
                    " { " + 
                    " \"activities_count\": 529 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"1pI\", " + 
                    " \"capture_date\": \"1967-10-20T15:36:53\", " + 
                    " \"author\": \"Om8\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 647, " + 
                    " \"mime_type\": \"2_aZOEaS6\", " + 
                    " \"uri\": \"Fp7HlcdgVC5\", " + 
                    " \"name\": \"1aAcGO0Q8\", " + 
                    " \"capture_date\": \"1951-05-32T00:50:53\", " + 
                    " \"author\": \"L0gsNhPgpEl0\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 703, " + 
                    " \"ratings_sum\": 524, " + 
                    " \"ratings_count\": 822, " + 
                    " \"related\": [] " + 
                    " } " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v2/activities/11")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    /**
    * [test_44_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_44_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 5613L)
                .d("URI", "\"_EM_26110_XYZ_\"")
            .and().insertInto("TAG", 5612L)
                .d("GRP", "\"yyzBnT11yVjma\"")
                .d("NAME", "\"_EM_26111_XYZ_\"")
                .r("MEDIA_FILE_ID", 5613L)
            .and().insertInto("MEDIA_FILE", 5615L)
                .d("URI", "\"_EM_26112_XYZ_\"")
            .and().insertInto("TAG", 5614L)
                .d("GRP", "\"_EM_26113_XYZ_\"")
                .d("NAME", "\"kyA\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 5617L)
                .d("URI", "\"_EM_26114_XYZ_\"")
            .and().insertInto("TAG", 5616L)
                .d("GRP", "\"_EM_26115_XYZ_\"")
                .d("NAME", "\"Qc\"")
                .r("MEDIA_FILE_ID", 5613L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_categories = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"vZd6n9Gtek\", " + 
                    " \"name\": \"LbypI\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("vZd6n9Gtek"))
                .body("'name'", containsString("LbypI"))
                .body("'activities_count'", numberMatches(0.0));
        location_categories = "/api/v1/categories" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 916, " + 
                    " \"name\": \"Rzb23\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"RwXCQtCV468\", " + 
                    " \"copy_right\": \"euUMyC4\", " + 
                    " \"author\": \"q27rH4ceb6UW\" " + 
                    " } " + 
                    " } ")
                .put(resolveLocation(location_categories, baseUrlOfSut + "/api/v1/categories/916?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_83_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    /**
    * [test_45_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_45_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 33813L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2068-09-11 10:07:12\"")
                .d("COPY_RIGHT", "\"eDs\"")
                .d("MIME_TYPE", "\"X\"")
                .d("NAME", "\"hls4gb4WNgtLqdag\"")
                .d("URI", "\"7EPtfiLNFa0Sykb\"")
            .and().insertInto("MEDIA_FILE", 33814L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1950-11-18 08:23:56\"")
                .d("COPY_RIGHT", "\"B\"")
                .d("MIME_TYPE", "\"G5A9WsNI\"")
                .d("NAME", "\"mYI6b\"")
                .d("URI", "\"upHSawMFlFo5Tv\"")
            .and().insertInto("MEDIA_FILE", 33815L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"WLmd2cTj6TvI0n\"")
                .d("MIME_TYPE", "\"9uSq99Jv6M5\"")
                .d("NAME", "\"uhvgf1n\"")
                .d("URI", "\"IK2zcbogh\"")
            .and().insertInto("MEDIA_FILE", 33816L)
                .d("AUTHOR", "\"tBhw4FxvQ\"")
                .d("CAPTURE_DATE", "\"1975-06-22 00:37:14\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"GhK\"")
                .d("NAME", "\"dMtoQQJsX6lh\"")
                .d("URI", "\"UUAY7hPGRGTzTNWp\"")
            .and().insertInto("MEDIA_FILE", 33817L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"cZinrfF\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"ygIIDIIRy1qtBR\", " + 
                    " \"uri\": \"data:text/plain,YTlrbm1SUWNi\", " + 
                    " \"name\": \"26OQFOKBPP\", " + 
                    " \"copy_right\": \"ygIIDIIRy1qtBR\", " + 
                    " \"author\": \"_EM_65337_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_46_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_46_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 23253L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2024-02-15 21:08:56\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"VLv\"")
                .d("NAME", "\"OZ\"")
                .d("URI", "\"q5wr\"")
            .and().insertInto("MEDIA_FILE", 23254L)
                .d("AUTHOR", "\"9e4jWo\"")
                .d("CAPTURE_DATE", "\"2057-08-14 19:42:59\"")
                .d("COPY_RIGHT", "\"lFZZmOQwGOY1ce\"")
                .d("MIME_TYPE", "\"ucIuaJ5Qp0Mja\"")
                .d("NAME", "\"OLRtnRTuua\"")
                .d("URI", "\"FiSHz5PB\"")
            .and().insertInto("MEDIA_FILE", 23255L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"zVBRPj4HKcUKb2\"")
                .d("MIME_TYPE", "\"E\"")
                .d("NAME", "NULL")
                .d("URI", "\"uUnFF5wglzKpo\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 167, " + 
                    " \"mime_type\": \"m\", " + 
                    " \"uri\": \"data:text/plain;base64,YVVrbm1SUWNk\", " + 
                    " \"name\": \"K8Mp\", " + 
                    " \"copy_right\": \"WLKDBkfx4nzlnC\", " + 
                    " \"author\": \"WMW9syTPGi1Ucy\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_47_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_47_with500() throws Exception {
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"NdZnf8fC_lMLW2v\", " + 
                    " \"copy_right\": \"wyn8L\", " + 
                    " \"author\": \"AYdJouzdx0zSc\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("NdZnf8fC_lMLW2v"))
                .body("'copy_right'", containsString("wyn8L"))
                .body("'author'", containsString("AYdJouzdx0zSc"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/931?verify_unused=false"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/-67108639?EMextraParam123=_EM_3528_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_48_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_48_with500() throws Exception {
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 0, " + 
                    " \"mime_type\": \"h\", " + 
                    " \"uri\": \"http://194.191.173.56/Gff1n/RLeE\", " + 
                    " \"name\": \"_EM_65804_XYZ_\", " + 
                    " \"copy_right\": \"_EM_65805_XYZ_\", " + 
                    " \"author\": \"2elm8vrAyOYTf38s\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("h"))
                .body("'uri'", containsString("http://194.191.173.56/Gff1n/RLeE"))
                .body("'name'", containsString("_EM_65804_XYZ_"))
                .body("'copy_right'", containsString("_EM_65805_XYZ_"))
                .body("'author'", containsString("2elm8vrAyOYTf38s"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/0/file"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_279_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
    }
    
    
    /**
    * [test_49_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_49_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"SV2qi9Cu2zai\", " + 
                    " \"copy_right\": \"zZVD3atFi8sG\", " + 
                    " \"author\": \"G8E6xav0hKlsUPc\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("SV2qi9Cu2zai"))
                .body("'copy_right'", containsString("zZVD3atFi8sG"))
                .body("'author'", containsString("G8E6xav0hKlsUPc"));
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"rs3yVs\", " + 
                    " \"uri\": \"SV2qi9Cu2zai\", " + 
                    " \"copy_right\": \"QiQHmVO16RK3Xf6\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"ItRtg\", " + 
                    " \"uri\": \"data:;base64,YTlrbm1SU2M\u003d\", " + 
                    " \"name\": \"7fg6a5yJ\", " + 
                    " \"copy_right\": \"zZVD3atFi8sG\", " + 
                    " \"author\": \"G8E6xav0hKlsUPc\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    /**
    * [test_50_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_50_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1519L)
            .and().insertInto("ACTIVITY", 1520L)
            .and().insertInto("ACTIVITY", 1521L)
            .and().insertInto("ACTIVITY", 1522L)
            .and().insertInto("MEDIA_FILE", 12484L)
                .d("AUTHOR", "\"\"")
                .d("CAPTURE_DATE", "\"2091-09-24 13:45:07\"")
                .d("COPY_RIGHT", "\"_EM_54605_XYZ_\"")
                .d("MIME_TYPE", "\"VIS4TDFzYqiuLW\"")
                .d("NAME", "\"381950\"")
                .d("URI", "\"7ftrM_oUU\"")
            .and().insertInto("USERS", 13719L)
                .d("AUTHORIZATION_LEVEL", "-32709")
                .d("NAME", "\"XpNG0HmjHOTz5\"")
            .and().insertInto("ACTIVITY", 13718L)
            .and().insertInto("ACTIVITY", 13717L)
            .and().insertInto("ACTIVITY_PROPERTIES", 13716L)
                .d("AGE_MAX", "-457")
                .d("AGE_MIN", "-44")
                .d("DATE_CREATED", "\"2094-08-31 17:05:14\"")
                .d("DATE_PUBLISHED", "\"2034-05-02 11:29:02\"")
                .d("DATE_UPDATED", "\"2054-09-23 17:00:52\"")
                .d("DESCRIPTION_INTRODUCTION", "\"Sd9VpVj7gVQ85BW\"")
                .d("DESCRIPTION_MAIN", "\"zmy_a4igN5RTdF_V\"")
                .d("DESCRIPTION_MATERIAL", "\"cHNKn\"")
                .d("DESCRIPTION_NOTES", "\"EGDOsz\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "false")
                .d("NAME", "\"C9m\"")
                .d("PARTICIPANTS_MAX", "856")
                .d("PARTICIPANTS_MIN", "282")
                .d("SOURCE", "\"Gk7zeRCjKWVy\"")
                .d("TIME_MAX", "596423860")
                .d("TIME_MIN", "-107340004")
                .r("ACTIVITY_ID", 1521L)
                .d("AUTHOR_ID", "3")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 13723L)
                .d("AUTHORIZATION_LEVEL", "824")
                .d("NAME", "\"42O7Zn6dHHrd0\"")
            .and().insertInto("ACTIVITY", 13722L)
            .and().insertInto("ACTIVITY", 13721L)
            .and().insertInto("ACTIVITY_PROPERTIES", 13720L)
                .d("AGE_MAX", "19")
                .d("AGE_MIN", "-2147482954")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"2006-07-16 02:39:39\"")
                .d("DATE_UPDATED", "\"2002-05-10 08:00:42\"")
                .d("DESCRIPTION_INTRODUCTION", "\"zEQ1k1QFIKn5\"")
                .d("DESCRIPTION_MAIN", "\"tcEtGsnTnNHAcgyA\"")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"UWO\"")
                .d("DESCRIPTION_PREPARE", "\"EnZ3RvRWqiV4f40\"")
                .d("DESCRIPTION_SAFETY", "\"u10GmTismjMg1kwfm\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"_EM_54606_XYZ_\"")
                .d("PARTICIPANTS_MAX", "239")
                .d("PARTICIPANTS_MIN", "569")
                .d("SOURCE", "\"2e10\"")
                .d("TIME_MAX", "707")
                .d("TIME_MIN", "1301826294")
                .r("ACTIVITY_ID", 13722L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 13722L)
            .and().insertInto("ACTIVITY", 13725L)
            .and().insertInto("ACTIVITY_DERIVED", 13724L)
                .r("ACTIVITY_ID", 1522L)
                .d("FAVOURITES_COUNT", "44")
                .d("RATINGS_AVG", "0.22458612434228675")
                .d("RATINGS_COUNT", "481")
                .d("RATINGS_SUM", "907")
            .and().insertInto("ACTIVITY", 13727L)
            .and().insertInto("ACTIVITY_DERIVED", 13726L)
                .r("ACTIVITY_ID", 13725L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "0.1676033261117561")
                .d("RATINGS_COUNT", "3163225694716165963")
                .d("RATINGS_SUM", "1321853703")
            .and().insertInto("ACTIVITY", 13729L)
            .and().insertInto("ACTIVITY_DERIVED", 13728L)
                .r("ACTIVITY_ID", 13721L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "941")
                .d("RATINGS_SUM", "157")
            .and().insertInto("MEDIA_FILE", 32853L)
                .d("URI", "\"Z\"")
            .and().insertInto("TAG", 32852L)
                .d("GRP", "\"\"")
                .d("NAME", "\"_i3II5Ln\"")
            .and().insertInto("TAG_DERIVED", 32851L)
                .r("TAG_ID", 32852L)
                .d("ACTIVITIES_COUNT", "763")
            .and().insertInto("MEDIA_FILE", 32856L)
                .d("URI", "\"LBTw7EM\"")
            .and().insertInto("TAG", 32855L)
                .d("GRP", "\"3hk\"")
                .d("NAME", "\"H3RThC2eNsy\"")
            .and().insertInto("TAG_DERIVED", 32854L)
                .r("TAG_ID", 32855L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 32859L)
                .d("URI", "\"tDYilMT_ZNl\"")
            .and().insertInto("TAG", 32858L)
                .d("GRP", "\"HuGy3J\"")
                .d("NAME", "\"\"")
            .and().insertInto("TAG_DERIVED", 32857L)
                .r("TAG_ID", 32858L)
                .d("ACTIVITIES_COUNT", "804")
            .and().insertInto("MEDIA_FILE", 32862L)
                .d("URI", "\"AqC\"")
            .and().insertInto("TAG", 32861L)
                .d("GRP", "\"06\"")
                .d("NAME", "\"H\"")
            .and().insertInto("TAG_DERIVED", 32860L)
                .r("TAG_ID", 32861L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("USERS", 32895L)
                .d("AUTHORIZATION_LEVEL", "620")
                .d("NAME", "\"HRaw\"")
            .and().insertInto("ACTIVITY", 32894L)
            .and().insertInto("ACTIVITY_RATING", 32893L)
                .r("ACTIVITY_ID", 13722L)
                .r("USER_ID", 32895L)
                .d("FAVOURITE", "false")
                .d("RATING", "548")
            .and().insertInto("USERS", 32898L)
                .d("AUTHORIZATION_LEVEL", "13")
                .d("NAME", "\"hSx1O3cnbKmWr_\"")
            .and().insertInto("ACTIVITY", 32897L)
            .and().insertInto("ACTIVITY_RATING", 32896L)
                .r("ACTIVITY_ID", 32897L)
                .r("USER_ID", 13719L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 32901L)
                .d("AUTHORIZATION_LEVEL", "222")
                .d("NAME", "\"V4GuRfKw\"")
            .and().insertInto("ACTIVITY", 32900L)
            .and().insertInto("ACTIVITY_RATING", 32899L)
                .r("ACTIVITY_ID", 1521L)
                .r("USER_ID", 32895L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 32904L)
                .d("AUTHORIZATION_LEVEL", "312")
                .d("NAME", "\"XkzRzr99\"")
            .and().insertInto("ACTIVITY", 32903L)
            .and().insertInto("ACTIVITY_RATING", 32902L)
                .r("ACTIVITY_ID", 1521L)
                .r("USER_ID", 32904L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 998, " + 
                    " 9, " + 
                    " 9 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityRatingDao_33_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_51_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_51_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 33813L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2068-09-11 10:07:12\"")
                .d("COPY_RIGHT", "\"eDs\"")
                .d("MIME_TYPE", "\"X\"")
                .d("NAME", "\"hls4gb4WNgtLqdag\"")
                .d("URI", "\"7EPtfiLNFa0Sykb\"")
            .and().insertInto("MEDIA_FILE", 33814L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1950-11-18 08:23:56\"")
                .d("COPY_RIGHT", "\"B\"")
                .d("MIME_TYPE", "\"G5A9WsNI\"")
                .d("NAME", "\"mYI6b\"")
                .d("URI", "\"upHSawMFlFo5Tv\"")
            .and().insertInto("MEDIA_FILE", 33815L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"WLmd2cTj6TvI0n\"")
                .d("MIME_TYPE", "\"9uSq99Jv6M5\"")
                .d("NAME", "\"uhvgf1n\"")
                .d("URI", "\"IK2zcbogh\"")
            .and().insertInto("MEDIA_FILE", 33816L)
                .d("AUTHOR", "\"tBhw4FxvQ\"")
                .d("CAPTURE_DATE", "\"1975-06-22 00:37:14\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"GhK\"")
                .d("NAME", "\"dMtoQQJsX6lh\"")
                .d("URI", "\"UUAY7hPGRGTzTNWp\"")
            .and().insertInto("MEDIA_FILE", 33817L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"cZinrfF\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"ISrRTnaO\", " + 
                    " \"name\": \"\", " + 
                    " \"author\": \"LV_scuV\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("ISrRTnaO"))
                .body("'name'", containsString(""))
                .body("'author'", containsString("LV_scuV"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"BhWXsN_7tU\", " + 
                    " \"copy_right\": \"BNF\" " + 
                    " } ")
                .put(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/1912978978"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/MediaFile_134_setUri
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"ygIIDIIRy1qtBR\", " + 
                    " \"uri\": \"data:text/plain,YTlrbm1SUWNi\", " + 
                    " \"name\": \"26OQFOKBPP\", " + 
                    " \"copy_right\": \"ygIIDIIRy1qtBR\", " + 
                    " \"author\": \"_EM_65337_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    /**
    * [test_52_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_52_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 31996L)
                .d("AUTHORIZATION_LEVEL", "112")
                .d("NAME", "\"o1b0PwpporAxRv\"")
            .and().insertInto("USER_IDENTITY", 31995L)
                .d("DATE_CREATED", "NULL")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"FZ_\"")
                .d("USER_ID", "NULL")
            .and().insertInto("USERS", 31998L)
                .d("AUTHORIZATION_LEVEL", "658")
                .d("NAME", "\"ZEGFUp\"")
            .and().insertInto("USER_IDENTITY", 31997L)
                .d("DATE_CREATED", "\"1909-04-05 15:23:54\"")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"VDnoKxkbLzm\"")
                .d("USER_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_users = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_published\": \"2074-12-19T19:49:54\", " + 
                    " \"description_introduction\": \"G6aAUSAURTQ3\", " + 
                    " \"description_prepare\": \"ziBFyPaYggpPP\", " + 
                    " \"description_main\": \"1m1j5Z\", " + 
                    " \"description_safety\": \"OmxVM6Ju_a1z3W\", " + 
                    " \"age_max\": -2147482998, " + 
                    " \"participants_max\": 421, " + 
                    " \"source\": \"Ixb\", " + 
                    " \"author\": { " + 
                    " \"name\": \"8c_f\", " + 
                    " \"authorization_level\": 974, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 535, " + 
                    " \"type\": \"API\", " + 
                    " \"value\": \"jmJtTs8QX2\" " + 
                    " }, " + 
                    " { " + 
                    " \"type\": \"GOOGLE\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -4595627400777766254, " + 
                    " \"date_created\": \"2059-08-23T10:27:35\" " + 
                    " }, " + 
                    " { " + 
                    " \"type\": \"EVOMASTER\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 98, " + 
                    " \"date_created\": \"2065-00-04T06:06:19\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 236, " + 
                    " \"ratings_sum\": 160, " + 
                    " \"ratings_count\": 529, " + 
                    " \"related\": [ " + 
                    " 503, " + 
                    " 648, " + 
                    " 415 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=HjZZz7v&" + 
                    "name=&" + 
                    "ratings_average_min=0.08554877272409422&" + 
                    "random=881")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_68_lambda$all$2
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"l\", " + 
                    " \"email_address\": \"MDUyKUZkTy\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("l"))
                .body("'email_address'", containsString("MDUyKUZkTy"))
                .body("'authorization_level'", numberMatches(0.0))
                .body("'identities'.size()", equalTo(0));
        location_users = "/api/v1/users" + "/" + res_2.extract().body().path("id").toString();
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_users, baseUrlOfSut + "/api/v1/users/profile?my_favourites=VLRxp8Am&ratings_count_min=4mB0&random=ryxa4AJ2rPD8MNjK&ratings_average_min=dffD&name=l&categories=YsTjs145ce"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("l"))
                .body("'email_address'", containsString("MDUyKUZkTy"))
                .body("'authorization_level'", numberMatches(0.0))
                .body("'identities'.size()", equalTo(0));
        
        expectationHandler.expect(ems)
            .that(rso, ((Map) res_3.extract().response().jsonPath().getJsonObject("")).keySet().containsAll(Arrays.asList()));
    }
    
    
    /**
    * [test_53_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_53_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 33813L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2068-09-11 10:07:12\"")
                .d("COPY_RIGHT", "\"eDs\"")
                .d("MIME_TYPE", "\"X\"")
                .d("NAME", "\"hls4gb4WNgtLqdag\"")
                .d("URI", "\"7EPtfiLNFa0Sykb\"")
            .and().insertInto("MEDIA_FILE", 33814L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1950-11-18 08:23:56\"")
                .d("COPY_RIGHT", "\"B\"")
                .d("MIME_TYPE", "\"G5A9WsNI\"")
                .d("NAME", "\"mYI6b\"")
                .d("URI", "\"upHSawMFlFo5Tv\"")
            .and().insertInto("MEDIA_FILE", 33815L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"WLmd2cTj6TvI0n\"")
                .d("MIME_TYPE", "\"9uSq99Jv6M5\"")
                .d("NAME", "\"uhvgf1n\"")
                .d("URI", "\"IK2zcbogh\"")
            .and().insertInto("MEDIA_FILE", 33816L)
                .d("AUTHOR", "\"tBhw4FxvQ\"")
                .d("CAPTURE_DATE", "\"1975-06-22 00:37:14\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"GhK\"")
                .d("NAME", "\"dMtoQQJsX6lh\"")
                .d("URI", "\"UUAY7hPGRGTzTNWp\"")
            .and().insertInto("MEDIA_FILE", 33817L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"cZinrfF\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"ISrRTnaO\", " + 
                    " \"name\": \"\", " + 
                    " \"author\": \"LV_scuV\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("ISrRTnaO"))
                .body("'name'", containsString(""))
                .body("'author'", containsString("LV_scuV"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"BhWXsN_7tU\", " + 
                    " \"uri\": \"GMTiWR6s6FZu\", " + 
                    " \"copy_right\": \"BNF\", " + 
                    " \"author\": \"gHlvDJ\" " + 
                    " } ")
                .put(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/1912978978"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("BhWXsN_7tU"))
                .body("'uri'", containsString("GMTiWR6s6FZu"))
                .body("'author'", containsString("LV_scuV"));
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"ygIIDIIRy1qtBR\", " + 
                    " \"uri\": \"data:text/plain,YTlrbm1SUWNi\", " + 
                    " \"name\": \"26OQFOKBPP\", " + 
                    " \"copy_right\": \"ygIIDIIRy1qtBR\", " + 
                    " \"author\": \"_EM_65337_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    /**
    * [test_54_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_54_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 515, " + 
                    " \"description_material\": \"_EM_17767_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_17769_XYZ_\", " + 
                    " \"description_notes\": \"_EM_17772_XYZ_\", " + 
                    " \"age_min\": -2147482858, " + 
                    " \"age_max\": -2147483055, " + 
                    " \"time_max\": 358, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"_EM_17773_XYZ_\", " + 
                    " \"author\": { " + 
                    " \"id\": 413, " + 
                    " \"name\": \"_EM_17808_XYZ_\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"ratings_sum\": 820, " + 
                    " \"ratings_count\": 888, " + 
                    " \"related\": [] " + 
                    " } " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v2/activities/515?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_55_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_55_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"age_max\": -862, " + 
                    " \"participants_max\": 596, " + 
                    " \"time_min\": -862, " + 
                    " \"time_max\": -2147483577, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"CpeWmep3m092cgUr\", " + 
                    " \"author\": { " + 
                    " \"id\": 112, " + 
                    " \"name\": \"_EM_7680_XYZ_\", " + 
                    " \"email_address\": \"_EM_7681_XYZ_\", " + 
                    " \"authorization_level\": 961 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 995, " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 656, " + 
                    " \"ratings_average\": 0.6160259795270273, " + 
                    " \"related\": [ " + 
                    " -901867413 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_56_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_56_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_19751_XYZ_\", " + 
                    " \"description_material\": \"_EM_19752_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_19753_XYZ_\", " + 
                    " \"description_main\": \"_EM_19755_XYZ_\", " + 
                    " \"description_notes\": \"_EM_19756_XYZ_\", " + 
                    " \"age_max\": -456, " + 
                    " \"participants_min\": 760, " + 
                    " \"participants_max\": 92, " + 
                    " \"time_min\": 640, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"name\": \"_EM_19759_XYZ_\", " + 
                    " \"activities_count\": 555 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"authorization_level\": 776 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 535238382, " + 
                    " \"ratings_average\": 0.7210010200744658, " + 
                    " \"related\": [] " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/activities/714?EMextraParam123=_EM_19769_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_57_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_57_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3347L)
                .d("AUTHOR", "\"j2t1NCY0\"")
                .d("CAPTURE_DATE", "\"1952-03-29 11:29:53\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"PrUUS7Q\"")
                .d("NAME", "\"%UTRR9RB7P%\"")
                .d("URI", "\"sres_X\"")
            .and().insertInto("MEDIA_FILE", 3348L)
                .d("AUTHOR", "\"VF1X\"")
                .d("CAPTURE_DATE", "\"2063-06-26 00:20:03\"")
                .d("COPY_RIGHT", "\"_EM_41364_XYZ_\"")
                .d("MIME_TYPE", "\"_EM_70537_XYZ_\"")
                .d("NAME", "\"a\"")
                .d("URI", "\"zIBPpsTlrXiVN6W\"")
            .and().insertInto("MEDIA_FILE", 3349L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2099-01-05 10:34:52\"")
                .d("COPY_RIGHT", "\"_EM_21108_XYZ_\"")
                .d("MIME_TYPE", "\"kp89QWPr_\"")
                .d("NAME", "\"r5i0iwjjIAy\"")
                .d("URI", "\"5As0Xg\"")
            .and().insertInto("MEDIA_FILE", 3350L)
                .d("AUTHOR", "\"b\"")
                .d("CAPTURE_DATE", "\"2000-03-17 11:29:58\"")
                .d("COPY_RIGHT", "\"LEFT\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"UEN_U13U;U\\aVU\"")
                .d("URI", "\"Ovx2qBX07\"")
            .and().insertInto("MEDIA_FILE", 3351L)
                .d("AUTHOR", "\"KvSUvt\"")
                .d("CAPTURE_DATE", "\"1904-06-16 11:45:29\"")
                .d("COPY_RIGHT", "\"_EM_21112_XYZ_\"")
                .d("MIME_TYPE", "\"EmdFNI\"")
                .d("NAME", "\"SYSTEM_SEQUENCE_6818BDB1_F028_4986_AA40_997AF3DE93D8\"")
                .d("URI", "\"49394\"")
            .and().insertInto("MEDIA_FILE", 3357L)
                .d("URI", "\"AGE_MAX\"")
            .and().insertInto("USERS", 3356L)
                .d("AUTHORIZATION_LEVEL", "4008")
                .d("NAME", "\"199807\"")
            .and().insertInto("ACTIVITY", 3355L)
            .and().insertInto("ACTIVITY", 3354L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3353L)
                .r("ACTIVITY_ID", 3354L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3352L)
                .r("ACTIVITY_PROPERTIES_ID", 3353L)
                .r("MEDIA_FILE_ID", 3351L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 3363L)
                .d("URI", "\"_EM_21114_XYZ_0\"")
            .and().insertInto("USERS", 3362L)
                .d("AUTHORIZATION_LEVEL", "-1906757107")
                .d("NAME", "\"323539\"")
            .and().insertInto("ACTIVITY", 3361L)
            .and().insertInto("ACTIVITY", 3360L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3359L)
                .r("ACTIVITY_ID", 3355L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3358L)
                .r("ACTIVITY_PROPERTIES_ID", 3359L)
                .r("MEDIA_FILE_ID", 3347L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 3369L)
                .d("URI", "\"IQpLrB1PMoL\"")
            .and().insertInto("USERS", 3368L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"7zx4\"")
            .and().insertInto("ACTIVITY", 3367L)
            .and().insertInto("ACTIVITY", 3366L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3365L)
                .r("ACTIVITY_ID", 3367L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3364L)
                .r("ACTIVITY_PROPERTIES_ID", 3353L)
                .r("MEDIA_FILE_ID", 3369L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 3372L)
                .d("AUTHORIZATION_LEVEL", "480")
                .d("NAME", "\"_EM_49876_XYZ_\"")
            .and().insertInto("ACTIVITY", 3371L)
            .and().insertInto("ACTIVITY_RATING", 3370L)
                .r("ACTIVITY_ID", 3355L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "2098072")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/1/rating")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "name=_EM_70535_XYZ_&" + 
                    "text=qi2k5m6a_IACF&" + 
                    "featured=true&" + 
                    "ages=I3e5iVQy&" + 
                    "durations=o&" + 
                    "id=RQVhmHI8apL&" + 
                    "ratings_count_min=231&" + 
                    "uri=HSU9rx")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_33_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
        
        ValidatableResponse res_4 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 620, " + 
                    " \"valid_to\": \"1949-05-22T21:02:40\", " + 
                    " \"valid_from\": \"2028-04-18T06:55:08\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_4.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/250?" + 
                    "attrs=PdMfCxBn&" + 
                    "random=lOCW6U4s1q_O3xu&" + 
                    "featured=_EM_70536_XYZ_&" + 
                    "time_1=ql91OsTRM&" + 
                    "favourites=Uu09M9EGmnE&" + 
                    "age_1=boU83D7hRoAH&" + 
                    "id=5QFRF72wa9&" + 
                    "time_2=ve1BCMwxrG&" + 
                    "participants=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    /**
    * [test_58_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_58_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"VHU5ZOuJfg5U\", " + 
                    " \"description_main\": \"NXTS\", " + 
                    " \"description_safety\": \"WLugkFkLaMBE\", " + 
                    " \"age_max\": -2147482894, " + 
                    " \"participants_min\": 253, " + 
                    " \"time_min\": 782, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 198, " + 
                    " \"group\": \"xPx\", " + 
                    " \"activities_count\": 804 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -714676763, " + 
                    " \"media_file\": { " + 
                    " \"name\": \"vGRsvbzuPVhe\", " + 
                    " \"copy_right\": \"2KyMfqg\" " + 
                    " }, " + 
                    " \"activities_count\": -3467001206116960026 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"muPeooUZgFRiWU\", " + 
                    " \"name\": \"\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?" + 
                    "my_favourites=LQGRIHzG54OyXM67&" + 
                    "ratings_count_min=NWGJEgU8O&" + 
                    "featured=W2cuYNQ9X&" + 
                    "ratings_average_min=psvJ_C&" + 
                    "name=VHU5ZOuJfg5U&" + 
                    "durations=&" + 
                    "text=OTRpEzmQNRWvu&" + 
                    "id=rQB")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_59_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_59_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 20546L)
                .d("AUTHORIZATION_LEVEL", "729")
                .d("NAME", "\"_MbB9\"")
            .and().insertInto("ACTIVITY", 20545L)
            .and().insertInto("ACTIVITY", 20544L)
            .and().insertInto("ACTIVITY_RELATION", 20543L)
                .r("ACTIVITY_1_ID", 20545L)
                .r("ACTIVITY_2_ID", 20545L)
                .r("OWNER_ID", 20546L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"DIoksO6Z\", " + 
                    " \"description_material\": \"\", " + 
                    " \"description_safety\": \"ImvoEWCZGBpQU5Ps\", " + 
                    " \"description_notes\": \"FBCYql_yYy0\", " + 
                    " \"age_min\": -603, " + 
                    " \"time_min\": 230, " + 
                    " \"time_max\": 433, " + 
                    " \"source\": \"sceOmEWle\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"ILDB\", " + 
                    " \"copy_right\": \"0qEJxrjwoHq2mEWG\", " + 
                    " \"author\": \"I4\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"ZoPcf0XiYgWX7Lyr\", " + 
                    " \"authorization_level\": 188 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_60_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_60_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_14433_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 364, " + 
                    " \"description_prepare\": \"_EM_14418_XYZ_\", " + 
                    " \"description_main\": \"_EM_14419_XYZ_\", " + 
                    " \"description_notes\": \"_EM_14420_XYZ_\", " + 
                    " \"age_min\": -900, " + 
                    " \"age_max\": -2147483475, " + 
                    " \"time_max\": 249, " + 
                    " \"source\": \"_EM_14421_XYZ_\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 622, " + 
                    " \"group\": \"_EM_14422_XYZ_\", " + 
                    " \"name\": \"dkljH\", " + 
                    " \"activities_count\": 629 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": -6717931931240957202, " + 
                    " \"email_address\": \"_EM_14429_XYZ_\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.7794209083060648 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_114_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_61_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_61_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 5044L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"f\"")
            .and().insertInto("MEDIA_FILE", 5045L)
                .d("AUTHOR", "\"sBYYsoUlJMyJT5O\"")
                .d("CAPTURE_DATE", "\"1968-08-23 15:06:11\"")
                .d("COPY_RIGHT", "\"l3sZRIIgWrJm\"")
                .d("MIME_TYPE", "\"_EM_24536_XYZ_\"")
                .d("NAME", "\"_EM_24537_XYZ_\"")
                .d("URI", "\"UpM6iZVD8D0rsh\"")
            .and().insertInto("MEDIA_FILE", 5051L)
                .d("URI", "\"_EM_24538_XYZ_\"")
            .and().insertInto("USERS", 5050L)
                .d("AUTHORIZATION_LEVEL", "298")
                .d("NAME", "\"k9F4NQNxEGruMUPw\"")
            .and().insertInto("ACTIVITY", 5049L)
            .and().insertInto("ACTIVITY", 5048L)
            .and().insertInto("ACTIVITY_PROPERTIES", 5047L)
                .r("ACTIVITY_ID", 5048L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 5046L)
                .r("ACTIVITY_PROPERTIES_ID", 5047L)
                .r("MEDIA_FILE_ID", 5044L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 5057L)
                .d("URI", "\"2d\"")
            .and().insertInto("USERS", 5056L)
                .d("AUTHORIZATION_LEVEL", "733")
                .d("NAME", "\"IESima\"")
            .and().insertInto("ACTIVITY", 5055L)
            .and().insertInto("ACTIVITY", 5054L)
            .and().insertInto("ACTIVITY_PROPERTIES", 5053L)
                .r("ACTIVITY_ID", 5055L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 5052L)
                .r("ACTIVITY_PROPERTIES_ID", 5053L)
                .r("MEDIA_FILE_ID", 5045L)
                .d("FEATURED", "false")
            .and().insertInto("USERS", 5060L)
                .d("AUTHORIZATION_LEVEL", "-16266")
                .d("NAME", "\"AY4ZuNHZKXtsU\"")
            .and().insertInto("ACTIVITY", 5059L)
            .and().insertInto("ACTIVITY_RATING", 5058L)
                .r("ACTIVITY_ID", 5054L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "338")
            .and().insertInto("USERS", 5063L)
                .d("AUTHORIZATION_LEVEL", "2941")
                .d("NAME", "\"m\"")
            .and().insertInto("ACTIVITY", 5062L)
            .and().insertInto("ACTIVITY_RATING", 5061L)
                .r("ACTIVITY_ID", 5049L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "200")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_20193_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_20194_XYZ_\", " + 
                    " \"description_main\": \"_EM_20196_XYZ_\", " + 
                    " \"participants_min\": 232, " + 
                    " \"participants_max\": 194, " + 
                    " \"time_max\": 659, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"_EM_20198_XYZ_\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 299, " + 
                    " \"mime_type\": \"_EM_20205_XYZ_\", " + 
                    " \"uri\": \"_EM_20206_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"uri\": \"_EM_20211_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"favourites_count\": 947, " + 
                    " \"ratings_average\": 0.9418971798641237, " + 
                    " \"ratings_sum\": -1768197080213452009 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_38_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_62_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_62_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 20196L)
                .d("AUTHORIZATION_LEVEL", "263996910")
                .d("DATE_CREATED", "\"2017-08-01 22:07:54\"")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"fw\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_72721_XYZ_\", " + 
                    " \"description_introduction\": \"oUCec1Mh6F\", " + 
                    " \"description_safety\": \"oAbctEEE6tNLul\", " + 
                    " \"description_notes\": \"_EM_72724_XYZ_\", " + 
                    " \"age_min\": -315, " + 
                    " \"participants_min\": 432, " + 
                    " \"time_min\": 803, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"umyNqWFj\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"media_file\": { " + 
                    " \"id\": 411, " + 
                    " \"uri\": \"X\", " + 
                    " \"copy_right\": \"_EM_72726_XYZ_\", " + 
                    " \"author\": \"zuKOgGVX3A3x\" " + 
                    " }, " + 
                    " \"activities_count\": 371 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_63_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_63_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 5044L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"f\"")
            .and().insertInto("MEDIA_FILE", 5045L)
                .d("AUTHOR", "\"sBYYsoUlJMyJT5O\"")
                .d("CAPTURE_DATE", "\"1968-08-23 15:06:11\"")
                .d("COPY_RIGHT", "\"l3sZRIIgWrJm\"")
                .d("MIME_TYPE", "\"_EM_24536_XYZ_\"")
                .d("NAME", "\"_EM_24537_XYZ_\"")
                .d("URI", "\"UpM6iZVD8D0rsh\"")
            .and().insertInto("MEDIA_FILE", 5051L)
                .d("URI", "\"_EM_24538_XYZ_\"")
            .and().insertInto("USERS", 5050L)
                .d("AUTHORIZATION_LEVEL", "298")
                .d("NAME", "\"k9F4NQNxEGruMUPw\"")
            .and().insertInto("ACTIVITY", 5049L)
            .and().insertInto("ACTIVITY", 5048L)
            .and().insertInto("ACTIVITY_PROPERTIES", 5047L)
                .r("ACTIVITY_ID", 5048L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 5046L)
                .r("ACTIVITY_PROPERTIES_ID", 5047L)
                .r("MEDIA_FILE_ID", 5044L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 5057L)
                .d("URI", "\"2d\"")
            .and().insertInto("USERS", 5056L)
                .d("AUTHORIZATION_LEVEL", "733")
                .d("NAME", "\"IESima\"")
            .and().insertInto("ACTIVITY", 5055L)
            .and().insertInto("ACTIVITY", 5054L)
            .and().insertInto("ACTIVITY_PROPERTIES", 5053L)
                .r("ACTIVITY_ID", 5055L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 5052L)
                .r("ACTIVITY_PROPERTIES_ID", 5053L)
                .r("MEDIA_FILE_ID", 5045L)
                .d("FEATURED", "false")
            .and().insertInto("USERS", 5060L)
                .d("AUTHORIZATION_LEVEL", "-16266")
                .d("NAME", "\"AY4ZuNHZKXtsU\"")
            .and().insertInto("ACTIVITY", 5059L)
            .and().insertInto("ACTIVITY_RATING", 5058L)
                .r("ACTIVITY_ID", 5054L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "338")
            .and().insertInto("USERS", 5063L)
                .d("AUTHORIZATION_LEVEL", "2941")
                .d("NAME", "\"m\"")
            .and().insertInto("ACTIVITY", 5062L)
            .and().insertInto("ACTIVITY_RATING", 5061L)
                .r("ACTIVITY_ID", 5049L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "200")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"Ou0BKzDu\", " + 
                    " \"description_material\": \"7JiDzxm\", " + 
                    " \"description_introduction\": \"LUfXpuN_QHo_\", " + 
                    " \"description_safety\": \"I1vf3fl1ANq\", " + 
                    " \"participants_min\": 57, " + 
                    " \"participants_max\": 634, " + 
                    " \"time_min\": 755, " + 
                    " \"source\": \"Aotfugx04W\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 407, " + 
                    " \"mime_type\": \"dUFKDV9YXMSlrq\", " + 
                    " \"uri\": \"crZ\", " + 
                    " \"name\": \"avhyNPip3UpQqOv\", " + 
                    " \"copy_right\": \"3X6SsBnS\", " + 
                    " \"author\": \"FvQWlGjSZGUfhdZk\" " + 
                    " }, " + 
                    " { " + 
                    " \"author\": \"6cj\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"Uc0NnrqhAS\", " + 
                    " \"email_address\": \"L1NsA9noriAVhHQ\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 860, " + 
                    " \"related\": [ " + 
                    " 665, " + 
                    " 87, " + 
                    " 88, " + 
                    " 733 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_19_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_64_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_64_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 2829L)
            .and().insertInto("ACTIVITY", 2830L)
            .and().insertInto("ACTIVITY", 2831L)
            .and().insertInto("USERS", 27646L)
                .d("AUTHORIZATION_LEVEL", "371")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 27645L)
            .and().insertInto("ACTIVITY", 27644L)
            .and().insertInto("ACTIVITY_RELATION", 27643L)
                .r("ACTIVITY_1_ID", 2831L)
                .r("ACTIVITY_2_ID", 2829L)
                .d("OWNER_ID", "3")
            .and().insertInto("USERS", 27650L)
                .d("AUTHORIZATION_LEVEL", "759")
                .d("NAME", "\"GiQerOw3hAvsUsb\"")
            .and().insertInto("ACTIVITY", 27649L)
            .and().insertInto("ACTIVITY", 27648L)
            .and().insertInto("ACTIVITY_RELATION", 27647L)
                .r("ACTIVITY_1_ID", 27644L)
                .r("ACTIVITY_2_ID", 27645L)
                .d("OWNER_ID", "3")
            .and().insertInto("USERS", 27654L)
                .d("AUTHORIZATION_LEVEL", "42")
                .d("NAME", "\"tG4XAidwgbiU\"")
            .and().insertInto("ACTIVITY", 27653L)
            .and().insertInto("ACTIVITY", 27652L)
            .and().insertInto("ACTIVITY_RELATION", 27651L)
                .r("ACTIVITY_1_ID", 27648L)
                .r("ACTIVITY_2_ID", 27652L)
                .d("OWNER_ID", "2")
            .and().insertInto("USERS", 31860L)
                .d("AUTHORIZATION_LEVEL", "514")
                .d("NAME", "\"Qzm4o47W\"")
            .and().insertInto("ACTIVITY", 31859L)
            .and().insertInto("ACTIVITY", 31858L)
            .and().insertInto("ACTIVITY_PROPERTIES", 31857L)
                .d("AGE_MAX", "-2147483255")
                .d("AGE_MIN", "-24123640")
                .d("DATE_CREATED", "\"2006-08-24 19:01:49\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1932-01-08 12:01:03\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "934")
                .d("SOURCE", "\"Pn8X6v0easj7\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "153")
                .r("ACTIVITY_ID", 31859L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 31864L)
                .d("AUTHORIZATION_LEVEL", "154")
                .d("NAME", "\"ZJyp08a\"")
            .and().insertInto("ACTIVITY", 31863L)
            .and().insertInto("ACTIVITY", 31862L)
            .and().insertInto("ACTIVITY_PROPERTIES", 31861L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-2034267600")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "\"1964-01-28 03:18:01\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"YBg9MyryALEVzF\"")
                .d("DESCRIPTION_MATERIAL", "\"6G\"")
                .d("DESCRIPTION_NOTES", "\"ru\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "true")
                .d("NAME", "\"qXop7n89R\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "557")
                .d("SOURCE", "\"FmiPD6zBZ0aQU\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "993")
                .r("ACTIVITY_ID", 27653L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 27644L)
            .and().insertInto("USERS", 31868L)
                .d("AUTHORIZATION_LEVEL", "391")
                .d("NAME", "\"fE\"")
            .and().insertInto("ACTIVITY", 31867L)
            .and().insertInto("ACTIVITY", 31866L)
            .and().insertInto("ACTIVITY_PROPERTIES", 31865L)
                .d("AGE_MAX", "-853")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"2011-06-03 08:53:41\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1902-12-24 12:53:25\"")
                .d("DESCRIPTION_INTRODUCTION", "\"9KozcW9dsu8HfBnW\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"nI4T\"")
                .d("DESCRIPTION_NOTES", "\"qajQ0zJoTnyqh9R\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "\"z\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"kRJ1uy0CFznIl\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 27645L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 2830L)
            .and().insertInto("USERS", 31872L)
                .d("AUTHORIZATION_LEVEL", "135")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 31871L)
            .and().insertInto("ACTIVITY", 31870L)
            .and().insertInto("ACTIVITY_PROPERTIES", 31869L)
                .d("AGE_MAX", "-2147483406")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"1921-12-05 03:18:36\"")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1975-03-05 11:01:42\"")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "\"QSCF5JVnBL\"")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "true")
                .d("NAME", "\"IghFLg\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "174")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "978")
                .r("ACTIVITY_ID", 31862L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 31858L)
            .and().insertInto("USERS", 31876L)
                .d("AUTHORIZATION_LEVEL", "641")
                .d("NAME", "\"7waTd\"")
            .and().insertInto("ACTIVITY", 31875L)
            .and().insertInto("ACTIVITY", 31874L)
            .and().insertInto("ACTIVITY_PROPERTIES", 31873L)
                .d("AGE_MAX", "-2147482943")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1976-03-05 01:07:07\"")
                .d("DESCRIPTION_INTRODUCTION", "\"U93TBIIkp\"")
                .d("DESCRIPTION_MAIN", "\"IN93sO\"")
                .d("DESCRIPTION_MATERIAL", "\"B6ATSz5ZbbI6\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "true")
                .d("NAME", "\"yVR6bofaXAQr\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "325")
                .d("SOURCE", "\"dxEkjfR\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 27648L)
                .d("AUTHOR_ID", "NULL")
                .r("PUBLISHING_ACTIVITY_ID", 31867L)
            .and().insertInto("ACTIVITY", 34507L)
            .and().insertInto("ACTIVITY_DERIVED", 34506L)
                .r("ACTIVITY_ID", 27645L)
                .d("FAVOURITES_COUNT", "560")
                .d("RATINGS_AVG", "NULL")
                .d("RATINGS_COUNT", "375119179")
                .d("RATINGS_SUM", "NULL")
            .and().insertInto("ACTIVITY", 34509L)
            .and().insertInto("ACTIVITY_DERIVED", 34508L)
                .r("ACTIVITY_ID", 27653L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "0.7782844123203423")
                .d("RATINGS_COUNT", "163")
                .d("RATINGS_SUM", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"G1i786Uf\", " + 
                    " \"description_material\": \"VwZn0Yt3Thywr\", " + 
                    " \"description_introduction\": \"OIlv\", " + 
                    " \"description_prepare\": \"5E1xTCJMCv\", " + 
                    " \"age_min\": -358, " + 
                    " \"age_max\": -2147483410, " + 
                    " \"participants_min\": 765, " + 
                    " \"time_max\": 828, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"v1ZT7SbkIXsqnN\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"uri\": \"OVyBF_K2VDm\" " + 
                    " }, " + 
                    " { " + 
                    " \"author\": \"krpTl2RCloh\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 147559246, " + 
                    " \"uri\": \"G\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 211 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_65_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_65_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 277, " + 
                    " \"name\": \"znUX7r\", " + 
                    " \"description_safety\": \"_EM_16794_XYZ_\", " + 
                    " \"age_max\": -665, " + 
                    " \"participants_min\": 121, " + 
                    " \"participants_max\": 824, " + 
                    " \"time_min\": 712, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 733, " + 
                    " \"group\": \"_EM_16796_XYZ_\", " + 
                    " \"name\": \"_EM_16797_XYZ_\", " + 
                    " \"activities_count\": 548 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"_EM_16803_XYZ_\", " + 
                    " \"activities_count\": 175 " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 437 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_66_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_66_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 21767L)
                .d("AUTHOR", "\"JGibIu2vSz1gMSGz\"")
                .d("CAPTURE_DATE", "\"2014-02-08 14:23:50\"")
                .d("COPY_RIGHT", "\"DAz9B\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"P578J9M\"")
                .d("URI", "\"mU1bpY\"")
            .and().insertInto("MEDIA_FILE", 21768L)
                .d("AUTHOR", "\"VS1A9ezLf\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"_BT5jmMYn_\"")
                .d("MIME_TYPE", "\"fUWqGZBoSrXjvX23\"")
                .d("NAME", "\"erHop1EHkcZs\"")
                .d("URI", "\"HVd0yvO\"")
            .and().insertInto("MEDIA_FILE", 21769L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1916-08-18 05:54:31\"")
                .d("COPY_RIGHT", "\"JIHsAzEAwYpIl\"")
                .d("MIME_TYPE", "\"Yk\"")
                .d("NAME", "NULL")
                .d("URI", "\"r2Jr33jvBhd1UbM4\"")
            .and().insertInto("USERS", 21877L)
                .d("AUTHORIZATION_LEVEL", "219")
                .d("NAME", "\"h\"")
            .and().insertInto("ACTIVITY", 21876L)
            .and().insertInto("ACTIVITY_RATING", 21875L)
                .r("ACTIVITY_ID", 21876L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "663")
            .and().insertInto("USERS", 21880L)
                .d("AUTHORIZATION_LEVEL", "469")
                .d("NAME", "\"EXw6yuMK\"")
            .and().insertInto("ACTIVITY", 21879L)
            .and().insertInto("ACTIVITY_RATING", 21878L)
                .r("ACTIVITY_ID", 21879L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 21883L)
                .d("AUTHORIZATION_LEVEL", "330")
                .d("NAME", "\"JnYg\"")
            .and().insertInto("ACTIVITY", 21882L)
            .and().insertInto("ACTIVITY_RATING", 21881L)
                .r("ACTIVITY_ID", 21879L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"jSy7\", " + 
                    " \"description_introduction\": \"yv_U\", " + 
                    " \"age_min\": -2147482987, " + 
                    " \"age_max\": -2147482868, " + 
                    " \"participants_min\": 505, " + 
                    " \"participants_max\": 583 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T01:44:30.666Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("jSy7"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("yv_U"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-2.147482987E9))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147482868E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(505.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(583.0))
                .body("'properties'.'date_created'", containsString("2024-05-30T01:44:30.666Z"))
                .body("'properties'.'description_material'", containsString("jSy7"))
                .body("'properties'.'description_introduction'", containsString("yv_U"))
                .body("'properties'.'age_min'", numberMatches(-2.147482987E9))
                .body("'properties'.'age_max'", numberMatches(-2.147482868E9))
                .body("'properties'.'participants_min'", numberMatches(505.0))
                .body("'properties'.'participants_max'", numberMatches(583.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/859/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_112_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/859/rating?attrs=J21EcI4X4D"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?uri=_EM_48233_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/199/file?" + 
                    "size=258&" + 
                    "time_1=YM_DdF5c8mlP&" + 
                    "age_1=&" + 
                    "id=Adcb&" + 
                    "attrs=50n78mSaTaqDBQtf")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_67_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_67_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 18377L)
                .d("URI", "\"_EM_71256_XYZ_\"")
            .and().insertInto("TAG", 18376L)
                .d("GRP", "\"UmURFQn7WxWUdL\"")
                .d("NAME", "\"rRnkoQ8uzAMJXE\"")
            .and().insertInto("USERS", 18375L)
                .d("AUTHORIZATION_LEVEL", "209")
                .d("NAME", "\"5CZm\"")
            .and().insertInto("ACTIVITY", 18374L)
            .and().insertInto("ACTIVITY", 18373L)
            .and().insertInto("ACTIVITY_PROPERTIES", 18372L)
                .r("ACTIVITY_ID", 18373L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 18371L)
                .r("ACTIVITY_PROPERTIES_ID", 18372L)
                .r("TAG_ID", 18376L)
            .and().insertInto("MEDIA_FILE", 18384L)
                .d("URI", "\"59jQ\"")
            .and().insertInto("TAG", 18383L)
                .d("GRP", "\"Lrx14J3IIhDtE_S\"")
                .d("NAME", "\"2sSV6\"")
            .and().insertInto("USERS", 18382L)
                .d("AUTHORIZATION_LEVEL", "126")
                .d("NAME", "\"EpRfZa\"")
            .and().insertInto("ACTIVITY", 18381L)
            .and().insertInto("ACTIVITY", 18380L)
            .and().insertInto("ACTIVITY_PROPERTIES", 18379L)
                .r("ACTIVITY_ID", 18380L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 18378L)
                .r("ACTIVITY_PROPERTIES_ID", 18372L)
                .r("TAG_ID", 18383L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 0, " + 
                    " \"name\": \"_EM_71261_XYZ_\", " + 
                    " \"description_material\": \"6NsPpHBZ\", " + 
                    " \"description_introduction\": \"_EM_38662_XYZ_\", " + 
                    " \"description_prepare\": \"pmrv82X2SUUCUf\", " + 
                    " \"description_main\": \"_EM_71255_XYZ_\", " + 
                    " \"description_safety\": \"__KU7066U_UYZ`\", " + 
                    " \"description_notes\": \"UK2wQH7\", " + 
                    " \"age_min\": -1073738405, " + 
                    " \"age_max\": -1073741774, " + 
                    " \"participants_min\": -2006923116, " + 
                    " \"participants_max\": 2059700999, " + 
                    " \"time_min\": 28300, " + 
                    " \"time_max\": 1073742321, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"F\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 561, " + 
                    " \"group\": \"\", " + 
                    " \"activities_count\": 3038028630862602418 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 926, " + 
                    " \"name\": \"_EM_70766_XYZ_\", " + 
                    " \"email_address\": \"_EM_]U832UXYU_\", " + 
                    " \"authorization_level\": 256, " + 
                    " \"identities\": [ " + 
                    " {} " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 104, " + 
                    " \"favourites_count\": 0, " + 
                    " \"ratings_average\": 0.4078, " + 
                    " \"ratings_sum\": -33386, " + 
                    " \"ratings_count\": 0, " + 
                    " \"related\": [ " + 
                    " -20661266, " + 
                    " -4445718318509471460 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_68_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_68_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 2882303761517120768, " + 
                    " \"name\": \"O\", " + 
                    " \"description_material\": \"_EM_72435_XYZ_\", " + 
                    " \"description_introduction\": \"5K\", " + 
                    " \"description_prepare\": \"jXplmQLpH\", " + 
                    " \"description_main\": \"ciy8Iw1n\", " + 
                    " \"description_safety\": \"__KU7066U_VY^`v\", " + 
                    " \"description_notes\": \"CGexDzyFMH\", " + 
                    " \"age_min\": -872403301, " + 
                    " \"age_max\": -64982968, " + 
                    " \"participants_min\": -2112368214, " + 
                    " \"participants_max\": 2121146884, " + 
                    " \"time_min\": 256, " + 
                    " \"time_max\": 536871417, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"1m_SxGeubjRHq\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 557, " + 
                    " \"group\": \"cv8p7n_Io1zE9mf\", " + 
                    " \"name\": \"_EM_72403_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"MgHOIV_RQGQp3\", " + 
                    " \"uri\": \"COEbU9DtvvzIoZZP\", " + 
                    " \"name\": \"_EM_72343_XYZ_\", " + 
                    " \"copy_right\": \"KxmzJuTNYMK6GJM\", " + 
                    " \"author\": \"tNqJqASt1vh\" " + 
                    " }, " + 
                    " \"activities_count\": 3038028630862602642 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 175, " + 
                    " \"group\": \"R4Ab\", " + 
                    " \"name\": \"_EM_72436_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"Ra5xMlS1z3\", " + 
                    " \"uri\": \"ce41Nnmmi0KxQMo\", " + 
                    " \"name\": \"jLsxlGBKRIsBcA\" " + 
                    " }, " + 
                    " \"activities_count\": 643 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 0, " + 
                    " \"name\": \"F_OYdknjX2etKd4\", " + 
                    " \"email_address\": \"_EM_71053_XYZ_\", " + 
                    " \"authorization_level\": 512, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 0 " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": -4611686018427387904, " + 
                    " \"favourites_count\": 8, " + 
                    " \"ratings_average\": 0.0, " + 
                    " \"ratings_sum\": -33650, " + 
                    " \"ratings_count\": -8, " + 
                    " \"related\": [ " + 
                    " 0, " + 
                    " 4096 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_113_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_69_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_69_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 21767L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2014-02-08 14:23:50\"")
                .d("COPY_RIGHT", "\"DAz9B\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"P578J9M\"")
                .d("URI", "\"mU1bpY\"")
            .and().insertInto("MEDIA_FILE", 21768L)
                .d("AUTHOR", "\"VS1A9ezLf\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"fUWqGZBoSrXjvX23\"")
                .d("NAME", "\"erHop1EHkcZs\"")
                .d("URI", "\"HVd0yvO\"")
            .and().insertInto("MEDIA_FILE", 21769L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"JIHsAzEAwYpIl\"")
                .d("MIME_TYPE", "\"Yk\"")
                .d("NAME", "NULL")
                .d("URI", "\"r2Jr33jvBhd1UbM4\"")
            .and().insertInto("USERS", 21877L)
                .d("AUTHORIZATION_LEVEL", "219")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 21876L)
            .and().insertInto("ACTIVITY_RATING", 21875L)
                .r("ACTIVITY_ID", 21876L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "663")
            .and().insertInto("USERS", 21880L)
                .d("AUTHORIZATION_LEVEL", "469")
                .d("NAME", "\"EXw6yuMK\"")
            .and().insertInto("ACTIVITY", 21879L)
            .and().insertInto("ACTIVITY_RATING", 21878L)
                .r("ACTIVITY_ID", 21876L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 21883L)
                .d("AUTHORIZATION_LEVEL", "330")
                .d("NAME", "\"JnYg\"")
            .and().insertInto("ACTIVITY", 21882L)
            .and().insertInto("ACTIVITY_RATING", 21881L)
                .r("ACTIVITY_ID", 21882L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"jSy7\", " + 
                    " \"description_introduction\": \"yv_U\", " + 
                    " \"age_max\": -2147482868, " + 
                    " \"participants_min\": 505 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T01:44:30.614Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("jSy7"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("yv_U"))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147482868E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(505.0))
                .body("'properties'.'date_created'", containsString("2024-05-30T01:44:30.614Z"))
                .body("'properties'.'description_material'", containsString("jSy7"))
                .body("'properties'.'description_introduction'", containsString("yv_U"))
                .body("'properties'.'age_max'", numberMatches(-2.147482868E9))
                .body("'properties'.'participants_min'", numberMatches(505.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 859 " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/859/rating?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating_78_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/859/rating?attrs=J21EdI4X4D&EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(3))
                .body("[0].'mime_type'", nullValue())
                .body("[0].'uri'", containsString("mU1bpY"))
                .body("[0].'name'", containsString("P578J9M"))
                .body("[0].'capture_date'", numberMatches(1.39186583E12))
                .body("[0].'copy_right'", containsString("DAz9B"))
                .body("[0].'author'", nullValue())
                .body("[1].'mime_type'", containsString("fUWqGZBoSrXjvX23"))
                .body("[1].'uri'", containsString("HVd0yvO"))
                .body("[1].'name'", containsString("erHop1EHkcZs"))
                .body("[1].'capture_date'", nullValue())
                .body("[1].'copy_right'", nullValue())
                .body("[1].'author'", containsString("VS1A9ezLf"))
                .body("[2].'mime_type'", containsString("Yk"))
                .body("[2].'uri'", containsString("r2Jr33jvBhd1UbM4"))
                .body("[2].'name'", nullValue())
                .body("[2].'capture_date'", nullValue())
                .body("[2].'copy_right'", containsString("JIHsAzEAwYpIl"))
                .body("[2].'author'", nullValue());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/199/file?" + 
                    "size=258&" + 
                    "time_1=YM_DdF5c8mlP&" + 
                    "age_1=&" + 
                    "id=Adcb&" + 
                    "attrs=50n78mSaTaqDBQtf&" + 
                    "participants=DcQXar")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_70_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_70_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 4467570830351532544, " + 
                    " \"name\": \"Q\", " + 
                    " \"description_material\": \"6NsPpHBZ\", " + 
                    " \"description_introduction\": \"cL\", " + 
                    " \"description_prepare\": \"641817\", " + 
                    " \"description_main\": \"I2DZ4pdy9yIFI\", " + 
                    " \"description_safety\": \"cQ2ULwYArJaLd1x\", " + 
                    " \"description_notes\": \"QKUwkU9_j\", " + 
                    " \"age_min\": -288359370, " + 
                    " \"age_max\": -268436230, " + 
                    " \"participants_min\": -968354449, " + 
                    " \"participants_max\": 2143711044, " + 
                    " \"time_min\": 28300, " + 
                    " \"time_max\": 1983907778, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"7_vh\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"UHRnc\", " + 
                    " \"name\": \"TFh4CTYy7DWr\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 36, " + 
                    " \"uri\": \"dN32IU2P6OiSH2u6\", " + 
                    " \"name\": \"\", " + 
                    " \"author\": \"6Lswl\" " + 
                    " }, " + 
                    " \"activities_count\": 218 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 926, " + 
                    " \"name\": \"_EM_71946_XYZ_\", " + 
                    " \"email_address\": \"_EMU71053UXYZU\", " + 
                    " \"authorization_level\": 896, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"value\": \"tBXU0wz6uARpG\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": -4611686018427387904, " + 
                    " \"favourites_count\": 0, " + 
                    " \"ratings_average\": 27435.771140396, " + 
                    " \"ratings_sum\": -4611686018427406336, " + 
                    " \"ratings_count\": 0, " + 
                    " \"related\": [ " + 
                    " -20661264, " + 
                    " -4445718318509487844 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_71_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_71_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3347L)
                .d("AUTHOR", "\"5DZYA1\"")
                .d("CAPTURE_DATE", "\"1936-03-13 00:27:59\"")
                .d("COPY_RIGHT", "\"309691\"")
                .d("MIME_TYPE", "\"Prz4S7Q\"")
                .d("NAME", "\"%UTRR9RB7P%\"")
                .d("URI", "\"_EM_41410_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 3348L)
                .d("AUTHOR", "\"I9YryG\"")
                .d("CAPTURE_DATE", "\"2063-04-26 00:00:05\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"4f5FPKLcz93\"")
                .d("NAME", "\"sIbAXv\"")
                .d("URI", "\"zIBPpsTlrXiVN6W\"")
            .and().insertInto("MEDIA_FILE", 3349L)
                .d("AUTHOR", "\"zRQ\"")
                .d("CAPTURE_DATE", "\"2083-09-05 11:33:36\"")
                .d("COPY_RIGHT", "\"_EM_21108_XYZ_L\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"_hzBr7KIl8R\"")
                .d("URI", "\"35\"")
            .and().insertInto("MEDIA_FILE", 3350L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2000-03-17 11:29:59\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"DfrewB1ukbpVXtl\"")
                .d("NAME", "\"_c9av\"")
                .d("URI", "\"230588\"")
            .and().insertInto("MEDIA_FILE", 3351L)
                .d("AUTHOR", "\"KvSUvt\"")
                .d("CAPTURE_DATE", "\"1908-04-05 11:13:29\"")
                .d("COPY_RIGHT", "\"_EM_50154_XYZ_\"")
                .d("MIME_TYPE", "\"d_3GP33rPpA\"")
                .d("NAME", "NULL")
                .d("URI", "\"UU4BUJ161R\"")
            .and().insertInto("MEDIA_FILE", 3357L)
                .d("URI", "\"AGE_MAX\"")
            .and().insertInto("USERS", 3356L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"199807\"")
            .and().insertInto("ACTIVITY", 3355L)
            .and().insertInto("ACTIVITY", 3354L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3353L)
                .r("ACTIVITY_ID", 3354L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3352L)
                .r("ACTIVITY_PROPERTIES_ID", 3353L)
                .r("MEDIA_FILE_ID", 3350L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 3363L)
                .d("URI", "\"_EM_41412_XYZ_\"")
            .and().insertInto("USERS", 3362L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 3361L)
            .and().insertInto("ACTIVITY", 3360L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3359L)
                .r("ACTIVITY_ID", 3360L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3358L)
                .r("ACTIVITY_PROPERTIES_ID", 3353L)
                .r("MEDIA_FILE_ID", 3363L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 3369L)
                .d("URI", "\"299903\"")
            .and().insertInto("USERS", 3368L)
                .d("AUTHORIZATION_LEVEL", "-65536")
                .d("NAME", "\"_EM_50149_XYZ_\"")
            .and().insertInto("ACTIVITY", 3367L)
            .and().insertInto("ACTIVITY", 3366L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3365L)
                .r("ACTIVITY_ID", 3360L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3364L)
                .r("ACTIVITY_PROPERTIES_ID", 3365L)
                .r("MEDIA_FILE_ID", 3350L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 3372L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"FAVOURITE\"")
            .and().insertInto("ACTIVITY", 3371L)
            .and().insertInto("ACTIVITY_RATING", 3370L)
                .r("ACTIVITY_ID", 3354L)
                .r("USER_ID", 3372L)
                .d("FAVOURITE", "false")
                .d("RATING", "2")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -909481193, " + 
                    " \"name\": \"NOXCqfegJE\", " + 
                    " \"description_material\": \"F5XEF3g\", " + 
                    " \"description_introduction\": \"tU\", " + 
                    " \"description_prepare\": \"hY7hRHx0Q\", " + 
                    " \"description_main\": \"F5XEF3g\", " + 
                    " \"description_notes\": \"F5XEF3g\", " + 
                    " \"age_min\": -2147483153, " + 
                    " \"age_max\": -2147483153, " + 
                    " \"participants_min\": 346, " + 
                    " \"participants_max\": 346, " + 
                    " \"time_max\": -15306312, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"KQivirJOTY3AJ4a\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 873, " + 
                    " \"group\": \"TceA47cAYgFOOOj\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 701, " + 
                    " \"activities_count\": 429 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -6746718266739767783, " + 
                    " \"media_file\": { " + 
                    " \"id\": 838, " + 
                    " \"uri\": \"MUvt\" " + 
                    " }, " + 
                    " \"activities_count\": 1497047680 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": -222382984, " + 
                    " \"mime_type\": \"N40355L\", " + 
                    " \"name\": \"r_QvoztWNfdgF\", " + 
                    " \"copy_right\": \"eduDG42v\", " + 
                    " \"author\": \"9So_Y31\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"sMSv39nD25\", " + 
                    " \"email_address\": \"2Ujje4xjpg\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 471, " + 
                    " \"ratings_average\": 0.859051336074867, " + 
                    " \"ratings_sum\": 9112239712841454446, " + 
                    " \"ratings_count\": 445 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_72_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_72_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3347L)
                .d("AUTHOR", "\"j2t1NCY0\"")
                .d("CAPTURE_DATE", "\"1952-03-29 11:29:53\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_24666_XYZ_\"")
                .d("NAME", "\"%UTRR9RB7P%\"")
                .d("URI", "\"_EM_21105_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 3348L)
                .d("AUTHOR", "\"VF1X\"")
                .d("CAPTURE_DATE", "\"2063-06-26 00:20:03\"")
                .d("COPY_RIGHT", "\"WaXUBS\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"yco\"")
                .d("URI", "\"_EM_21107_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 3349L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2099-01-05 10:34:52\"")
                .d("COPY_RIGHT", "\"_EM_21108_XYZ_\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"qgFKW\"")
                .d("URI", "\"_VKDCW_s02G\"")
            .and().insertInto("MEDIA_FILE", 3350L)
                .d("AUTHOR", "\"_EM_24667_XYZ_\"")
                .d("CAPTURE_DATE", "\"2000-03-17 02:58:59\"")
                .d("COPY_RIGHT", "\"_EM_24668_XYZ_\"")
                .d("MIME_TYPE", "\"_EM_21110_XYZ_\"")
                .d("NAME", "\"0v56yow3LBSL\"")
                .d("URI", "\"J\"")
            .and().insertInto("MEDIA_FILE", 3351L)
                .d("AUTHOR", "\"_EM_21111_XYZ_\"")
                .d("CAPTURE_DATE", "\"1904-03-09 21:53:26\"")
                .d("COPY_RIGHT", "\"_EM_21112_XYZ_\"")
                .d("MIME_TYPE", "\"ZcOB7Buz\"")
                .d("NAME", "\"_EM_24669_XYZ_\"")
                .d("URI", "\"49394\"")
            .and().insertInto("MEDIA_FILE", 3357L)
                .d("URI", "\"WdkS\"")
            .and().insertInto("USERS", 3356L)
                .d("AUTHORIZATION_LEVEL", "-88")
                .d("NAME", "\"_EM_24670_XYZ_\"")
            .and().insertInto("ACTIVITY", 3355L)
            .and().insertInto("ACTIVITY", 3354L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3353L)
                .r("ACTIVITY_ID", 3354L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3352L)
                .r("ACTIVITY_PROPERTIES_ID", 3353L)
                .r("MEDIA_FILE_ID", 3349L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 3363L)
                .d("URI", "\"_EM_21114_XYZ_\"")
            .and().insertInto("USERS", 3362L)
                .d("AUTHORIZATION_LEVEL", "-1906757115")
                .d("NAME", "\"_EM_24671_XYZ_\"")
            .and().insertInto("ACTIVITY", 3361L)
            .and().insertInto("ACTIVITY", 3360L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3359L)
                .r("ACTIVITY_ID", 3355L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3358L)
                .r("ACTIVITY_PROPERTIES_ID", 3359L)
                .r("MEDIA_FILE_ID", 3351L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 3369L)
                .d("URI", "\"IQpLrB1PMoL\"")
            .and().insertInto("USERS", 3368L)
                .d("AUTHORIZATION_LEVEL", "801")
                .d("NAME", "\"_EM_24672_XYZ_\"")
            .and().insertInto("ACTIVITY", 3367L)
            .and().insertInto("ACTIVITY", 3366L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3365L)
                .r("ACTIVITY_ID", 3367L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3364L)
                .r("ACTIVITY_PROPERTIES_ID", 3353L)
                .r("MEDIA_FILE_ID", 3369L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 3372L)
                .d("AUTHORIZATION_LEVEL", "480")
                .d("NAME", "\"_EM_24673_XYZ_\"")
            .and().insertInto("ACTIVITY", 3371L)
            .and().insertInto("ACTIVITY_RATING", 3370L)
                .r("ACTIVITY_ID", 3371L)
                .r("USER_ID", 3362L)
                .d("FAVOURITE", "false")
                .d("RATING", "1049496")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_20193_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_20194_XYZ_\", " + 
                    " \"description_main\": \"_EM_20196_XYZ_\", " + 
                    " \"participants_min\": 232, " + 
                    " \"participants_max\": 194, " + 
                    " \"time_max\": 659, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"_EM_20198_XYZ_\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"_EM_20205_XYZ_\", " + 
                    " \"uri\": \"_EM_20206_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"uri\": \"_EM_20211_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"favourites_count\": 947, " + 
                    " \"ratings_average\": 0.9418971798641237, " + 
                    " \"ratings_sum\": -1768197080213452009 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T01:44:06.594Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("_EM_20193_XYZ_"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("_EM_20194_XYZ_"))
                .body("'properties_revisions'[0].'description_main'", containsString("_EM_20196_XYZ_"))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(232.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(194.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(659.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'source'", containsString("_EM_20198_XYZ_"))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(2))
                .body("'properties_revisions'[0].'media_files'[0].'mime_type'", containsString("_EM_20205_XYZ_"))
                .body("'properties_revisions'[0].'media_files'[0].'uri'", containsString("_EM_20206_XYZ_"))
                .body("'properties_revisions'[0].'media_files'[1].'uri'", containsString("_EM_20211_XYZ_"))
                .body("'properties'.'date_created'", containsString("2024-05-30T01:44:06.594Z"))
                .body("'properties'.'description_material'", containsString("_EM_20193_XYZ_"))
                .body("'properties'.'description_introduction'", containsString("_EM_20194_XYZ_"))
                .body("'properties'.'description_main'", containsString("_EM_20196_XYZ_"))
                .body("'properties'.'participants_min'", numberMatches(232.0))
                .body("'properties'.'participants_max'", numberMatches(194.0))
                .body("'properties'.'time_max'", numberMatches(659.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'source'", containsString("_EM_20198_XYZ_"))
                .body("'properties'.'media_files'.size()", equalTo(2))
                .body("'properties'.'media_files'[0].'mime_type'", containsString("_EM_20205_XYZ_"))
                .body("'properties'.'media_files'[0].'uri'", containsString("_EM_20206_XYZ_"))
                .body("'properties'.'media_files'[1].'uri'", containsString("_EM_20211_XYZ_"))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/165/rating?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_112_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 102 " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/165/rating?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating_78_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_73_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_73_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 23253L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2024-02-15 21:08:56\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"VLv\"")
                .d("NAME", "\"OZ\"")
                .d("URI", "\"q5wr\"")
            .and().insertInto("MEDIA_FILE", 23254L)
                .d("AUTHOR", "\"9e4jWo\"")
                .d("CAPTURE_DATE", "\"2057-08-14 19:42:59\"")
                .d("COPY_RIGHT", "\"lFZZmOQwGOY1ce\"")
                .d("MIME_TYPE", "\"ucIuaJ5Qp0Mja\"")
                .d("NAME", "\"OLRtnRTuua\"")
                .d("URI", "\"FiSHz5PB\"")
            .and().insertInto("MEDIA_FILE", 23255L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"zVBRPj4HKcUKb2\"")
                .d("MIME_TYPE", "\"E\"")
                .d("NAME", "NULL")
                .d("URI", "\"uUnFF5wglzKpo\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_main\": \"xb\", " + 
                    " \"description_safety\": \"wP7u\", " + 
                    " \"age_min\": -790, " + 
                    " \"age_max\": -2147483507, " + 
                    " \"participants_min\": 192, " + 
                    " \"participants_max\": 912, " + 
                    " \"source\": \"40VYiF0hcUi\", " + 
                    " \"media_files\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T01:44:30.716Z"))
                .body("'properties_revisions'[0].'description_main'", containsString("xb"))
                .body("'properties_revisions'[0].'description_safety'", containsString("wP7u"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-790.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147483507E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(192.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(912.0))
                .body("'properties_revisions'[0].'source'", containsString("40VYiF0hcUi"))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(0))
                .body("'properties'.'date_created'", containsString("2024-05-30T01:44:30.716Z"))
                .body("'properties'.'description_main'", containsString("xb"))
                .body("'properties'.'description_safety'", containsString("wP7u"))
                .body("'properties'.'age_min'", numberMatches(-790.0))
                .body("'properties'.'age_max'", numberMatches(-2.147483507E9))
                .body("'properties'.'participants_min'", numberMatches(192.0))
                .body("'properties'.'participants_max'", numberMatches(912.0))
                .body("'properties'.'source'", containsString("40VYiF0hcUi"))
                .body("'properties'.'media_files'.size()", equalTo(0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"favourite\": true " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/629/rating?EMextraParam123=42"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/629/rating?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_104_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 167, " + 
                    " \"mime_type\": \"m\", " + 
                    " \"name\": \"K8Mp\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_109_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?" + 
                    "uri=R1yloR9uW2SHs3Z&" + 
                    "ratings_count_min=uXh&" + 
                    "featured=JwyuTJcNZjwAm&" + 
                    "name=K8Mp&" + 
                    "participants=lw1T")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_5 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 167, " + 
                    " \"mime_type\": \"m\", " + 
                    " \"uri\": \"data:text/plain;base64,YVVrbm1SUWNk\", " + 
                    " \"name\": \"K8Mp\", " + 
                    " \"copy_right\": \"WLKDBkfx4nzlnC\", " + 
                    " \"author\": \"WMW9syTPGi1Ucy\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_5.extract().statusCode()));
    }
    
    
    /**
    * [test_74_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_74_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 28555L)
                .d("AUTHORIZATION_LEVEL", "382")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"b39QHKOhEsufMoo\"")
            .and().insertInto("USERS", 28556L)
                .d("AUTHORIZATION_LEVEL", "818")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "\"S9He\"")
                .d("NAME", "\"\"")
            .and().insertInto("USERS", 28557L)
                .d("AUTHORIZATION_LEVEL", "269")
                .d("DATE_CREATED", "\"2016-09-01 08:31:14\"")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"GUpfHLHdV\"")
            .and().insertInto("USERS", 28558L)
                .d("AUTHORIZATION_LEVEL", "612")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "\"jUE8nQjrw`__g\"")
                .d("NAME", "\"7bpxSwz9\"")
            .and().insertInto("USERS", 28559L)
                .d("AUTHORIZATION_LEVEL", "600")
                .d("DATE_CREATED", "\"1923-10-18 03:02:40\"")
                .d("EMAIL_ADDRESS", "\"Ip0\"")
                .d("NAME", "\"juLz\"")
            .and().insertInto("MEDIA_FILE", 28637L)
                .d("AUTHOR", "\"bxIZ5InSb9l7\"")
                .d("CAPTURE_DATE", "\"1983-07-05 21:02:09\"")
                .d("COPY_RIGHT", "\"\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"dmmfFAYt7pzWv\"")
            .and().insertInto("MEDIA_FILE", 28638L)
                .d("AUTHOR", "\"EhxgCnvFyJObqei3\"")
                .d("CAPTURE_DATE", "\"2034-04-24 15:18:40\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"Bt7HdBtfUoq\"")
                .d("URI", "\"yk\"")
            .and().insertInto("MEDIA_FILE", 28639L)
                .d("AUTHOR", "\"p5s4L8sFlIelIR\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"ZZ1Cj\"")
                .d("MIME_TYPE", "\"iZgh2dl\"")
                .d("NAME", "NULL")
                .d("URI", "\"fO_fLM\"")
            .and().insertInto("MEDIA_FILE", 28640L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2041-02-22 01:33:40\"")
                .d("COPY_RIGHT", "\"3zVZap4Z7nDDQSNx\"")
                .d("MIME_TYPE", "\"\"")
                .d("NAME", "\"3ItHJWTHwDBQ\"")
                .d("URI", "\"0sxeHQte\"")
            .and().insertInto("MEDIA_FILE", 28641L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2057-07-01 12:11:08\"")
                .d("COPY_RIGHT", "\"ATLbGteyzleO\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"jtJ0H\"")
            .and().insertInto("USERS", 30263L)
                .d("AUTHORIZATION_LEVEL", "799")
                .d("NAME", "\"RQwVqzX5T0XGY\"")
            .and().insertInto("ACTIVITY", 30262L)
            .and().insertInto("ACTIVITY_RATING", 30261L)
                .r("ACTIVITY_ID", 30262L)
                .r("USER_ID", 28556L)
                .d("FAVOURITE", "true")
                .d("RATING", "400")
            .and().insertInto("USERS", 30266L)
                .d("AUTHORIZATION_LEVEL", "766")
                .d("NAME", "\"PRD9hFg6LIh\"")
            .and().insertInto("ACTIVITY", 30265L)
            .and().insertInto("ACTIVITY_RATING", 30264L)
                .r("ACTIVITY_ID", 30265L)
                .r("USER_ID", 28555L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 30269L)
                .d("AUTHORIZATION_LEVEL", "883")
                .d("NAME", "\"XL\"")
            .and().insertInto("ACTIVITY", 30268L)
            .and().insertInto("ACTIVITY_RATING", 30267L)
                .r("ACTIVITY_ID", 30265L)
                .r("USER_ID", 28556L)
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 30272L)
                .d("AUTHORIZATION_LEVEL", "569")
                .d("NAME", "\"T21t\"")
            .and().insertInto("ACTIVITY", 30271L)
            .and().insertInto("ACTIVITY_RATING", 30270L)
                .r("ACTIVITY_ID", 30265L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "423")
            .and().insertInto("USERS", 30275L)
                .d("AUTHORIZATION_LEVEL", "714")
                .d("NAME", "\"BEoEqqI\"")
            .and().insertInto("ACTIVITY", 30274L)
            .and().insertInto("ACTIVITY_RATING", 30273L)
                .r("ACTIVITY_ID", 30262L)
                .r("USER_ID", 30272L)
                .d("FAVOURITE", "true")
                .d("RATING", "375")
            .and().insertInto("USERS", 30297L)
                .d("AUTHORIZATION_LEVEL", "899")
                .d("NAME", "\"Tz\"")
            .and().insertInto("USER_IDENTITY", 30296L)
                .d("DATE_CREATED", "NULL")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"pzpSF\"")
                .d("USER_ID", "NULL")
            .and().insertInto("USERS", 30401L)
                .d("AUTHORIZATION_LEVEL", "884")
                .d("NAME", "\"1QoeY9ViIeo5kU\"")
            .and().insertInto("ACTIVITY", 30400L)
            .and().insertInto("ACTIVITY", 30399L)
            .and().insertInto("ACTIVITY_RELATION", 30398L)
                .r("ACTIVITY_1_ID", 30400L)
                .r("ACTIVITY_2_ID", 30400L)
                .r("OWNER_ID", 28555L)
            .and().insertInto("USERS", 30405L)
                .d("AUTHORIZATION_LEVEL", "334")
                .d("NAME", "\"Eor1KDI\"")
            .and().insertInto("ACTIVITY", 30404L)
            .and().insertInto("ACTIVITY", 30403L)
            .and().insertInto("ACTIVITY_RELATION", 30402L)
                .r("ACTIVITY_1_ID", 30262L)
                .r("ACTIVITY_2_ID", 30400L)
                .r("OWNER_ID", 28558L)
            .and().insertInto("USERS", 30409L)
                .d("AUTHORIZATION_LEVEL", "10")
                .d("NAME", "\"wxximWRGevLb\"")
            .and().insertInto("ACTIVITY", 30408L)
            .and().insertInto("ACTIVITY", 30407L)
            .and().insertInto("ACTIVITY_RELATION", 30406L)
                .r("ACTIVITY_1_ID", 30265L)
                .r("ACTIVITY_2_ID", 30407L)
                .d("OWNER_ID", "1")
            .and().insertInto("USERS", 30413L)
                .d("AUTHORIZATION_LEVEL", "230")
                .d("NAME", "\"MqWDto5s9Yaj\"")
            .and().insertInto("ACTIVITY", 30412L)
            .and().insertInto("ACTIVITY", 30411L)
            .and().insertInto("ACTIVITY_RELATION", 30410L)
                .r("ACTIVITY_1_ID", 30404L)
                .r("ACTIVITY_2_ID", 30271L)
                .r("OWNER_ID", 30266L)
            .and().insertInto("MEDIA_FILE", 30949L)
                .d("URI", "\"4elcXbaYHPEi\"")
            .and().insertInto("TAG", 30948L)
                .d("GRP", "\"0Yh_govL8JBTjzI\"")
                .d("NAME", "\"EgeFPDcMgk8nx\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -8729263010727763205, " + 
                    " \"date_created\": \"2033-09-07T16:45:53\", " + 
                    " \"description_material\": \"YT\", " + 
                    " \"description_introduction\": \"GDWxnfDw\", " + 
                    " \"description_prepare\": \"c2jHuX4ohPO\", " + 
                    " \"description_main\": \"f7J6N\", " + 
                    " \"description_safety\": \"GwxF5LIad\", " + 
                    " \"age_max\": -341, " + 
                    " \"time_max\": 118, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"D1quUnB\", " + 
                    " \"author\": { " + 
                    " \"name\": \"vE1FS95S\", " + 
                    " \"authorization_level\": 336 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "name=FtnuDr_pqsKzr&" + 
                    "text=wXRDwXb3fvEk3&" + 
                    "featured=true&" + 
                    "ages=PqY4aEbGHKC48&" + 
                    "durations=vMkLh9RpvclF3u1H&" + 
                    "ratings_count_min=47&" + 
                    "ratings_average_min=0.6210312375706722&" + 
                    "favourites=870&" + 
                    "uri=dPB1EEOZpgy")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 787, " + 
                    " \"name\": \"I9dKyfyCLnOauu\", " + 
                    " \"authorization_level\": 362, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": -1120589400059378161, " + 
                    " \"date_created\": \"1999-08-20T16:43:14\" " + 
                    " }, " + 
                    " { " + 
                    " \"date_created\": \"2058-11-26T20:47:25\", " + 
                    " \"type\": \"API\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users?" + 
                    "my_favourites=1m1YB0PGjY2PaScv&" + 
                    "ratings_average_min=Tr_M0dYGe9kaSYA&" + 
                    "text=VUXiEwkb58NLzCas&" + 
                    "categories=gQosv&" + 
                    "time_2=k0wFpoxxPjqN8Ei&" + 
                    "participants=KesbzanvfSB")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(18))
                .body("[0].'name'", containsString(""))
                .body("[0].'email_address'", containsString("S9He"))
                .body("[0].'authorization_level'", numberMatches(818.0))
                .body("[0].'identities'.size()", equalTo(0))
                .body("[1].'name'", containsString("XL"))
                .body("[1].'email_address'", nullValue())
                .body("[1].'authorization_level'", numberMatches(883.0))
                .body("[1].'identities'.size()", equalTo(0))
                .body("[2].'name'", containsString("INTEGRATION TEST USER"))
                .body("[2].'email_address'", nullValue())
                .body("[2].'authorization_level'", numberMatches(0.0))
                .body("[2].'identities'.size()", equalTo(1))
                .body("[2].'identities'[0].'date_created'", numberMatches(9.811548E11))
                .body("[2].'identities'[0].'type'", containsString("API"))
                .body("[2].'identities'[0].'value'", containsString("user"))
                ; // Skipping assertions on the remaining 15 elements. This limit of 3 elements can be increased in the configurations
        
        
        ValidatableResponse res_4 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"60H\", " + 
                    " \"email_address\": \"KZorj1titH3O\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/134?" + 
                    "my_favourites=false&" + 
                    "ratings_average_min=0.6210312375706722")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_100_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_4.extract().statusCode()));
        
        ValidatableResponse res_5 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/categories?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_5.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/categories?name=gh9")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_7 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_prepare\": \"X9UKgtX\", " + 
                    " \"description_safety\": \"cD1YKbKzC\", " + 
                    " \"age_min\": -788, " + 
                    " \"age_max\": 31, " + 
                    " \"participants_min\": 191, " + 
                    " \"participants_max\": 105, " + 
                    " \"featured\": false, " + 
                    " \"activity\": { " + 
                    " \"id\": 196062140, " + 
                    " \"ratings_sum\": 302, " + 
                    " \"related\": [ " + 
                    " 66, " + 
                    " 825, " + 
                    " -96381590 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T01:44:30.914Z"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("X9UKgtX"))
                .body("'properties_revisions'[0].'description_safety'", containsString("cD1YKbKzC"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-788.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(31.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(191.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(105.0))
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties'.'date_created'", containsString("2024-05-30T01:44:30.914Z"))
                .body("'properties'.'description_prepare'", containsString("X9UKgtX"))
                .body("'properties'.'description_safety'", containsString("cD1YKbKzC"))
                .body("'properties'.'age_min'", numberMatches(-788.0))
                .body("'properties'.'age_max'", numberMatches(31.0))
                .body("'properties'.'participants_min'", numberMatches(191.0))
                .body("'properties'.'participants_max'", numberMatches(105.0))
                .body("'properties'.'featured'", equalTo(false))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_7.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/-5900171409516241993?featured=9ChrZ&age_1=iyHgkKJnc&id=i&participants=x"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", nullValue())
                .body("'properties_revisions'[0].'date_published'", nullValue())
                .body("'properties_revisions'[0].'date_created'", numberMatches(1.717026270914E12))
                .body("'properties_revisions'[0].'date_updated'", nullValue())
                .body("'properties_revisions'[0].'description_material'", nullValue())
                .body("'properties_revisions'[0].'description_introduction'", nullValue())
                .body("'properties_revisions'[0].'description_prepare'", containsString("X9UKgtX"))
                .body("'properties_revisions'[0].'description_main'", nullValue())
                .body("'properties_revisions'[0].'description_safety'", containsString("cD1YKbKzC"))
                .body("'properties_revisions'[0].'description_notes'", nullValue())
                .body("'properties_revisions'[0].'age_min'", numberMatches(-788.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(31.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(191.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(105.0))
                .body("'properties_revisions'[0].'time_min'", nullValue())
                .body("'properties_revisions'[0].'time_max'", nullValue())
                .body("'properties_revisions'[0].'featured'", equalTo(false))
                .body("'properties_revisions'[0].'source'", nullValue())
                .body("'properties_revisions'[0].'tags'.size()", equalTo(0))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(0))
                .body("'properties_revisions'[0].'author'", nullValue())
                .body("'properties'.'name'", nullValue())
                .body("'properties'.'date_published'", nullValue())
                .body("'properties'.'date_created'", numberMatches(1.717026270914E12))
                .body("'properties'.'date_updated'", nullValue())
                .body("'properties'.'description_material'", nullValue())
                .body("'properties'.'description_introduction'", nullValue())
                .body("'properties'.'description_prepare'", containsString("X9UKgtX"))
                .body("'properties'.'description_main'", nullValue())
                .body("'properties'.'description_safety'", containsString("cD1YKbKzC"))
                .body("'properties'.'description_notes'", nullValue())
                .body("'properties'.'age_min'", numberMatches(-788.0))
                .body("'properties'.'age_max'", numberMatches(31.0))
                .body("'properties'.'participants_min'", numberMatches(191.0))
                .body("'properties'.'participants_max'", numberMatches(105.0))
                .body("'properties'.'time_min'", nullValue())
                .body("'properties'.'time_max'", nullValue())
                .body("'properties'.'featured'", equalTo(false))
                .body("'properties'.'source'", nullValue())
                .body("'properties'.'tags'.size()", equalTo(0))
                .body("'properties'.'media_files'.size()", equalTo(0))
                .body("'properties'.'author'", nullValue())
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'related'.size()", equalTo(0));
        
    }
    
    
    /**
    * [test_75_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_75_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/roles")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_main\": \"xb\", " + 
                    " \"description_safety\": \"wP7u\", " + 
                    " \"age_min\": -790, " + 
                    " \"age_max\": -2147483507, " + 
                    " \"participants_min\": 192, " + 
                    " \"participants_max\": 912, " + 
                    " \"source\": \"40VYiF0hcUi\", " + 
                    " \"media_files\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T01:44:30.775Z"))
                .body("'properties_revisions'[0].'description_main'", containsString("xb"))
                .body("'properties_revisions'[0].'description_safety'", containsString("wP7u"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-790.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147483507E9))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(192.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(912.0))
                .body("'properties_revisions'[0].'source'", containsString("40VYiF0hcUi"))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(0))
                .body("'properties'.'date_created'", containsString("2024-05-30T01:44:30.775Z"))
                .body("'properties'.'description_main'", containsString("xb"))
                .body("'properties'.'description_safety'", containsString("wP7u"))
                .body("'properties'.'age_min'", numberMatches(-790.0))
                .body("'properties'.'age_max'", numberMatches(-2.147483507E9))
                .body("'properties'.'participants_min'", numberMatches(192.0))
                .body("'properties'.'participants_max'", numberMatches(912.0))
                .body("'properties'.'source'", containsString("40VYiF0hcUi"))
                .body("'properties'.'media_files'.size()", equalTo(0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_1.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"favourite\": true " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/629/rating"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 629 " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/629/rating"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        ValidatableResponse res_4 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 167, " + 
                    " \"mime_type\": \"l\", " + 
                    " \"name\": \"K8Mp\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_109_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_4.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?" + 
                    "uri=R1yloR9uW2SHs3Z&" + 
                    "ratings_count_min=uXh&" + 
                    "featured=JwyuTJcNZjwAm&" + 
                    "time_1=zdSrxU1_vfHPe1&" + 
                    "ratings_average_min=O&" + 
                    "age_1=&" + 
                    "name=K8Mp&" + 
                    "id=629&" + 
                    "participants=lw1T")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        ValidatableResponse res_6 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 167, " + 
                    " \"mime_type\": \"l\", " + 
                    " \"uri\": \"data:text/plain;base64,YVVrbm1SUWNk\", " + 
                    " \"name\": \"K8Mp\", " + 
                    " \"copy_right\": \"WLKDBkfx4nzlnC\", " + 
                    " \"author\": \"WMW9syTPGi1Ucy\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_6.extract().statusCode()));
    }


}
