import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2024-05-30T03:56:46.515+02:00[Europe/Paris]
 * <br>
 * The generated test suite contains 80 tests
 * <br>
 * Covered targets: 1813
 * <br>
 * Used time: 2h 0m 17s
 * <br>
 * Needed budget for current results: 99%
 * <br>
 * This file contains test cases that are likely to indicate faults.
 */
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.se.devscout.scoutapi.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("USERS","ACTIVITY_PROPERTIES","ACTIVITY_PROPERTIES_MEDIA_FILE","ACTIVITY_PROPERTIES_TAG","ACTIVITY_RATING","ACTIVITY_RELATION","USER_IDENTITY","ACTIVITY","ACTIVITY_DERIVED","MEDIA_FILE","MEDIA_FILE_KEYWORDS","TAG","TAG_DERIVED","SYSTEM_MESSAGE"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * [test_0_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_0_with500() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "categories=_EM_138_XYZ_&" + 
                    "ages=_EM_139_XYZ_&" + 
                    "participants=_EM_140_XYZ_&" + 
                    "durations=_EM_141_XYZ_&" + 
                    "my_favourites=false&" + 
                    "ratings_count_min=537&" + 
                    "favourites=391")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_77_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
    }
    
    
    /**
    * [test_1_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_1_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "age_1=_EM_1952_XYZ_&" + 
                    "participants=_EM_1954_XYZ_&" + 
                    "time_2=_EM_1956_XYZ_&" + 
                    "id=_EM_1957_XYZ_&" + 
                    "my_favourites=false&" + 
                    "ratings_count_min=265")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
    }
    
    
    /**
    * [test_2_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_2_with500() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/336/file?EMextraParam123=_EM_4_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_3_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_3_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/tags?EMextraParam123=_EM_3711_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_4_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_4_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_5261_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/users?EMextraParam123=_EM_5260_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_5_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_5_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_21897_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/users/232?EMextraParam123=_EM_21896_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_6_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_6_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/users/849?EMextraParam123=_EM_5073_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_48_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_7_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_7_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/657?EMextraParam123=_EM_5059_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_41_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_8_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_8_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3553_XYZ_")
                .delete(baseUrlOfSut + "/api/v2/tags/462")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_9_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_9_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/377?EMextraParam123=_EM_3538_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_10_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_10_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3610_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/categories/2456532858867961747")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_11_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_11_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/694/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_12_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_12_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/784/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_13_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_13_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1797_XYZ_")
                .get(baseUrlOfSut + "/api/v1/activities/806/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_14_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_14_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1799_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/activities/964/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_15_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_15_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=_EM_2003_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_16_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_16_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"_EM_5245_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages?EMextraParam123=_EM_5247_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/SystemMessageDao_33_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_17_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_17_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_18_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_18_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"email_address\": \"NP\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/UserDao_40_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_19_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_19_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .patch(baseUrlOfSut + "/api/v2/activities/555")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_20_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_20_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3534_XYZ_")
                .delete(baseUrlOfSut + "/api/v2/activities/225?EMextraParam123=_EM_3533_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_21_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_21_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_3605_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/activities/195008611")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_22_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_22_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/FavouritesResourceV1_66_put
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_23_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_23_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 8, " + 
                    " \"email_address\": \"_EM_14156_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users?EMextraParam123=_EM_14161_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_62_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_24_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_24_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"value\": \"_EM_12449_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/242?EMextraParam123=_EM_12450_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_102_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_25_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_25_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/638?" + 
                    "verify_unused=true&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_26_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_26_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 773, " + 
                    " \"key\": \"_EM_16538_XYZ_\", " + 
                    " \"value\": \"_EM_16539_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/SystemMessageResource_78_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_27_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_27_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_5618_XYZ_\", " + 
                    " \"name\": \"_EM_5619_XYZ_\", " + 
                    " \"copy_right\": \"_EM_5620_XYZ_\", " + 
                    " \"author\": \"ZSeMvdxr11\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_109_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_28_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_28_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 11291L)
                .d("KEY", "\"9\"")
                .d("VALID_FROM", "\"2048-01-25 05:52:37\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_83709_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 11292L)
                .d("KEY", "\"Ee1\"")
                .d("VALID_FROM", "\"1934-08-22 17:46:04\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_83710_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 11293L)
                .d("KEY", "\"w7zAn\"")
                .d("VALID_FROM", "\"2002-03-07 22:34:30\"")
                .d("VALID_TO", "\"2042-03-16 10:20:51\"")
                .d("VALUE", "\"FmAPfnURV\"")
            .and().insertInto("SYSTEM_MESSAGE", 11294L)
                .d("KEY", "\"_EM_83711_XYZ_\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1961-06-21 21:55:41\"")
                .d("VALUE", "\"_EM_83712_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 11295L)
                .d("KEY", "\"68\"")
                .d("VALID_FROM", "\"2100-06-29 19:56:50\"")
                .d("VALID_TO", "\"2093-05-16 05:29:07\"")
                .d("VALUE", "\"xa\"")
            .and().insertInto("ACTIVITY", 21825L)
            .and().insertInto("ACTIVITY", 21826L)
            .and().insertInto("ACTIVITY", 21827L)
            .and().insertInto("ACTIVITY", 21828L)
            .and().insertInto("USERS", 45434L)
                .d("AUTHORIZATION_LEVEL", "472")
                .d("NAME", "\"ChKfPmUQ\"")
            .and().insertInto("ACTIVITY", 45433L)
            .and().insertInto("ACTIVITY_RATING", 45432L)
                .r("ACTIVITY_ID", 21827L)
                .r("USER_ID", 45434L)
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .and().insertInto("USERS", 45437L)
                .d("AUTHORIZATION_LEVEL", "253")
                .d("NAME", "\"pVvn7k10\"")
            .and().insertInto("ACTIVITY", 45436L)
            .and().insertInto("ACTIVITY_RATING", 45435L)
                .r("ACTIVITY_ID", 21828L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "770")
            .and().insertInto("USERS", 45440L)
                .d("AUTHORIZATION_LEVEL", "50")
                .d("NAME", "\"rRxf2DG6\"")
            .and().insertInto("ACTIVITY", 45439L)
            .and().insertInto("ACTIVITY_RATING", 45438L)
                .r("ACTIVITY_ID", 45433L)
                .r("USER_ID", 45440L)
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": -104, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities/24/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_29_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_29_with500() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 864, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities/864/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_30_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_30_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_17264_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 609, " + 
                    " \"activities_count\": -3876177421908861516 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_61_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_31_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_31_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_5451_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_5447_XYZ_\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 865, " + 
                    " \"type\": \"GOOGLE\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/804")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_100_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_32_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_32_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 33745L)
                .d("AUTHOR", "\"ztLp3sLAYJQC\"")
                .d("CAPTURE_DATE", "\"2008-02-24 03:01:07\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"c4UgFv8y3l\"")
                .d("URI", "\"ci2ygb7OhEJpnpL\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"ci2ygb7OhEJpnpL\", " + 
                    " \"author\": \"ztLp3sLAYJQC\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_33_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_33_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 9489L)
                .d("AUTHORIZATION_LEVEL", "32")
                .d("DATE_CREATED", "\"1961-06-01 18:23:52\"")
                .d("EMAIL_ADDRESS", "\"_EM_67115_XYZ_\"")
                .d("NAME", "\"ID1_12_0_\"")
            .and().insertInto("USERS", 14587L)
                .d("AUTHORIZATION_LEVEL", "-1504")
                .d("NAME", "\"5380916\"")
            .and().insertInto("ACTIVITY", 14586L)
            .and().insertInto("ACTIVITY_RATING", 14585L)
                .r("ACTIVITY_ID", 14586L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "-928")
            .and().insertInto("USERS", 14590L)
                .d("AUTHORIZATION_LEVEL", "193")
                .d("NAME", "\"_EM_55879_XYZ_\"")
            .and().insertInto("ACTIVITY", 14589L)
            .and().insertInto("ACTIVITY_RATING", 14588L)
                .r("ACTIVITY_ID", 14586L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "true")
                .d("RATING", "825")
            .and().insertInto("USERS", 14593L)
                .d("AUTHORIZATION_LEVEL", "-142")
                .d("NAME", "\"_EM_101996_XYZ_\"")
            .and().insertInto("ACTIVITY", 14592L)
            .and().insertInto("ACTIVITY_RATING", 14591L)
                .r("ACTIVITY_ID", 14586L)
                .r("USER_ID", 14587L)
                .d("FAVOURITE", "false")
                .d("RATING", "382")
            .and().insertInto("USERS", 14596L)
                .d("AUTHORIZATION_LEVEL", "681")
                .d("NAME", "\"_EM_55880_XYZ_\"")
            .and().insertInto("ACTIVITY", 14595L)
            .and().insertInto("ACTIVITY_RATING", 14594L)
                .r("ACTIVITY_ID", 14586L)
                .r("USER_ID", 14596L)
                .d("FAVOURITE", "false")
                .d("RATING", "222")
            .and().insertInto("MEDIA_FILE", 27356L)
                .d("AUTHOR", "\"_EM_101997_XYZ_\"")
                .d("CAPTURE_DATE", "\"2020-12-19 03:32:11\"")
                .d("COPY_RIGHT", "\"jbsmEiTS\"")
                .d("MIME_TYPE", "\"ZIwHFbaj\"")
                .d("NAME", "\"_EM_101998_XYZ_\"")
                .d("URI", "\"4QyCTf4SrWGLfV6\"")
            .and().insertInto("MEDIA_FILE", 27357L)
                .d("AUTHOR", "\"kxZtqgT74\"")
                .d("CAPTURE_DATE", "\"2020-12-20 16:00:47\"")
                .d("COPY_RIGHT", "\"6Lt13oCqMQ\"")
                .d("MIME_TYPE", "\"hUXz\"")
                .d("NAME", "\"DBuDatl\"")
                .d("URI", "\"_EM_101999_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 27358L)
                .d("AUTHOR", "\"h3XSolkRdV4YnTXU\"")
                .d("CAPTURE_DATE", "\"2016-11-23 02:07:05\"")
                .d("COPY_RIGHT", "\"ZwGri6ss\"")
                .d("MIME_TYPE", "\"AjHZRrL=2\"")
                .d("NAME", "\"_EM_101509_XYZ_\"")
                .d("URI", "\"zs5cBrHnBmMEyH\"")
            .and().insertInto("MEDIA_FILE", 27492L)
                .d("URI", "\"DZ1Q8NpLG\"")
            .and().insertInto("TAG", 27491L)
                .d("GRP", "\"vh6hbsI\"")
                .d("NAME", "\"pEFiZu5q\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 27494L)
                .d("URI", "\"_EM_102000_XYZ_\"")
            .and().insertInto("TAG", 27493L)
                .d("GRP", "\"_mD\"")
                .d("NAME", "\"_EM_102001_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 27496L)
                .d("URI", "\"OCTJ1xArMURHL47\"")
            .and().insertInto("TAG", 27495L)
                .d("GRP", "\"fUTpAhLa0wrw6\"")
                .d("NAME", "\"O4s\"")
                .r("MEDIA_FILE_ID", 27494L)
            .and().insertInto("MEDIA_FILE", 27498L)
                .d("URI", "\"_FQjUA0jf\"")
            .and().insertInto("TAG", 27497L)
                .d("GRP", "\"n0JIqWf_\"")
                .d("NAME", "\"x\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 99, " + 
                    " \"mime_type\": \"9qyqD2_\", " + 
                    " \"uri\": \"zW\", " + 
                    " \"name\": \"G5IYdXoK410z5p\", " + 
                    " \"author\": \"9YR\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/-32669?" + 
                    "valid=Ci4aYwJ71zoiX&" + 
                    "attrs=By")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_295_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_34_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_34_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 961L)
                .d("URI", "\"_EM_11601_XYZ_\"")
            .and().insertInto("TAG", 960L)
                .d("GRP", "\"_EM_11602_XYZ_\"")
                .d("NAME", "\"UFZYXMvthcHy\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 963L)
                .d("URI", "\"kkUZbTw558W\"")
            .and().insertInto("TAG", 962L)
                .d("GRP", "\"_EM_11603_XYZ_\"")
                .d("NAME", "\"TmrqF\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 108, " + 
                    " \"group\": \"_EM_9521_XYZ_\", " + 
                    " \"name\": \"_EM_9522_XYZ_\", " + 
                    " \"activities_count\": 687 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/tags/108")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_35_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_35_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 10846L)
                .d("KEY", "\"_EM_109336_XYZ_\"")
                .d("VALID_FROM", "\"2029-11-05 23:59:54\"")
                .d("VALID_TO", "\"2086-10-25 10:08:03\"")
                .d("VALUE", "\"Pa0PvkgMYL\"")
            .and().insertInto("SYSTEM_MESSAGE", 10847L)
                .d("KEY", "\"-1\"")
                .d("VALID_FROM", "\"1900-08-16 06:43:57\"")
                .d("VALID_TO", "\"2100-04-21 08:27:55\"")
                .d("VALUE", "\"_EM_109344_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 11440L)
                .d("AUTHOR", "\"MISJV__ZQIva\"")
                .d("CAPTURE_DATE", "\"2000-06-16 16:52:29\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"xRkC6uX5yGOosX\"")
                .d("NAME", "\"_EM_44418_XYZ_\"")
                .d("URI", "\"_EM_109337_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 11441L)
                .d("AUTHOR", "\"_EM_73930_XYZ_\"")
                .d("CAPTURE_DATE", "\"2065-12-03 13:41:47\"")
                .d("COPY_RIGHT", "\"9PomLWeDRM7nZUKx_\"")
                .d("MIME_TYPE", "\"_EM_109345_XYZ_\"")
                .d("NAME", "\"_EM_109346_XYZ_\"")
                .d("URI", "\"_EM_109347_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 11447L)
                .d("URI", "\"_EM_109339_XYZ_\"")
            .and().insertInto("USERS", 11446L)
                .d("AUTHORIZATION_LEVEL", "4320")
                .d("NAME", "\"0RGBSVBHD\"")
            .and().insertInto("ACTIVITY", 11445L)
            .and().insertInto("ACTIVITY", 11444L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11443L)
                .r("ACTIVITY_ID", 11445L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 11442L)
                .r("ACTIVITY_PROPERTIES_ID", 11443L)
                .r("MEDIA_FILE_ID", 11447L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 11453L)
                .d("URI", "\"_EM_109348_XYZ_\"")
            .and().insertInto("USERS", 11452L)
                .d("AUTHORIZATION_LEVEL", "-64")
                .d("NAME", "\"_EM_109340_XYZ_\"")
            .and().insertInto("ACTIVITY", 11451L)
            .and().insertInto("ACTIVITY", 11450L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11449L)
                .r("ACTIVITY_ID", 11445L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 11448L)
                .r("ACTIVITY_PROPERTIES_ID", 11443L)
                .r("MEDIA_FILE_ID", 11440L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 11459L)
                .d("URI", "\"_EM_44419_XYZ_\"")
            .and().insertInto("USERS", 11458L)
                .d("AUTHORIZATION_LEVEL", "466")
                .d("NAME", "\"5573069\"")
            .and().insertInto("ACTIVITY", 11457L)
            .and().insertInto("ACTIVITY", 11456L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11455L)
                .r("ACTIVITY_ID", 11445L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 11454L)
                .r("ACTIVITY_PROPERTIES_ID", 11443L)
                .r("MEDIA_FILE_ID", 11459L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 11465L)
                .d("URI", "\"_EM_44420_XYZ_\"")
            .and().insertInto("USERS", 11464L)
                .d("AUTHORIZATION_LEVEL", "435")
                .d("NAME", "\"5111509\"")
            .and().insertInto("ACTIVITY", 11463L)
            .and().insertInto("ACTIVITY", 11462L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11461L)
                .r("ACTIVITY_ID", 11462L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 11460L)
                .r("ACTIVITY_PROPERTIES_ID", 11455L)
                .r("MEDIA_FILE_ID", 11465L)
                .d("FEATURED", "true")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 239, " + 
                    " \"group\": \"gO097njw7gZ_kHG9\", " + 
                    " \"name\": \"FsDciVZ\", " + 
                    " \"activities_count\": 8814 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/174")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_36_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_36_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 37, " + 
                    " \"uri\": \"_EM_11485_XYZ_\", " + 
                    " \"name\": \"_EM_11486_XYZ_\", " + 
                    " \"copy_right\": \"FlrQ3G4OfN0hKCv\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=_EM_11488_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_137_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_37_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_37_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 35720L)
                .d("AUTHOR", "\"_EM_126368_XYZ_\"")
                .d("CAPTURE_DATE", "\"1939-07-01 00:02:24\"")
                .d("COPY_RIGHT", "\"1YxoB\"")
                .d("MIME_TYPE", "\"EzEHbBeJy\"")
                .d("NAME", "\"2016-07-23 13:13:10\"")
                .d("URI", "\"si9S4qTPEg7jhzh\"")
            .and().insertInto("MEDIA_FILE", 35726L)
                .d("URI", "\"12\"")
            .and().insertInto("USERS", 35725L)
                .d("AUTHORIZATION_LEVEL", "239")
                .d("NAME", "\"_EM_124290_XYZ_\"")
            .and().insertInto("ACTIVITY", 35724L)
            .and().insertInto("ACTIVITY", 35723L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35722L)
                .r("ACTIVITY_ID", 35723L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35721L)
                .r("ACTIVITY_PROPERTIES_ID", 35722L)
                .r("MEDIA_FILE_ID", 35720L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 35732L)
                .d("URI", "\"_EM_126377_XYZ_\"")
            .and().insertInto("USERS", 35731L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_126370_XYZ_\"")
            .and().insertInto("ACTIVITY", 35730L)
            .and().insertInto("ACTIVITY", 35729L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35728L)
                .r("ACTIVITY_ID", 35724L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35727L)
                .r("ACTIVITY_PROPERTIES_ID", 35728L)
                .r("MEDIA_FILE_ID", 35726L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 35738L)
                .d("URI", "\"6138330\"")
            .and().insertInto("USERS", 35737L)
                .d("AUTHORIZATION_LEVEL", "43")
                .d("NAME", "\"HI\"")
            .and().insertInto("ACTIVITY", 35736L)
            .and().insertInto("ACTIVITY", 35735L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35734L)
                .r("ACTIVITY_ID", 35729L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35733L)
                .r("ACTIVITY_PROPERTIES_ID", 35722L)
                .r("MEDIA_FILE_ID", 35738L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 35744L)
                .d("URI", "\"zIGt2FshP\"")
            .and().insertInto("USERS", 35743L)
                .d("AUTHORIZATION_LEVEL", "1341")
                .d("NAME", "\"1Gbijq5X_\"")
            .and().insertInto("ACTIVITY", 35742L)
            .and().insertInto("ACTIVITY", 35741L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35740L)
                .r("ACTIVITY_ID", 35723L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35739L)
                .r("ACTIVITY_PROPERTIES_ID", 35722L)
                .r("MEDIA_FILE_ID", 35726L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 35750L)
                .d("URI", "\"_EM_124683_XYZ_\"")
            .and().insertInto("USERS", 35749L)
                .d("AUTHORIZATION_LEVEL", "2")
                .d("NAME", "\"kMmzt66tQP4JU\"")
            .and().insertInto("ACTIVITY", 35748L)
            .and().insertInto("ACTIVITY", 35747L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35746L)
                .r("ACTIVITY_ID", 35741L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35745L)
                .r("ACTIVITY_PROPERTIES_ID", 35734L)
                .r("MEDIA_FILE_ID", 35744L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 35861L)
                .d("AUTHORIZATION_LEVEL", "198")
                .d("NAME", "\"n19CUsWNak\"")
            .and().insertInto("USER_IDENTITY", 35860L)
                .d("DATE_CREATED", "\"1989-09-27 23:32:52\"")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"_EM_124291_XYZ_\"")
                .d("USER_ID", "NULL")
            .and().insertInto("USERS", 35863L)
                .d("AUTHORIZATION_LEVEL", "836")
                .d("NAME", "\"UgUkU\"")
            .and().insertInto("USER_IDENTITY", 35862L)
                .d("DATE_CREATED", "\"1917-01-12 15:00:29\"")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"1KwPg\"")
                .r("USER_ID", 35861L)
            .and().insertInto("MEDIA_FILE", 35719L)
                .d("AUTHOR", "\"_EM_123306_XYZ_\"")
                .d("CAPTURE_DATE", "\"2025-05-29 11:29:09\"")
                .d("COPY_RIGHT", "\"wktAVaicf\"")
                .d("MIME_TYPE", "\"_EM_123609_XYZ_\"")
                .d("NAME", "\"c_7WDW\"")
                .d("URI", "\"2053-09-27 21:32:52\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -16367, " + 
                    " \"group\": \"_EM_123342_XYZ_\", " + 
                    " \"name\": \"aCj_OMzuX9E2t6\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"_EM_123344_XYZ_\", " + 
                    " \"copy_right\": \"_EM_123345_XYZ_\", " + 
                    " \"author\": \"_EM_123346_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 2045951585 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_38_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_38_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 35720L)
                .d("AUTHOR", "\"_EM_126368_XYZ_\"")
                .d("CAPTURE_DATE", "\"1939-07-01 00:02:24\"")
                .d("COPY_RIGHT", "\"1YxoB\"")
                .d("MIME_TYPE", "\"EzEHbBeJy\"")
                .d("NAME", "\"2016-07-23 13:13:10\"")
                .d("URI", "\"si9S4qTPEg7jhzh\"")
            .and().insertInto("MEDIA_FILE", 35726L)
                .d("URI", "\"12\"")
            .and().insertInto("USERS", 35725L)
                .d("AUTHORIZATION_LEVEL", "239")
                .d("NAME", "\"_EM_124290_XYZ_\"")
            .and().insertInto("ACTIVITY", 35724L)
            .and().insertInto("ACTIVITY", 35723L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35722L)
                .r("ACTIVITY_ID", 35723L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35721L)
                .r("ACTIVITY_PROPERTIES_ID", 35722L)
                .r("MEDIA_FILE_ID", 35720L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 35732L)
                .d("URI", "\"_EM_126377_XYZ_\"")
            .and().insertInto("USERS", 35731L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_126370_XYZ_\"")
            .and().insertInto("ACTIVITY", 35730L)
            .and().insertInto("ACTIVITY", 35729L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35728L)
                .r("ACTIVITY_ID", 35724L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35727L)
                .r("ACTIVITY_PROPERTIES_ID", 35728L)
                .r("MEDIA_FILE_ID", 35726L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 35738L)
                .d("URI", "\"6138330\"")
            .and().insertInto("USERS", 35737L)
                .d("AUTHORIZATION_LEVEL", "43")
                .d("NAME", "\"HI\"")
            .and().insertInto("ACTIVITY", 35736L)
            .and().insertInto("ACTIVITY", 35735L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35734L)
                .r("ACTIVITY_ID", 35729L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35733L)
                .r("ACTIVITY_PROPERTIES_ID", 35722L)
                .r("MEDIA_FILE_ID", 35738L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 35744L)
                .d("URI", "\"zIGt2FshP\"")
            .and().insertInto("USERS", 35743L)
                .d("AUTHORIZATION_LEVEL", "1341")
                .d("NAME", "\"1Gbijq5X_\"")
            .and().insertInto("ACTIVITY", 35742L)
            .and().insertInto("ACTIVITY", 35741L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35740L)
                .r("ACTIVITY_ID", 35723L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35739L)
                .r("ACTIVITY_PROPERTIES_ID", 35722L)
                .r("MEDIA_FILE_ID", 35726L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 35750L)
                .d("URI", "\"_EM_124683_XYZ_\"")
            .and().insertInto("USERS", 35749L)
                .d("AUTHORIZATION_LEVEL", "2")
                .d("NAME", "\"kMmzt66tQP4JU\"")
            .and().insertInto("ACTIVITY", 35748L)
            .and().insertInto("ACTIVITY", 35747L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35746L)
                .r("ACTIVITY_ID", 35741L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35745L)
                .r("ACTIVITY_PROPERTIES_ID", 35734L)
                .r("MEDIA_FILE_ID", 35744L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 35861L)
                .d("AUTHORIZATION_LEVEL", "198")
                .d("NAME", "\"n19CUsWNak\"")
            .and().insertInto("USER_IDENTITY", 35860L)
                .d("DATE_CREATED", "\"1989-09-27 23:32:52\"")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"_EM_124291_XYZ_\"")
                .d("USER_ID", "NULL")
            .and().insertInto("USERS", 35863L)
                .d("AUTHORIZATION_LEVEL", "836")
                .d("NAME", "\"UgUkU\"")
            .and().insertInto("USER_IDENTITY", 35862L)
                .d("DATE_CREATED", "\"1917-01-12 15:00:29\"")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"1KwPg\"")
                .r("USER_ID", 35861L)
            .and().insertInto("MEDIA_FILE", 35719L)
                .d("AUTHOR", "\"_EM_123306_XYZ_\"")
                .d("CAPTURE_DATE", "\"2025-05-29 11:29:09\"")
                .d("COPY_RIGHT", "\"wktAVaicf\"")
                .d("MIME_TYPE", "\"_EM_123609_XYZ_\"")
                .d("NAME", "\"c_7WDW\"")
                .d("URI", "\"2053-09-27 21:32:52\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"si9S4qTPEg7jhzh\", " + 
                    " \"name\": \"gyehTQzn2D\", " + 
                    " \"copy_right\": \"rilesiQB_5BCDu\", " + 
                    " \"author\": \"lAnE_P\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/5?" + 
                    "key=7xh8cwI&" + 
                    "attrs=_EM_124199_XYZ_&" + 
                    "text=ujdZ9KQbN")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_300_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_39_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_39_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 35720L)
                .d("AUTHOR", "\"_EM_124201_XYZ_\"")
                .d("CAPTURE_DATE", "\"1939-07-01 00:01:24\"")
                .d("COPY_RIGHT", "\"FU22\"")
                .d("MIME_TYPE", "\"EUEHbBeJyR\"")
                .d("NAME", "\"_EM_123619_XYZ_\"")
                .d("URI", "\"_EM_125099_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 35726L)
                .d("URI", "\"12\"")
            .and().insertInto("USERS", 35725L)
                .d("AUTHORIZATION_LEVEL", "255")
                .d("NAME", "\"_EM_124290_XYZ_\"")
            .and().insertInto("ACTIVITY", 35724L)
            .and().insertInto("ACTIVITY", 35723L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35722L)
                .r("ACTIVITY_ID", 35724L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35721L)
                .r("ACTIVITY_PROPERTIES_ID", 35722L)
                .r("MEDIA_FILE_ID", 35720L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 35732L)
                .d("URI", "\"I50A\"")
            .and().insertInto("USERS", 35731L)
                .d("AUTHORIZATION_LEVEL", "3")
                .d("NAME", "\"M\"")
            .and().insertInto("ACTIVITY", 35730L)
            .and().insertInto("ACTIVITY", 35729L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35728L)
                .r("ACTIVITY_ID", 35729L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35727L)
                .r("ACTIVITY_PROPERTIES_ID", 35722L)
                .r("MEDIA_FILE_ID", 35726L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 35738L)
                .d("URI", "\"\"")
            .and().insertInto("USERS", 35737L)
                .d("AUTHORIZATION_LEVEL", "32843")
                .d("NAME", "\"HE\"")
            .and().insertInto("ACTIVITY", 35736L)
            .and().insertInto("ACTIVITY", 35735L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35734L)
                .r("ACTIVITY_ID", 35724L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35733L)
                .r("ACTIVITY_PROPERTIES_ID", 35734L)
                .r("MEDIA_FILE_ID", 35726L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 35744L)
                .d("URI", "\"AOMIkvSfqDG\"")
            .and().insertInto("USERS", 35743L)
                .d("AUTHORIZATION_LEVEL", "9533")
                .d("NAME", "\"1Gbmjq5X_\"")
            .and().insertInto("ACTIVITY", 35742L)
            .and().insertInto("ACTIVITY", 35741L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35740L)
                .r("ACTIVITY_ID", 35729L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35739L)
                .r("ACTIVITY_PROPERTIES_ID", 35728L)
                .r("MEDIA_FILE_ID", 35726L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 35750L)
                .d("URI", "\"LP9\"")
            .and().insertInto("USERS", 35749L)
                .d("AUTHORIZATION_LEVEL", "2")
                .d("NAME", "\"kMmzt66tQP4JU\"")
            .and().insertInto("ACTIVITY", 35748L)
            .and().insertInto("ACTIVITY", 35747L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35746L)
                .r("ACTIVITY_ID", 35736L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35745L)
                .r("ACTIVITY_PROPERTIES_ID", 35734L)
                .r("MEDIA_FILE_ID", 35744L)
                .d("FEATURED", "false")
            .and().insertInto("USERS", 35861L)
                .d("AUTHORIZATION_LEVEL", "574")
                .d("NAME", "\"n19EXsWN_k\"")
            .and().insertInto("USER_IDENTITY", 35860L)
                .d("DATE_CREATED", "\"1989-06-23 23:29:21\"")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"_EM_125100_XYZ_\"")
                .r("USER_ID", 35725L)
            .and().insertInto("USERS", 35863L)
                .d("AUTHORIZATION_LEVEL", "837")
                .d("NAME", "\"xgShU\"")
            .and().insertInto("USER_IDENTITY", 35862L)
                .d("DATE_CREATED", "\"1917-06-12 15:40:46\"")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"2GrrfvxE\"")
                .d("USER_ID", "1")
            .and().insertInto("USERS", 36103L)
                .d("AUTHORIZATION_LEVEL", "-238300589")
                .d("NAME", "\"tx1R\"")
            .and().insertInto("ACTIVITY", 36102L)
            .and().insertInto("ACTIVITY_RATING", 36101L)
                .r("ACTIVITY_ID", 35724L)
                .r("USER_ID", 35731L)
                .d("FAVOURITE", "true")
                .d("RATING", "-32192")
            .and().insertInto("USERS", 36106L)
                .d("AUTHORIZATION_LEVEL", "615")
                .d("NAME", "\"N7CAl1Q\"")
            .and().insertInto("ACTIVITY", 36105L)
            .and().insertInto("ACTIVITY_RATING", 36104L)
                .r("ACTIVITY_ID", 36105L)
                .r("USER_ID", 35743L)
                .d("FAVOURITE", "true")
                .d("RATING", "0")
            .and().insertInto("SYSTEM_MESSAGE", 36119L)
                .d("KEY", "\"jrqaFi02Dd5ws\"")
                .d("VALID_FROM", "\"1901-06-02 14:02:59\"")
                .d("VALID_TO", "\"2055-01-28 16:55:34\"")
                .d("VALUE", "\"FtXzdYzg\"")
            .and().insertInto("SYSTEM_MESSAGE", 36120L)
                .d("KEY", "\"kKfcGQtbafFQq\"")
                .d("VALID_FROM", "\"2029-04-16 07:50:58\"")
                .d("VALID_TO", "\"2057-06-22 19:40:43\"")
                .d("VALUE", "\"Y_\"")
            .and().insertInto("MEDIA_FILE", 36462L)
                .d("URI", "\"JXX89yT_GnT\"")
            .and().insertInto("TAG", 36461L)
                .d("GRP", "\"TBrb6WnU9eEm\"")
                .d("NAME", "\"DM3JgARfhdb\"")
            .and().insertInto("USERS", 36460L)
                .d("AUTHORIZATION_LEVEL", "104")
                .d("NAME", "\"2bbbmkbF\"")
            .and().insertInto("ACTIVITY", 36459L)
            .and().insertInto("ACTIVITY", 36458L)
            .and().insertInto("ACTIVITY_PROPERTIES", 36457L)
                .r("ACTIVITY_ID", 35742L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 36456L)
                .r("ACTIVITY_PROPERTIES_ID", 35746L)
                .r("TAG_ID", 36461L)
            .and().insertInto("MEDIA_FILE", 35719L)
                .d("AUTHOR", "\"_EM_123306_XYZ_\"")
                .d("CAPTURE_DATE", "\"2025-05-29 11:29:00\"")
                .d("COPY_RIGHT", "\"wktAVaicf\"")
                .d("MIME_TYPE", "\"_EM_123609_XYZ_\"")
                .d("NAME", "\"c_7WDW\"")
                .d("URI", "\"_EM_123307_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 17, " + 
                    " \"group\": \"_EM_123342_XYZ_\", " + 
                    " \"name\": \"I\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 246, " + 
                    " \"mime_type\": \"qn\", " + 
                    " \"name\": \"_NTz6RtR_l5Ke\", " + 
                    " \"copy_right\": \"_EM_123345_XYZ_\", " + 
                    " \"author\": \"_EM_123346_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 2045951585 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_60_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_40_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_40_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 301L)
                .d("KEY", "\"Kf_z8Kff85O\"")
                .d("VALID_FROM", "\"2070-08-03 08:25:52\"")
                .d("VALID_TO", "\"2030-05-18 11:22:39\"")
                .d("VALUE", "\"_EM_10094_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 302L)
                .d("KEY", "\"WUUUU192_UUV_\"")
                .d("VALID_FROM", "\"2027-05-04 00:16:00\"")
                .d("VALID_TO", "\"1986-04-07 18:14:32\"")
                .d("VALUE", "\"vxqfztlNSCsIDNS\"")
            .and().insertInto("SYSTEM_MESSAGE", 303L)
                .d("KEY", "\"_EM_71005_XYZ_\"")
                .d("VALID_FROM", "\"2054-06-11 12:42:33\"")
                .d("VALID_TO", "\"2041-08-31 04:04:23\"")
                .d("VALUE", "\"0\"")
            .and().insertInto("SYSTEM_MESSAGE", 304L)
                .d("KEY", "\"4562062\"")
                .d("VALID_FROM", "\"1974-01-26 09:58:04\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"4552920\"")
            .and().insertInto("SYSTEM_MESSAGE", 305L)
                .d("KEY", "\"o\"")
                .d("VALID_FROM", "\"2014-10-13 00:36:24\"")
                .d("VALID_TO", "\"1946-08-04 15:50:51\"")
                .d("VALUE", "\"Y\"")
            .and().insertInto("ACTIVITY", 306L)
            .and().insertInto("ACTIVITY", 307L)
            .and().insertInto("ACTIVITY", 308L)
            .and().insertInto("ACTIVITY", 309L)
            .and().insertInto("ACTIVITY", 310L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/4/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_120_deleteRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_41_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_41_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 9489L)
                .d("AUTHORIZATION_LEVEL", "520")
                .d("DATE_CREATED", "\"2000-08-31 18:29:20\"")
                .d("EMAIL_ADDRESS", "\"gJq_eugiI9s_D7=W\"")
                .d("NAME", "\"3dMiHhrg\"")
            .and().insertInto("ACTIVITY", 14106L)
            .and().insertInto("ACTIVITY", 14107L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/2/rating")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_120_deleteRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_42_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_42_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 25261L)
                .d("KEY", "\"zUssiIe7VUZnlBcD\"")
                .d("VALID_FROM", "\"2079-06-26 01:09:15\"")
                .d("VALID_TO", "\"2059-09-18 12:28:36\"")
                .d("VALUE", "\"nMTs5cUgxI\"")
            .and().insertInto("SYSTEM_MESSAGE", 25262L)
                .d("KEY", "\"BWWN0fk30eol4n\"")
                .d("VALID_FROM", "\"2036-02-14 12:24:18\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"2tfWJvvmrJsAp\"")
            .and().insertInto("SYSTEM_MESSAGE", 13L)
                .d("KEY", "\"4546471\"")
                .d("VALID_FROM", "\"2002-11-20 14:57:09\"")
                .d("VALID_TO", "\"2027-09-25 11:48:28\"")
                .d("VALUE", "\"EM2iRZxu\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_tags = "";
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages/0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"_EM_95898_XYZ_\", " + 
                    " \"name\": \"DDlkGuTAzc\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("_EM_95898_XYZ_"))
                .body("'name'", containsString("DDlkGuTAzc"))
                .body("'activities_count'", numberMatches(0.0));
        location_tags = "/api/v2/tags" + "/" + res_1.extract().body().path("id").toString();
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 651, " + 
                    " \"group\": \"Pfg7Et9\" " + 
                    " } ")
                .put(resolveLocation(location_tags, baseUrlOfSut + "/api/v2/tags/66187?min_activities_count=ezJoh8J403ca&group=_EM_95898_XYZ_"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/TagResource_89_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    /**
    * [test_43_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_43_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 10846L)
                .d("KEY", "\"9lTqRgAPZsP_Zry\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"Pa0PvkgMYL\"")
            .and().insertInto("SYSTEM_MESSAGE", 10847L)
                .d("KEY", "\"hjFJ34wvPAQW\"")
                .d("VALID_FROM", "\"1907-05-03 06:43:57\"")
                .d("VALID_TO", "\"2045-04-21 00:23:55\"")
                .d("VALUE", "\"\"")
            .and().insertInto("MEDIA_FILE", 12817L)
                .d("AUTHOR", "\"9TJp\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"q_rXqI\"")
                .d("URI", "\"Xb\"")
            .and().insertInto("MEDIA_FILE", 12818L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"1UTVB\"")
                .d("NAME", "NULL")
                .d("URI", "\"vwzhz07yh\"")
            .and().insertInto("MEDIA_FILE", 12819L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"8\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"_C3lZM\"")
                .d("URI", "\"y5kETEklQ5Xdbtp\"")
            .and().insertInto("MEDIA_FILE", 12820L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2030-07-04 06:36:58\"")
                .d("COPY_RIGHT", "\"TsdWGwDeAwlk30s\"")
                .d("MIME_TYPE", "\"m\"")
                .d("NAME", "NULL")
                .d("URI", "\"Tjzs\"")
            .and().insertInto("MEDIA_FILE", 12826L)
                .d("URI", "\"\"")
            .and().insertInto("USERS", 12825L)
                .d("AUTHORIZATION_LEVEL", "242")
                .d("NAME", "\"uTVP5\"")
            .and().insertInto("ACTIVITY", 12824L)
            .and().insertInto("ACTIVITY", 12823L)
            .and().insertInto("ACTIVITY_PROPERTIES", 12822L)
                .r("ACTIVITY_ID", 12824L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 12821L)
                .r("ACTIVITY_PROPERTIES_ID", 12822L)
                .r("MEDIA_FILE_ID", 12820L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 12832L)
                .d("URI", "\"yBCh9zS5SNzMp4Bu\"")
            .and().insertInto("USERS", 12831L)
                .d("AUTHORIZATION_LEVEL", "179")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 12830L)
            .and().insertInto("ACTIVITY", 12829L)
            .and().insertInto("ACTIVITY_PROPERTIES", 12828L)
                .r("ACTIVITY_ID", 12830L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 12827L)
                .r("ACTIVITY_PROPERTIES_ID", 12822L)
                .r("MEDIA_FILE_ID", 12817L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 12838L)
                .d("URI", "\"75p7iDuc3ipV\"")
            .and().insertInto("USERS", 12837L)
                .d("AUTHORIZATION_LEVEL", "161")
                .d("NAME", "\"0G_qXVwXL6Oah\"")
            .and().insertInto("ACTIVITY", 12836L)
            .and().insertInto("ACTIVITY", 12835L)
            .and().insertInto("ACTIVITY_PROPERTIES", 12834L)
                .r("ACTIVITY_ID", 12823L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 12833L)
                .r("ACTIVITY_PROPERTIES_ID", 12828L)
                .r("MEDIA_FILE_ID", 12817L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 12844L)
                .d("URI", "\"TnISlu\"")
            .and().insertInto("USERS", 12843L)
                .d("AUTHORIZATION_LEVEL", "473")
                .d("NAME", "\"iqs\"")
            .and().insertInto("ACTIVITY", 12842L)
            .and().insertInto("ACTIVITY", 12841L)
            .and().insertInto("ACTIVITY_PROPERTIES", 12840L)
                .r("ACTIVITY_ID", 12829L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 12839L)
                .r("ACTIVITY_PROPERTIES_ID", 12822L)
                .r("MEDIA_FILE_ID", 12838L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 12850L)
                .d("URI", "\"J5QuRap\"")
            .and().insertInto("USERS", 12849L)
                .d("AUTHORIZATION_LEVEL", "328")
                .d("NAME", "\"JA87q1\"")
            .and().insertInto("ACTIVITY", 12848L)
            .and().insertInto("ACTIVITY", 12847L)
            .and().insertInto("ACTIVITY_PROPERTIES", 12846L)
                .r("ACTIVITY_ID", 12842L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 12845L)
                .r("ACTIVITY_PROPERTIES_ID", 12846L)
                .r("MEDIA_FILE_ID", 12832L)
                .d("FEATURED", "true")
            .and().insertInto("SYSTEM_MESSAGE", 8522L)
                .d("KEY", "\"_EM_32961_XYZ_\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_32962_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/api/v1/activities/4/rating?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_112_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_44_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_44_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -4611686018427386880, " + 
                    " \"mime_type\": \"_EM_21277_XYZ_\", " + 
                    " \"uri\": \"data:text/plain,X0VNXzM0OTQzX1hZWl8\u003d\", " + 
                    " \"name\": \"_EM_21279_XYZ_\", " + 
                    " \"copy_right\": \"_EM_21280_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_45_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_45_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -4611686018427386880, " + 
                    " \"mime_type\": \"_EM_89431_XYZ_\", " + 
                    " \"uri\": \"data:;base64,RlgyejZsWkZOQQ\u003d\u003d\", " + 
                    " \"name\": \"_EM_89432_XYZ_\", " + 
                    " \"copy_right\": \"4606846\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_46_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_46_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 35720L)
                .d("AUTHOR", "\"Yye4q\"")
                .d("CAPTURE_DATE", "\"1939-07-01 00:02:24\"")
                .d("COPY_RIGHT", "\"1YxoB\"")
                .d("MIME_TYPE", "\"EUEHbBeJyR\"")
                .d("NAME", "NULL")
                .d("URI", "\"si9S4qTPEg7jhzh\"")
            .and().insertInto("MEDIA_FILE", 35726L)
                .d("URI", "\"12\"")
            .and().insertInto("USERS", 35725L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_124290_XYZ_\"")
            .and().insertInto("ACTIVITY", 35724L)
            .and().insertInto("ACTIVITY", 35723L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35722L)
                .r("ACTIVITY_ID", 35723L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35721L)
                .r("ACTIVITY_PROPERTIES_ID", 35722L)
                .r("MEDIA_FILE_ID", 35726L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 35732L)
                .d("URI", "\"I50A\"")
            .and().insertInto("USERS", 35731L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"M\"")
            .and().insertInto("ACTIVITY", 35730L)
            .and().insertInto("ACTIVITY", 35729L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35728L)
                .r("ACTIVITY_ID", 35729L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35727L)
                .r("ACTIVITY_PROPERTIES_ID", 35728L)
                .r("MEDIA_FILE_ID", 35732L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 35738L)
                .d("URI", "\"\"")
            .and().insertInto("USERS", 35737L)
                .d("AUTHORIZATION_LEVEL", "36907")
                .d("NAME", "\"HE\"")
            .and().insertInto("ACTIVITY", 35736L)
            .and().insertInto("ACTIVITY", 35735L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35734L)
                .r("ACTIVITY_ID", 35724L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35733L)
                .r("ACTIVITY_PROPERTIES_ID", 35734L)
                .r("MEDIA_FILE_ID", 35726L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 35744L)
                .d("URI", "\"URI\"")
            .and().insertInto("USERS", 35743L)
                .d("AUTHORIZATION_LEVEL", "9021")
                .d("NAME", "\"1Gbijq5X_\"")
            .and().insertInto("ACTIVITY", 35742L)
            .and().insertInto("ACTIVITY", 35741L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35740L)
                .r("ACTIVITY_ID", 35730L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35739L)
                .r("ACTIVITY_PROPERTIES_ID", 35740L)
                .r("MEDIA_FILE_ID", 35744L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 35750L)
                .d("URI", "\"LO6\"")
            .and().insertInto("USERS", 35749L)
                .d("AUTHORIZATION_LEVEL", "8194")
                .d("NAME", "\"kMmzt66tQP4JU\"")
            .and().insertInto("ACTIVITY", 35748L)
            .and().insertInto("ACTIVITY", 35747L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35746L)
                .r("ACTIVITY_ID", 35748L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35745L)
                .r("ACTIVITY_PROPERTIES_ID", 35734L)
                .r("MEDIA_FILE_ID", 35732L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 35861L)
                .d("AUTHORIZATION_LEVEL", "574")
                .d("NAME", "\"r19EXsWN_U\"")
            .and().insertInto("USER_IDENTITY", 35860L)
                .d("DATE_CREATED", "\"1989-05-23 23:32:20\"")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"5qyM\"")
                .r("USER_ID", 35737L)
            .and().insertInto("USERS", 35863L)
                .d("AUTHORIZATION_LEVEL", "13125")
                .d("NAME", "\"xgShUw\"")
            .and().insertInto("USER_IDENTITY", 35862L)
                .d("DATE_CREATED", "\"1917-06-12 15:40:46\"")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"IXVJQFI6T94U\"")
                .d("USER_ID", "1")
            .and().insertInto("USERS", 36103L)
                .d("AUTHORIZATION_LEVEL", "-238300589")
                .d("NAME", "\"SCHEMATA\"")
            .and().insertInto("ACTIVITY", 36102L)
            .and().insertInto("ACTIVITY_RATING", 36101L)
                .r("ACTIVITY_ID", 35723L)
                .r("USER_ID", 35749L)
                .d("FAVOURITE", "true")
                .d("RATING", "575")
            .and().insertInto("USERS", 36106L)
                .d("AUTHORIZATION_LEVEL", "623")
                .d("NAME", "\"N7CAl1Qx\"")
            .and().insertInto("ACTIVITY", 36105L)
            .and().insertInto("ACTIVITY_RATING", 36104L)
                .r("ACTIVITY_ID", 35748L)
                .r("USER_ID", 35743L)
                .d("FAVOURITE", "false")
                .d("RATING", "-2")
            .and().insertInto("SYSTEM_MESSAGE", 36627L)
                .d("KEY", "\"pfG7mcPy0vhJwK\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1965-03-19 12:18:25\"")
                .d("VALUE", "\"Vb_f_zWLxujxWwLS\"")
            .and().insertInto("MEDIA_FILE", 36663L)
                .d("URI", "\"QQJSjcd\"")
            .and().insertInto("TAG", 36662L)
                .d("GRP", "\"UGVfBKgv8i3eHo\"")
                .d("NAME", "\"RdI3dmtI9ZIA\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 35719L)
                .d("AUTHOR", "\"aWWT9GgioJaAC2\"")
                .d("CAPTURE_DATE", "\"2056-05-29 11:21:16\"")
                .d("COPY_RIGHT", "\"wktAVaicf\"")
                .d("MIME_TYPE", "\"_EM_123609_XYZ_\"")
                .d("NAME", "NULL")
                .d("URI", "\"2053-09-27 21:32:52\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -1616241411, " + 
                    " \"email_address\": \"NWBXQsaDOPfi\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 977, " + 
                    " \"type\": \"GOOGLE\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 4809401286209815498, " + 
                    " \"value\": \"joobz6sfOQQxu42U\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 82, " + 
                    " \"type\": \"API\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/1?" + 
                    "min_activities_count=7LJrHtLT6dEv&" + 
                    "id=1&" + 
                    "verify_unused=%5CRCX7&" + 
                    "my_favourites=ROvtrdfLRqMqU3&" + 
                    "text=ujbZ9GQfN")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/UserResource_122_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_47_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_47_with500() throws Exception {
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_12278_XYZ_\", " + 
                    " \"uri\": \"_EM_12279_XYZ_\", " + 
                    " \"copy_right\": \"_EM_12281_XYZ_\", " + 
                    " \"author\": \"_EM_12282_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("_EM_12278_XYZ_"))
                .body("'uri'", containsString("_EM_12279_XYZ_"))
                .body("'copy_right'", containsString("_EM_12281_XYZ_"))
                .body("'author'", containsString("_EM_12282_XYZ_"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/73/file?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_268_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_48_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_48_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 10846L)
                .d("KEY", "\"9lTqRgAPZsP_Zry\"")
                .d("VALID_FROM", "\"2029-11-05 23:59:54\"")
                .d("VALID_TO", "\"2086-10-25 10:00:01\"")
                .d("VALUE", "\"Pa0PvkgMYL\"")
            .and().insertInto("SYSTEM_MESSAGE", 10847L)
                .d("KEY", "\"_EM_44416_XYZ_\"")
                .d("VALID_FROM", "\"1907-04-16 06:43:57\"")
                .d("VALID_TO", "\"2000-06-16 00:23:55\"")
                .d("VALUE", "\"_EM_73691_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 11440L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1998-09-17 16:52:29\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"xRkC6uX5yGOosX\"")
                .d("NAME", "\"5097825\"")
                .d("URI", "\"_EM_73692_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 11441L)
                .d("AUTHOR", "\"_EM_73693_XYZ_\"")
                .d("CAPTURE_DATE", "\"2069-06-01 13:29:48\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"F_K67r5Dw5\"")
                .d("NAME", "\"_EM_73694_XYZ_\"")
                .d("URI", "\"gOlyJ\"")
            .and().insertInto("MEDIA_FILE", 11447L)
                .d("URI", "\"Oadcvat1xBmCvHW\"")
            .and().insertInto("USERS", 11446L)
                .d("AUTHORIZATION_LEVEL", "4320")
                .d("NAME", "\"0RGBSVBHD\"")
            .and().insertInto("ACTIVITY", 11445L)
            .and().insertInto("ACTIVITY", 11444L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11443L)
                .r("ACTIVITY_ID", 11444L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 11442L)
                .r("ACTIVITY_PROPERTIES_ID", 11443L)
                .r("MEDIA_FILE_ID", 11440L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 11453L)
                .d("URI", "\"B3O43M7bUt_erF\"")
            .and().insertInto("USERS", 11452L)
                .d("AUTHORIZATION_LEVEL", "-128")
                .d("NAME", "\"_EM_73695_XYZ_\"")
            .and().insertInto("ACTIVITY", 11451L)
            .and().insertInto("ACTIVITY", 11450L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11449L)
                .r("ACTIVITY_ID", 11451L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 11448L)
                .r("ACTIVITY_PROPERTIES_ID", 11443L)
                .r("MEDIA_FILE_ID", 11453L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 11459L)
                .d("URI", "\"_EM_44419_XYZ_\"")
            .and().insertInto("USERS", 11458L)
                .d("AUTHORIZATION_LEVEL", "466")
                .d("NAME", "\"_EM_73696_XYZ_\"")
            .and().insertInto("ACTIVITY", 11457L)
            .and().insertInto("ACTIVITY", 11456L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11455L)
                .r("ACTIVITY_ID", 11451L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 11454L)
                .r("ACTIVITY_PROPERTIES_ID", 11449L)
                .r("MEDIA_FILE_ID", 11459L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 11465L)
                .d("URI", "\"TABLE_TYPE\"")
            .and().insertInto("USERS", 11464L)
                .d("AUTHORIZATION_LEVEL", "435")
                .d("NAME", "\"_EM_44421_XYZ_\"")
            .and().insertInto("ACTIVITY", 11463L)
            .and().insertInto("ACTIVITY", 11462L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11461L)
                .r("ACTIVITY_ID", 11463L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 11460L)
                .r("ACTIVITY_PROPERTIES_ID", 11449L)
                .r("MEDIA_FILE_ID", 11465L)
                .d("FEATURED", "true")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_categories = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"jw2ivOH_8aON2Fg\", " + 
                    " \"name\": \"5ppiyfLEkvAco\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("jw2ivOH_8aON2Fg"))
                .body("'name'", containsString("5ppiyfLEkvAco"))
                .body("'activities_count'", numberMatches(0.0));
        location_categories = "/api/v1/categories" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 239, " + 
                    " \"group\": \"gO097njw7gZ_kHG9\", " + 
                    " \"activities_count\": 622 " + 
                    " } ")
                .put(resolveLocation(location_categories, baseUrlOfSut + "/api/v1/categories/4611686018427387904"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/CategoryResource_83_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/activities/-130688")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    /**
    * [test_49_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_49_with500() throws Exception {
        
        String location_media_files = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"https://yBSzNqgqfsg/2\", " + 
                    " \"name\": \"_EM_24027_XYZ_\", " + 
                    " \"author\": \"_EM_24029_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("https://yBSzNqgqfsg/2"))
                .body("'name'", containsString("_EM_24027_XYZ_"))
                .body("'author'", containsString("_EM_24029_XYZ_"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/626/file?size=508"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/MediaFileResource_279_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
        
    }
    
    
    /**
    * [test_50_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_50_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 8647L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_33451_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 131, " + 
                    " \"description_safety\": \"_EM_33431_XYZ_\", " + 
                    " \"description_notes\": \"_EM_33432_XYZ_\", " + 
                    " \"participants_max\": 222, " + 
                    " \"time_max\": 217, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"_EM_33433_XYZ_\", " + 
                    " \"tags\": [], " + 
                    " \"activity\": { " + 
                    " \"id\": 604, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.5332354952669617, " + 
                    " \"ratings_sum\": 604, " + 
                    " \"related\": [ " + 
                    " 542, " + 
                    " 941, " + 
                    " 9 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/activities/8647?EMextraParam123=_EM_33450_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_51_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_51_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 13922L)
                .d("AUTHORIZATION_LEVEL", "444")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"Uql7kKN2y\"")
            .and().insertInto("USERS", 13923L)
                .d("AUTHORIZATION_LEVEL", "-3601")
                .d("DATE_CREATED", "\"1954-09-09 19:17:38\"")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"ca6T9Z1aHPGW\"")
            .and().insertInto("USERS", 13924L)
                .d("AUTHORIZATION_LEVEL", "-380")
                .d("DATE_CREATED", "\"2024-07-27 18:15:44\"")
                .d("EMAIL_ADDRESS", "\"1\"")
                .d("NAME", "\"_EM_54848_XYZ_\"")
            .and().insertInto("ACTIVITY", 14000L)
            .and().insertInto("ACTIVITY", 14001L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 8229860770085219770, " + 
                    " \"description_material\": \"QhVY75Y\", " + 
                    " \"description_introduction\": \"nZGGra5WkOSw4z3C\", " + 
                    " \"description_prepare\": \"7DW4emEB1s8uDd_j\", " + 
                    " \"description_main\": \"yzxUQ\", " + 
                    " \"description_notes\": \"cqiC5nzyPBU\", " + 
                    " \"age_min\": -2147483250, " + 
                    " \"time_min\": 886, " + 
                    " \"featured\": false, " + 
                    " \"media_files\": [], " + 
                    " \"activity\": { " + 
                    " \"id\": 21, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 732 " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/activities/8229860770085219770?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_52_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_52_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_categories = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"jw2ivOH_8aON2Fg\", " + 
                    " \"name\": \"5ppiyfLEkvAco\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("jw2ivOH_8aON2Fg"))
                .body("'name'", containsString("5ppiyfLEkvAco"))
                .body("'activities_count'", numberMatches(0.0));
        location_categories = "/api/v1/categories" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 239, " + 
                    " \"group\": \"gO097njw7gZ_kHG9\", " + 
                    " \"name\": \"FsDciVZ\", " + 
                    " \"activities_count\": 8814 " + 
                    " } ")
                .put(resolveLocation(location_categories, baseUrlOfSut + "/api/v1/categories/174"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("gO097njw7gZ_kHG9"))
                .body("'name'", containsString("FsDciVZ"))
                .body("'activities_count'", numberMatches(0.0));
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"IASmCLSu7Qt\", " + 
                    " \"description_material\": \"At8WNKdDkx1\", " + 
                    " \"description_introduction\": \"Q\", " + 
                    " \"description_prepare\": \"GV8wxchCwrXdBh\", " + 
                    " \"age_max\": -575, " + 
                    " \"participants_max\": 213, " + 
                    " \"time_max\": 28, " + 
                    " \"source\": \"mEGNMc4uYfKVK0Hp\" " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v1/activities/666?" + 
                    "verify_unused=UuNjcWz14IGEBS6&" + 
                    "my_favourites=DhV5Kz&" + 
                    "featured=rtmW&" + 
                    "favourites=RFkAYF&" + 
                    "text=8QdNM6&" + 
                    "key=v85")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    /**
    * [test_53_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_53_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 894, " + 
                    " \"description_material\": \"_EM_5782_XYZ_\", " + 
                    " \"description_introduction\": \"3Z\", " + 
                    " \"description_main\": \"_EM_5784_XYZ_\", " + 
                    " \"age_max\": -560, " + 
                    " \"time_min\": 757, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_114_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_54_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_54_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 7739L)
                .d("URI", "\"Me2u3U0eDxo3A\"")
            .and().insertInto("TAG", 7738L)
                .d("GRP", "\"_EM_67442_XYZ_\"")
                .d("NAME", "\"_EM_67436_XYZ_\"")
            .and().insertInto("USERS", 7737L)
                .d("AUTHORIZATION_LEVEL", "32772")
                .d("NAME", "\"Ui7_NUN\"")
            .and().insertInto("ACTIVITY", 7736L)
            .and().insertInto("ACTIVITY", 7735L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7734L)
                .r("ACTIVITY_ID", 7736L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 7733L)
                .r("ACTIVITY_PROPERTIES_ID", 7734L)
                .r("TAG_ID", 7738L)
            .and().insertInto("MEDIA_FILE", 7745L)
                .d("URI", "\"_EM_67443_XYZ_\"")
            .and().insertInto("USERS", 7744L)
                .d("AUTHORIZATION_LEVEL", "4194986")
                .d("NAME", "\"_EM_67444_XYZ_\"")
            .and().insertInto("ACTIVITY", 7743L)
            .and().insertInto("ACTIVITY", 7742L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7741L)
                .r("ACTIVITY_ID", 7736L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 7740L)
                .r("ACTIVITY_PROPERTIES_ID", 7741L)
                .r("MEDIA_FILE_ID", 7739L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 7751L)
                .d("URI", "\"5033919\"")
            .and().insertInto("USERS", 7750L)
                .d("AUTHORIZATION_LEVEL", "1173")
                .d("NAME", "\"19D35\"")
            .and().insertInto("ACTIVITY", 7749L)
            .and().insertInto("ACTIVITY", 7748L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7747L)
                .r("ACTIVITY_ID", 7742L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 7746L)
                .r("ACTIVITY_PROPERTIES_ID", 7747L)
                .r("MEDIA_FILE_ID", 7745L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 7757L)
                .d("URI", "\"vFSeePSWTAcBgMC\"")
            .and().insertInto("USERS", 7756L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"w\"")
            .and().insertInto("ACTIVITY", 7755L)
            .and().insertInto("ACTIVITY", 7754L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7753L)
                .r("ACTIVITY_ID", 7748L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 7752L)
                .r("ACTIVITY_PROPERTIES_ID", 7741L)
                .r("MEDIA_FILE_ID", 7745L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 7763L)
                .d("URI", "\"qxPo3O0KQTq\"")
            .and().insertInto("USERS", 7762L)
                .d("AUTHORIZATION_LEVEL", "980")
                .d("NAME", "\"lJIhYPTLoSJag\"")
            .and().insertInto("ACTIVITY", 7761L)
            .and().insertInto("ACTIVITY", 7760L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7759L)
                .r("ACTIVITY_ID", 7760L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 7758L)
                .r("ACTIVITY_PROPERTIES_ID", 7734L)
                .r("MEDIA_FILE_ID", 7751L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 7769L)
                .d("URI", "\"_EM_67445_XYZ_\"")
            .and().insertInto("USERS", 7768L)
                .d("AUTHORIZATION_LEVEL", "-4096")
                .d("NAME", "\"B\"")
            .and().insertInto("ACTIVITY", 7767L)
            .and().insertInto("ACTIVITY", 7766L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7765L)
                .r("ACTIVITY_ID", 7766L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 7764L)
                .r("ACTIVITY_PROPERTIES_ID", 7747L)
                .r("MEDIA_FILE_ID", 7757L)
                .d("FEATURED", "false")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 0, " + 
                    " \"description_material\": \"_EM_30482_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_30484_XYZ_\", " + 
                    " \"description_main\": \"_EM_30485_XYZ_\", " + 
                    " \"description_notes\": \"_EM_30487_XYZ_\", " + 
                    " \"age_min\": -25, " + 
                    " \"age_max\": -164, " + 
                    " \"participants_max\": 924, " + 
                    " \"time_min\": 61, " + 
                    " \"time_max\": -7789, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"_EM_30488_XYZ_\", " + 
                    " \"author\": { " + 
                    " \"id\": 18, " + 
                    " \"email_address\": \"_EM_30521_XYZ_\", " + 
                    " \"authorization_level\": 845 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 406, " + 
                    " \"ratings_average\": 0.22301704331633854, " + 
                    " \"ratings_sum\": 7734324029675662942, " + 
                    " \"ratings_count\": 641, " + 
                    " \"related\": [ " + 
                    " 999, " + 
                    " 869, " + 
                    " 976 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v1/activities/0")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_55_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_55_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 9489L)
                .d("AUTHORIZATION_LEVEL", "32")
                .d("DATE_CREATED", "\"1960-10-03 18:00:20\"")
                .d("EMAIL_ADDRESS", "\"_EM_67115_XYZ_\"")
                .d("NAME", "\"ID1_12_0_\"")
            .and().insertInto("USERS", 14587L)
                .d("AUTHORIZATION_LEVEL", "-1506")
                .d("NAME", "\"5380916\"")
            .and().insertInto("ACTIVITY", 14586L)
            .and().insertInto("ACTIVITY_RATING", 14585L)
                .r("ACTIVITY_ID", 14586L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "-1056")
            .and().insertInto("USERS", 14590L)
                .d("AUTHORIZATION_LEVEL", "193")
                .d("NAME", "\"_EM_55879_XYZ_\"")
            .and().insertInto("ACTIVITY", 14589L)
            .and().insertInto("ACTIVITY_RATING", 14588L)
                .r("ACTIVITY_ID", 14589L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "2873")
            .and().insertInto("USERS", 14593L)
                .d("AUTHORIZATION_LEVEL", "-142")
                .d("NAME", "\"0DkYoN52W2YcKDAP\"")
            .and().insertInto("ACTIVITY", 14592L)
            .and().insertInto("ACTIVITY_RATING", 14591L)
                .r("ACTIVITY_ID", 14592L)
                .r("USER_ID", 14587L)
                .d("FAVOURITE", "true")
                .d("RATING", "-1048576")
            .and().insertInto("USERS", 14596L)
                .d("AUTHORIZATION_LEVEL", "697")
                .d("NAME", "\"_EM_55880_XYZ_\"")
            .and().insertInto("ACTIVITY", 14595L)
            .and().insertInto("ACTIVITY_RATING", 14594L)
                .r("ACTIVITY_ID", 14595L)
                .r("USER_ID", 14587L)
                .d("FAVOURITE", "true")
                .d("RATING", "224")
            .and().insertInto("MEDIA_FILE", 27356L)
                .d("AUTHOR", "\"_EM_101583_XYZ_\"")
                .d("CAPTURE_DATE", "\"2000-07-16 03:24:27\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"ZIwHFdaja\"")
                .d("NAME", "\"BYO3VRqsP\"")
                .d("URI", "\"_EM_101584_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 27357L)
                .d("AUTHOR", "\"_EM_101589_XYZ_\"")
                .d("CAPTURE_DATE", "\"2016-04-13 12:17:55\"")
                .d("COPY_RIGHT", "\"6Lt13oCqUQ5\"")
                .d("MIME_TYPE", "\"_EM_101585_XYZ_\"")
                .d("NAME", "NULL")
                .d("URI", "\"EVb_q\"")
            .and().insertInto("MEDIA_FILE", 27358L)
                .d("AUTHOR", "\"eECvdRNocCeBAU4\"")
                .d("CAPTURE_DATE", "\"2015-11-23 03:07:05\"")
                .d("COPY_RIGHT", "\"ZwGri6ss\"")
                .d("MIME_TYPE", "\"AjHZRrL=2\"")
                .d("NAME", "\"_EM_101591_XYZ_\"")
                .d("URI", "\"zs5cBrHrBmMEyH\"")
            .and().insertInto("MEDIA_FILE", 27430L)
                .d("URI", "\"_EM_101592_XYZ_\"")
            .and().insertInto("TAG", 27429L)
                .d("GRP", "\"aYb]U9WxM0UCUoaa\"")
                .d("NAME", "\"_EM_101862_XYZ_\"")
                .r("MEDIA_FILE_ID", 27358L)
            .and().insertInto("MEDIA_FILE", 27432L)
                .d("URI", "\"QNVRAl7gbaqAfqc\"")
            .and().insertInto("TAG", 27431L)
                .d("GRP", "\"Egg\"")
                .d("NAME", "\"x0Q1Q9\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 27434L)
                .d("URI", "\"j5ju\"")
            .and().insertInto("TAG", 27433L)
                .d("GRP", "\"_EM_101586_XYZ_\"")
                .d("NAME", "\"30mUH\"")
                .r("MEDIA_FILE_ID", 27357L)
            .and().insertInto("MEDIA_FILE", 27436L)
                .d("URI", "\"_EM_101863_XYZ_\"")
            .and().insertInto("TAG", 27435L)
                .d("GRP", "\"Za5w@iP8q0\"")
                .d("NAME", "\"uMujuyMdBPVHUcKy\"")
                .r("MEDIA_FILE_ID", 27356L)
            .and().insertInto("MEDIA_FILE", 27438L)
                .d("URI", "\"ELQHCDA\"")
            .and().insertInto("TAG", 27437L)
                .d("GRP", "\"FmkjO7oQcBSi4lT\"")
                .d("NAME", "\"yun_GekT7uJyRI\"")
                .r("MEDIA_FILE_ID", 27358L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_media_files = "";
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/system/roles?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_101859_XYZ_\", " + 
                    " \"date_published\": \"2097-02-22T02:11:02\", " + 
                    " \"date_updated\": \"2031-01-28T15:06:28\", " + 
                    " \"description_material\": \"_EM_101504_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_101588_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_101578_XYZ_\", " + 
                    " \"description_main\": \"_EM_101860_XYZ_\", " + 
                    " \"age_min\": 0, " + 
                    " \"age_max\": -2147482898, " + 
                    " \"participants_max\": 560, " + 
                    " \"time_min\": 815, " + 
                    " \"time_max\": 646, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"0boL9WX8jC\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"ORuC_jll\", " + 
                    " \"name\": \"haKn1CHxfiltcG7W\", " + 
                    " \"copy_right\": \"0bSYU0O4tnQaE\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 716, " + 
                    " \"name\": \"l4P_cle4aOJy8\", " + 
                    " \"email_address\": \"iI9LC\", " + 
                    " \"authorization_level\": 4, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 940 " + 
                    " }, " + 
                    " { " + 
                    " \"value\": \"5a75PsPORv\" " + 
                    " } " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=3pvCQ4azM&" + 
                    "name=_EM_101859_XYZ_&" + 
                    "ages=_EM_101506_XYZ_&" + 
                    "participants=_EM_101861_XYZ_&" + 
                    "ratings_count_min=57&" + 
                    "ratings_average_min=0.18025122900770763&" + 
                    "random=687")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"rU\", " + 
                    " \"uri\": \"RHmYsUf6W3G7\", " + 
                    " \"copy_right\": \"w\", " + 
                    " \"author\": \"hZCXmvUj01zD\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("rU"))
                .body("'uri'", containsString("RHmYsUf6W3G7"))
                .body("'copy_right'", containsString("w"))
                .body("'author'", containsString("hZCXmvUj01zD"));
        location_media_files = "/api/v1/media_files" + "/" + res_3.extract().body().path("id").toString();
        
        
        ValidatableResponse res_4 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"G5IYcXoK410z5p\" " + 
                    " } ")
                .put(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/-30621?valid=Ci4aYwJ71zoiX&key=Ob&attrs=_EM_101579_XYZ_"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/MediaFile_134_setUri
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_4.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users?" + 
                    "name=3m&" + 
                    "attrs=2V7hJPUp2HaG&" + 
                    "min_activities_count=24&" + 
                    "valid=jF5GSLzzT5_zAjMH&" + 
                    "ages=_EM_101581_XYZ_&" + 
                    "categories=rKJJ_BmzK&" + 
                    "key=my8ZIRfoYBe5ihG2&" + 
                    "featured=I3_OxXKM8grW83Z")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
    }
    
    
    /**
    * [test_56_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_56_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 10846L)
                .d("KEY", "\"9lTqRgAPZsP_Zry\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"Pa0PvkgMYL\"")
            .and().insertInto("SYSTEM_MESSAGE", 10847L)
                .d("KEY", "\"hjFJ34wvPAQW\"")
                .d("VALID_FROM", "\"1907-05-03 06:43:57\"")
                .d("VALID_TO", "\"2045-04-21 00:23:55\"")
                .d("VALUE", "\"\"")
            .and().insertInto("MEDIA_FILE", 12817L)
                .d("AUTHOR", "\"9TJp\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"q_rXqI\"")
                .d("URI", "\"Xb\"")
            .and().insertInto("MEDIA_FILE", 12818L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"1UTVB\"")
                .d("NAME", "NULL")
                .d("URI", "\"vwzhz07yh\"")
            .and().insertInto("MEDIA_FILE", 12819L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"8\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"_C3lZM\"")
                .d("URI", "\"y5kETEklQ5Xdbtp\"")
            .and().insertInto("MEDIA_FILE", 12820L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2030-07-04 06:36:58\"")
                .d("COPY_RIGHT", "\"TsdWGwDeAwlk30s\"")
                .d("MIME_TYPE", "\"m\"")
                .d("NAME", "NULL")
                .d("URI", "\"Tjzs\"")
            .and().insertInto("MEDIA_FILE", 12826L)
                .d("URI", "\"\"")
            .and().insertInto("USERS", 12825L)
                .d("AUTHORIZATION_LEVEL", "242")
                .d("NAME", "\"uTVP5\"")
            .and().insertInto("ACTIVITY", 12824L)
            .and().insertInto("ACTIVITY", 12823L)
            .and().insertInto("ACTIVITY_PROPERTIES", 12822L)
                .r("ACTIVITY_ID", 12824L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 12821L)
                .r("ACTIVITY_PROPERTIES_ID", 12822L)
                .r("MEDIA_FILE_ID", 12820L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 12832L)
                .d("URI", "\"yBCh9zS5SNzMp4Bu\"")
            .and().insertInto("USERS", 12831L)
                .d("AUTHORIZATION_LEVEL", "179")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 12830L)
            .and().insertInto("ACTIVITY", 12829L)
            .and().insertInto("ACTIVITY_PROPERTIES", 12828L)
                .r("ACTIVITY_ID", 12830L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 12827L)
                .r("ACTIVITY_PROPERTIES_ID", 12822L)
                .r("MEDIA_FILE_ID", 12817L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 12838L)
                .d("URI", "\"75p7iDuc3ipV\"")
            .and().insertInto("USERS", 12837L)
                .d("AUTHORIZATION_LEVEL", "161")
                .d("NAME", "\"0G_qXVwXL6Oah\"")
            .and().insertInto("ACTIVITY", 12836L)
            .and().insertInto("ACTIVITY", 12835L)
            .and().insertInto("ACTIVITY_PROPERTIES", 12834L)
                .r("ACTIVITY_ID", 12823L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 12833L)
                .r("ACTIVITY_PROPERTIES_ID", 12828L)
                .r("MEDIA_FILE_ID", 12817L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 12844L)
                .d("URI", "\"TnISlu\"")
            .and().insertInto("USERS", 12843L)
                .d("AUTHORIZATION_LEVEL", "473")
                .d("NAME", "\"iqs\"")
            .and().insertInto("ACTIVITY", 12842L)
            .and().insertInto("ACTIVITY", 12841L)
            .and().insertInto("ACTIVITY_PROPERTIES", 12840L)
                .r("ACTIVITY_ID", 12829L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 12839L)
                .r("ACTIVITY_PROPERTIES_ID", 12822L)
                .r("MEDIA_FILE_ID", 12838L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 12850L)
                .d("URI", "\"J5QuRap\"")
            .and().insertInto("USERS", 12849L)
                .d("AUTHORIZATION_LEVEL", "328")
                .d("NAME", "\"JA87q1\"")
            .and().insertInto("ACTIVITY", 12848L)
            .and().insertInto("ACTIVITY", 12847L)
            .and().insertInto("ACTIVITY_PROPERTIES", 12846L)
                .r("ACTIVITY_ID", 12842L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 12845L)
                .r("ACTIVITY_PROPERTIES_ID", 12846L)
                .r("MEDIA_FILE_ID", 12832L)
                .d("FEATURED", "true")
            .and().insertInto("SYSTEM_MESSAGE", 8522L)
                .d("KEY", "\"_EM_32961_XYZ_\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_32962_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 4, " + 
                    " \"description_material\": \"95DWj\", " + 
                    " \"description_notes\": \"2jYgTQ\", " + 
                    " \"age_min\": -276, " + 
                    " \"participants_min\": 444, " + 
                    " \"time_max\": 838, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 136, " + 
                    " \"name\": \"ITvAILd87\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"gVa\", " + 
                    " \"copy_right\": \"78nlavqjD\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 405, " + 
                    " \"activities_count\": 8012708306239113939 " + 
                    " }, " + 
                    " { " + 
                    " \"media_file\": { " + 
                    " \"id\": 198, " + 
                    " \"author\": \"9c\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": -961189300740952457, " + 
                    " \"email_address\": \"zOfjKXcs8rB\", " + 
                    " \"authorization_level\": 314 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_57_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_57_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 22805L)
            .and().insertInto("ACTIVITY", 22806L)
            .and().insertInto("ACTIVITY", 22807L)
            .and().insertInto("ACTIVITY", 22808L)
            .and().insertInto("ACTIVITY", 22809L)
            .and().insertInto("MEDIA_FILE", 22810L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"FSIPIy_3xWI4mW1\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"XrwJ\"")
            .and().insertInto("MEDIA_FILE", 22811L)
                .d("AUTHOR", "\"je3\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"M\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"j\"")
                .d("URI", "\"KGrBscy8isXK_1\"")
            .and().insertInto("MEDIA_FILE", 22812L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"tuUyTIMPyNiy\"")
                .d("MIME_TYPE", "\"DdWXsMLNhvw\"")
                .d("NAME", "\"kDZrbtVOKjlne_V9\"")
                .d("URI", "\"iI6QgaX65\"")
            .and().insertInto("MEDIA_FILE", 22813L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"sT6aFNCc2\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"2N\"")
                .d("URI", "\"G9LRw2\"")
            .and().insertInto("MEDIA_FILE", 22814L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"pvc\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"bfAkxHqikUP\"")
                .d("URI", "\"ksC0\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 169, " + 
                    " \"name\": \"jJ_OtSvvnsKB36\", " + 
                    " \"description_material\": \"F9n2n\", " + 
                    " \"description_main\": \"UKAYI__Jc\", " + 
                    " \"description_notes\": \"_EM_83584_XYZ_\", " + 
                    " \"age_max\": -632, " + 
                    " \"participants_min\": 864, " + 
                    " \"participants_max\": 721, " + 
                    " \"time_max\": 768, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 442, " + 
                    " \"name\": \"_EM_83612_XYZ_\", " + 
                    " \"author\": \"GVK\" " + 
                    " }, " + 
                    " { " + 
                    " \"uri\": \"owOXrYpL3dr9uxCf\", " + 
                    " \"name\": \"BonhW\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 763, " + 
                    " \"author\": \"_EM_83619_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_211_lambda$initMediaFiles$8
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_58_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_58_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_45678_XYZ_\", " + 
                    " \"description_notes\": \"_EM_45683_XYZ_\", " + 
                    " \"age_min\": -2147483604, " + 
                    " \"featured\": false, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"_EM_45703_XYZ_\", " + 
                    " \"name\": \"_EM_45705_XYZ_\", " + 
                    " \"copy_right\": \"0Vx7ngauMDtuU\", " + 
                    " \"author\": \"_EM_45706_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"favourites_count\": -1589082902, " + 
                    " \"ratings_average\": 0.3786228990520898, " + 
                    " \"ratings_count\": 41 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=_EM_45709_XYZ_")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_59_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_59_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_introduction\": \"PiT7c6GcQT\", " + 
                    " \"description_prepare\": \"32M0wnCgmO5\", " + 
                    " \"description_main\": \"t\", " + 
                    " \"description_safety\": \"Fp6GsihVoX\", " + 
                    " \"participants_min\": 980, " + 
                    " \"time_max\": 75, " + 
                    " \"featured\": true, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 891, " + 
                    " \"name\": \"WaZVen0hSRsI5o0B\", " + 
                    " \"author\": \"g0Ko\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"ratings_average\": 0.13244809502258936, " + 
                    " \"ratings_sum\": 659 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?" + 
                    "EMextraParam123=42&" + 
                    "ratings_average_min=HM3mN2aTGPev&" + 
                    "categories=UVbZMCx8OqOl_&" + 
                    "time_2=NfZIESTZpSx9ES_G")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_60_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_60_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 6371L)
            .and().insertInto("ACTIVITY", 6372L)
            .and().insertInto("ACTIVITY", 6373L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"2CqmgBz5IJJuVaQm\", " + 
                    " \"description_material\": \"F9vkrpTZ5tG\", " + 
                    " \"description_introduction\": \"c\", " + 
                    " \"description_main\": \"mzIuXjuJS4L\", " + 
                    " \"description_safety\": \"Ao2WBsaapFiQg\", " + 
                    " \"age_max\": -212, " + 
                    " \"time_min\": 700, " + 
                    " \"time_max\": 725, " + 
                    " \"activity\": { " + 
                    " \"id\": 202, " + 
                    " \"favourites_count\": 720, " + 
                    " \"ratings_average\": 0.7218297643236126, " + 
                    " \"ratings_sum\": 158, " + 
                    " \"related\": [ " + 
                    " 397, " + 
                    " 813, " + 
                    " -688411481746286929, " + 
                    " 1669166756, " + 
                    " 474 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("2CqmgBz5IJJuVaQm"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T03:56:38.721Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("F9vkrpTZ5tG"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("c"))
                .body("'properties_revisions'[0].'description_main'", containsString("mzIuXjuJS4L"))
                .body("'properties_revisions'[0].'description_safety'", containsString("Ao2WBsaapFiQg"))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-212.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(700.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(725.0))
                .body("'properties'.'name'", containsString("2CqmgBz5IJJuVaQm"))
                .body("'properties'.'date_created'", containsString("2024-05-30T03:56:38.721Z"))
                .body("'properties'.'description_material'", containsString("F9vkrpTZ5tG"))
                .body("'properties'.'description_introduction'", containsString("c"))
                .body("'properties'.'description_main'", containsString("mzIuXjuJS4L"))
                .body("'properties'.'description_safety'", containsString("Ao2WBsaapFiQg"))
                .body("'properties'.'age_max'", numberMatches(-212.0))
                .body("'properties'.'time_min'", numberMatches(700.0))
                .body("'properties'.'time_max'", numberMatches(725.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/1162137496?key=JcCveSn3nDyo9D9C&name=2CqmgBz5IJJuVaQm&attrs=FH_OrfO&time_1=Ratx4x5qt9sT&age_1=uRk1Q%3ANUy&categories=F&verify_unused=VZcX3BBCx2rvz"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityProperties_369_isContentEqual
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
    }
    
    
    /**
    * [test_61_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_61_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 9489L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "\"FALSE\"")
                .d("NAME", "\"3dMiHhrg\"")
            .and().insertInto("ACTIVITY", 14106L)
            .and().insertInto("ACTIVITY", 14107L)
            .and().insertInto("MEDIA_FILE", 18551L)
                .d("URI", "\"XBVC\"")
            .and().insertInto("TAG", 18550L)
                .d("GRP", "\"4VDPGzBtF7o\"")
                .d("NAME", "\"\"")
            .and().insertInto("TAG_DERIVED", 18549L)
                .r("TAG_ID", 18550L)
                .d("ACTIVITIES_COUNT", "155947350197257397")
            .and().insertInto("MEDIA_FILE", 18554L)
                .d("URI", "\"_EM_70967_XYZ_\"")
            .and().insertInto("TAG", 18553L)
                .d("GRP", "\"TFCAg\"")
                .d("NAME", "\"2YxG3PnNPjONnBD9\"")
            .and().insertInto("TAG_DERIVED", 18552L)
                .r("TAG_ID", 18553L)
                .d("ACTIVITIES_COUNT", "867")
            .and().insertInto("MEDIA_FILE", 18557L)
                .d("URI", "\"4HxWr\"")
            .and().insertInto("TAG", 18556L)
                .d("GRP", "\"0pN6jNwKrt\"")
                .d("NAME", "\"mrqMAZQDOIEp\"")
            .and().insertInto("TAG_DERIVED", 18555L)
                .r("TAG_ID", 18556L)
                .d("ACTIVITIES_COUNT", "881")
            .and().insertInto("MEDIA_FILE", 18560L)
                .d("URI", "\"b\"")
            .and().insertInto("TAG", 18559L)
                .d("GRP", "\"p5l/\"")
                .d("NAME", "\"mRx4YnKysyd55F\"")
            .and().insertInto("TAG_DERIVED", 18558L)
                .r("TAG_ID", 18559L)
                .d("ACTIVITIES_COUNT", "225")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"Cuqut\", " + 
                    " \"description_introduction\": \"vSxs5\", " + 
                    " \"description_notes\": \"_EM_70477_XYZ_\", " + 
                    " \"age_min\": 0, " + 
                    " \"age_max\": -1073741774, " + 
                    " \"participants_min\": 212, " + 
                    " \"participants_max\": 304, " + 
                    " \"time_min\": 817, " + 
                    " \"time_max\": 518, " + 
                    " \"featured\": true, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"ORuC_jll\", " + 
                    " \"name\": \"haKn1CHxfiltcG7W\", " + 
                    " \"copy_right\": \"0bSYU0O4tnQaE\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 502, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_sum\": 487, " + 
                    " \"ratings_count\": 169, " + 
                    " \"related\": [ " + 
                    " -1779480992 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_62_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_62_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 2264L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"qS9AX6KIA\", " + 
                    " \"description_introduction\": \"sg\", " + 
                    " \"description_main\": \"qS9AX6KIA\", " + 
                    " \"age_min\": -2147482668, " + 
                    " \"participants_min\": 930, " + 
                    " \"source\": \"7mPkJ\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 56, " + 
                    " \"media_file\": { " + 
                    " \"id\": 983, " + 
                    " \"name\": \"s\", " + 
                    " \"author\": \"RW4GzFgukRA4gPg\" " + 
                    " }, " + 
                    " \"activities_count\": 372 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 937, " + 
                    " \"activities_count\": -18593651 " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"aHF9zLJ\", " + 
                    " \"activities_count\": 12 " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"xdgMIBZ4MCca5m\", " + 
                    " \"activities_count\": 933 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_63_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_63_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_75046_XYZ_\", " + 
                    " \"description_material\": \"_EM_75047_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_75048_XYZ_\", " + 
                    " \"description_main\": \"i\", " + 
                    " \"description_notes\": \"_EM_75050_XYZ_\", " + 
                    " \"age_min\": -2147483144, " + 
                    " \"age_max\": -2147482821, " + 
                    " \"participants_max\": 71, " + 
                    " \"time_min\": 811, " + 
                    " \"time_max\": 220 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("_EM_75046_XYZ_"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T03:56:30.523Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("_EM_75047_XYZ_"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("_EM_75048_XYZ_"))
                .body("'properties_revisions'[0].'description_main'", containsString("i"))
                .body("'properties_revisions'[0].'description_notes'", containsString("_EM_75050_XYZ_"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-2.147483144E9))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147482821E9))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(71.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(811.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(220.0))
                .body("'properties'.'name'", containsString("_EM_75046_XYZ_"))
                .body("'properties'.'date_created'", containsString("2024-05-30T03:56:30.523Z"))
                .body("'properties'.'description_material'", containsString("_EM_75047_XYZ_"))
                .body("'properties'.'description_introduction'", containsString("_EM_75048_XYZ_"))
                .body("'properties'.'description_main'", containsString("i"))
                .body("'properties'.'description_notes'", containsString("_EM_75050_XYZ_"))
                .body("'properties'.'age_min'", numberMatches(-2.147483144E9))
                .body("'properties'.'age_max'", numberMatches(-2.147482821E9))
                .body("'properties'.'participants_max'", numberMatches(71.0))
                .body("'properties'.'time_min'", numberMatches(811.0))
                .body("'properties'.'time_max'", numberMatches(220.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/198/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResource_112_postRating
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/198/rating"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .put(baseUrlOfSut + "/api/v1/users/198")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }
    
    
    /**
    * [test_64_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_64_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_30462_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_30464_XYZ_\", " + 
                    " \"description_main\": \"_EM_30465_XYZ_\", " + 
                    " \"description_notes\": \"_EM_30467_XYZ_\", " + 
                    " \"age_min\": -357, " + 
                    " \"participants_min\": 846, " + 
                    " \"participants_max\": 233, " + 
                    " \"time_min\": 702, " + 
                    " \"time_max\": 625, " + 
                    " \"source\": \"_EM_30468_XYZ_\", " + 
                    " \"activity\": { " + 
                    " \"id\": 286, " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 377, " + 
                    " \"related\": [ " + 
                    " 456, " + 
                    " 1772302760 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T03:56:37.201Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("_EM_30462_XYZ_"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("_EM_30464_XYZ_"))
                .body("'properties_revisions'[0].'description_main'", containsString("_EM_30465_XYZ_"))
                .body("'properties_revisions'[0].'description_notes'", containsString("_EM_30467_XYZ_"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-357.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(846.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(233.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(702.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(625.0))
                .body("'properties_revisions'[0].'source'", containsString("_EM_30468_XYZ_"))
                .body("'properties'.'date_created'", containsString("2024-05-30T03:56:37.201Z"))
                .body("'properties'.'description_material'", containsString("_EM_30462_XYZ_"))
                .body("'properties'.'description_prepare'", containsString("_EM_30464_XYZ_"))
                .body("'properties'.'description_main'", containsString("_EM_30465_XYZ_"))
                .body("'properties'.'description_notes'", containsString("_EM_30467_XYZ_"))
                .body("'properties'.'age_min'", numberMatches(-357.0))
                .body("'properties'.'participants_min'", numberMatches(846.0))
                .body("'properties'.'participants_max'", numberMatches(233.0))
                .body("'properties'.'time_min'", numberMatches(702.0))
                .body("'properties'.'time_max'", numberMatches(625.0))
                .body("'properties'.'source'", containsString("_EM_30468_XYZ_"))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" null ")
                .patch(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/-100727968"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityProperties_369_isContentEqual
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 864, " + 
                    " \"description_material\": \"2006-03-02 06:43:55\", " + 
                    " \"description_prepare\": \"mhA8Kfx4pO\", " + 
                    " \"description_main\": \"8PCtuhbtjS2\", " + 
                    " \"description_notes\": \"_EM_30527_XYZ_\", " + 
                    " \"age_min\": -25, " + 
                    " \"age_max\": -292, " + 
                    " \"participants_min\": 324, " + 
                    " \"participants_max\": -261220, " + 
                    " \"time_min\": 125, " + 
                    " \"time_max\": 403, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"_EM_30528_XYZ_\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"_EM_30542_XYZ_\", " + 
                    " \"uri\": \"_EM_30543_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 921, " + 
                    " \"name\": \"_EM_30549_XYZ_\", " + 
                    " \"author\": \"_EM_30551_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"_EM_30554_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"_EM_30556_XYZ_\", " + 
                    " \"capture_date\": \"2008-03-05T18:12:16\", " + 
                    " \"copy_right\": \"\", " + 
                    " \"author\": \"_EM_30559_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"uri\": \"_EM_30561_XYZ_\", " + 
                    " \"capture_date\": \"1938-03-24T14:52:49\", " + 
                    " \"author\": \"_EM_30564_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 18, " + 
                    " \"email_address\": \"_EM_30566_XYZ_\", " + 
                    " \"authorization_level\": 845 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 406, " + 
                    " \"ratings_average\": 0.22301704331633854, " + 
                    " \"ratings_sum\": 7734324029675662942, " + 
                    " \"ratings_count\": 641, " + 
                    " \"related\": [ " + 
                    " 999, " + 
                    " 869, " + 
                    " 976 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .patch(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/-100727968"))
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    /**
    * [test_65_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_65_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"txtq\", " + 
                    " \"description_introduction\": \"tq\", " + 
                    " \"description_prepare\": \"qQF9ndMxRkc\", " + 
                    " \"age_max\": -2147482789, " + 
                    " \"time_min\": 321, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"4gxNQQRbW7E5V6X\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"0Yz2IiCBLBirixCG\", " + 
                    " \"name\": \"X_3ys\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 49, " + 
                    " \"mime_type\": \"LBv3_ksVrMQDM\", " + 
                    " \"uri\": \"DGI\", " + 
                    " \"name\": \"BbZaThXUs9mDpA\", " + 
                    " \"author\": \"kxf4gHLn784Iccj4\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"8_Pdjwn\", " + 
                    " \"name\": \"d4uY7Y\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 378, " + 
                    " \"author\": \"MjhBE2uAbM0JS\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"hL8dE5AY7HGjQyx\", " + 
                    " \"activities_count\": 70 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_66_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_66_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 1325L)
                .d("AUTHORIZATION_LEVEL", "-40")
                .d("NAME", "\"NAME6_7_1_\"")
            .and().insertInto("ACTIVITY", 1324L)
            .and().insertInto("ACTIVITY_RATING", 1323L)
                .r("ACTIVITY_ID", 1324L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "true")
                .d("RATING", "-262144")
            .and().insertInto("USERS", 1328L)
                .d("AUTHORIZATION_LEVEL", "-48545")
                .d("NAME", "\"A2AZMuq15vS\"")
            .and().insertInto("ACTIVITY", 1327L)
            .and().insertInto("ACTIVITY_RATING", 1326L)
                .r("ACTIVITY_ID", 1327L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "1191")
            .and().insertInto("USERS", 1331L)
                .d("AUTHORIZATION_LEVEL", "658")
                .d("NAME", "\"OWNER_ID3_6_2_\"")
            .and().insertInto("ACTIVITY", 1330L)
            .and().insertInto("ACTIVITY_RATING", 1329L)
                .r("ACTIVITY_ID", 1330L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "-63")
            .and().insertInto("USERS", 1334L)
                .d("AUTHORIZATION_LEVEL", "-32118")
                .d("NAME", "\"_EM_109912_XYZ_\"")
            .and().insertInto("ACTIVITY", 1333L)
            .and().insertInto("ACTIVITY_RATING", 1332L)
                .r("ACTIVITY_ID", 1330L)
                .d("USER_ID", "1")
                .d("FAVOURITE", "false")
                .d("RATING", "-589984")
            .and().insertInto("USERS", 1337L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_109909_XYZ_\"")
            .and().insertInto("ACTIVITY", 1336L)
            .and().insertInto("ACTIVITY_RATING", 1335L)
                .r("ACTIVITY_ID", 1333L)
                .r("USER_ID", 1325L)
                .d("FAVOURITE", "false")
                .d("RATING", "-1")
            .and().insertInto("MEDIA_FILE", 1339L)
                .d("URI", "\"4657094\"")
            .and().insertInto("TAG", 1338L)
                .d("GRP", "\"gaXd5Qr3\"")
                .d("NAME", "\"Afn5CM59jGEkU\"")
                .r("MEDIA_FILE_ID", 1339L)
            .and().insertInto("MEDIA_FILE", 1341L)
                .d("URI", "\"P1G\"")
            .and().insertInto("TAG", 1340L)
                .d("GRP", "\"WITH\"")
                .d("NAME", "\"4657196\"")
                .r("MEDIA_FILE_ID", 1341L)
            .and().insertInto("MEDIA_FILE", 1343L)
                .d("URI", "\"FAVOURITE\"")
            .and().insertInto("TAG", 1342L)
                .d("GRP", "\"%_EM_4859_XYZ_%\"")
                .d("NAME", "\"_TGXEL2\"")
                .r("MEDIA_FILE_ID", 1341L)
            .and().insertInto("MEDIA_FILE", 1345L)
                .d("URI", "\"p2HP_y\"")
            .and().insertInto("TAG", 1344L)
                .d("GRP", "\"2033-05-02 00:46:59\"")
                .d("NAME", "\"%_EM_14394_XYZ_%\"")
                .r("MEDIA_FILE_ID", 1343L)
            .and().insertInto("MEDIA_FILE", 1347L)
                .d("URI", "\"_EM_109913_XYZ_\"")
            .and().insertInto("TAG", 1346L)
                .d("GRP", "\"ID1_12_0_\"")
                .d("NAME", "\"d60\"")
                .r("MEDIA_FILE_ID", 1347L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 1334518317, " + 
                    " 2, " + 
                    " -1755215045295663005, " + 
                    " 97, " + 
                    " -1033 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags/-4611686018490824704?attrs=_EM_8690_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/roles")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=_EM_8699_XYZ_&" + 
                    "name=wW8XwSNNH&" + 
                    "text=_EM_8701_XYZ_&" + 
                    "featured=true&" + 
                    "categories=_EM_40456_XYZ_&" + 
                    "ages=_EM_8703_XYZ_&" + 
                    "participants=_EM_8704_XYZ_&" + 
                    "durations=EWY&" + 
                    "id=9_8E&" + 
                    "my_favourites=true&" + 
                    "ratings_count_min=2294370&" + 
                    "ratings_average_min=-1.7979261773465047&" + 
                    "random=-33480697&" + 
                    "favourites=292")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/ActivityResourceV2_77_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/-2088487")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
        
        
        ValidatableResponse res_5 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 1036, " + 
                    " \"name\": \"_EM_40457_XYZ_\", " + 
                    " \"description_material\": \"1eVkDzGj_\", " + 
                    " \"description_introduction\": \"_EM_8711_XYZ_\", " + 
                    " \"description_main\": \"0YMvzofEQAQ\", " + 
                    " \"description_notes\": \"_EM_8715_XYZ_\", " + 
                    " \"age_max\": -183, " + 
                    " \"participants_max\": 216, " + 
                    " \"time_min\": 293, " + 
                    " \"time_max\": -65015, " + 
                    " \"source\": \"_EM_8716_XYZ_\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 264, " + 
                    " \"mime_type\": \"_EM_40458_XYZ_\", " + 
                    " \"uri\": \"_EM_8717_XYZ_\", " + 
                    " \"capture_date\": \"1970-12-07T23:21:31\", " + 
                    " \"copy_right\": \"_EM_8719_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 67108995, " + 
                    " \"uri\": \"_EM_8722_XYZ_\", " + 
                    " \"capture_date\": \"2046-06-02T21:58:56\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"zgQgYdk25vhPAPwj\", " + 
                    " \"name\": \"_EM_8726_XYZ_\", " + 
                    " \"capture_date\": \"1975-05-02T22:35:50\", " + 
                    " \"copy_right\": \"_EM_8727_XYZ_\", " + 
                    " \"author\": \"_EM_40459_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 8076145017812994789, " + 
                    " \"mime_type\": \"_EM_8728_XYZ_\", " + 
                    " \"uri\": \"\", " + 
                    " \"name\": \"\", " + 
                    " \"capture_date\": \"1900-00-31T17:46:13\", " + 
                    " \"copy_right\": \"_EM_8730_XYZ_\", " + 
                    " \"author\": \"_EM_8731_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"_EM_8732_XYZ_\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"favourites_count\": -1593467857, " + 
                    " \"ratings_sum\": 31, " + 
                    " \"related\": [ " + 
                    " 276, " + 
                    " 654, " + 
                    " 999, " + 
                    " -130129, " + 
                    " 768 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_5.extract().statusCode()));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "attrs=_EM_8739_XYZ_&" + 
                    "text=_EM_8740_XYZ_&" + 
                    "featured=false&" + 
                    "age_1=9RUDg74r&" + 
                    "age_2=Dj&" + 
                    "time_2=_EM_109911_XYZ_&" + 
                    "id=MKjCx&" + 
                    "my_favourites=false&" + 
                    "ratings_count_min=2464&" + 
                    "ratings_average_min=0.4878782925&" + 
                    "favourites=524506")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/users/792")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
        
    }
    
    
    /**
    * [test_67_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_67_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 10846L)
                .d("KEY", "\"_EM_50729_XYZ_\"")
                .d("VALID_FROM", "\"2029-11-05 23:59:54\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_50730_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 10847L)
                .d("KEY", "\"_EM_44416_XYZ_\"")
                .d("VALID_FROM", "\"1907-05-03 06:43:57\"")
                .d("VALID_TO", "\"2045-04-21 00:23:55\"")
                .d("VALUE", "\"_EM_44417_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 11440L)
                .d("AUTHOR", "\"MISJV__ZQIv\"")
                .d("CAPTURE_DATE", "\"1998-09-17 16:52:30\"")
                .d("COPY_RIGHT", "\"iNHIjv\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"_EM_50731_XYZ_\"")
                .d("URI", "\"UUtGUU4\"")
            .and().insertInto("MEDIA_FILE", 11441L)
                .d("AUTHOR", "\"EIrvn6b\"")
                .d("CAPTURE_DATE", "\"2069-06-01 13:41:47\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"F_K67r5Dw5\"")
                .d("NAME", "\"3JZZK\"")
                .d("URI", "\"gOlyJ\"")
            .and().insertInto("MEDIA_FILE", 11447L)
                .d("URI", "\"Oadcvat1xBmCvHW\"")
            .and().insertInto("USERS", 11446L)
                .d("AUTHORIZATION_LEVEL", "4320")
                .d("NAME", "\"_EM_50732_XYZ_\"")
            .and().insertInto("ACTIVITY", 11445L)
            .and().insertInto("ACTIVITY", 11444L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11443L)
                .r("ACTIVITY_ID", 11444L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 11442L)
                .r("ACTIVITY_PROPERTIES_ID", 11443L)
                .r("MEDIA_FILE_ID", 11447L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 11453L)
                .d("URI", "\"_EM_50733_XYZ_\"")
            .and().insertInto("USERS", 11452L)
                .d("AUTHORIZATION_LEVEL", "1048576")
                .d("NAME", "\"IY\"")
            .and().insertInto("ACTIVITY", 11451L)
            .and().insertInto("ACTIVITY", 11450L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11449L)
                .r("ACTIVITY_ID", 11444L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 11448L)
                .r("ACTIVITY_PROPERTIES_ID", 11449L)
                .r("MEDIA_FILE_ID", 11453L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 11459L)
                .d("URI", "\"_EM_44419_XYZ_\"")
            .and().insertInto("USERS", 11458L)
                .d("AUTHORIZATION_LEVEL", "466")
                .d("NAME", "\"BQT3PkrcGv\"")
            .and().insertInto("ACTIVITY", 11457L)
            .and().insertInto("ACTIVITY", 11456L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11455L)
                .r("ACTIVITY_ID", 11457L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 11454L)
                .r("ACTIVITY_PROPERTIES_ID", 11443L)
                .r("MEDIA_FILE_ID", 11441L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 11465L)
                .d("URI", "\"Y_9G9pJ08H7\"")
            .and().insertInto("USERS", 11464L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"dn\"")
            .and().insertInto("ACTIVITY", 11463L)
            .and().insertInto("ACTIVITY", 11462L)
            .and().insertInto("ACTIVITY_PROPERTIES", 11461L)
                .r("ACTIVITY_ID", 11463L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 11460L)
                .r("ACTIVITY_PROPERTIES_ID", 11449L)
                .r("MEDIA_FILE_ID", 11440L)
                .d("FEATURED", "true")
            .and().insertInto("SYSTEM_MESSAGE", 8522L)
                .d("KEY", "\"_EM_32961_XYZ_\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"2064-06-04 05:57:54\"")
                .d("VALUE", "\"A2FTdvmYtC6Nn\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 0, " + 
                    " \"name\": \"_EM_44413_XYZ_\", " + 
                    " \"description_material\": \"_EM_44414_XYZ_\", " + 
                    " \"description_introduction\": \"eSKhcByWuPCRJb0\", " + 
                    " \"description_prepare\": \"\", " + 
                    " \"description_main\": \"g1fUpz3mzrmJ\", " + 
                    " \"description_safety\": \"CscR3y\", " + 
                    " \"description_notes\": \"Mc9R7nE8uzQaFiNz\", " + 
                    " \"age_max\": -2147483030, " + 
                    " \"participants_min\": -4193621, " + 
                    " \"participants_max\": 1840745293, " + 
                    " \"time_min\": 7, " + 
                    " \"time_max\": 525076, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"_EM_50728_XYZ_\", " + 
                    " \"tags\": [], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 539, " + 
                    " \"mime_type\": \"GjCBNplMXU\", " + 
                    " \"uri\": \"3NXQJ6zJLP\", " + 
                    " \"copy_right\": \"Yh6aq6rS\", " + 
                    " \"author\": \"S2iL8k\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 365, " + 
                    " \"email_address\": \"JX8DZZodWhmqlzU\", " + 
                    " \"authorization_level\": 693 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 919, " + 
                    " \"favourites_count\": 1289200013, " + 
                    " \"ratings_sum\": 95, " + 
                    " \"ratings_count\": 592, " + 
                    " \"related\": [ " + 
                    " 4451705017271558582, " + 
                    " 641, " + 
                    " 250, " + 
                    " 226 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_68_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_68_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -371, " + 
                    " \"name\": \"ewdlclHc8\", " + 
                    " \"description_material\": \"_EM_54430_XYZ_\", " + 
                    " \"description_introduction\": \"_EM_51662_XYZ_\", " + 
                    " \"description_main\": \"_EM_54430_XYZ_\", " + 
                    " \"description_safety\": \"_EM_54430_XYZ_\", " + 
                    " \"description_notes\": \"_EM_54430_XYZ_\", " + 
                    " \"participants_min\": -2136563574, " + 
                    " \"participants_max\": 115, " + 
                    " \"time_min\": -2147483648, " + 
                    " \"time_max\": -3996, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"media_file\": { " + 
                    " \"id\": 965, " + 
                    " \"mime_type\": \"_EM_25701_XYZ_\", " + 
                    " \"author\": \"_EM_25705_XYZ_\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"_EM_25706_XYZ_\", " + 
                    " \"activities_count\": 736 " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"_EM_25712_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 990, " + 
                    " \"group\": \"_EM_25718_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 380, " + 
                    " \"name\": \"5A9YPD_MZY2WrC\", " + 
                    " \"activities_count\": 388 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 256, " + 
                    " \"authorization_level\": 774 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": -833539862, " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 634, " + 
                    " \"ratings_sum\": 472, " + 
                    " \"ratings_count\": 744 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_69_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_69_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_98294_XYZ_\", " + 
                    " \"description_introduction\": \"wMvK5j95h\", " + 
                    " \"description_main\": \"_EM_98295_XYZ_\", " + 
                    " \"description_safety\": \"4RpMmn6CX\", " + 
                    " \"description_notes\": \"\", " + 
                    " \"age_min\": -110, " + 
                    " \"age_max\": -2147482955, " + 
                    " \"participants_min\": 663, " + 
                    " \"participants_max\": 391, " + 
                    " \"time_max\": 579, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 372, " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"1NTZWKpnXoG81m5\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 133, " + 
                    " \"uri\": \"FZQBpqj8YGwZmn0\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": -2096881, " + 
                    " \"uri\": \"_lETuaQezM\", " + 
                    " \"name\": \"G2WGUW\", " + 
                    " \"copy_right\": \"fvUL8ljJuoW\", " + 
                    " \"author\": \"\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"6N5XBvgFhCbhr\", " + 
                    " \"email_address\": \"NXq1gXy01\", " + 
                    " \"authorization_level\": 5, " + 
                    " \"identities\": [] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_113_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_70_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_70_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 7739L)
                .d("URI", "\"MUUw3E0eDxo3U\"")
            .and().insertInto("TAG", 7738L)
                .d("GRP", "\"_wqKlXEopEb_7i85\"")
                .d("NAME", "\"85q2OJC\"")
            .and().insertInto("USERS", 7737L)
                .d("AUTHORIZATION_LEVEL", "16388")
                .d("NAME", "\"fi7_N2\"")
            .and().insertInto("ACTIVITY", 7736L)
            .and().insertInto("ACTIVITY", 7735L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7734L)
                .r("ACTIVITY_ID", 7735L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 7733L)
                .r("ACTIVITY_PROPERTIES_ID", 7734L)
                .r("TAG_ID", 7738L)
            .and().insertInto("MEDIA_FILE", 7745L)
                .d("URI", "\"_EM_52692_XYZ_\"")
            .and().insertInto("USERS", 7744L)
                .d("AUTHORIZATION_LEVEL", "-7510")
                .d("NAME", "\"_EM_52693_XYZ_\"")
            .and().insertInto("ACTIVITY", 7743L)
            .and().insertInto("ACTIVITY", 7742L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7741L)
                .r("ACTIVITY_ID", 7736L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 7740L)
                .r("ACTIVITY_PROPERTIES_ID", 7741L)
                .r("MEDIA_FILE_ID", 7739L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 7751L)
                .d("URI", "\"p_Qj7\"")
            .and().insertInto("USERS", 7750L)
                .d("AUTHORIZATION_LEVEL", "-4193643")
                .d("NAME", "\"19D35\"")
            .and().insertInto("ACTIVITY", 7749L)
            .and().insertInto("ACTIVITY", 7748L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7747L)
                .r("ACTIVITY_ID", 7743L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 7746L)
                .r("ACTIVITY_PROPERTIES_ID", 7734L)
                .r("MEDIA_FILE_ID", 7739L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 7757L)
                .d("URI", "\"vFSeePSWTAcBgMC\"")
            .and().insertInto("USERS", 7756L)
                .d("AUTHORIZATION_LEVEL", "16778055")
                .d("NAME", "\"w\"")
            .and().insertInto("ACTIVITY", 7755L)
            .and().insertInto("ACTIVITY", 7754L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7753L)
                .r("ACTIVITY_ID", 7736L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 7752L)
                .r("ACTIVITY_PROPERTIES_ID", 7734L)
                .r("MEDIA_FILE_ID", 7757L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 7763L)
                .d("URI", "\"_EM_52694_XYZ_\"")
            .and().insertInto("USERS", 7762L)
                .d("AUTHORIZATION_LEVEL", "980")
                .d("NAME", "\"lJIhYPTLoSJag\"")
            .and().insertInto("ACTIVITY", 7761L)
            .and().insertInto("ACTIVITY", 7760L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7759L)
                .r("ACTIVITY_ID", 7755L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 7758L)
                .r("ACTIVITY_PROPERTIES_ID", 7753L)
                .r("MEDIA_FILE_ID", 7745L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 7769L)
                .d("URI", "\"_EM_52695_XYZ_\"")
            .and().insertInto("USERS", 7768L)
                .d("AUTHORIZATION_LEVEL", "954")
                .d("NAME", "\"_EM_52696_XYZ_\"")
            .and().insertInto("ACTIVITY", 7767L)
            .and().insertInto("ACTIVITY", 7766L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7765L)
                .r("ACTIVITY_ID", 7766L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 7764L)
                .r("ACTIVITY_PROPERTIES_ID", 7753L)
                .r("MEDIA_FILE_ID", 7757L)
                .d("FEATURED", "true")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 388, " + 
                    " \"key\": \"qTcbPXuwWy1CRnc\", " + 
                    " \"valid_to\": \"1907-07-04T12:03:40\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_safety\": \"tzQOHqCgK5ZyM9c\", " + 
                    " \"age_min\": -2147483588, " + 
                    " \"age_max\": -610, " + 
                    " \"participants_min\": 977, " + 
                    " \"participants_max\": 723, " + 
                    " \"time_max\": 924, " + 
                    " \"featured\": true " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T03:56:37.322Z"))
                .body("'properties_revisions'[0].'description_safety'", containsString("tzQOHqCgK5ZyM9c"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-2.147483588E9))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-610.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(977.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(723.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(924.0))
                .body("'properties_revisions'[0].'featured'", equalTo(true))
                .body("'properties'.'date_created'", containsString("2024-05-30T03:56:37.322Z"))
                .body("'properties'.'description_safety'", containsString("tzQOHqCgK5ZyM9c"))
                .body("'properties'.'age_min'", numberMatches(-2.147483588E9))
                .body("'properties'.'age_max'", numberMatches(-610.0))
                .body("'properties'.'participants_min'", numberMatches(977.0))
                .body("'properties'.'participants_max'", numberMatches(723.0))
                .body("'properties'.'time_max'", numberMatches(924.0))
                .body("'properties'.'featured'", equalTo(true))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_1.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 906 " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/906/rating?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating_78_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/906/rating?attrs=9Wfc"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
    }
    
    
    /**
    * [test_71_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_71_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 8665L)
                .d("URI", "\"Ur_hMU\"")
            .and().insertInto("TAG", 8664L)
                .d("GRP", "\"_EM_33750_XYZ_\"")
                .d("NAME", "\"kdyASk6EnBlI\"")
                .r("MEDIA_FILE_ID", 8665L)
            .and().insertInto("MEDIA_FILE", 8667L)
                .d("URI", "\"COLLATIONS\"")
            .and().insertInto("TAG", 8666L)
                .d("GRP", "\"_EM_33752_XYZ_\"")
                .d("NAME", "\"_EM_33753_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 8669L)
                .d("URI", "\"_EM_33754_XYZ_\"")
            .and().insertInto("TAG", 8668L)
                .d("GRP", "\"3UUUq89U\"")
                .d("NAME", "\"PlY9z\"")
                .r("MEDIA_FILE_ID", 8667L)
            .and().insertInto("MEDIA_FILE", 8671L)
                .d("URI", "\"kVIHiiyOc6pGoO1q\"")
            .and().insertInto("TAG", 8670L)
                .d("GRP", "\"BBfyy\"")
                .d("NAME", "\"_EM_33755_XYZ_\"")
                .r("MEDIA_FILE_ID", 8671L)
            .and().insertInto("MEDIA_FILE", 8673L)
                .d("URI", "\"OkC8\"")
            .and().insertInto("TAG", 8672L)
                .d("GRP", "\"cAAnZMVg5t9XLK\"")
                .d("NAME", "\"_EM_33756_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 26632L)
                .d("URI", "\"YQ0t\"")
            .and().insertInto("TAG", 26631L)
                .d("GRP", "\"dXGWHRQ0oXn\"")
                .d("NAME", "\"kyf2\"")
            .and().insertInto("TAG_DERIVED", 26630L)
                .r("TAG_ID", 8664L)
                .d("ACTIVITIES_COUNT", "193")
            .and().insertInto("MEDIA_FILE", 26635L)
                .d("URI", "\"rcVMOEJC_Eh\"")
            .and().insertInto("TAG", 26634L)
                .d("GRP", "\"zle2T\"")
                .d("NAME", "\"_EM_99759_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 26633L)
                .r("TAG_ID", 8672L)
                .d("ACTIVITIES_COUNT", "17294")
            .and().insertInto("MEDIA_FILE", 26638L)
                .d("URI", "\"yX9\"")
            .and().insertInto("TAG", 26637L)
                .d("GRP", "\"GG9D6Swq\"")
                .d("NAME", "\"rxOAz82HlvoUdAA\"")
            .and().insertInto("TAG_DERIVED", 26636L)
                .r("TAG_ID", 26637L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 26641L)
                .d("URI", "\"29IRJJIVSYV91DLz\"")
            .and().insertInto("TAG", 26640L)
                .d("GRP", "\"_EM_99760_XYZ_\"")
                .d("NAME", "\"_EM_99761_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 26639L)
                .r("TAG_ID", 26640L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("MEDIA_FILE", 26644L)
                .d("URI", "\"4i5Y90\"")
            .and().insertInto("TAG", 26643L)
                .d("GRP", "\"Ea_U7UxMZ2CU50\"")
                .d("NAME", "\"HMatd\"")
            .and().insertInto("TAG_DERIVED", 26642L)
                .r("TAG_ID", 8666L)
                .d("ACTIVITIES_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 147, " + 
                    " \"name\": \"mCh31aXgFeJ\", " + 
                    " \"description_introduction\": \"_EM_4854_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_4855_XYZ_\", " + 
                    " \"description_main\": \"_EM_4856_XYZ_\", " + 
                    " \"description_safety\": \"_EM_4857_XYZ_\", " + 
                    " \"description_notes\": \"gAXrX\", " + 
                    " \"age_min\": 0, " + 
                    " \"age_max\": -2147483080, " + 
                    " \"participants_min\": 4194324, " + 
                    " \"participants_max\": 710943084, " + 
                    " \"time_min\": -2591, " + 
                    " \"time_max\": 475, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 418, " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"SlFmPbupZskH{lJE\", " + 
                    " \"activities_count\": 262506 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 0, " + 
                    " \"media_file\": { " + 
                    " \"id\": 928, " + 
                    " \"mime_type\": \"_EM_4865_XYZ_\", " + 
                    " \"uri\": \"_EM_4866_XYZ_\", " + 
                    " \"name\": \"_EM_4867_XYZ_\", " + 
                    " \"copy_right\": \"_EM_4868_XYZ_\", " + 
                    " \"author\": \"_EM_33748_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": -169742975350767435 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 271, " + 
                    " \"group\": \"_EM_99758_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 376, " + 
                    " \"name\": \"_EM_4869_XYZ_\", " + 
                    " \"email_address\": \"cTWYWAFkiB\", " + 
                    " \"authorization_level\": -1073741458, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 196, " + 
                    " \"type\": \"GOOGLE\", " + 
                    " \"value\": \"_EM_4870_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 2, " + 
                    " \"type\": \"API\", " + 
                    " \"value\": \"_EM_4871_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 4611686018393833472, " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 279, " + 
                    " \"ratings_average\": 0.4199343519160109, " + 
                    " \"ratings_sum\": -4611686018427387392, " + 
                    " \"ratings_count\": 1152921504606847232, " + 
                    " \"related\": [ " + 
                    " 621, " + 
                    " 638, " + 
                    " 293, " + 
                    " 509 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_72_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_72_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 11291L)
                .d("KEY", "\"9\"")
                .d("VALID_FROM", "\"2048-01-25 05:52:37\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_83709_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 11292L)
                .d("KEY", "\"Ee1\"")
                .d("VALID_FROM", "\"1934-08-22 17:46:04\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"_EM_83710_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 11293L)
                .d("KEY", "\"w7zAn\"")
                .d("VALID_FROM", "\"2002-03-07 22:34:30\"")
                .d("VALID_TO", "\"2042-03-16 10:20:51\"")
                .d("VALUE", "\"FmAPfnURV\"")
            .and().insertInto("SYSTEM_MESSAGE", 11294L)
                .d("KEY", "\"_EM_83711_XYZ_\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1961-06-21 21:55:41\"")
                .d("VALUE", "\"_EM_83712_XYZ_\"")
            .and().insertInto("SYSTEM_MESSAGE", 11295L)
                .d("KEY", "\"68\"")
                .d("VALID_FROM", "\"2100-04-29 19:56:50\"")
                .d("VALID_TO", "\"2093-05-16 05:29:07\"")
                .d("VALUE", "\"xa\"")
            .and().insertInto("ACTIVITY", 21825L)
            .and().insertInto("ACTIVITY", 21826L)
            .and().insertInto("ACTIVITY", 21827L)
            .and().insertInto("ACTIVITY", 21828L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_media_files = "";
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"EVop8st7GTH\", " + 
                    " \"uri\": \"2Ky3BsSDCi\", " + 
                    " \"name\": \"pBpwmRHgjH4b\", " + 
                    " \"copy_right\": \"imDlFU59\", " + 
                    " \"author\": \"2P9t3zeI7kBBLY\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("EVop8st7GTH"))
                .body("'uri'", containsString("2Ky3BsSDCi"))
                .body("'name'", containsString("pBpwmRHgjH4b"))
                .body("'copy_right'", containsString("imDlFU59"))
                .body("'author'", containsString("2P9t3zeI7kBBLY"));
        location_media_files = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_media_files, baseUrlOfSut + "/api/v1/media_files/151"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("EVop8st7GTH"))
                .body("'uri'", containsString("2Ky3BsSDCi"))
                .body("'name'", containsString("pBpwmRHgjH4b"))
                .body("'capture_date'", nullValue())
                .body("'copy_right'", containsString("imDlFU59"))
                .body("'author'", containsString("2P9t3zeI7kBBLY"));
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"EQGpELq1d33\", " + 
                    " \"description_material\": \"i\", " + 
                    " \"description_introduction\": \"mu2BXm8sbH\", " + 
                    " \"description_prepare\": \"a\", " + 
                    " \"description_main\": \"heH4\", " + 
                    " \"description_safety\": \"YEY1vVRbHb6\", " + 
                    " \"description_notes\": \"GqAZEma\", " + 
                    " \"age_min\": -2147483056, " + 
                    " \"age_max\": -297, " + 
                    " \"time_max\": 693 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("EQGpELq1d33"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T03:56:32.741Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("i"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("mu2BXm8sbH"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("a"))
                .body("'properties_revisions'[0].'description_main'", containsString("heH4"))
                .body("'properties_revisions'[0].'description_safety'", containsString("YEY1vVRbHb6"))
                .body("'properties_revisions'[0].'description_notes'", containsString("GqAZEma"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-2.147483056E9))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-297.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(693.0))
                .body("'properties'.'name'", containsString("EQGpELq1d33"))
                .body("'properties'.'date_created'", containsString("2024-05-30T03:56:32.741Z"))
                .body("'properties'.'description_material'", containsString("i"))
                .body("'properties'.'description_introduction'", containsString("mu2BXm8sbH"))
                .body("'properties'.'description_prepare'", containsString("a"))
                .body("'properties'.'description_main'", containsString("heH4"))
                .body("'properties'.'description_safety'", containsString("YEY1vVRbHb6"))
                .body("'properties'.'description_notes'", containsString("GqAZEma"))
                .body("'properties'.'age_min'", numberMatches(-2.147483056E9))
                .body("'properties'.'age_max'", numberMatches(-297.0))
                .body("'properties'.'time_max'", numberMatches(693.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v2/activities" + "/" + res_2.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 24 " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v2/activities/24/rating"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityRating_78_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
    }
    
    
    /**
    * [test_73_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_73_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 5292L)
            .and().insertInto("ACTIVITY", 5293L)
            .and().insertInto("ACTIVITY", 5294L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_11792_XYZ_\", " + 
                    " \"description_safety\": \"_EM_11796_XYZ_\", " + 
                    " \"age_min\": -2147482770, " + 
                    " \"age_max\": -2147483295, " + 
                    " \"participants_max\": 259, " + 
                    " \"time_max\": 310, " + 
                    " \"activity\": { " + 
                    " \"favourites_count\": 570, " + 
                    " \"ratings_average\": 0.2141402794704962, " + 
                    " \"ratings_count\": 503, " + 
                    " \"related\": [ " + 
                    " 418 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("_EM_11792_XYZ_"))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T03:56:31.613Z"))
                .body("'properties_revisions'[0].'description_safety'", containsString("_EM_11796_XYZ_"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-2.14748277E9))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-2.147483295E9))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(259.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(310.0))
                .body("'properties'.'name'", containsString("_EM_11792_XYZ_"))
                .body("'properties'.'date_created'", containsString("2024-05-30T03:56:31.613Z"))
                .body("'properties'.'description_safety'", containsString("_EM_11796_XYZ_"))
                .body("'properties'.'age_min'", numberMatches(-2.14748277E9))
                .body("'properties'.'age_max'", numberMatches(-2.147483295E9))
                .body("'properties'.'participants_max'", numberMatches(259.0))
                .body("'properties'.'time_max'", numberMatches(310.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/3091876305021589107/rating?EMextraParam123=42"))
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/3091876305021589107/rating?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/AbstractResource_63_toJson
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("Could not generated JSON from ActivityRating object."));
        
    }
    
    
    /**
    * [test_74_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_74_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 35720L)
                .d("AUTHOR", "\"Yye4q\"")
                .d("CAPTURE_DATE", "\"1939-07-01 00:02:24\"")
                .d("COPY_RIGHT", "\"1YxoB\"")
                .d("MIME_TYPE", "\"EUEHbBeJyR\"")
                .d("NAME", "NULL")
                .d("URI", "\"si9S4qTPEg7jhzh\"")
            .and().insertInto("MEDIA_FILE", 35726L)
                .d("URI", "\"12\"")
            .and().insertInto("USERS", 35725L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"_EM_124290_XYZ_\"")
            .and().insertInto("ACTIVITY", 35724L)
            .and().insertInto("ACTIVITY", 35723L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35722L)
                .r("ACTIVITY_ID", 35723L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35721L)
                .r("ACTIVITY_PROPERTIES_ID", 35722L)
                .r("MEDIA_FILE_ID", 35726L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 35732L)
                .d("URI", "\"I50A\"")
            .and().insertInto("USERS", 35731L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"M\"")
            .and().insertInto("ACTIVITY", 35730L)
            .and().insertInto("ACTIVITY", 35729L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35728L)
                .r("ACTIVITY_ID", 35729L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35727L)
                .r("ACTIVITY_PROPERTIES_ID", 35728L)
                .r("MEDIA_FILE_ID", 35732L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 35738L)
                .d("URI", "\"\"")
            .and().insertInto("USERS", 35737L)
                .d("AUTHORIZATION_LEVEL", "36907")
                .d("NAME", "\"HE\"")
            .and().insertInto("ACTIVITY", 35736L)
            .and().insertInto("ACTIVITY", 35735L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35734L)
                .r("ACTIVITY_ID", 35724L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35733L)
                .r("ACTIVITY_PROPERTIES_ID", 35734L)
                .r("MEDIA_FILE_ID", 35726L)
                .d("FEATURED", "false")
            .and().insertInto("MEDIA_FILE", 35744L)
                .d("URI", "\"URI\"")
            .and().insertInto("USERS", 35743L)
                .d("AUTHORIZATION_LEVEL", "9021")
                .d("NAME", "\"1Gbijq5X_\"")
            .and().insertInto("ACTIVITY", 35742L)
            .and().insertInto("ACTIVITY", 35741L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35740L)
                .r("ACTIVITY_ID", 35730L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35739L)
                .r("ACTIVITY_PROPERTIES_ID", 35740L)
                .r("MEDIA_FILE_ID", 35744L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 35750L)
                .d("URI", "\"LO6\"")
            .and().insertInto("USERS", 35749L)
                .d("AUTHORIZATION_LEVEL", "8194")
                .d("NAME", "\"kMmzt66tQP4JU\"")
            .and().insertInto("ACTIVITY", 35748L)
            .and().insertInto("ACTIVITY", 35747L)
            .and().insertInto("ACTIVITY_PROPERTIES", 35746L)
                .r("ACTIVITY_ID", 35748L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 35745L)
                .r("ACTIVITY_PROPERTIES_ID", 35734L)
                .r("MEDIA_FILE_ID", 35732L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 35861L)
                .d("AUTHORIZATION_LEVEL", "574")
                .d("NAME", "\"r19EXsWN_U\"")
            .and().insertInto("USER_IDENTITY", 35860L)
                .d("DATE_CREATED", "\"1989-05-23 23:32:20\"")
                .d("TYPE", "\"API\"")
                .d("VALUE", "\"5qyM\"")
                .r("USER_ID", 35737L)
            .and().insertInto("USERS", 35863L)
                .d("AUTHORIZATION_LEVEL", "13125")
                .d("NAME", "\"xgShUw\"")
            .and().insertInto("USER_IDENTITY", 35862L)
                .d("DATE_CREATED", "\"1917-06-12 15:40:46\"")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"IXVJQFI6T94U\"")
                .d("USER_ID", "1")
            .and().insertInto("USERS", 36103L)
                .d("AUTHORIZATION_LEVEL", "-238300589")
                .d("NAME", "\"SCHEMATA\"")
            .and().insertInto("ACTIVITY", 36102L)
            .and().insertInto("ACTIVITY_RATING", 36101L)
                .r("ACTIVITY_ID", 35723L)
                .r("USER_ID", 35749L)
                .d("FAVOURITE", "true")
                .d("RATING", "575")
            .and().insertInto("USERS", 36106L)
                .d("AUTHORIZATION_LEVEL", "623")
                .d("NAME", "\"N7CAl1Qx\"")
            .and().insertInto("ACTIVITY", 36105L)
            .and().insertInto("ACTIVITY_RATING", 36104L)
                .r("ACTIVITY_ID", 35748L)
                .r("USER_ID", 35743L)
                .d("FAVOURITE", "false")
                .d("RATING", "-2")
            .and().insertInto("SYSTEM_MESSAGE", 36627L)
                .d("KEY", "\"pfG7mcPy0vhJwK\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1965-03-19 12:18:25\"")
                .d("VALUE", "\"Vb_f_zWLxujxWwLS\"")
            .and().insertInto("MEDIA_FILE", 36663L)
                .d("URI", "\"QQJSjcd\"")
            .and().insertInto("TAG", 36662L)
                .d("GRP", "\"UGVfBKgv8i3eHo\"")
                .d("NAME", "\"RdI3dmtI9ZIA\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 35719L)
                .d("AUTHOR", "\"aWWT9GgioJaAC2\"")
                .d("CAPTURE_DATE", "\"2056-05-29 11:21:16\"")
                .d("COPY_RIGHT", "\"wktAVaicf\"")
                .d("MIME_TYPE", "\"_EM_123609_XYZ_\"")
                .d("NAME", "NULL")
                .d("URI", "\"2053-09-27 21:32:52\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 66308, " + 
                    " \"name\": \"hNl0AbgzXi\", " + 
                    " \"description_material\": \"1tQ7i3XArOZ\", " + 
                    " \"description_prepare\": \"_EM_123287_XYZ_\", " + 
                    " \"description_main\": \"_EM_123288_XYZ_\", " + 
                    " \"description_notes\": \"_EM_125235_XYZ_\", " + 
                    " \"age_max\": -2147482911, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"_EM_123291_XYZ_\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"media_file\": { " + 
                    " \"id\": 827, " + 
                    " \"mime_type\": \"7W\", " + 
                    " \"copy_right\": \"AdFIg5K1dUC0Ap\", " + 
                    " \"author\": \"_EM_123294_XYZ_\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -1481183794, " + 
                    " \"name\": \"WF4GA3PUD8NT\", " + 
                    " \"activities_count\": 833184946 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 443, " + 
                    " \"name\": \"_EM_123297_XYZ_\", " + 
                    " \"activities_count\": 142 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"_EM_123301_XYZ_\", " + 
                    " \"uri\": \"_EM_123302_XYZ_\", " + 
                    " \"copy_right\": \"_EM_123304_XYZ_\", " + 
                    " \"author\": \"mlIlujux6s0Q\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"FDnArSpofxF2JO\", " + 
                    " \"uri\": \"kM\", " + 
                    " \"name\": \"hzbxWE8GFuk0FE\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?" + 
                    "favourites=_EM_126194_XYZ_&" + 
                    "ages=LIFU0vhwWzf&" + 
                    "categories=C&" + 
                    "id=1")
                .then()
                .statusCode(500) // se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_75_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_75_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 8665L)
                .d("URI", "\"or_hMm\"")
            .and().insertInto("TAG", 8664L)
                .d("GRP", "\"_EM_33750_XYZ_\"")
                .d("NAME", "\"kdyASk6EnBlI\"")
                .r("MEDIA_FILE_ID", 8665L)
            .and().insertInto("MEDIA_FILE", 8667L)
                .d("URI", "\"_EM_33751_XYZ_\"")
            .and().insertInto("TAG", 8666L)
                .d("GRP", "\"_EM_33752_XYZ_\"")
                .d("NAME", "\"_EM_33753_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 8669L)
                .d("URI", "\"_EM_33754_XYZ_\"")
            .and().insertInto("TAG", 8668L)
                .d("GRP", "\"38Yxq89s\"")
                .d("NAME", "\"PlY9z\"")
                .r("MEDIA_FILE_ID", 8669L)
            .and().insertInto("MEDIA_FILE", 8671L)
                .d("URI", "\"kVIHiiyOc6pGoO1q\"")
            .and().insertInto("TAG", 8670L)
                .d("GRP", "\"BBfyy\"")
                .d("NAME", "\"_EM_33755_XYZ_\"")
                .r("MEDIA_FILE_ID", 8671L)
            .and().insertInto("MEDIA_FILE", 8673L)
                .d("URI", "\"OkC8\"")
            .and().insertInto("TAG", 8672L)
                .d("GRP", "\"cAAnZMUg5t9XLK\"")
                .d("NAME", "\"_EM_33756_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 147, " + 
                    " \"name\": \"mCh31aXgFeJ\", " + 
                    " \"description_introduction\": \"_EM_4854_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_4855_XYZ_\", " + 
                    " \"description_main\": \"_EM_4856_XYZ_\", " + 
                    " \"description_safety\": \"_EM_4857_XYZ_\", " + 
                    " \"description_notes\": \"gAXrX\", " + 
                    " \"age_min\": 0, " + 
                    " \"participants_min\": 4194324, " + 
                    " \"participants_max\": 710943212, " + 
                    " \"time_min\": 1505, " + 
                    " \"time_max\": 475, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"_EM_4859_XYZ_\", " + 
                    " \"name\": \"_EM_4860_XYZ_\", " + 
                    " \"activities_count\": 362 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 0, " + 
                    " \"media_file\": { " + 
                    " \"id\": 928, " + 
                    " \"mime_type\": \"_EM_4865_XYZ_\", " + 
                    " \"uri\": \"_EM_4866_XYZ_\", " + 
                    " \"name\": \"_EM_4867_XYZ_\", " + 
                    " \"copy_right\": \"_EM_4868_XYZ_\", " + 
                    " \"author\": \"_EM_33748_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": -169742975350767435 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 271, " + 
                    " \"group\": \"KKycSwmLi2Q0lD7\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 376, " + 
                    " \"name\": \"_EM_4869_XYZ_\", " + 
                    " \"email_address\": \"cTWYWAFkiB\", " + 
                    " \"authorization_level\": -1073741458, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 196, " + 
                    " \"type\": \"GOOGLE\", " + 
                    " \"value\": \"_EM_4870_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 2, " + 
                    " \"type\": \"API\", " + 
                    " \"value\": \"_EM_4871_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 4611686018393833472, " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 279, " + 
                    " \"ratings_average\": 0.4199343519160109, " + 
                    " \"ratings_sum\": -4611686018427387392, " + 
                    " \"ratings_count\": 1152921504606847232, " + 
                    " \"related\": [ " + 
                    " 621, " + 
                    " 638, " + 
                    " 293, " + 
                    " 509 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_76_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_76_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 21389L)
                .d("URI", "\"_EM_80260_XYZ_\"")
            .and().insertInto("TAG", 21388L)
                .d("GRP", "\"mab8p9qs3MAwYFK\"")
                .d("NAME", "\"KMtguQ\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 21391L)
                .d("URI", "\"6A765hLRp\"")
            .and().insertInto("TAG", 21390L)
                .d("GRP", "\"_EM_80261_XYZ_\"")
                .d("NAME", "\"_EM_80262_XYZ_\"")
                .r("MEDIA_FILE_ID", 21389L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_80258_XYZ_\", " + 
                    " \"description_material\": \"7zo9se\", " + 
                    " \"description_introduction\": \"_EM_4854_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_4855_XYZ_\", " + 
                    " \"description_main\": \"_EM_4856_XYZ_\", " + 
                    " \"description_safety\": \"_EM_4857_XYZ_\", " + 
                    " \"description_notes\": \"_EM_80259_XYZ_\", " + 
                    " \"age_max\": -2147483080, " + 
                    " \"participants_min\": 4194324, " + 
                    " \"participants_max\": 565283911, " + 
                    " \"time_min\": 1050081, " + 
                    " \"time_max\": 475, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"_EM_4859_XYZ_\", " + 
                    " \"name\": \"_EM_4860_XYZ_\", " + 
                    " \"activities_count\": 362 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 1035535980, " + 
                    " \"media_file\": { " + 
                    " \"id\": 928, " + 
                    " \"mime_type\": \"_EM_4865_XYZ_\", " + 
                    " \"uri\": \"_EM_4866_XYZ_\", " + 
                    " \"name\": \"_EM_4867_XYZ_\", " + 
                    " \"author\": \"VPDfPoRKg4yp0N\" " + 
                    " }, " + 
                    " \"activities_count\": -169742975350767435 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -4194033, " + 
                    " \"group\": \"KKycSwmLi2Q0lD7\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 16760, " + 
                    " \"name\": \"_EM_4869_XYZ_\", " + 
                    " \"email_address\": \"cTWYWAFkiB\", " + 
                    " \"authorization_level\": -1073741458, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 196, " + 
                    " \"type\": \"GOOGLE\", " + 
                    " \"value\": \"_EM_4870_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 2, " + 
                    " \"type\": \"API\", " + 
                    " \"value\": \"_EM_4871_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 4611686018393833472, " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 279, " + 
                    " \"ratings_average\": 0.4199343519160109, " + 
                    " \"ratings_sum\": -4611686018427387392, " + 
                    " \"ratings_count\": 1152921504606847232, " + 
                    " \"related\": [ " + 
                    " 621, " + 
                    " 638, " + 
                    " 293, " + 
                    " 509 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_77_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_77_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 6494L)
                .d("URI", "\"_EM_30661_XYZ_\"")
            .and().insertInto("TAG", 6493L)
                .d("GRP", "\"hdd3\"")
                .d("NAME", "\"XBS7mtnjt\"")
                .r("MEDIA_FILE_ID", 6494L)
            .and().insertInto("MEDIA_FILE", 6496L)
                .d("URI", "\"_EM_30662_XYZ_\"")
            .and().insertInto("TAG", 6495L)
                .d("GRP", "\"_EM_37614_XYZ_\"")
                .d("NAME", "\"eeeF\"")
                .r("MEDIA_FILE_ID", 6494L)
            .and().insertInto("MEDIA_FILE", 6498L)
                .d("URI", "\"4nLXQR371ir4oixu\"")
            .and().insertInto("TAG", 6497L)
                .d("GRP", "\"yLWa2dTc6JcsfII4\"")
                .d("NAME", "\"_EM_37615_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"mCh31aXgFeJ\", " + 
                    " \"description_material\": \"7zo9se\", " + 
                    " \"description_introduction\": \"_EM_4854_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_4855_XYZ_\", " + 
                    " \"description_main\": \"97F\", " + 
                    " \"description_notes\": \"gAXrX\", " + 
                    " \"participants_min\": 4194324, " + 
                    " \"participants_max\": 565283895, " + 
                    " \"time_min\": 67110110, " + 
                    " \"time_max\": 475, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"_EM_4858_XYZ_\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"PFSB\", " + 
                    " \"name\": \"_EM_37612_XYZ_\", " + 
                    " \"activities_count\": 16777578 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 1035535980, " + 
                    " \"media_file\": { " + 
                    " \"id\": 928, " + 
                    " \"mime_type\": \"_EM_4865_XYZ_\", " + 
                    " \"uri\": \"_EM_4866_XYZ_\", " + 
                    " \"name\": \"_EM_4867_XYZ_\", " + 
                    " \"author\": \"VPDfPoRKg4yp0N\" " + 
                    " }, " + 
                    " \"activities_count\": -169742975350767435 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 271, " + 
                    " \"group\": \"KKycSwmLi2Q0lD7\" " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [], " + 
                    " \"author\": { " + 
                    " \"id\": 376, " + 
                    " \"name\": \"_EM_4869_XYZ_\", " + 
                    " \"email_address\": \"cTWYWAFkiB\", " + 
                    " \"authorization_level\": -1073741458, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 32867, " + 
                    " \"type\": \"GOOGLE\", " + 
                    " \"value\": \"_EM_37613_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 2, " + 
                    " \"type\": \"API\", " + 
                    " \"value\": \"_EM_4871_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 4611686018393833472, " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 279, " + 
                    " \"ratings_average\": 0.4199343519160109, " + 
                    " \"ratings_sum\": -4611686018427387392, " + 
                    " \"ratings_count\": 1152921504606847232, " + 
                    " \"related\": [ " + 
                    " 621, " + 
                    " 638, " + 
                    " 293, " + 
                    " 509 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500) // se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_78_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_78_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_30462_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_30464_XYZ_\", " + 
                    " \"description_main\": \"_EM_30465_XYZ_\", " + 
                    " \"description_notes\": \"_EM_30467_XYZ_\", " + 
                    " \"age_min\": -357, " + 
                    " \"participants_min\": 846, " + 
                    " \"participants_max\": 233, " + 
                    " \"time_min\": 702, " + 
                    " \"time_max\": 625, " + 
                    " \"source\": \"_EM_30468_XYZ_\", " + 
                    " \"activity\": { " + 
                    " \"id\": 286, " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 377, " + 
                    " \"related\": [ " + 
                    " 456, " + 
                    " 1772302760 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T03:56:33.87Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("_EM_30462_XYZ_"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("_EM_30464_XYZ_"))
                .body("'properties_revisions'[0].'description_main'", containsString("_EM_30465_XYZ_"))
                .body("'properties_revisions'[0].'description_notes'", containsString("_EM_30467_XYZ_"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-357.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(846.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(233.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(702.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(625.0))
                .body("'properties_revisions'[0].'source'", containsString("_EM_30468_XYZ_"))
                .body("'properties'.'date_created'", containsString("2024-05-30T03:56:33.87Z"))
                .body("'properties'.'description_material'", containsString("_EM_30462_XYZ_"))
                .body("'properties'.'description_prepare'", containsString("_EM_30464_XYZ_"))
                .body("'properties'.'description_main'", containsString("_EM_30465_XYZ_"))
                .body("'properties'.'description_notes'", containsString("_EM_30467_XYZ_"))
                .body("'properties'.'age_min'", numberMatches(-357.0))
                .body("'properties'.'participants_min'", numberMatches(846.0))
                .body("'properties'.'participants_max'", numberMatches(233.0))
                .body("'properties'.'time_min'", numberMatches(702.0))
                .body("'properties'.'time_max'", numberMatches(625.0))
                .body("'properties'.'source'", containsString("_EM_30468_XYZ_"))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_30482_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_30484_XYZ_\", " + 
                    " \"description_main\": \"_EM_30485_XYZ_\", " + 
                    " \"description_notes\": \"_EM_30487_XYZ_\", " + 
                    " \"age_max\": -164, " + 
                    " \"participants_max\": 924, " + 
                    " \"time_min\": 125, " + 
                    " \"time_max\": 403, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"_EM_30488_XYZ_\", " + 
                    " \"author\": { " + 
                    " \"id\": 18, " + 
                    " \"email_address\": \"_EM_30521_XYZ_\", " + 
                    " \"authorization_level\": 845 " + 
                    " } " + 
                    " } ")
                .patch(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/864?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_185_patch
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_1.extract().statusCode()));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_30523_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_30525_XYZ_\", " + 
                    " \"description_main\": \"8PCtuhbtrS2\", " + 
                    " \"description_notes\": \"_EM_30527_XYZ_\", " + 
                    " \"age_max\": -164, " + 
                    " \"participants_max\": 924, " + 
                    " \"time_min\": 125, " + 
                    " \"time_max\": 403, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"_EM_30528_XYZ_\", " + 
                    " \"author\": { " + 
                    " \"id\": 18, " + 
                    " \"email_address\": \"_EM_30566_XYZ_\", " + 
                    " \"authorization_level\": 845 " + 
                    " } " + 
                    " } ")
                .patch(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/864?EMextraParam123=42"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_185_patch
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
    }
    
    
    /**
    * [test_79_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_79_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 7739L)
                .d("URI", "\"Me2u3U0eDxo3A\"")
            .and().insertInto("TAG", 7738L)
                .d("GRP", "\"_EM_67442_XYZ_\"")
                .d("NAME", "\"_EM_67436_XYZ_\"")
            .and().insertInto("USERS", 7737L)
                .d("AUTHORIZATION_LEVEL", "32772")
                .d("NAME", "\"Ui7_NUN\"")
            .and().insertInto("ACTIVITY", 7736L)
            .and().insertInto("ACTIVITY", 7735L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7734L)
                .r("ACTIVITY_ID", 7736L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 7733L)
                .r("ACTIVITY_PROPERTIES_ID", 7734L)
                .r("TAG_ID", 7738L)
            .and().insertInto("MEDIA_FILE", 7745L)
                .d("URI", "\"_EM_67443_XYZ_\"")
            .and().insertInto("USERS", 7744L)
                .d("AUTHORIZATION_LEVEL", "4194986")
                .d("NAME", "\"_EM_67444_XYZ_\"")
            .and().insertInto("ACTIVITY", 7743L)
            .and().insertInto("ACTIVITY", 7742L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7741L)
                .r("ACTIVITY_ID", 7736L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 7740L)
                .r("ACTIVITY_PROPERTIES_ID", 7741L)
                .r("MEDIA_FILE_ID", 7739L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 7751L)
                .d("URI", "\"5033919\"")
            .and().insertInto("USERS", 7750L)
                .d("AUTHORIZATION_LEVEL", "1173")
                .d("NAME", "\"19D35\"")
            .and().insertInto("ACTIVITY", 7749L)
            .and().insertInto("ACTIVITY", 7748L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7747L)
                .r("ACTIVITY_ID", 7742L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 7746L)
                .r("ACTIVITY_PROPERTIES_ID", 7747L)
                .r("MEDIA_FILE_ID", 7745L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 7757L)
                .d("URI", "\"vFSeePSWTAcBgMC\"")
            .and().insertInto("USERS", 7756L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"w\"")
            .and().insertInto("ACTIVITY", 7755L)
            .and().insertInto("ACTIVITY", 7754L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7753L)
                .r("ACTIVITY_ID", 7748L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 7752L)
                .r("ACTIVITY_PROPERTIES_ID", 7741L)
                .r("MEDIA_FILE_ID", 7745L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 7763L)
                .d("URI", "\"qxPo3O0KQTq\"")
            .and().insertInto("USERS", 7762L)
                .d("AUTHORIZATION_LEVEL", "980")
                .d("NAME", "\"lJIhYPTLoSJag\"")
            .and().insertInto("ACTIVITY", 7761L)
            .and().insertInto("ACTIVITY", 7760L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7759L)
                .r("ACTIVITY_ID", 7760L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 7758L)
                .r("ACTIVITY_PROPERTIES_ID", 7734L)
                .r("MEDIA_FILE_ID", 7751L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 7769L)
                .d("URI", "\"_EM_67445_XYZ_\"")
            .and().insertInto("USERS", 7768L)
                .d("AUTHORIZATION_LEVEL", "-4096")
                .d("NAME", "\"B\"")
            .and().insertInto("ACTIVITY", 7767L)
            .and().insertInto("ACTIVITY", 7766L)
            .and().insertInto("ACTIVITY_PROPERTIES", 7765L)
                .r("ACTIVITY_ID", 7766L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 7764L)
                .r("ACTIVITY_PROPERTIES_ID", 7747L)
                .r("MEDIA_FILE_ID", 7757L)
                .d("FEATURED", "false")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        String location_activities = "";
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 388, " + 
                    " \"key\": \"_EM_67440_XYZ_\", " + 
                    " \"valid_to\": \"1907-07-04T12:03:40\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_30462_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_30464_XYZ_\", " + 
                    " \"description_main\": \"_EM_30465_XYZ_\", " + 
                    " \"description_notes\": \"_EM_30467_XYZ_\", " + 
                    " \"age_min\": -357, " + 
                    " \"participants_min\": 846, " + 
                    " \"participants_max\": 233, " + 
                    " \"time_min\": 702, " + 
                    " \"time_max\": 625, " + 
                    " \"source\": \"_EM_30468_XYZ_\", " + 
                    " \"activity\": { " + 
                    " \"id\": 286, " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 377, " + 
                    " \"related\": [ " + 
                    " 456, " + 
                    " 1772302760 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2024-05-30T03:56:38.673Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("_EM_30462_XYZ_"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("_EM_30464_XYZ_"))
                .body("'properties_revisions'[0].'description_main'", containsString("_EM_30465_XYZ_"))
                .body("'properties_revisions'[0].'description_notes'", containsString("_EM_30467_XYZ_"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-357.0))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(846.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(233.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(702.0))
                .body("'properties_revisions'[0].'time_max'", numberMatches(625.0))
                .body("'properties_revisions'[0].'source'", containsString("_EM_30468_XYZ_"))
                .body("'properties'.'date_created'", containsString("2024-05-30T03:56:38.673Z"))
                .body("'properties'.'description_material'", containsString("_EM_30462_XYZ_"))
                .body("'properties'.'description_prepare'", containsString("_EM_30464_XYZ_"))
                .body("'properties'.'description_main'", containsString("_EM_30465_XYZ_"))
                .body("'properties'.'description_notes'", containsString("_EM_30467_XYZ_"))
                .body("'properties'.'age_min'", numberMatches(-357.0))
                .body("'properties'.'participants_min'", numberMatches(846.0))
                .body("'properties'.'participants_max'", numberMatches(233.0))
                .body("'properties'.'time_min'", numberMatches(702.0))
                .body("'properties'.'time_max'", numberMatches(625.0))
                .body("'properties'.'source'", containsString("_EM_30468_XYZ_"))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'ratings_count'", numberMatches(0.0));
        location_activities = "/api/v1/activities" + "/" + res_1.extract().body().path("id").toString();
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 0, " + 
                    " \"description_material\": \"_EM_30482_XYZ_\", " + 
                    " \"description_prepare\": \"_EM_30484_XYZ_\", " + 
                    " \"description_main\": \"_EM_30485_XYZ_\", " + 
                    " \"description_notes\": \"_EM_30487_XYZ_\", " + 
                    " \"age_min\": -25, " + 
                    " \"age_max\": -164, " + 
                    " \"participants_max\": 924, " + 
                    " \"time_min\": 61, " + 
                    " \"time_max\": -7789, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"_EM_30488_XYZ_\", " + 
                    " \"author\": { " + 
                    " \"id\": 18, " + 
                    " \"email_address\": \"_EM_30521_XYZ_\", " + 
                    " \"authorization_level\": 845 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 406, " + 
                    " \"ratings_average\": 0.22301704331633854, " + 
                    " \"ratings_sum\": 7734324029675662942, " + 
                    " \"ratings_count\": 641, " + 
                    " \"related\": [ " + 
                    " 999, " + 
                    " 869, " + 
                    " 976 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .patch(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/0"))
                .then()
                .statusCode(500) // se/devscout/scoutapi/resource/v1/ActivityResourceV1_185_patch
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_2.extract().statusCode()));
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 864, " + 
                    " \"name\": \"_EM_30522_XYZ_\", " + 
                    " \"description_material\": \"2006-03-02 06:43:55\", " + 
                    " \"description_introduction\": \"_EM_30524_XYZ_\", " + 
                    " \"description_prepare\": \"xqUwP7XmI_NyXxM7\", " + 
                    " \"description_main\": \"_EM_67441_XYZ_\", " + 
                    " \"description_safety\": \"_EM_30526_XYZ_\", " + 
                    " \"description_notes\": \"tsv7\", " + 
                    " \"age_min\": -25, " + 
                    " \"age_max\": -164, " + 
                    " \"participants_min\": 324, " + 
                    " \"participants_max\": 924, " + 
                    " \"time_min\": 61, " + 
                    " \"time_max\": 131475, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"ON\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"_EM_30529_XYZ_\", " + 
                    " \"name\": \"_EM_30530_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 437578762, " + 
                    " \"mime_type\": \"_EM_30531_XYZ_\", " + 
                    " \"uri\": \"_EM_30532_XYZ_\", " + 
                    " \"name\": \"_EM_30533_XYZ_\", " + 
                    " \"capture_date\": \"1950-09-23T12:47:41\", " + 
                    " \"author\": \"_EM_30535_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 179 " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"_EM_30536_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"_r2RfyILR_aXfBKJ\", " + 
                    " \"uri\": \"_EM_30538_XYZ_\", " + 
                    " \"capture_date\": \"1930-08-23T08:37:14\", " + 
                    " \"author\": \"_EM_30541_XYZ_\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 873, " + 
                    " \"mime_type\": \"_EM_30542_XYZ_\", " + 
                    " \"uri\": \"_EM_30543_XYZ_\", " + 
                    " \"name\": \"_EM_30544_XYZ_\", " + 
                    " \"author\": \"_EM_30546_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 921, " + 
                    " \"name\": \"_EM_30549_XYZ_\", " + 
                    " \"author\": \"_EM_30551_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"_EM_30554_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"_EM_30556_XYZ_\", " + 
                    " \"name\": \"_EM_30558_XYZ_\", " + 
                    " \"capture_date\": \"1944-11-05T14:12:00\", " + 
                    " \"copy_right\": \"\", " + 
                    " \"author\": \"_EM_30559_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"uri\": \"_EM_30561_XYZ_\", " + 
                    " \"capture_date\": \"1938-03-24T14:52:49\", " + 
                    " \"author\": \"_EM_30564_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 18, " + 
                    " \"email_address\": \"_EM_30566_XYZ_\", " + 
                    " \"authorization_level\": 845 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 406, " + 
                    " \"ratings_average\": 0.22301704331633854, " + 
                    " \"ratings_sum\": 7734324029684051554, " + 
                    " \"ratings_count\": 645, " + 
                    " \"related\": [ " + 
                    " -8387609, " + 
                    " 131941, " + 
                    " 975 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .patch(resolveLocation(location_activities, baseUrlOfSut + "/api/v1/activities/0"))
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200).contains(res_3.extract().statusCode()));
    }


}
