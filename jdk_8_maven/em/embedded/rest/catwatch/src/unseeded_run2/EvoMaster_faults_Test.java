import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2024-06-02T23:14:58.721+02:00[Europe/Paris]
 * <br>
 * The generated test suite contains 21 tests
 * <br>
 * Covered targets: 974
 * <br>
 * Used time: 1h 5m 36s
 * <br>
 * Needed budget for current results: 99%
 * <br>
 * This file contains test cases that are likely to indicate faults.
 */
public class EvoMaster_faults_Test {

    
    private static final SutHandler controller = new em.embedded.org.zalando.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetDatabase(Arrays.asList("PROJECT","LANGUAGE_LIST","MAINTAINERS","CONTRIBUTOR","STATISTICS"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * [test_0_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_0_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=0JWtkiLk_DzrItKy&" + 
                    "limit=1048589&" + 
                    "offset=-130186&" + 
                    "start_date=")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/web/ContributorsApi_215_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("offset must be greater than zero but was -130186"))
                .body("'path'", containsString("/contributors"));
        
        expectationHandler.expect(ems)
            // WARNING: the code list seems to contain an unsupported code (0 is not a valid HTTP code). This could indicate a problem with the schema. The issue has been logged.
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_1_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_1_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 31L)
                .d("ID", "5040067091689488493")
                .d("ORGANIZATION_ID", "304")
                .d("SNAPSHOT_DATE", "\"1970-11-05 03:21:51\"")
                .d("NAME", "\"_EM_919_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"_EM_921_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_23_XYZ_")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=304&" + 
                    "limit=-1078915854&" + 
                    "start_date=_EM_922_XYZ_&" + 
                    "sortBy=NL_2zGlnzJzT&" + 
                    "q=Ug")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/web/ContributorsApi_217_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("limit must be greater than zero but was -1078915854"))
                .body("'path'", containsString("/contributors"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_2_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_2
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_2_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_34_XYZ_")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_31_XYZ_&" + 
                    "offset=587&" + 
                    "EMextraParam123=_EM_33_XYZ_")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/service/LanguageService_49_getMainLanguages
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.NullPointerException"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/languages"));
        
        expectationHandler.expect(ems)
            // WARNING: the code list seems to contain an unsupported code (0 is not a valid HTTP code). This could indicate a problem with the schema. The issue has been logged.
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_3_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_2
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_3_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_40_XYZ_")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=_EM_35_XYZ_&" + 
                    "limit=612&" + 
                    "offset=621&" + 
                    "start_date=1971-01-26T21%3A52%3A26&" + 
                    "end_date=2012-10-08T15%3A35%3A21&" + 
                    "q=_EM_37_XYZ_&" + 
                    "language=_EM_38_XYZ_")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/service/ProjectServiceImpl_113_convertProjectsToMap
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.NullPointerException"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/projects"));
        
        expectationHandler.expect(ems)
            // WARNING: the code list seems to contain an unsupported code (0 is not a valid HTTP code). This could indicate a problem with the schema. The issue has been logged.
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_4_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_2
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_4_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "offset=193&" + 
                    "q=_EM_229_XYZ_&" + 
                    "language=_EM_230_XYZ_")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/service/ProjectServiceImpl_62_findProjects
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.NullPointerException"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/projects"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_5_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_2
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_5_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 18L)
                .d("COMMITS_COUNT", "92")
                .d("CONTRIBUTORS_COUNT", "604")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "-1728787340654430784")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"_EM_335_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "916")
                .d("SNAPSHOT_DATE", "\"1969-02-09 16:45:13\"")
                .d("STARS_COUNT", "1805253990")
                .d("URL", "NULL")
                .d("TITLE", "\"_EM_337_XYZ_\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "35")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "KN3")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=Vwrtk&" + 
                    "start_date=2014-08-12T00%3A09%3A39&" + 
                    "sortBy=_EM_339_XYZ_&" + 
                    "language=")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/service/ProjectServiceImpl_113_convertProjectsToMap
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.NullPointerException"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/projects"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_6_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_2
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_6_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "offset=335&" + 
                    "end_date=2088-09-02T15%3A03%3A11&" + 
                    "language=7wtNiq2ruanUD9jb")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/service/ProjectServiceImpl_59_findProjects
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.NullPointerException"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/projects"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_7_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_7_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=&" + 
                    "EMextraParam123=_EM_3_XYZ_")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/contributors"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_8_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_8_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 34L)
                .d("COMMITS_COUNT", "760")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "157")
                .d("GIT_HUB_PROJECT_ID", "456")
                .d("LAST_PUSHED", "\"_EM_987_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"_EM_989_XYZ_\"")
                .d("SCORE", "479")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "696")
                .d("URL", "\"_EM_990_XYZ_\"")
                .d("TITLE", "\"DujVk89KN6\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?organizations=DQ0N71YKO_0f")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_9_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_2
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_9_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=AhKiCRXTGM_b&" + 
                    "limit=410")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/service/LanguageService_49_getMainLanguages
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.NullPointerException"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/languages"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/fetch?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_1.extract().statusCode()));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "jE1xH")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=v3KdL&" + 
                    "limit=232&" + 
                    "start_date=LwwmmHPVcZ&" + 
                    "end_date=tEtcWXrGKg0lF&" + 
                    "sortBy=oI0GlYV70&" + 
                    "access_token=uMId0&" + 
                    "language=L5B_cL7VRS")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
    }
    
    
    /**
    * [test_10_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_3
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_10_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 13L)
                .d("ID", "2185577118321976714")
                .d("ORGANIZATION_ID", "826")
                .d("SNAPSHOT_DATE", "\"1943-07-11 21:48:28\"")
                .d("NAME", "\"_EM_221_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "180")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_226_XYZ_")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=826&" + 
                    "offset=291&" + 
                    "start_date=_EM_223_XYZ_&" + 
                    "sortBy=hah9lSSg5Php&" + 
                    "EMextraParam123=_EM_225_XYZ_")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was hah9lSSg5Php. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_11_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_3
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_11_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 10L)
                .d("ID", "744")
                .d("ORGANIZATION_ID", "726")
                .d("SNAPSHOT_DATE", "\"1922-07-04 00:19:07\"")
                .d("NAME", "\"_EM_181_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "431")
                .d("PERSONAL_COMMITS_COUNT", "54")
                .d("PERSONAL_PROJECTS_COUNT", "267")
                .d("URL", "\"_EM_183_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=726&" + 
                    "limit=784&" + 
                    "start_date=s0SVMnpZrofTw&" + 
                    "end_date=lIim7&" + 
                    "sortBy=r6IK18&" + 
                    "EMextraParam123=_EM_184_XYZ_")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was r6IK18. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_12_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_12_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 8L)
                .d("ID", "6030986169861004540")
                .d("ORGANIZATION_ID", "305")
                .d("SNAPSHOT_DATE", "\"2051-03-18 09:17:51\"")
                .d("NAME", "\"_EM_156_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"RjIg3iictdXqI\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "634")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "423")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"_EM_157_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=305&" + 
                    "limit=235&" + 
                    "start_date=a4avNe&" + 
                    "end_date=N0qOaMzxbW1Ma&" + 
                    "EMextraParam123=_EM_160_XYZ_")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.RuntimeException"))
                .body("'message'", containsString("java.text.ParseException: Unparseable date: \"N0qOaMzxbW1Ma\""))
                .body("'path'", containsString("/contributors"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_13_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_13_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_23_XYZ_")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=_EM_17_XYZ_&" + 
                    "start_date=_EM_18_XYZ_&" + 
                    "q=_EM_21_XYZ_&" + 
                    "EMextraParam123=_EM_22_XYZ_")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.RuntimeException"))
                .body("'message'", containsString("java.text.ParseException: Unparseable date: \"_EM_18_XYZ_\""))
                .body("'path'", containsString("/contributors"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_14_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_3
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_14_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_4_XYZ_")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=&" + 
                    "start_date=JjeCnyIvAOTt&" + 
                    "access_token=KRqe8AHS9MJlEvet")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=&" + 
                    "start_date=JjeCnyIvAOTt&" + 
                    "end_date=__h&" + 
                    "sortBy=_VNBUYJ")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was _VNBUYJ. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_1.extract().statusCode()));
    }
    
    
    /**
    * [test_15_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_15_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 35L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "443")
                .d("DESCRIPTION", "\"_EM_996_XYZ_\"")
                .d("FORKS_COUNT", "84")
                .d("GIT_HUB_PROJECT_ID", "824")
                .d("LAST_PUSHED", "\"_EM_997_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"Kug\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "127")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "720")
                .d("URL", "NULL")
                .d("TITLE", "\"UE5HGO4PzFAC\"")
                .d("IMAGE", "\"_EM_1001_XYZ_\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "307")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "Kug")
                .header("x-EMextraHeader123", "_EM_40_XYZ_")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/config/scoring.project?EMextraParam123=_EM_39_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=Kug&" + 
                    "end_date=Kug")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?EMextraParam123=_EM_39_XYZ_")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_2.extract().statusCode()));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=Kug&" + 
                    "language=7VnvwMlnNFzBp&" + 
                    "access_token=Kug")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(824.0))
                .body("'projects'[0].'snapshotDate'", nullValue())
                .body("'projects'[0].'name'", nullValue())
                .body("'projects'[0].'title'", containsString("UE5HGO4PzFAC"))
                .body("'projects'[0].'image'", containsString("_EM_1001_XYZ_"))
                .body("'projects'[0].'organizationName'", containsString("Kug"))
                .body("'projects'[0].'url'", nullValue())
                .body("'projects'[0].'description'", containsString("_EM_996_XYZ_"))
                .body("'projects'[0].'starsCount'", numberMatches(720.0))
                .body("'projects'[0].'commitsCount'", nullValue())
                .body("'projects'[0].'forksCount'", numberMatches(84.0))
                .body("'projects'[0].'contributorsCount'", numberMatches(443.0))
                .body("'projects'[0].'externalContributorsCount'", numberMatches(307.0))
                .body("'projects'[0].'score'", numberMatches(127.0))
                .body("'projects'[0].'lastPushed'", containsString("_EM_997_XYZ_"))
                .body("'projects'[0].'primaryLanguage'", nullValue())
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(0));
        
    }
    
    
    /**
    * [test_16_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_16_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=uWKvnoX4L4&" + 
                    "EMextraParam123=_EM_22_XYZ_")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.UnsupportedOperationException"))
                .body("'message'", containsString("this parameter configuration is not implemented yet .. start date, end date required atm"))
                .body("'path'", containsString("/contributors"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_17_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_17_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?EMextraParam123=_EM_3_XYZ_")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/contributors"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_4_XYZ_")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=niU9PADIGRU&" + 
                    "offset=90&" + 
                    "start_date=GI2&" + 
                    "end_date=q9xumIA92xW5&" + 
                    "q=AYJpWvufR")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.RuntimeException"))
                .body("'message'", containsString("java.text.ParseException: Unparseable date: \"q9xumIA92xW5\""))
                .body("'path'", containsString("/contributors"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_1.extract().statusCode()));
    }
    
    
    /**
    * [test_18_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_18_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 54L)
                .d("COMMITS_COUNT", "686")
                .d("CONTRIBUTORS_COUNT", "424")
                .d("DESCRIPTION", "\"Z7w4PM_wGb\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "793")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"_EM_1356_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"qYWtVRe\"")
                .d("PRIMARY_LANGUAGE", "\"a\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1987-05-05 11:54:40\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"_EM_1357_XYZ_\"")
                .d("TITLE", "\"U1_rbyMS3dcYE\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 55L)
                .d("ID", "672")
                .d("ORGANIZATION_ID", "460686183")
                .d("SNAPSHOT_DATE", "\"1936-02-28 04:05:12\"")
                .d("NAME", "\"rAQojFts4tRpsj\"")
                .d("ORGANIZATION_NAME", "\"_EM_1360_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "717")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"_EM_1361_XYZ_\"")
            .and().insertInto("STATISTICS", 56L)
                .d("ID", "986")
                .d("SNAPSHOT_DATE", "\"2017-11-23 13:42:28\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "273")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "554")
                .d("ORGANIZATION_NAME", "\"5uq9p2_AYmtJab55\"")
                .d("PRIVATE_PROJECT_COUNT", "436")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "330")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "683")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 57L)
                .d("ID", "73")
                .d("SNAPSHOT_DATE", "\"1918-07-24 02:20:56\"")
                .d("ALL_CONTRIBUTORS_COUNT", "676")
                .d("ALL_FORKS_COUNT", "795")
                .d("ALL_SIZE_COUNT", "295")
                .d("ALL_STARS_COUNT", "650")
                .d("MEMBERS_COUNT", "686")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "780")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "qYWtVRe")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=IM8sGOsHU&" + 
                    "limit=666&" + 
                    "start_date=1943-09-11T19%3A51%3A12&" + 
                    "sortBy=SzxHbM&" + 
                    "language=a&" + 
                    "access_token=_EM_1359_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=460686183&" + 
                    "q=j&" + 
                    "access_token=U6e2n")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_2.extract().statusCode()));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        
        try{
            given().accept("*/*")
                    .header("x-EMextraHeader123", "")
                    .get(baseUrlOfSut + "/fetch");
        } catch(Exception e){
        }
    }
    
    
    /**
    * [test_19_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_19_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 74L)
                .d("ID", "558")
                .d("ORGANIZATION_ID", "550")
                .d("SNAPSHOT_DATE", "\"2026-11-19 10:08:06\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "742")
                .d("PERSONAL_COMMITS_COUNT", "979")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .and().insertInto("PROJECT", 75L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "978")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "117")
                .d("LAST_PUSHED", "\"\"")
                .d("NAME", "\"U15j8UXPh\"")
                .d("ORGANIZATION_NAME", "\"bn\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "647")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"nt6MxILMvOWIUiC7\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "417")
            .and().insertInto("STATISTICS", 76L)
                .d("ID", "4466658109594793262")
                .d("SNAPSHOT_DATE", "\"1976-04-22 01:00:18\"")
                .d("ALL_CONTRIBUTORS_COUNT", "156")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "802")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "903020266")
                .d("PUBLIC_PROJECT_COUNT", "648")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "start_date=bn&" + 
                    "access_token=bn&" + 
                    "offset=14&" + 
                    "q=jBcNYguE0cL&" + 
                    "sortBy=_87ai374kmH")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=bn&" + 
                    "q=jBcNYguE0cL&" + 
                    "language=gERQv")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.UnsupportedOperationException"))
                .body("'message'", containsString("this parameter configuration is not implemented yet .. start date, end date required atm"))
                .body("'path'", containsString("/contributors"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_1.extract().statusCode()));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=bn&" + 
                    "access_token=bn")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        
        ValidatableResponse res_3 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "start_date=bn&" + 
                    "limit=459&" + 
                    "sortBy=_87ai374kmH")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string bn."));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_3.extract().statusCode()));
        
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" null ")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "bn")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"LP5x1r5\" ")
                .post(baseUrlOfSut + "/config/scoring.project?organizations=bn")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(550.0))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("2026-11-19T10:08:06"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", nullValue())
                .body("'contributors'[0].'url'", nullValue())
                .body("'contributors'[0].'organizationalCommitsCount'", nullValue())
                .body("'contributors'[0].'personalCommitsCount'", numberMatches(979.0))
                .body("'contributors'[0].'personalProjectsCount'", nullValue())
                .body("'contributors'[0].'organizationalProjectsCount'", numberMatches(742.0))
                .body("'contributors'[0].'organizationName'", nullValue())
                .body("'contributors'[0].'snapshotDate'", numberMatches(1.795079286E12))
                .body("'contributors'[0].'organizationId'", numberMatches(550.0))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(117.0))
                .body("'projects'[0].'snapshotDate'", nullValue())
                .body("'projects'[0].'name'", containsString("U15j8UXPh"))
                .body("'projects'[0].'title'", nullValue())
                .body("'projects'[0].'image'", nullValue())
                .body("'projects'[0].'organizationName'", containsString("bn"))
                .body("'projects'[0].'url'", containsString("nt6MxILMvOWIUiC7"))
                .body("'projects'[0].'description'", nullValue())
                .body("'projects'[0].'starsCount'", nullValue())
                .body("'projects'[0].'commitsCount'", nullValue())
                .body("'projects'[0].'forksCount'", nullValue())
                .body("'projects'[0].'contributorsCount'", numberMatches(978.0))
                .body("'projects'[0].'externalContributorsCount'", numberMatches(417.0))
                .body("'projects'[0].'score'", numberMatches(647.0))
                .body("'projects'[0].'lastPushed'", containsString(""))
                .body("'projects'[0].'primaryLanguage'", nullValue())
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("1976-04-22T01:00:18"))
                .body("'statistics'[0].'privateProjectCount'", nullValue())
                .body("'statistics'[0].'publicProjectCount'", numberMatches(648.0))
                .body("'statistics'[0].'membersCount'", numberMatches(802.0))
                .body("'statistics'[0].'teamsCount'", nullValue())
                .body("'statistics'[0].'allContributorsCount'", numberMatches(156.0))
                .body("'statistics'[0].'externalContributorsCount'", nullValue())
                .body("'statistics'[0].'allStarsCount'", nullValue())
                .body("'statistics'[0].'allForksCount'", nullValue())
                .body("'statistics'[0].'allSizeCount'", nullValue())
                .body("'statistics'[0].'programLanguagesCount'", numberMatches(9.03020266E8))
                .body("'statistics'[0].'tagsCount'", nullValue())
                .body("'statistics'[0].'organizationName'", nullValue())
                .body("'statistics'[0].'snapshotDate'", numberMatches(1.98975618E11));
        
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=bn&" + 
                    "start_date=2057-03-16T18%3A34%3A41&" + 
                    "end_date=2013-05-24T-1%3A06%3A50&" + 
                    "sortBy=_87ai374kmH&" + 
                    "language=gERQv&" + 
                    "access_token=bn")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/fetch?" + 
                    "access_token=bn&" + 
                    "end_date=bn")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource 'null'. The provider manager is not configured to support it."));
        
        
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/init")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
        
    }
    
    
    /**
    * [test_20_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * LastLine_0
    */
    @Test(timeout = 60000)
    public void test_20_with500() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 61L)
                .d("ID", "124504284")
                .d("ORGANIZATION_ID", "-1749306259734094191")
                .d("SNAPSHOT_DATE", "\"1980-03-05 21:01:25\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"amYdtWyfn2u0tjU\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "951")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=-1749306259734094191&" + 
                    "offset=118&" + 
                    "q=t_")
                .then()
                .statusCode(500) // org/zalando/catwatch/backend/web/ContributorsApi_203_sublist
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("fromIndex(118) > toIndex(0)"))
                .body("'path'", containsString("/contributors"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=-1749306259734094191&" + 
                    "start_date=UgQfoBCKtgiRY&" + 
                    "end_date=1v")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string UgQfoBCKtgiRY."));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_1.extract().statusCode()));
        
        try{
            given().accept("*/*")
                    .header("x-EMextraHeader123", "")
                    .get(baseUrlOfSut + "/fetch");
        } catch(Exception e){
        }
    }


}
